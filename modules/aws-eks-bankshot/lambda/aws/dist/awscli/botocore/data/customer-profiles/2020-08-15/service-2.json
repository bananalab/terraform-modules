{
  "documentation": "<fullname>Amazon Connect Customer Profiles</fullname> <p>Welcome to the Amazon Connect Customer Profiles API Reference. This guide provides information about the Amazon Connect Customer Profiles API, including supported operations, data types, parameters, and schemas.</p> <p>Amazon Connect Customer Profiles is a unified customer profile for your contact center that has pre-built connectors powered by AppFlow that make it easy to combine customer information from third party applications, such as Salesforce (CRM), ServiceNow (ITSM), and your enterprise resource planning (ERP), with contact history from your Amazon Connect contact center.</p> <p>If you're new to Amazon Connect , you might find it helpful to also review the <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/what-is-amazon-connect.html\">Amazon Connect Administrator Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2020-08-15",
    "endpointPrefix": "profile",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Customer Profiles",
    "serviceFullName": "Amazon Connect Customer Profiles",
    "serviceId": "Customer Profiles",
    "signatureVersion": "v4",
    "signingName": "profile",
    "uid": "customer-profiles-2020-08-15"
  },
  "operations": {
    "AddProfileKey": {
      "documentation": "<p>Associates a new key value with a specific profile, such as a Contact Record ContactId.</p> <p>A profile object can have a single unique key and any number of additional keys that can be used to identify the profile that it belongs to.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/keys"
      },
      "input": {
        "shape": "AddProfileKeyRequest"
      },
      "name": "AddProfileKey",
      "output": {
        "shape": "AddProfileKeyResponse"
      }
    },
    "CreateDomain": {
      "documentation": "<p>Creates a domain, which is a container for all customer data, such as customer profile attributes, object types, profile keys, and encryption keys. You can create multiple domains, and each domain can have multiple third-party integrations.</p> <p>Each Amazon Connect instance can be associated with only one domain. Multiple Amazon Connect instances can be associated with one domain.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\">UpdateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">identity resolution</a>: set <code>Matching</code> to true. </p> <p>To prevent cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\">Cross-service confused deputy prevention</a> for sample policies that you should apply. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}"
      },
      "input": {
        "shape": "CreateDomainRequest"
      },
      "name": "CreateDomain",
      "output": {
        "shape": "CreateDomainResponse"
      }
    },
    "CreateIntegrationWorkflow": {
      "documentation": "<p> Creates an integration workflow. An integration workflow is an async process which ingests historic data and sets up an integration for ongoing updates. The supported Amazon AppFlow sources are Salesforce, ServiceNow, and Marketo. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/workflows/integrations"
      },
      "input": {
        "shape": "CreateIntegrationWorkflowRequest"
      },
      "name": "CreateIntegrationWorkflow",
      "output": {
        "shape": "CreateIntegrationWorkflowResponse"
      }
    },
    "CreateProfile": {
      "documentation": "<p>Creates a standard profile.</p> <p>A standard profile represents the following attributes for a customer profile in a domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles"
      },
      "input": {
        "shape": "CreateProfileRequest"
      },
      "name": "CreateProfile",
      "output": {
        "shape": "CreateProfileResponse"
      }
    },
    "DeleteDomain": {
      "documentation": "<p>Deletes a specific domain and all of its customer data, such as customer profile attributes and their related objects.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/domains/{DomainName}"
      },
      "input": {
        "shape": "DeleteDomainRequest"
      },
      "name": "DeleteDomain",
      "output": {
        "shape": "DeleteDomainResponse"
      }
    },
    "DeleteIntegration": {
      "documentation": "<p>Removes an integration from a specific domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/integrations/delete"
      },
      "input": {
        "shape": "DeleteIntegrationRequest"
      },
      "name": "DeleteIntegration",
      "output": {
        "shape": "DeleteIntegrationResponse"
      }
    },
    "DeleteProfile": {
      "documentation": "<p>Deletes the standard customer profile and all data pertaining to the profile.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/delete"
      },
      "input": {
        "shape": "DeleteProfileRequest"
      },
      "name": "DeleteProfile",
      "output": {
        "shape": "DeleteProfileResponse"
      }
    },
    "DeleteProfileKey": {
      "documentation": "<p>Removes a searchable key from a customer profile.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/keys/delete"
      },
      "input": {
        "shape": "DeleteProfileKeyRequest"
      },
      "name": "DeleteProfileKey",
      "output": {
        "shape": "DeleteProfileKeyResponse"
      }
    },
    "DeleteProfileObject": {
      "documentation": "<p>Removes an object associated with a profile of a given ProfileObjectType.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/objects/delete"
      },
      "input": {
        "shape": "DeleteProfileObjectRequest"
      },
      "name": "DeleteProfileObject",
      "output": {
        "shape": "DeleteProfileObjectResponse"
      }
    },
    "DeleteProfileObjectType": {
      "documentation": "<p>Removes a ProfileObjectType from a specific domain as well as removes all the ProfileObjects of that type. It also disables integrations from this specific ProfileObjectType. In addition, it scrubs all of the fields of the standard profile that were populated from this ProfileObjectType.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input": {
        "shape": "DeleteProfileObjectTypeRequest"
      },
      "name": "DeleteProfileObjectType",
      "output": {
        "shape": "DeleteProfileObjectTypeResponse"
      }
    },
    "DeleteWorkflow": {
      "documentation": "<p>Deletes the specified workflow and all its corresponding resources. This is an async process.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/domains/{DomainName}/workflows/{WorkflowId}"
      },
      "input": {
        "shape": "DeleteWorkflowRequest"
      },
      "name": "DeleteWorkflow",
      "output": {
        "shape": "DeleteWorkflowResponse"
      }
    },
    "GetAutoMergingPreview": {
      "documentation": "<p>Tests the auto-merging settings of your Identity Resolution Job without merging your data. It randomly selects a sample of matching groups from the existing matching results, and applies the automerging settings that you provided. You can then view the number of profiles in the sample, the number of matches, and the number of profiles identified to be merged. This enables you to evaluate the accuracy of the attributes in your matching list. </p> <p>You can't view which profiles are matched and would be merged.</p> <important> <p>We strongly recommend you use this API to do a dry run of the automerging process before running the Identity Resolution Job. Include <b>at least</b> two matching attributes. If your matching list includes too few attributes (such as only <code>FirstName</code> or only <code>LastName</code>), there may be a large number of matches. This increases the chances of erroneous merges.</p> </important>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/identity-resolution-jobs/auto-merging-preview"
      },
      "input": {
        "shape": "GetAutoMergingPreviewRequest"
      },
      "name": "GetAutoMergingPreview",
      "output": {
        "shape": "GetAutoMergingPreviewResponse"
      }
    },
    "GetDomain": {
      "documentation": "<p>Returns information about a specific domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}"
      },
      "input": {
        "shape": "GetDomainRequest"
      },
      "name": "GetDomain",
      "output": {
        "shape": "GetDomainResponse"
      }
    },
    "GetIdentityResolutionJob": {
      "documentation": "<p>Returns information about an Identity Resolution Job in a specific domain. </p> <p>Identity Resolution Jobs are set up using the Amazon Connect admin console. For more information, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/use-identity-resolution.html\">Use Identity Resolution to consolidate similar profiles</a>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/identity-resolution-jobs/{JobId}"
      },
      "input": {
        "shape": "GetIdentityResolutionJobRequest"
      },
      "name": "GetIdentityResolutionJob",
      "output": {
        "shape": "GetIdentityResolutionJobResponse"
      }
    },
    "GetIntegration": {
      "documentation": "<p>Returns an integration for a domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/integrations"
      },
      "input": {
        "shape": "GetIntegrationRequest"
      },
      "name": "GetIntegration",
      "output": {
        "shape": "GetIntegrationResponse"
      }
    },
    "GetMatches": {
      "documentation": "<p>Before calling this API, use <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\">CreateDomain</a> or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UpdateDomain.html\">UpdateDomain</a> to enable identity resolution: set <code>Matching</code> to true.</p> <p>GetMatches returns potentially matching profiles, based on the results of the latest run of a machine learning process. </p> <important> <p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p> </important> <p>Amazon Connect uses the following profile attributes to identify matches:</p> <ul> <li> <p>PhoneNumber</p> </li> <li> <p>HomePhoneNumber</p> </li> <li> <p>BusinessPhoneNumber</p> </li> <li> <p>MobilePhoneNumber</p> </li> <li> <p>EmailAddress</p> </li> <li> <p>PersonalEmailAddress</p> </li> <li> <p>BusinessEmailAddress</p> </li> <li> <p>FullName</p> </li> </ul> <p>For example, two or more profiles\u2014with spelling mistakes such as <b>John Doe</b> and <b>Jhn Doe</b>, or different casing email addresses such as <b>JOHN_DOE@ANYCOMPANY.COM</b> and <b>johndoe@anycompany.com</b>, or different phone number formats such as <b>555-010-0000</b> and <b>+1-555-010-0000</b>\u2014can be detected as belonging to the same customer <b>John Doe</b> and merged into a unified profile.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/matches"
      },
      "input": {
        "shape": "GetMatchesRequest"
      },
      "name": "GetMatches",
      "output": {
        "shape": "GetMatchesResponse"
      }
    },
    "GetProfileObjectType": {
      "documentation": "<p>Returns the object types for a specific domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input": {
        "shape": "GetProfileObjectTypeRequest"
      },
      "name": "GetProfileObjectType",
      "output": {
        "shape": "GetProfileObjectTypeResponse"
      }
    },
    "GetProfileObjectTypeTemplate": {
      "documentation": "<p>Returns the template information for a specific object type.</p> <p>A template is a predefined ProfileObjectType, such as \u201cSalesforce-Account\u201d or \u201cSalesforce-Contact.\u201d When a user sends a ProfileObject, using the PutProfileObject API, with an ObjectTypeName that matches one of the TemplateIds, it uses the mappings from the template.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/templates/{TemplateId}"
      },
      "input": {
        "shape": "GetProfileObjectTypeTemplateRequest"
      },
      "name": "GetProfileObjectTypeTemplate",
      "output": {
        "shape": "GetProfileObjectTypeTemplateResponse"
      }
    },
    "GetWorkflow": {
      "documentation": "<p>Get details of specified workflow.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/workflows/{WorkflowId}"
      },
      "input": {
        "shape": "GetWorkflowRequest"
      },
      "name": "GetWorkflow",
      "output": {
        "shape": "GetWorkflowResponse"
      }
    },
    "GetWorkflowSteps": {
      "documentation": "<p>Get granular list of steps in workflow.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/workflows/{WorkflowId}/steps"
      },
      "input": {
        "shape": "GetWorkflowStepsRequest"
      },
      "name": "GetWorkflowSteps",
      "output": {
        "shape": "GetWorkflowStepsResponse"
      }
    },
    "ListAccountIntegrations": {
      "documentation": "<p>Lists all of the integrations associated to a specific URI in the AWS account.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/integrations"
      },
      "input": {
        "shape": "ListAccountIntegrationsRequest"
      },
      "name": "ListAccountIntegrations",
      "output": {
        "shape": "ListAccountIntegrationsResponse"
      }
    },
    "ListDomains": {
      "documentation": "<p>Returns a list of all the domains for an AWS account that have been created.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains"
      },
      "input": {
        "shape": "ListDomainsRequest"
      },
      "name": "ListDomains",
      "output": {
        "shape": "ListDomainsResponse"
      }
    },
    "ListIdentityResolutionJobs": {
      "documentation": "<p>Lists all of the Identity Resolution Jobs in your domain. The response sorts the list by <code>JobStartTime</code>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/identity-resolution-jobs"
      },
      "input": {
        "shape": "ListIdentityResolutionJobsRequest"
      },
      "name": "ListIdentityResolutionJobs",
      "output": {
        "shape": "ListIdentityResolutionJobsResponse"
      }
    },
    "ListIntegrations": {
      "documentation": "<p>Lists all of the integrations in your domain.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/integrations"
      },
      "input": {
        "shape": "ListIntegrationsRequest"
      },
      "name": "ListIntegrations",
      "output": {
        "shape": "ListIntegrationsResponse"
      }
    },
    "ListProfileObjectTypeTemplates": {
      "documentation": "<p>Lists all of the template information for object types.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/templates"
      },
      "input": {
        "shape": "ListProfileObjectTypeTemplatesRequest"
      },
      "name": "ListProfileObjectTypeTemplates",
      "output": {
        "shape": "ListProfileObjectTypeTemplatesResponse"
      }
    },
    "ListProfileObjectTypes": {
      "documentation": "<p>Lists all of the templates available within the service.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domains/{DomainName}/object-types"
      },
      "input": {
        "shape": "ListProfileObjectTypesRequest"
      },
      "name": "ListProfileObjectTypes",
      "output": {
        "shape": "ListProfileObjectTypesResponse"
      }
    },
    "ListProfileObjects": {
      "documentation": "<p>Returns a list of objects associated with a profile of a given ProfileObjectType.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/objects"
      },
      "input": {
        "shape": "ListProfileObjectsRequest"
      },
      "name": "ListProfileObjects",
      "output": {
        "shape": "ListProfileObjectsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Displays the tags associated with an Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListWorkflows": {
      "documentation": "<p>Query to list all workflows.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/workflows"
      },
      "input": {
        "shape": "ListWorkflowsRequest"
      },
      "name": "ListWorkflows",
      "output": {
        "shape": "ListWorkflowsResponse"
      }
    },
    "MergeProfiles": {
      "documentation": "<p>Runs an AWS Lambda job that does the following:</p> <ol> <li> <p>All the profileKeys in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the objects in the <code>ProfileToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>All the <code>ProfileToBeMerged</code> will be deleted at the end.</p> </li> <li> <p>All the profileKeys in the <code>ProfileIdsToBeMerged</code> will be moved to the main profile.</p> </li> <li> <p>Standard fields are merged as follows:</p> <ol> <li> <p>Fields are always \"union\"-ed if there are no conflicts in standard fields or attributeKeys.</p> </li> <li> <p>When there are conflicting fields:</p> <ol> <li> <p>If no <code>SourceProfileIds</code> entry is specified, the main Profile value is always taken. </p> </li> <li> <p>If a <code>SourceProfileIds</code> entry is specified, the specified profileId is always taken, even if it is a NULL value.</p> </li> </ol> </li> </ol> </li> </ol> <p>You can use MergeProfiles together with <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a>, which returns potentially matching profiles, or use it with the results of another matching system. After profiles have been merged, they cannot be separated (unmerged).</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/objects/merge"
      },
      "input": {
        "shape": "MergeProfilesRequest"
      },
      "name": "MergeProfiles",
      "output": {
        "shape": "MergeProfilesResponse"
      }
    },
    "PutIntegration": {
      "documentation": "<p>Adds an integration between the service and a third-party service, which includes Amazon AppFlow and Amazon Connect.</p> <p>An integration can belong to only one domain.</p> <p>To add or remove tags on an existing Integration, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"> TagResource </a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\"> UntagResource</a>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{DomainName}/integrations"
      },
      "input": {
        "shape": "PutIntegrationRequest"
      },
      "name": "PutIntegration",
      "output": {
        "shape": "PutIntegrationResponse"
      }
    },
    "PutProfileObject": {
      "documentation": "<p>Adds additional objects to customer profiles of a given ObjectType.</p> <p>When adding a specific profile object, like a Contact Record, an inferred profile can get created if it is not mapped to an existing profile. The resulting profile will only have a phone number populated in the standard ProfileObject. Any additional Contact Records with the same phone number will be mapped to the same inferred profile.</p> <p>When a ProfileObject is created and if a ProfileObjectType already exists for the ProfileObject, it will provide data to a standard profile depending on the ProfileObjectType definition.</p> <p>PutProfileObject needs an ObjectType, which can be created using PutProfileObjectType.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{DomainName}/profiles/objects"
      },
      "input": {
        "shape": "PutProfileObjectRequest"
      },
      "name": "PutProfileObject",
      "output": {
        "shape": "PutProfileObjectResponse"
      }
    },
    "PutProfileObjectType": {
      "documentation": "<p>Defines a ProfileObjectType.</p> <p>To add or remove tags on an existing ObjectType, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\"> TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\">UntagResource</a>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{DomainName}/object-types/{ObjectTypeName}"
      },
      "input": {
        "shape": "PutProfileObjectTypeRequest"
      },
      "name": "PutProfileObjectType",
      "output": {
        "shape": "PutProfileObjectTypeResponse"
      }
    },
    "SearchProfiles": {
      "documentation": "<p>Searches for profiles within a specific domain name using name, phone number, email address, account number, or a custom defined index.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{DomainName}/profiles/search"
      },
      "input": {
        "shape": "SearchProfilesRequest"
      },
      "name": "SearchProfiles",
      "output": {
        "shape": "SearchProfilesResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns one or more tags (key-value pairs) to the specified Amazon Connect Customer Profiles resource. Tags can help you organize and categorize your resources. You can also use them to scope user permissions by granting a user permission to access or change only resources with certain tag values. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p> <p>Tags don't have any semantic meaning to AWS and are interpreted strictly as strings of characters.</p> <p>You can use the TagResource action with a resource that already has tags. If you specify a new tag key, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes one or more tags from the specified Amazon Connect Customer Profiles resource. In Connect Customer Profiles, domains, profile object types, and integrations can be tagged.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDomain": {
      "documentation": "<p>Updates the properties of a domain, including creating or selecting a dead letter queue or an encryption key.</p> <p>After a domain is created, the name can\u2019t be changed.</p> <p>Use this API or <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_CreateDomain.html\">CreateDomain</a> to enable <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">identity resolution</a>: set <code>Matching</code> to true. </p> <p>To prevent cross-service impersonation when you call this API, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html\">Cross-service confused deputy prevention</a> for sample policies that you should apply. </p> <p>To add or remove tags on an existing Domain, see <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_TagResource.html\">TagResource</a>/<a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_UntagResource.html\">UntagResource</a>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{DomainName}"
      },
      "input": {
        "shape": "UpdateDomainRequest"
      },
      "name": "UpdateDomain",
      "output": {
        "shape": "UpdateDomainResponse"
      }
    },
    "UpdateProfile": {
      "documentation": "<p>Updates the properties of a profile. The ProfileId is required for updating a customer profile.</p> <p>When calling the UpdateProfile API, specifying an empty string value means that any existing value will be removed. Not specifying a string value means that any value already there will be kept.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{DomainName}/profiles"
      },
      "input": {
        "shape": "UpdateProfileRequest"
      },
      "name": "UpdateProfile",
      "output": {
        "shape": "UpdateProfileResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "AddProfileKeyRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "KeyName": {
          "documentation": "<p>A searchable identifier of a customer profile. The predefined keys you can use include: _account, _profileId, _assetId, _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId, _shopifyCustomerId, _shopifyOrderId.</p>",
          "shape": "name"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        },
        "Values": {
          "documentation": "<p>A list of key values.</p>",
          "shape": "requestValueList"
        }
      },
      "required": [
        "ProfileId",
        "KeyName",
        "Values",
        "DomainName"
      ],
      "type": "structure"
    },
    "AddProfileKeyResponse": {
      "members": {
        "KeyName": {
          "documentation": "<p>A searchable identifier of a customer profile.</p>",
          "shape": "name"
        },
        "Values": {
          "documentation": "<p>A list of key values.</p>",
          "shape": "requestValueList"
        }
      },
      "type": "structure"
    },
    "Address": {
      "documentation": "<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>",
      "members": {
        "Address1": {
          "documentation": "<p>The first line of a customer address.</p>",
          "shape": "string1To255"
        },
        "Address2": {
          "documentation": "<p>The second line of a customer address.</p>",
          "shape": "string1To255"
        },
        "Address3": {
          "documentation": "<p>The third line of a customer address.</p>",
          "shape": "string1To255"
        },
        "Address4": {
          "documentation": "<p>The fourth line of a customer address.</p>",
          "shape": "string1To255"
        },
        "City": {
          "documentation": "<p>The city in which a customer lives.</p>",
          "shape": "string1To255"
        },
        "Country": {
          "documentation": "<p>The country in which a customer lives.</p>",
          "shape": "string1To255"
        },
        "County": {
          "documentation": "<p>The county in which a customer lives.</p>",
          "shape": "string1To255"
        },
        "PostalCode": {
          "documentation": "<p>The postal code of a customer address.</p>",
          "shape": "string1To255"
        },
        "Province": {
          "documentation": "<p>The province in which a customer lives.</p>",
          "shape": "string1To255"
        },
        "State": {
          "documentation": "<p>The state in which a customer lives.</p>",
          "shape": "string1To255"
        }
      },
      "type": "structure"
    },
    "AppflowIntegration": {
      "documentation": "<p>Details for workflow of type <code>APPFLOW_INTEGRATION</code>.</p>",
      "members": {
        "Batches": {
          "documentation": "<p>Batches in workflow of type <code>APPFLOW_INTEGRATION</code>.</p>",
          "shape": "Batches"
        },
        "FlowDefinition": {
          "shape": "FlowDefinition"
        }
      },
      "required": [
        "FlowDefinition"
      ],
      "type": "structure"
    },
    "AppflowIntegrationWorkflowAttributes": {
      "documentation": "<p>Structure holding all <code>APPFLOW_INTEGRATION</code> specific workflow attributes.</p>",
      "members": {
        "ConnectorProfileName": {
          "documentation": "<p>The name of the AppFlow connector profile used for ingestion.</p>",
          "shape": "ConnectorProfileName"
        },
        "RoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the IAM role. Customer Profiles assumes this role to create resources on your behalf as part of workflow execution.</p>",
          "shape": "string1To255"
        },
        "SourceConnectorType": {
          "documentation": "<p>Specifies the source connector type, such as Salesforce, ServiceNow, and Marketo. Indicates source of ingestion.</p>",
          "shape": "SourceConnectorType"
        }
      },
      "required": [
        "SourceConnectorType",
        "ConnectorProfileName"
      ],
      "type": "structure"
    },
    "AppflowIntegrationWorkflowMetrics": {
      "documentation": "<p>Workflow specific execution metrics for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
      "members": {
        "RecordsProcessed": {
          "documentation": "<p>Number of records processed in <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "long"
        },
        "StepsCompleted": {
          "documentation": "<p>Total steps completed in <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "long"
        },
        "TotalSteps": {
          "documentation": "<p>Total steps in <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "long"
        }
      },
      "required": [
        "RecordsProcessed",
        "StepsCompleted",
        "TotalSteps"
      ],
      "type": "structure"
    },
    "AppflowIntegrationWorkflowStep": {
      "documentation": "<p>Workflow step details for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
      "members": {
        "BatchRecordsEndTime": {
          "documentation": "<p>End datetime of records pulled in batch during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "string1To255"
        },
        "BatchRecordsStartTime": {
          "documentation": "<p>Start datetime of records pulled in batch during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "string1To255"
        },
        "CreatedAt": {
          "documentation": "<p>Creation timestamp of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "timestamp"
        },
        "ExecutionMessage": {
          "documentation": "<p>Message indicating execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "string1To255"
        },
        "FlowName": {
          "documentation": "<p>Name of the flow created during execution of workflow step. <code>APPFLOW_INTEGRATION</code> workflow type creates an appflow flow during workflow step execution on the customers behalf.</p>",
          "shape": "FlowName"
        },
        "LastUpdatedAt": {
          "documentation": "<p>Last updated timestamp for workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "timestamp"
        },
        "RecordsProcessed": {
          "documentation": "<p>Total number of records processed during execution of workflow step for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "long"
        },
        "Status": {
          "documentation": "<p>Workflow step status for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "Status"
        }
      },
      "required": [
        "FlowName",
        "Status",
        "ExecutionMessage",
        "RecordsProcessed",
        "BatchRecordsStartTime",
        "BatchRecordsEndTime",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "AttributeSourceIdMap": {
      "key": {
        "shape": "string1To255"
      },
      "type": "map",
      "value": {
        "shape": "uuid"
      }
    },
    "Attributes": {
      "key": {
        "shape": "string1To255"
      },
      "type": "map",
      "value": {
        "shape": "string1To255"
      }
    },
    "AutoMerging": {
      "documentation": "<p>Configuration settings for how to perform the auto-merging of profiles.</p>",
      "members": {
        "ConflictResolution": {
          "documentation": "<p>How the auto-merging process should resolve conflicts between different profiles. For example, if Profile A and Profile B have the same <code>FirstName</code> and <code>LastName</code> (and that is the matching criteria), which <code>EmailAddress</code> should be used? </p>",
          "shape": "ConflictResolution"
        },
        "Consolidation": {
          "documentation": "<p>A list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged.</p>",
          "shape": "Consolidation"
        },
        "Enabled": {
          "documentation": "<p>The flag that enables the auto-merging of duplicate profiles.</p>",
          "shape": "optionalBoolean"
        },
        "MinAllowedConfidenceScoreForMerging": {
          "documentation": "<p>A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles. </p>",
          "shape": "Double0To1"
        }
      },
      "required": [
        "Enabled"
      ],
      "type": "structure"
    },
    "BadRequestException": {
      "documentation": "<p>The input you provided is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "Batch": {
      "documentation": "<p>Batch defines the boundaries for ingestion for each step in <code>APPFLOW_INTEGRATION</code> workflow. <code>APPFLOW_INTEGRATION</code> workflow splits ingestion based on these boundaries.</p>",
      "members": {
        "EndTime": {
          "documentation": "<p>End time of batch to split ingestion.</p>",
          "shape": "timestamp"
        },
        "StartTime": {
          "documentation": "<p>Start time of batch to split ingestion.</p>",
          "shape": "timestamp"
        }
      },
      "required": [
        "StartTime",
        "EndTime"
      ],
      "type": "structure"
    },
    "Batches": {
      "member": {
        "shape": "Batch"
      },
      "type": "list"
    },
    "BucketName": {
      "max": 63,
      "min": 3,
      "pattern": "\\S+",
      "type": "string"
    },
    "BucketPrefix": {
      "max": 512,
      "pattern": ".*",
      "type": "string"
    },
    "ConflictResolution": {
      "documentation": "<p>How the auto-merging process should resolve conflicts between different profiles.</p>",
      "members": {
        "ConflictResolvingModel": {
          "documentation": "<p>How the auto-merging process should resolve conflicts between different profiles.</p> <ul> <li> <p> <code>RECENCY</code>: Uses the data that was most recently updated.</p> </li> <li> <p> <code>SOURCE</code>: Uses the data from a specific source. For example, if a company has been aquired or two departments have merged, data from the specified source is used. If two duplicate profiles are from the same source, then <code>RECENCY</code> is used again.</p> </li> </ul>",
          "shape": "ConflictResolvingModel"
        },
        "SourceName": {
          "documentation": "<p>The <code>ObjectType</code> name that is used to resolve profile merging conflicts when choosing <code>SOURCE</code> as the <code>ConflictResolvingModel</code>.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "ConflictResolvingModel"
      ],
      "type": "structure"
    },
    "ConflictResolvingModel": {
      "enum": [
        "RECENCY",
        "SOURCE"
      ],
      "type": "string"
    },
    "ConnectorOperator": {
      "documentation": "<p>The operation to be performed on the provided source fields.</p>",
      "members": {
        "Marketo": {
          "documentation": "<p>The operation to be performed on the provided Marketo source fields.</p>",
          "shape": "MarketoConnectorOperator"
        },
        "S3": {
          "documentation": "<p>The operation to be performed on the provided Amazon S3 source fields.</p>",
          "shape": "S3ConnectorOperator"
        },
        "Salesforce": {
          "documentation": "<p>The operation to be performed on the provided Salesforce source fields.</p>",
          "shape": "SalesforceConnectorOperator"
        },
        "ServiceNow": {
          "documentation": "<p>The operation to be performed on the provided ServiceNow source fields.</p>",
          "shape": "ServiceNowConnectorOperator"
        },
        "Zendesk": {
          "documentation": "<p>The operation to be performed on the provided Zendesk source fields.</p>",
          "shape": "ZendeskConnectorOperator"
        }
      },
      "type": "structure"
    },
    "ConnectorProfileName": {
      "max": 256,
      "pattern": "[\\w/!@#+=.-]+",
      "type": "string"
    },
    "Consolidation": {
      "documentation": "<p>The matching criteria to be used during the auto-merging process. </p>",
      "members": {
        "MatchingAttributesList": {
          "documentation": "<p>A list of matching criteria.</p>",
          "shape": "MatchingAttributesList"
        }
      },
      "required": [
        "MatchingAttributesList"
      ],
      "type": "structure"
    },
    "CreateDomainRequest": {
      "members": {
        "DeadLetterQueueUrl": {
          "documentation": "<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.</p>",
          "shape": "sqsQueueUrl"
        },
        "DefaultEncryptionKey": {
          "documentation": "<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>",
          "shape": "encryptionKey"
        },
        "DefaultExpirationDays": {
          "documentation": "<p>The default number of days until the data within the domain expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "Matching": {
          "documentation": "<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>",
          "shape": "MatchingRequest"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName",
        "DefaultExpirationDays"
      ],
      "type": "structure"
    },
    "CreateDomainResponse": {
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DeadLetterQueueUrl": {
          "documentation": "<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>",
          "shape": "sqsQueueUrl"
        },
        "DefaultEncryptionKey": {
          "documentation": "<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>",
          "shape": "encryptionKey"
        },
        "DefaultExpirationDays": {
          "documentation": "<p>The default number of days until the data within the domain expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "Matching": {
          "documentation": "<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>",
          "shape": "MatchingResponse"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName",
        "DefaultExpirationDays",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "CreateIntegrationWorkflowRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "IntegrationConfig": {
          "documentation": "<p>Configuration data for integration workflow.</p>",
          "shape": "IntegrationConfig"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "RoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the IAM role. Customer Profiles assumes this role to create resources on your behalf as part of workflow execution.</p>",
          "shape": "RoleArn"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "WorkflowType": {
          "documentation": "<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>",
          "shape": "WorkflowType"
        }
      },
      "required": [
        "DomainName",
        "WorkflowType",
        "IntegrationConfig",
        "ObjectTypeName",
        "RoleArn"
      ],
      "type": "structure"
    },
    "CreateIntegrationWorkflowResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message indicating create request was received.</p>",
          "shape": "string1To255"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "uuid"
        }
      },
      "required": [
        "WorkflowId",
        "Message"
      ],
      "type": "structure"
    },
    "CreateProfileRequest": {
      "members": {
        "AccountNumber": {
          "documentation": "<p>A unique account number that you have given to the customer.</p>",
          "shape": "string1To255"
        },
        "AdditionalInformation": {
          "documentation": "<p>Any additional information relevant to the customer\u2019s profile.</p>",
          "shape": "string1To1000"
        },
        "Address": {
          "documentation": "<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>",
          "shape": "Address"
        },
        "Attributes": {
          "documentation": "<p>A key value pair of attributes of a customer profile.</p>",
          "shape": "Attributes"
        },
        "BillingAddress": {
          "documentation": "<p>The customer\u2019s billing address.</p>",
          "shape": "Address"
        },
        "BirthDate": {
          "documentation": "<p>The customer\u2019s birth date. </p>",
          "shape": "string1To255"
        },
        "BusinessEmailAddress": {
          "documentation": "<p>The customer\u2019s business email address.</p>",
          "shape": "string1To255"
        },
        "BusinessName": {
          "documentation": "<p>The name of the customer\u2019s business.</p>",
          "shape": "string1To255"
        },
        "BusinessPhoneNumber": {
          "documentation": "<p>The customer\u2019s business phone number.</p>",
          "shape": "string1To255"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "EmailAddress": {
          "documentation": "<p>The customer\u2019s email address, which has not been specified as a personal or business address. </p>",
          "shape": "string1To255"
        },
        "FirstName": {
          "documentation": "<p>The customer\u2019s first name.</p>",
          "shape": "string1To255"
        },
        "Gender": {
          "documentation": "<p>The gender with which the customer identifies. </p>",
          "shape": "Gender"
        },
        "HomePhoneNumber": {
          "documentation": "<p>The customer\u2019s home phone number.</p>",
          "shape": "string1To255"
        },
        "LastName": {
          "documentation": "<p>The customer\u2019s last name.</p>",
          "shape": "string1To255"
        },
        "MailingAddress": {
          "documentation": "<p>The customer\u2019s mailing address.</p>",
          "shape": "Address"
        },
        "MiddleName": {
          "documentation": "<p>The customer\u2019s middle name.</p>",
          "shape": "string1To255"
        },
        "MobilePhoneNumber": {
          "documentation": "<p>The customer\u2019s mobile phone number.</p>",
          "shape": "string1To255"
        },
        "PartyType": {
          "documentation": "<p>The type of profile used to describe the customer.</p>",
          "shape": "PartyType"
        },
        "PersonalEmailAddress": {
          "documentation": "<p>The customer\u2019s personal email address.</p>",
          "shape": "string1To255"
        },
        "PhoneNumber": {
          "documentation": "<p>The customer\u2019s phone number, which has not been specified as a mobile, home, or business number. </p>",
          "shape": "string1To255"
        },
        "ShippingAddress": {
          "documentation": "<p>The customer\u2019s shipping address.</p>",
          "shape": "Address"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "CreateProfileResponse": {
      "members": {
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        }
      },
      "required": [
        "ProfileId"
      ],
      "type": "structure"
    },
    "DataPullMode": {
      "enum": [
        "Incremental",
        "Complete"
      ],
      "type": "string"
    },
    "Date": {
      "type": "timestamp"
    },
    "DatetimeTypeFieldName": {
      "max": 256,
      "pattern": ".*",
      "type": "string"
    },
    "DeleteDomainRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "DeleteDomainResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "DeleteIntegrationRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "Uri"
      ],
      "type": "structure"
    },
    "DeleteIntegrationResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "DeleteProfileKeyRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "KeyName": {
          "documentation": "<p>A searchable identifier of a customer profile.</p>",
          "shape": "name"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        },
        "Values": {
          "documentation": "<p>A list of key values.</p>",
          "shape": "requestValueList"
        }
      },
      "required": [
        "ProfileId",
        "KeyName",
        "Values",
        "DomainName"
      ],
      "type": "structure"
    },
    "DeleteProfileKeyResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "DeleteProfileObjectRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        },
        "ProfileObjectUniqueKey": {
          "documentation": "<p>The unique identifier of the profile object generated by the service.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "ProfileId",
        "ProfileObjectUniqueKey",
        "ObjectTypeName",
        "DomainName"
      ],
      "type": "structure"
    },
    "DeleteProfileObjectResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "DeleteProfileObjectTypeRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "location": "uri",
          "locationName": "ObjectTypeName",
          "shape": "typeName"
        }
      },
      "required": [
        "DomainName",
        "ObjectTypeName"
      ],
      "type": "structure"
    },
    "DeleteProfileObjectTypeResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "DeleteProfileRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        }
      },
      "required": [
        "ProfileId",
        "DomainName"
      ],
      "type": "structure"
    },
    "DeleteProfileResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the delete request is done.</p>",
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "DeleteWorkflowRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "location": "uri",
          "locationName": "WorkflowId",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "WorkflowId"
      ],
      "type": "structure"
    },
    "DeleteWorkflowResponse": {
      "members": {},
      "type": "structure"
    },
    "DestinationField": {
      "max": 256,
      "pattern": ".*",
      "type": "string"
    },
    "DomainList": {
      "member": {
        "shape": "ListDomainItem"
      },
      "type": "list"
    },
    "DomainStats": {
      "documentation": "<p>Usage-specific statistics about the domain.</p>",
      "members": {
        "MeteringProfileCount": {
          "documentation": "<p>The number of profiles that you are currently paying for in the domain. If you have more than 100 objects associated with a single profile, that profile counts as two profiles. If you have more than 200 objects, that profile counts as three, and so on.</p>",
          "shape": "long"
        },
        "ObjectCount": {
          "documentation": "<p>The total number of objects in domain.</p>",
          "shape": "long"
        },
        "ProfileCount": {
          "documentation": "<p>The total number of profiles currently in the domain.</p>",
          "shape": "long"
        },
        "TotalSize": {
          "documentation": "<p>The total size, in bytes, of all objects in the domain.</p>",
          "shape": "long"
        }
      },
      "type": "structure"
    },
    "Double": {
      "type": "double"
    },
    "Double0To1": {
      "max": 1.0,
      "min": 0.0,
      "type": "double"
    },
    "ExportingConfig": {
      "documentation": "<p>Configuration information about the S3 bucket where Identity Resolution Jobs writes result files. </p> <note> <p>You need to give Customer Profiles service principal write permission to your S3 bucket. Otherwise, you'll get an exception in the API response. For an example policy, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/cross-service-confused-deputy-prevention.html#customer-profiles-cross-service\">Amazon Connect Customer Profiles cross-service confused deputy prevention</a>. </p> </note>",
      "members": {
        "S3Exporting": {
          "documentation": "<p>The S3 location where Identity Resolution Jobs write result files.</p>",
          "shape": "S3ExportingConfig"
        }
      },
      "type": "structure"
    },
    "ExportingLocation": {
      "documentation": "<p>The S3 location where Identity Resolution Jobs write result files.</p>",
      "members": {
        "S3Exporting": {
          "documentation": "<p>Information about the S3 location where Identity Resolution Jobs write result files.</p>",
          "shape": "S3ExportingLocation"
        }
      },
      "type": "structure"
    },
    "FieldContentType": {
      "enum": [
        "STRING",
        "NUMBER",
        "PHONE_NUMBER",
        "EMAIL_ADDRESS",
        "NAME"
      ],
      "type": "string"
    },
    "FieldMap": {
      "key": {
        "shape": "name"
      },
      "type": "map",
      "value": {
        "shape": "ObjectTypeField"
      }
    },
    "FieldNameList": {
      "member": {
        "shape": "name"
      },
      "type": "list"
    },
    "FieldSourceProfileIds": {
      "documentation": "<p>A duplicate customer profile that is to be merged into a main profile. </p>",
      "members": {
        "AccountNumber": {
          "documentation": "<p>A unique identifier for the account number field to be merged. </p>",
          "shape": "uuid"
        },
        "AdditionalInformation": {
          "documentation": "<p>A unique identifier for the additional information field to be merged.</p>",
          "shape": "uuid"
        },
        "Address": {
          "documentation": "<p>A unique identifier for the party type field to be merged.</p>",
          "shape": "uuid"
        },
        "Attributes": {
          "documentation": "<p>A unique identifier for the attributes field to be merged.</p>",
          "shape": "AttributeSourceIdMap"
        },
        "BillingAddress": {
          "documentation": "<p>A unique identifier for the billing type field to be merged.</p>",
          "shape": "uuid"
        },
        "BirthDate": {
          "documentation": "<p>A unique identifier for the birthdate field to be merged.</p>",
          "shape": "uuid"
        },
        "BusinessEmailAddress": {
          "documentation": "<p>A unique identifier for the party type field to be merged.</p>",
          "shape": "uuid"
        },
        "BusinessName": {
          "documentation": "<p>A unique identifier for the business name field to be merged.</p>",
          "shape": "uuid"
        },
        "BusinessPhoneNumber": {
          "documentation": "<p>A unique identifier for the business phone number field to be merged.</p>",
          "shape": "uuid"
        },
        "EmailAddress": {
          "documentation": "<p>A unique identifier for the email address field to be merged.</p>",
          "shape": "uuid"
        },
        "FirstName": {
          "documentation": "<p>A unique identifier for the first name field to be merged.</p>",
          "shape": "uuid"
        },
        "Gender": {
          "documentation": "<p>A unique identifier for the gender field to be merged.</p>",
          "shape": "uuid"
        },
        "HomePhoneNumber": {
          "documentation": "<p>A unique identifier for the home phone number field to be merged.</p>",
          "shape": "uuid"
        },
        "LastName": {
          "documentation": "<p>A unique identifier for the last name field to be merged.</p>",
          "shape": "uuid"
        },
        "MailingAddress": {
          "documentation": "<p>A unique identifier for the mailing address field to be merged.</p>",
          "shape": "uuid"
        },
        "MiddleName": {
          "documentation": "<p>A unique identifier for the middle name field to be merged.</p>",
          "shape": "uuid"
        },
        "MobilePhoneNumber": {
          "documentation": "<p>A unique identifier for the mobile phone number field to be merged.</p>",
          "shape": "uuid"
        },
        "PartyType": {
          "documentation": "<p>A unique identifier for the party type field to be merged.</p>",
          "shape": "uuid"
        },
        "PersonalEmailAddress": {
          "documentation": "<p>A unique identifier for the personal email address field to be merged.</p>",
          "shape": "uuid"
        },
        "PhoneNumber": {
          "documentation": "<p>A unique identifier for the phone number field to be merged.</p>",
          "shape": "uuid"
        },
        "ShippingAddress": {
          "documentation": "<p>A unique identifier for the shipping address field to be merged.</p>",
          "shape": "uuid"
        }
      },
      "type": "structure"
    },
    "FlowDefinition": {
      "documentation": "<p>The configurations that control how Customer Profiles retrieves data from the source, Amazon AppFlow. Customer Profiles uses this information to create an AppFlow flow on behalf of customers.</p>",
      "members": {
        "Description": {
          "documentation": "<p>A description of the flow you want to create.</p>",
          "shape": "FlowDescription"
        },
        "FlowName": {
          "documentation": "<p>The specified name of the flow. Use underscores (_) or hyphens (-) only. Spaces are not allowed.</p>",
          "shape": "FlowName"
        },
        "KmsArn": {
          "documentation": "<p>The Amazon Resource Name of the AWS Key Management Service (KMS) key you provide for encryption.</p>",
          "shape": "KmsArn"
        },
        "SourceFlowConfig": {
          "documentation": "<p>The configuration that controls how Customer Profiles retrieves data from the source.</p>",
          "shape": "SourceFlowConfig"
        },
        "Tasks": {
          "documentation": "<p>A list of tasks that Customer Profiles performs while transferring the data in the flow run.</p>",
          "shape": "Tasks"
        },
        "TriggerConfig": {
          "documentation": "<p>The trigger settings that determine how and when the flow runs.</p>",
          "shape": "TriggerConfig"
        }
      },
      "required": [
        "FlowName",
        "KmsArn",
        "SourceFlowConfig",
        "Tasks",
        "TriggerConfig"
      ],
      "type": "structure"
    },
    "FlowDescription": {
      "max": 2048,
      "pattern": "[\\w!@#\\-.?,\\s]*",
      "type": "string"
    },
    "FlowName": {
      "max": 256,
      "pattern": "[a-zA-Z0-9][\\w!@#.-]+",
      "type": "string"
    },
    "Gender": {
      "enum": [
        "MALE",
        "FEMALE",
        "UNSPECIFIED"
      ],
      "type": "string"
    },
    "GetAutoMergingPreviewRequest": {
      "members": {
        "ConflictResolution": {
          "documentation": "<p>How the auto-merging process should resolve conflicts between different profiles.</p>",
          "shape": "ConflictResolution"
        },
        "Consolidation": {
          "documentation": "<p>A list of matching attributes that represent matching criteria.</p>",
          "shape": "Consolidation"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MinAllowedConfidenceScoreForMerging": {
          "documentation": "<p>Minimum confidence score required for profiles within a matching group to be merged during the auto-merge process.</p>",
          "shape": "Double0To1"
        }
      },
      "required": [
        "DomainName",
        "Consolidation",
        "ConflictResolution"
      ],
      "type": "structure"
    },
    "GetAutoMergingPreviewResponse": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "NumberOfMatchesInSample": {
          "documentation": "<p>The number of match groups in the domain that have been reviewed in this preview dry run.</p>",
          "shape": "long"
        },
        "NumberOfProfilesInSample": {
          "documentation": "<p>The number of profiles found in this preview dry run.</p>",
          "shape": "long"
        },
        "NumberOfProfilesWillBeMerged": {
          "documentation": "<p>The number of profiles that would be merged if this wasn't a preview dry run.</p>",
          "shape": "long"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "GetDomainRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "GetDomainResponse": {
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DeadLetterQueueUrl": {
          "documentation": "<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>",
          "shape": "sqsQueueUrl"
        },
        "DefaultEncryptionKey": {
          "documentation": "<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>",
          "shape": "encryptionKey"
        },
        "DefaultExpirationDays": {
          "documentation": "<p>The default number of days until the data within the domain expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "Matching": {
          "documentation": "<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>",
          "shape": "MatchingResponse"
        },
        "Stats": {
          "documentation": "<p>Usage-specific statistics about the domain.</p>",
          "shape": "DomainStats"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "GetIdentityResolutionJobRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "JobId": {
          "documentation": "<p>The unique identifier of the Identity Resolution Job.</p>",
          "location": "uri",
          "locationName": "JobId",
          "shape": "uuid"
        }
      },
      "required": [
        "DomainName",
        "JobId"
      ],
      "type": "structure"
    },
    "GetIdentityResolutionJobResponse": {
      "members": {
        "AutoMerging": {
          "documentation": "<p>Configuration settings for how to perform the auto-merging of profiles.</p>",
          "shape": "AutoMerging"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "ExportingLocation": {
          "documentation": "<p>The S3 location where the Identity Resolution Job writes result files.</p>",
          "shape": "ExportingLocation"
        },
        "JobEndTime": {
          "documentation": "<p>The timestamp of when the Identity Resolution Job was completed.</p>",
          "shape": "timestamp"
        },
        "JobExpirationTime": {
          "documentation": "<p>The timestamp of when the Identity Resolution Job will expire.</p>",
          "shape": "timestamp"
        },
        "JobId": {
          "documentation": "<p>The unique identifier of the Identity Resolution Job.</p>",
          "shape": "uuid"
        },
        "JobStartTime": {
          "documentation": "<p>The timestamp of when the Identity Resolution Job was started or will be started.</p>",
          "shape": "timestamp"
        },
        "JobStats": {
          "documentation": "<p>Statistics about the Identity Resolution Job.</p>",
          "shape": "JobStats"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the Identity Resolution Job was most recently edited.</p>",
          "shape": "timestamp"
        },
        "Message": {
          "documentation": "<p>The error messages that are generated when the Identity Resolution Job runs.</p>",
          "shape": "stringTo2048"
        },
        "Status": {
          "documentation": "<p>The status of the Identity Resolution Job.</p> <ul> <li> <p> <code>PENDING</code>: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the <code>PENDING</code> state are deleted.</p> </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.</p> </li> <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The Identity Resolution Job completed successfully.</p> </li> <li> <p> <code>PARTIAL_SUCCESS</code>: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.</p> </li> <li> <p> <code>FAILED</code>: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.</p> </li> </ul>",
          "shape": "IdentityResolutionJobStatus"
        }
      },
      "type": "structure"
    },
    "GetIntegrationRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "Uri"
      ],
      "type": "structure"
    },
    "GetIntegrationResponse": {
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "IsUnstructured": {
          "documentation": "<p>Boolean to indicate if the Flow associated with the Integration is created via Appflow console or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition</p>",
          "shape": "optionalBoolean"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ObjectTypeNames": {
          "documentation": "<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>",
          "shape": "ObjectTypeNames"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "GetMatchesRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "GetMatchesResponse": {
      "members": {
        "MatchGenerationDate": {
          "documentation": "<p>The timestamp this version of Match Result generated.</p>",
          "shape": "timestamp"
        },
        "Matches": {
          "documentation": "<p>The list of matched profiles for this instance.</p>",
          "shape": "MatchesList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "token"
        },
        "PotentialMatches": {
          "documentation": "<p>The number of potential matches found.</p>",
          "shape": "matchesNumber"
        }
      },
      "type": "structure"
    },
    "GetProfileObjectTypeRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "location": "uri",
          "locationName": "ObjectTypeName",
          "shape": "typeName"
        }
      },
      "required": [
        "DomainName",
        "ObjectTypeName"
      ],
      "type": "structure"
    },
    "GetProfileObjectTypeResponse": {
      "members": {
        "AllowProfileCreation": {
          "documentation": "<p>Indicates whether a profile should be created when data is received if one doesn\u2019t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>",
          "shape": "boolean"
        },
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the profile object type.</p>",
          "shape": "text"
        },
        "EncryptionKey": {
          "documentation": "<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>",
          "shape": "encryptionKey"
        },
        "ExpirationDays": {
          "documentation": "<p>The number of days until the data in the object expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "Fields": {
          "documentation": "<p>A map of the name and ObjectType field.</p>",
          "shape": "FieldMap"
        },
        "Keys": {
          "documentation": "<p>A list of unique keys that can be used to map data to the profile.</p>",
          "shape": "KeyMap"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "SourceLastUpdatedTimestampFormat": {
          "documentation": "<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up.</p>",
          "shape": "string1To255"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template.</p>",
          "shape": "name"
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "structure"
    },
    "GetProfileObjectTypeTemplateRequest": {
      "members": {
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "name"
        }
      },
      "required": [
        "TemplateId"
      ],
      "type": "structure"
    },
    "GetProfileObjectTypeTemplateResponse": {
      "members": {
        "AllowProfileCreation": {
          "documentation": "<p>Indicates whether a profile should be created when data is received if one doesn\u2019t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>",
          "shape": "boolean"
        },
        "Fields": {
          "documentation": "<p>A map of the name and ObjectType field.</p>",
          "shape": "FieldMap"
        },
        "Keys": {
          "documentation": "<p>A list of unique keys that can be used to map data to the profile.</p>",
          "shape": "KeyMap"
        },
        "SourceLastUpdatedTimestampFormat": {
          "documentation": "<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up.</p>",
          "shape": "string1To255"
        },
        "SourceName": {
          "documentation": "<p>The name of the source of the object template.</p>",
          "shape": "name"
        },
        "SourceObject": {
          "documentation": "<p>The source of the object template.</p>",
          "shape": "name"
        },
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template.</p>",
          "shape": "name"
        }
      },
      "type": "structure"
    },
    "GetWorkflowRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "location": "uri",
          "locationName": "WorkflowId",
          "shape": "uuid"
        }
      },
      "required": [
        "DomainName",
        "WorkflowId"
      ],
      "type": "structure"
    },
    "GetWorkflowResponse": {
      "members": {
        "Attributes": {
          "documentation": "<p>Attributes provided for workflow execution.</p>",
          "shape": "WorkflowAttributes"
        },
        "ErrorDescription": {
          "documentation": "<p>Workflow error messages during execution (if any).</p>",
          "shape": "string1To255"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp that represents when workflow execution last updated.</p>",
          "shape": "timestamp"
        },
        "Metrics": {
          "documentation": "<p>Workflow specific execution metrics.</p>",
          "shape": "WorkflowMetrics"
        },
        "StartDate": {
          "documentation": "<p>The timestamp that represents when workflow execution started.</p>",
          "shape": "timestamp"
        },
        "Status": {
          "documentation": "<p>Status of workflow execution.</p>",
          "shape": "Status"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "uuid"
        },
        "WorkflowType": {
          "documentation": "<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>",
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "GetWorkflowStepsRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "location": "uri",
          "locationName": "WorkflowId",
          "shape": "uuid"
        }
      },
      "required": [
        "DomainName",
        "WorkflowId"
      ],
      "type": "structure"
    },
    "GetWorkflowStepsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>List containing workflow step details.</p>",
          "shape": "WorkflowStepsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "token"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "uuid"
        },
        "WorkflowType": {
          "documentation": "<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>",
          "shape": "WorkflowType"
        }
      },
      "type": "structure"
    },
    "IdentityResolutionJob": {
      "documentation": "<p>Information about the Identity Resolution Job.</p>",
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "ExportingLocation": {
          "documentation": "<p>The S3 location where the Identity Resolution Job writes result files.</p>",
          "shape": "ExportingLocation"
        },
        "JobEndTime": {
          "documentation": "<p>The timestamp of when the job was completed.</p>",
          "shape": "timestamp"
        },
        "JobId": {
          "documentation": "<p>The unique identifier of the Identity Resolution Job.</p>",
          "shape": "uuid"
        },
        "JobStartTime": {
          "documentation": "<p>The timestamp of when the job was started or will be started.</p>",
          "shape": "timestamp"
        },
        "JobStats": {
          "documentation": "<p>Statistics about an Identity Resolution Job.</p>",
          "shape": "JobStats"
        },
        "Message": {
          "documentation": "<p>The error messages that are generated when the Identity Resolution Job runs.</p>",
          "shape": "stringTo2048"
        },
        "Status": {
          "documentation": "<p>The status of the Identity Resolution Job.</p> <ul> <li> <p> <code>PENDING</code>: The Identity Resolution Job is scheduled but has not started yet. If you turn off the Identity Resolution feature in your domain, jobs in the <code>PENDING</code> state are deleted.</p> </li> <li> <p> <code>PREPROCESSING</code>: The Identity Resolution Job is loading your data.</p> </li> <li> <p> <code>FIND_MATCHING</code>: The Identity Resolution Job is using the machine learning model to identify profiles that belong to the same matching group.</p> </li> <li> <p> <code>MERGING</code>: The Identity Resolution Job is merging duplicate profiles.</p> </li> <li> <p> <code>COMPLETED</code>: The Identity Resolution Job completed successfully.</p> </li> <li> <p> <code>PARTIAL_SUCCESS</code>: There's a system error and not all of the data is merged. The Identity Resolution Job writes a message indicating the source of the problem.</p> </li> <li> <p> <code>FAILED</code>: The Identity Resolution Job did not merge any data. It writes a message indicating the source of the problem.</p> </li> </ul>",
          "shape": "IdentityResolutionJobStatus"
        }
      },
      "type": "structure"
    },
    "IdentityResolutionJobStatus": {
      "enum": [
        "PENDING",
        "PREPROCESSING",
        "FIND_MATCHING",
        "MERGING",
        "COMPLETED",
        "PARTIAL_SUCCESS",
        "FAILED"
      ],
      "type": "string"
    },
    "IdentityResolutionJobsList": {
      "member": {
        "shape": "IdentityResolutionJob"
      },
      "type": "list"
    },
    "IncrementalPullConfig": {
      "documentation": "<p>Specifies the configuration used when importing incremental records from the source.</p>",
      "members": {
        "DatetimeTypeFieldName": {
          "documentation": "<p>A field that specifies the date time or timestamp field as the criteria to use when importing incremental records from the source.</p>",
          "shape": "DatetimeTypeFieldName"
        }
      },
      "type": "structure"
    },
    "IntegrationConfig": {
      "documentation": "<p>Configuration data for integration workflow.</p>",
      "members": {
        "AppflowIntegration": {
          "documentation": "<p>Configuration data for <code>APPFLOW_INTEGRATION</code> workflow type.</p>",
          "shape": "AppflowIntegration"
        }
      },
      "type": "structure"
    },
    "IntegrationList": {
      "member": {
        "shape": "ListIntegrationItem"
      },
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>An internal service error occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "JobSchedule": {
      "documentation": "<p>The day and time when do you want to start the Identity Resolution Job every week.</p>",
      "members": {
        "DayOfTheWeek": {
          "documentation": "<p>The day when the Identity Resolution Job should run every week.</p>",
          "shape": "JobScheduleDayOfTheWeek"
        },
        "Time": {
          "documentation": "<p>The time when the Identity Resolution Job should run every week.</p>",
          "shape": "JobScheduleTime"
        }
      },
      "required": [
        "DayOfTheWeek",
        "Time"
      ],
      "type": "structure"
    },
    "JobScheduleDayOfTheWeek": {
      "enum": [
        "SUNDAY",
        "MONDAY",
        "TUESDAY",
        "WEDNESDAY",
        "THURSDAY",
        "FRIDAY",
        "SATURDAY"
      ],
      "type": "string"
    },
    "JobScheduleTime": {
      "max": 5,
      "min": 3,
      "pattern": "^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$",
      "type": "string"
    },
    "JobStats": {
      "documentation": "<p>Statistics about the Identity Resolution Job.</p>",
      "members": {
        "NumberOfMatchesFound": {
          "documentation": "<p>The number of matches found.</p>",
          "shape": "long"
        },
        "NumberOfMergesDone": {
          "documentation": "<p>The number of merges completed.</p>",
          "shape": "long"
        },
        "NumberOfProfilesReviewed": {
          "documentation": "<p>The number of profiles reviewed.</p>",
          "shape": "long"
        }
      },
      "type": "structure"
    },
    "KeyMap": {
      "key": {
        "shape": "name"
      },
      "type": "map",
      "value": {
        "shape": "ObjectTypeKeyList"
      }
    },
    "KmsArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:aws:kms:.*:[0-9]+:.*",
      "type": "string"
    },
    "ListAccountIntegrationsRequest": {
      "members": {
        "IncludeHidden": {
          "documentation": "<p>Boolean to indicate if hidden integration should be returned. Defaults to <code>False</code>.</p>",
          "location": "querystring",
          "locationName": "include-hidden",
          "shape": "optionalBoolean"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListAccountIntegrations API call.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "Uri"
      ],
      "type": "structure"
    },
    "ListAccountIntegrationsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListAccountIntegration instances.</p>",
          "shape": "IntegrationList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListAccountIntegrations API call.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListDomainItem": {
      "documentation": "<p>An object in a list that represents a domain.</p>",
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "ListDomainsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListDomain API call.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListDomainsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListDomains instances.</p>",
          "shape": "DomainList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListDomains API call.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListIdentityResolutionJobsRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "ListIdentityResolutionJobsResponse": {
      "members": {
        "IdentityResolutionJobsList": {
          "documentation": "<p>A list of Identity Resolution Jobs.</p>",
          "shape": "IdentityResolutionJobsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListIntegrationItem": {
      "documentation": "<p>An integration in list of integrations.</p>",
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "IsUnstructured": {
          "documentation": "<p>Boolean to indicate if the Flow associated with the Integration is created via Appflow console or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition</p>",
          "shape": "optionalBoolean"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ObjectTypeNames": {
          "documentation": "<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>",
          "shape": "ObjectTypeNames"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "ListIntegrationsRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "IncludeHidden": {
          "documentation": "<p>Boolean to indicate if hidden integration should be returned. Defaults to <code>False</code>.</p>",
          "location": "querystring",
          "locationName": "include-hidden",
          "shape": "optionalBoolean"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListIntegrations API call.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "ListIntegrationsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListIntegrations instances.</p>",
          "shape": "IntegrationList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListIntegrations API call.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectTypeItem": {
      "documentation": "<p>A ProfileObjectType instance.</p>",
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "Description": {
          "documentation": "<p>Description of the profile object type.</p>",
          "shape": "text"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "structure"
    },
    "ListProfileObjectTypeTemplateItem": {
      "documentation": "<p>A ProfileObjectTypeTemplate in a list of ProfileObjectTypeTemplates.</p>",
      "members": {
        "SourceName": {
          "documentation": "<p>The name of the source of the object template.</p>",
          "shape": "name"
        },
        "SourceObject": {
          "documentation": "<p>The source of the object template.</p>",
          "shape": "name"
        },
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template.</p>",
          "shape": "name"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectTypeTemplatesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListObjectTypeTemplates API call.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectTypeTemplatesResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListProfileObjectType template instances.</p>",
          "shape": "ProfileObjectTypeTemplateList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous ListObjectTypeTemplates API call. </p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectTypesRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>Identifies the next page of results to return.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "ListProfileObjectTypesResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListProfileObjectTypes instances.</p>",
          "shape": "ProfileObjectTypeList"
        },
        "NextToken": {
          "documentation": "<p>Identifies the next page of results to return.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectsItem": {
      "documentation": "<p>A ProfileObject in a list of ProfileObjects.</p>",
      "members": {
        "Object": {
          "documentation": "<p>A JSON representation of a ProfileObject that belongs to a profile.</p>",
          "shape": "stringifiedJson"
        },
        "ObjectTypeName": {
          "documentation": "<p>Specifies the kind of object being added to a profile, such as \"Salesforce-Account.\"</p>",
          "shape": "typeName"
        },
        "ProfileObjectUniqueKey": {
          "documentation": "<p>The unique identifier of the ProfileObject generated by the service.</p>",
          "shape": "string1To255"
        }
      },
      "type": "structure"
    },
    "ListProfileObjectsRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous call to ListProfileObjects.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        },
        "ObjectFilter": {
          "documentation": "<p>Applies a filter to the response to include profile objects with the specified index values. This filter is only supported for ObjectTypeName _asset, _case and _order.</p>",
          "shape": "ObjectFilter"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        }
      },
      "required": [
        "DomainName",
        "ObjectTypeName",
        "ProfileId"
      ],
      "type": "structure"
    },
    "ListProfileObjectsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of ListProfileObject instances.</p>",
          "shape": "ProfileObjectList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous call to ListProfileObjects.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource for which you want to view tags.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ListWorkflowsItem": {
      "documentation": "<p>A workflow in list of workflows.</p>",
      "members": {
        "CreatedAt": {
          "documentation": "<p>Creation timestamp for workflow.</p>",
          "shape": "timestamp"
        },
        "LastUpdatedAt": {
          "documentation": "<p>Last updated timestamp for workflow.</p>",
          "shape": "timestamp"
        },
        "Status": {
          "documentation": "<p>Status of workflow execution.</p>",
          "shape": "Status"
        },
        "StatusDescription": {
          "documentation": "<p>Description for workflow execution status.</p>",
          "shape": "string1To255"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "string1To255"
        },
        "WorkflowType": {
          "documentation": "<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>",
          "shape": "WorkflowType"
        }
      },
      "required": [
        "WorkflowType",
        "WorkflowId",
        "Status",
        "StatusDescription",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "ListWorkflowsRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        },
        "QueryEndDate": {
          "documentation": "<p>Retrieve workflows ended after timestamp.</p>",
          "shape": "timestamp"
        },
        "QueryStartDate": {
          "documentation": "<p>Retrieve workflows started after timestamp.</p>",
          "shape": "timestamp"
        },
        "Status": {
          "documentation": "<p>Status of workflow execution.</p>",
          "shape": "Status"
        },
        "WorkflowType": {
          "documentation": "<p>The type of workflow. The only supported value is APPFLOW_INTEGRATION.</p>",
          "shape": "WorkflowType"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "ListWorkflowsResponse": {
      "members": {
        "Items": {
          "documentation": "<p>List containing workflow details.</p>",
          "shape": "WorkflowList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "MarketoConnectorOperator": {
      "enum": [
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ],
      "type": "string"
    },
    "MarketoSourceProperties": {
      "documentation": "<p>The properties that are applied when Marketo is being used as a source.</p>",
      "members": {
        "Object": {
          "documentation": "<p>The object specified in the Marketo flow source.</p>",
          "shape": "Object"
        }
      },
      "required": [
        "Object"
      ],
      "type": "structure"
    },
    "MatchItem": {
      "documentation": "<p>The Match group object.</p>",
      "members": {
        "ConfidenceScore": {
          "documentation": "<p>A number between 0 and 1, where a higher score means higher similarity. Examining match confidence scores lets you distinguish between groups of similar records in which the system is highly confident (which you may decide to merge), groups of similar records about which the system is uncertain (which you may decide to have reviewed by a human), and groups of similar records that the system deems to be unlikely (which you may decide to reject). Given confidence scores vary as per the data input, it should not be used an absolute measure of matching quality.</p>",
          "shape": "Double"
        },
        "MatchId": {
          "documentation": "<p>The unique identifiers for this group of profiles that match.</p>",
          "shape": "string1To255"
        },
        "ProfileIds": {
          "documentation": "<p>A list of identifiers for profiles that match.</p>",
          "shape": "ProfileIdList"
        }
      },
      "type": "structure"
    },
    "MatchesList": {
      "member": {
        "shape": "MatchItem"
      },
      "type": "list"
    },
    "MatchingAttributes": {
      "max": 20,
      "member": {
        "shape": "string1To255"
      },
      "min": 1,
      "type": "list"
    },
    "MatchingAttributesList": {
      "max": 10,
      "member": {
        "shape": "MatchingAttributes"
      },
      "min": 1,
      "type": "list"
    },
    "MatchingRequest": {
      "documentation": "<p>The flag that enables the matching process of duplicate profiles.</p>",
      "members": {
        "AutoMerging": {
          "documentation": "<p>Configuration information about the auto-merging process.</p>",
          "shape": "AutoMerging"
        },
        "Enabled": {
          "documentation": "<p>The flag that enables the matching process of duplicate profiles.</p>",
          "shape": "optionalBoolean"
        },
        "ExportingConfig": {
          "documentation": "<p>Configuration information for exporting Identity Resolution results, for example, to an S3 bucket.</p>",
          "shape": "ExportingConfig"
        },
        "JobSchedule": {
          "documentation": "<p>The day and time when do you want to start the Identity Resolution Job every week.</p>",
          "shape": "JobSchedule"
        }
      },
      "required": [
        "Enabled"
      ],
      "type": "structure"
    },
    "MatchingResponse": {
      "documentation": "<p>The flag that enables the matching process of duplicate profiles.</p>",
      "members": {
        "AutoMerging": {
          "documentation": "<p>Configuration information about the auto-merging process.</p>",
          "shape": "AutoMerging"
        },
        "Enabled": {
          "documentation": "<p>The flag that enables the matching process of duplicate profiles.</p>",
          "shape": "optionalBoolean"
        },
        "ExportingConfig": {
          "documentation": "<p>Configuration information for exporting Identity Resolution results, for example, to an S3 bucket.</p>",
          "shape": "ExportingConfig"
        },
        "JobSchedule": {
          "documentation": "<p>The day and time when do you want to start the Identity Resolution Job every week.</p>",
          "shape": "JobSchedule"
        }
      },
      "type": "structure"
    },
    "MergeProfilesRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "FieldSourceProfileIds": {
          "documentation": "<p>The identifiers of the fields in the profile that has the information you want to apply to the merge. For example, say you want to merge EmailAddress from Profile1 into MainProfile. This would be the identifier of the EmailAddress field in Profile1. </p>",
          "shape": "FieldSourceProfileIds"
        },
        "MainProfileId": {
          "documentation": "<p>The identifier of the profile to be taken.</p>",
          "shape": "uuid"
        },
        "ProfileIdsToBeMerged": {
          "documentation": "<p>The identifier of the profile to be merged into MainProfileId.</p>",
          "shape": "ProfileIdToBeMergedList"
        }
      },
      "required": [
        "DomainName",
        "MainProfileId",
        "ProfileIdsToBeMerged"
      ],
      "type": "structure"
    },
    "MergeProfilesResponse": {
      "members": {
        "Message": {
          "documentation": "<p>A message that indicates the merge request is complete.</p>",
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "Object": {
      "max": 512,
      "pattern": "\\S+",
      "type": "string"
    },
    "ObjectFilter": {
      "documentation": "<p>The filter applied to ListProfileObjects response to include profile objects with the specified index values. This filter is only supported for ObjectTypeName _asset, _case and _order.</p>",
      "members": {
        "KeyName": {
          "documentation": "<p>A searchable identifier of a standard profile object. The predefined keys you can use to search for _asset include: _assetId, _assetName, _serialNumber. The predefined keys you can use to search for _case include: _caseId. The predefined keys you can use to search for _order include: _orderId.</p>",
          "shape": "name"
        },
        "Values": {
          "documentation": "<p>A list of key values.</p>",
          "shape": "requestValueList"
        }
      },
      "required": [
        "KeyName",
        "Values"
      ],
      "type": "structure"
    },
    "ObjectTypeField": {
      "documentation": "<p>Represents a field in a ProfileObjectType.</p>",
      "members": {
        "ContentType": {
          "documentation": "<p>The content type of the field. Used for determining equality when searching.</p>",
          "shape": "FieldContentType"
        },
        "Source": {
          "documentation": "<p>A field of a ProfileObject. For example: _source.FirstName, where \u201c_source\u201d is a ProfileObjectType of a Zendesk user and \u201cFirstName\u201d is a field in that ObjectType.</p>",
          "shape": "text"
        },
        "Target": {
          "documentation": "<p>The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.</p>",
          "shape": "text"
        }
      },
      "type": "structure"
    },
    "ObjectTypeKey": {
      "documentation": "<p>An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.</p>",
      "members": {
        "FieldNames": {
          "documentation": "<p>The reference for the key name of the fields map.</p>",
          "shape": "FieldNameList"
        },
        "StandardIdentifiers": {
          "documentation": "<p>The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE, ASSET, CASE, or ORDER means that this key can be used to tie an object to a PROFILE, ASSET, CASE, or ORDER respectively. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.</p>",
          "shape": "StandardIdentifierList"
        }
      },
      "type": "structure"
    },
    "ObjectTypeKeyList": {
      "member": {
        "shape": "ObjectTypeKey"
      },
      "type": "list"
    },
    "ObjectTypeNames": {
      "key": {
        "shape": "string1To255"
      },
      "type": "map",
      "value": {
        "shape": "typeName"
      }
    },
    "OperatorPropertiesKeys": {
      "enum": [
        "VALUE",
        "VALUES",
        "DATA_TYPE",
        "UPPER_BOUND",
        "LOWER_BOUND",
        "SOURCE_DATA_TYPE",
        "DESTINATION_DATA_TYPE",
        "VALIDATION_ACTION",
        "MASK_VALUE",
        "MASK_LENGTH",
        "TRUNCATE_LENGTH",
        "MATH_OPERATION_FIELDS_ORDER",
        "CONCAT_FORMAT",
        "SUBFIELD_CATEGORY_MAP"
      ],
      "type": "string"
    },
    "PartyType": {
      "enum": [
        "INDIVIDUAL",
        "BUSINESS",
        "OTHER"
      ],
      "type": "string"
    },
    "Profile": {
      "documentation": "<p>The standard profile of a customer.</p>",
      "members": {
        "AccountNumber": {
          "documentation": "<p>A unique account number that you have given to the customer.</p>",
          "shape": "string1To255"
        },
        "AdditionalInformation": {
          "documentation": "<p>Any additional information relevant to the customer\u2019s profile.</p>",
          "shape": "string1To1000"
        },
        "Address": {
          "documentation": "<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>",
          "shape": "Address"
        },
        "Attributes": {
          "documentation": "<p>A key value pair of attributes of a customer profile.</p>",
          "shape": "Attributes"
        },
        "BillingAddress": {
          "documentation": "<p>The customer\u2019s billing address.</p>",
          "shape": "Address"
        },
        "BirthDate": {
          "documentation": "<p>The customer\u2019s birth date. </p>",
          "shape": "string1To255"
        },
        "BusinessEmailAddress": {
          "documentation": "<p>The customer\u2019s business email address.</p>",
          "shape": "string1To255"
        },
        "BusinessName": {
          "documentation": "<p>The name of the customer\u2019s business.</p>",
          "shape": "string1To255"
        },
        "BusinessPhoneNumber": {
          "documentation": "<p>The customer\u2019s home phone number.</p>",
          "shape": "string1To255"
        },
        "EmailAddress": {
          "documentation": "<p>The customer\u2019s email address, which has not been specified as a personal or business address. </p>",
          "shape": "string1To255"
        },
        "FirstName": {
          "documentation": "<p>The customer\u2019s first name.</p>",
          "shape": "string1To255"
        },
        "Gender": {
          "documentation": "<p>The gender with which the customer identifies. </p>",
          "shape": "Gender"
        },
        "HomePhoneNumber": {
          "documentation": "<p>The customer\u2019s home phone number.</p>",
          "shape": "string1To255"
        },
        "LastName": {
          "documentation": "<p>The customer\u2019s last name.</p>",
          "shape": "string1To255"
        },
        "MailingAddress": {
          "documentation": "<p>The customer\u2019s mailing address.</p>",
          "shape": "Address"
        },
        "MiddleName": {
          "documentation": "<p>The customer\u2019s middle name.</p>",
          "shape": "string1To255"
        },
        "MobilePhoneNumber": {
          "documentation": "<p>The customer\u2019s mobile phone number.</p>",
          "shape": "string1To255"
        },
        "PartyType": {
          "documentation": "<p>The type of profile used to describe the customer.</p>",
          "shape": "PartyType"
        },
        "PersonalEmailAddress": {
          "documentation": "<p>The customer\u2019s personal email address.</p>",
          "shape": "string1To255"
        },
        "PhoneNumber": {
          "documentation": "<p>The customer's phone number, which has not been specified as a mobile, home, or business number.</p>",
          "shape": "string1To255"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        },
        "ShippingAddress": {
          "documentation": "<p>The customer\u2019s shipping address.</p>",
          "shape": "Address"
        }
      },
      "type": "structure"
    },
    "ProfileIdList": {
      "member": {
        "shape": "uuid"
      },
      "type": "list"
    },
    "ProfileIdToBeMergedList": {
      "max": 20,
      "member": {
        "shape": "uuid"
      },
      "min": 1,
      "type": "list"
    },
    "ProfileList": {
      "member": {
        "shape": "Profile"
      },
      "type": "list"
    },
    "ProfileObjectList": {
      "member": {
        "shape": "ListProfileObjectsItem"
      },
      "type": "list"
    },
    "ProfileObjectTypeList": {
      "member": {
        "shape": "ListProfileObjectTypeItem"
      },
      "type": "list"
    },
    "ProfileObjectTypeTemplateList": {
      "member": {
        "shape": "ListProfileObjectTypeTemplateItem"
      },
      "type": "list"
    },
    "Property": {
      "max": 2048,
      "pattern": ".+",
      "type": "string"
    },
    "PutIntegrationRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "FlowDefinition": {
          "documentation": "<p>The configuration that controls how Customer Profiles retrieves data from the source.</p>",
          "shape": "FlowDefinition"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ObjectTypeNames": {
          "documentation": "<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>",
          "shape": "ObjectTypeNames"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "PutIntegrationResponse": {
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "IsUnstructured": {
          "documentation": "<p>Boolean to indicate if the Flow associated with the Integration is created via Appflow console or with ObjectTypeName equals _unstructured via API/CLI in flowDefinition</p>",
          "shape": "optionalBoolean"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "ObjectTypeNames": {
          "documentation": "<p>A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.</p>",
          "shape": "ObjectTypeNames"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "Uri": {
          "documentation": "<p>The URI of the S3 bucket or any other type of data source.</p>",
          "shape": "string1To255"
        },
        "WorkflowId": {
          "documentation": "<p>Unique identifier for the workflow.</p>",
          "shape": "string1To255"
        }
      },
      "required": [
        "DomainName",
        "Uri",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "PutProfileObjectRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "Object": {
          "documentation": "<p>A string that is serialized from a JSON object.</p>",
          "shape": "stringifiedJson"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        }
      },
      "required": [
        "ObjectTypeName",
        "Object",
        "DomainName"
      ],
      "type": "structure"
    },
    "PutProfileObjectResponse": {
      "members": {
        "ProfileObjectUniqueKey": {
          "documentation": "<p>The unique identifier of the profile object generated by the service.</p>",
          "shape": "string1To255"
        }
      },
      "type": "structure"
    },
    "PutProfileObjectTypeRequest": {
      "members": {
        "AllowProfileCreation": {
          "documentation": "<p>Indicates whether a profile should be created when data is received if one doesn\u2019t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>",
          "shape": "boolean"
        },
        "Description": {
          "documentation": "<p>Description of the profile object type.</p>",
          "shape": "text"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "EncryptionKey": {
          "documentation": "<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>",
          "shape": "encryptionKey"
        },
        "ExpirationDays": {
          "documentation": "<p>The number of days until the data in the object expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "Fields": {
          "documentation": "<p>A map of the name and ObjectType field.</p>",
          "shape": "FieldMap"
        },
        "Keys": {
          "documentation": "<p>A list of unique keys that can be used to map data to the profile.</p>",
          "shape": "KeyMap"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "location": "uri",
          "locationName": "ObjectTypeName",
          "shape": "typeName"
        },
        "SourceLastUpdatedTimestampFormat": {
          "documentation": "<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up. </p>",
          "shape": "string1To255"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template. For some attributes in the request, the service will use the default value from the object template when TemplateId is present. If these attributes are present in the request, the service may return a <code>BadRequestException</code>. These attributes include: AllowProfileCreation, SourceLastUpdatedTimestampFormat, Fields, and Keys. For example, if AllowProfileCreation is set to true when TemplateId is set, the service may return a <code>BadRequestException</code>.</p>",
          "shape": "name"
        }
      },
      "required": [
        "DomainName",
        "ObjectTypeName",
        "Description"
      ],
      "type": "structure"
    },
    "PutProfileObjectTypeResponse": {
      "members": {
        "AllowProfileCreation": {
          "documentation": "<p>Indicates whether a profile should be created when data is received if one doesn\u2019t exist for an object of this type. The default is <code>FALSE</code>. If the AllowProfileCreation flag is set to <code>FALSE</code>, then the service tries to fetch a standard profile and associate this object with the profile. If it is set to <code>TRUE</code>, and if no match is found, then the service creates a new standard profile.</p>",
          "shape": "boolean"
        },
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "Description": {
          "documentation": "<p>Description of the profile object type.</p>",
          "shape": "text"
        },
        "EncryptionKey": {
          "documentation": "<p>The customer-provided key to encrypt the profile object that will be created in this profile object type.</p>",
          "shape": "encryptionKey"
        },
        "ExpirationDays": {
          "documentation": "<p>The number of days until the data in the object expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "Fields": {
          "documentation": "<p>A map of the name and ObjectType field.</p>",
          "shape": "FieldMap"
        },
        "Keys": {
          "documentation": "<p>A list of unique keys that can be used to map data to the profile.</p>",
          "shape": "KeyMap"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "ObjectTypeName": {
          "documentation": "<p>The name of the profile object type.</p>",
          "shape": "typeName"
        },
        "SourceLastUpdatedTimestampFormat": {
          "documentation": "<p>The format of your <code>sourceLastUpdatedTimestamp</code> that was previously set up in fields that were parsed using <a href=\"https://docs.oracle.com/javase/10/docs/api/java/text/SimpleDateFormat.html\">SimpleDateFormat</a>. If you have <code>sourceLastUpdatedTimestamp</code> in your field, you must set up <code>sourceLastUpdatedTimestampFormat</code>.</p>",
          "shape": "string1To255"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        },
        "TemplateId": {
          "documentation": "<p>A unique identifier for the object template.</p>",
          "shape": "name"
        }
      },
      "required": [
        "ObjectTypeName",
        "Description"
      ],
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The requested resource does not exist, or access was denied.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "max": 512,
      "pattern": "arn:aws:iam:.*:[0-9]+:.*",
      "type": "string"
    },
    "S3ConnectorOperator": {
      "enum": [
        "PROJECTION",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ],
      "type": "string"
    },
    "S3ExportingConfig": {
      "documentation": "<p>Configuration information about the S3 bucket where Identity Resolution Jobs write result files.</p>",
      "members": {
        "S3BucketName": {
          "documentation": "<p>The name of the S3 bucket where Identity Resolution Jobs write result files.</p>",
          "shape": "s3BucketName"
        },
        "S3KeyName": {
          "documentation": "<p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>",
          "shape": "s3KeyNameCustomerOutputConfig"
        }
      },
      "required": [
        "S3BucketName"
      ],
      "type": "structure"
    },
    "S3ExportingLocation": {
      "documentation": "<p>The S3 location where Identity Resolution Jobs write result files.</p>",
      "members": {
        "S3BucketName": {
          "documentation": "<p>The name of the S3 bucket name where Identity Resolution Jobs write result files.</p>",
          "shape": "s3BucketName"
        },
        "S3KeyName": {
          "documentation": "<p>The S3 key name of the location where Identity Resolution Jobs write result files.</p>",
          "shape": "s3KeyName"
        }
      },
      "type": "structure"
    },
    "S3SourceProperties": {
      "documentation": "<p>The properties that are applied when Amazon S3 is being used as the flow source.</p>",
      "members": {
        "BucketName": {
          "documentation": "<p>The Amazon S3 bucket name where the source files are stored.</p>",
          "shape": "BucketName"
        },
        "BucketPrefix": {
          "documentation": "<p>The object key for the Amazon S3 bucket in which the source files are stored.</p>",
          "shape": "BucketPrefix"
        }
      },
      "required": [
        "BucketName"
      ],
      "type": "structure"
    },
    "SalesforceConnectorOperator": {
      "enum": [
        "PROJECTION",
        "LESS_THAN",
        "CONTAINS",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ],
      "type": "string"
    },
    "SalesforceSourceProperties": {
      "documentation": "<p>The properties that are applied when Salesforce is being used as a source.</p>",
      "members": {
        "EnableDynamicFieldUpdate": {
          "documentation": "<p>The flag that enables dynamic fetching of new (recently added) fields in the Salesforce objects while running a flow.</p>",
          "shape": "boolean"
        },
        "IncludeDeletedRecords": {
          "documentation": "<p>Indicates whether Amazon AppFlow includes deleted files in the flow run.</p>",
          "shape": "boolean"
        },
        "Object": {
          "documentation": "<p>The object specified in the Salesforce flow source.</p>",
          "shape": "Object"
        }
      },
      "required": [
        "Object"
      ],
      "type": "structure"
    },
    "ScheduleExpression": {
      "max": 256,
      "pattern": ".*",
      "type": "string"
    },
    "ScheduleOffset": {
      "max": 36000,
      "min": 0,
      "type": "long"
    },
    "ScheduledTriggerProperties": {
      "documentation": "<p>Specifies the configuration details of a scheduled-trigger flow that you define. Currently, these settings only apply to the scheduled-trigger type.</p>",
      "members": {
        "DataPullMode": {
          "documentation": "<p>Specifies whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run.</p>",
          "shape": "DataPullMode"
        },
        "FirstExecutionFrom": {
          "documentation": "<p>Specifies the date range for the records to import from the connector in the first flow run.</p>",
          "shape": "Date"
        },
        "ScheduleEndTime": {
          "documentation": "<p>Specifies the scheduled end time for a scheduled-trigger flow.</p>",
          "shape": "Date"
        },
        "ScheduleExpression": {
          "documentation": "<p>The scheduling expression that determines the rate at which the schedule will run, for example rate (5 minutes).</p>",
          "shape": "ScheduleExpression"
        },
        "ScheduleOffset": {
          "box": true,
          "documentation": "<p>Specifies the optional offset that is added to the time interval for a schedule-triggered flow.</p>",
          "shape": "ScheduleOffset"
        },
        "ScheduleStartTime": {
          "documentation": "<p>Specifies the scheduled start time for a scheduled-trigger flow.</p>",
          "shape": "Date"
        },
        "Timezone": {
          "documentation": "<p>Specifies the time zone used when referring to the date and time of a scheduled-triggered flow, such as America/New_York.</p>",
          "shape": "Timezone"
        }
      },
      "required": [
        "ScheduleExpression"
      ],
      "type": "structure"
    },
    "SearchProfilesRequest": {
      "members": {
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "KeyName": {
          "documentation": "<p>A searchable identifier of a customer profile. The predefined keys you can use to search include: _account, _profileId, _assetId, _caseId, _orderId, _fullName, _phone, _email, _ctrContactId, _marketoLeadId, _salesforceAccountId, _salesforceContactId, _salesforceAssetId, _zendeskUserId, _zendeskExternalId, _zendeskTicketId, _serviceNowSystemId, _serviceNowIncidentId, _segmentUserId, _shopifyCustomerId, _shopifyOrderId.</p>",
          "shape": "name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of objects returned per page.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "maxSize100"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous SearchProfiles API call.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "token"
        },
        "Values": {
          "documentation": "<p>A list of key values.</p>",
          "shape": "requestValueList"
        }
      },
      "required": [
        "DomainName",
        "KeyName",
        "Values"
      ],
      "type": "structure"
    },
    "SearchProfilesResponse": {
      "members": {
        "Items": {
          "documentation": "<p>The list of SearchProfiles instances.</p>",
          "shape": "ProfileList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token from the previous SearchProfiles API call.</p>",
          "shape": "token"
        }
      },
      "type": "structure"
    },
    "ServiceNowConnectorOperator": {
      "enum": [
        "PROJECTION",
        "CONTAINS",
        "LESS_THAN",
        "GREATER_THAN",
        "BETWEEN",
        "LESS_THAN_OR_EQUAL_TO",
        "GREATER_THAN_OR_EQUAL_TO",
        "EQUAL_TO",
        "NOT_EQUAL_TO",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ],
      "type": "string"
    },
    "ServiceNowSourceProperties": {
      "documentation": "<p>The properties that are applied when ServiceNow is being used as a source.</p>",
      "members": {
        "Object": {
          "documentation": "<p>The object specified in the ServiceNow flow source.</p>",
          "shape": "Object"
        }
      },
      "required": [
        "Object"
      ],
      "type": "structure"
    },
    "SourceConnectorProperties": {
      "documentation": "<p>Specifies the information that is required to query a particular Amazon AppFlow connector. Customer Profiles supports Salesforce, Zendesk, Marketo, ServiceNow and Amazon S3.</p>",
      "members": {
        "Marketo": {
          "documentation": "<p>The properties that are applied when Marketo is being used as a source.</p>",
          "shape": "MarketoSourceProperties"
        },
        "S3": {
          "documentation": "<p>The properties that are applied when Amazon S3 is being used as the flow source.</p>",
          "shape": "S3SourceProperties"
        },
        "Salesforce": {
          "documentation": "<p>The properties that are applied when Salesforce is being used as a source.</p>",
          "shape": "SalesforceSourceProperties"
        },
        "ServiceNow": {
          "documentation": "<p>The properties that are applied when ServiceNow is being used as a source.</p>",
          "shape": "ServiceNowSourceProperties"
        },
        "Zendesk": {
          "documentation": "<p>The properties that are applied when using Zendesk as a flow source.</p>",
          "shape": "ZendeskSourceProperties"
        }
      },
      "type": "structure"
    },
    "SourceConnectorType": {
      "enum": [
        "Salesforce",
        "Marketo",
        "Zendesk",
        "Servicenow",
        "S3"
      ],
      "type": "string"
    },
    "SourceFields": {
      "member": {
        "shape": "stringTo2048"
      },
      "type": "list"
    },
    "SourceFlowConfig": {
      "documentation": "<p>Contains information about the configuration of the source connector used in the flow.</p>",
      "members": {
        "ConnectorProfileName": {
          "documentation": "<p>The name of the AppFlow connector profile. This name must be unique for each connector profile in the AWS account.</p>",
          "shape": "ConnectorProfileName"
        },
        "ConnectorType": {
          "documentation": "<p>The type of connector, such as Salesforce, Marketo, and so on.</p>",
          "shape": "SourceConnectorType"
        },
        "IncrementalPullConfig": {
          "documentation": "<p>Defines the configuration for a scheduled incremental data pull. If a valid configuration is provided, the fields specified in the configuration are used when querying for the incremental data pull.</p>",
          "shape": "IncrementalPullConfig"
        },
        "SourceConnectorProperties": {
          "documentation": "<p>Specifies the information that is required to query a particular source connector.</p>",
          "shape": "SourceConnectorProperties"
        }
      },
      "required": [
        "ConnectorType",
        "SourceConnectorProperties"
      ],
      "type": "structure"
    },
    "StandardIdentifier": {
      "enum": [
        "PROFILE",
        "ASSET",
        "CASE",
        "UNIQUE",
        "SECONDARY",
        "LOOKUP_ONLY",
        "NEW_ONLY",
        "ORDER"
      ],
      "type": "string"
    },
    "StandardIdentifierList": {
      "member": {
        "shape": "StandardIdentifier"
      },
      "type": "list"
    },
    "Status": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "COMPLETE",
        "FAILED",
        "SPLIT",
        "RETRY",
        "CANCELLED"
      ],
      "type": "string"
    },
    "TagArn": {
      "max": 256,
      "pattern": "^arn:[a-z0-9]{1,10}:profile",
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource that you're adding tags to.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        },
        "tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "Task": {
      "documentation": "<p>A class for modeling different type of tasks. Task implementation varies based on the TaskType.</p>",
      "members": {
        "ConnectorOperator": {
          "documentation": "<p>The operation to be performed on the provided source fields.</p>",
          "shape": "ConnectorOperator"
        },
        "DestinationField": {
          "documentation": "<p>A field in a destination connector, or a field value against which Amazon AppFlow validates a source field.</p>",
          "shape": "DestinationField"
        },
        "SourceFields": {
          "documentation": "<p>The source fields to which a particular task is applied.</p>",
          "shape": "SourceFields"
        },
        "TaskProperties": {
          "documentation": "<p>A map used to store task-related information. The service looks for particular information based on the TaskType.</p>",
          "shape": "TaskPropertiesMap"
        },
        "TaskType": {
          "documentation": "<p>Specifies the particular task implementation that Amazon AppFlow performs.</p>",
          "shape": "TaskType"
        }
      },
      "required": [
        "SourceFields",
        "TaskType"
      ],
      "type": "structure"
    },
    "TaskPropertiesMap": {
      "key": {
        "shape": "OperatorPropertiesKeys"
      },
      "type": "map",
      "value": {
        "shape": "Property"
      }
    },
    "TaskType": {
      "enum": [
        "Arithmetic",
        "Filter",
        "Map",
        "Mask",
        "Merge",
        "Truncate",
        "Validate"
      ],
      "type": "string"
    },
    "Tasks": {
      "member": {
        "shape": "Task"
      },
      "type": "list"
    },
    "ThrottlingException": {
      "documentation": "<p>You exceeded the maximum number of requests.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "message"
        }
      },
      "type": "structure"
    },
    "Timezone": {
      "max": 256,
      "pattern": ".*",
      "type": "string"
    },
    "TriggerConfig": {
      "documentation": "<p>The trigger settings that determine how and when Amazon AppFlow runs the specified flow.</p>",
      "members": {
        "TriggerProperties": {
          "documentation": "<p>Specifies the configuration details of a schedule-triggered flow that you define. Currently, these settings only apply to the Scheduled trigger type.</p>",
          "shape": "TriggerProperties"
        },
        "TriggerType": {
          "documentation": "<p>Specifies the type of flow trigger. It can be OnDemand, Scheduled, or Event.</p>",
          "shape": "TriggerType"
        }
      },
      "required": [
        "TriggerType"
      ],
      "type": "structure"
    },
    "TriggerProperties": {
      "documentation": "<p>Specifies the configuration details that control the trigger for a flow. Currently, these settings only apply to the Scheduled trigger type.</p>",
      "members": {
        "Scheduled": {
          "documentation": "<p>Specifies the configuration details of a schedule-triggered flow that you define.</p>",
          "shape": "ScheduledTriggerProperties"
        }
      },
      "type": "structure"
    },
    "TriggerType": {
      "enum": [
        "Scheduled",
        "Event",
        "OnDemand"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource from which you are removing tags.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "TagArn"
        },
        "tagKeys": {
          "documentation": "<p>The list of tag keys to remove from the resource.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAddress": {
      "documentation": "<p>Updates associated with the address properties of a customer profile.</p>",
      "members": {
        "Address1": {
          "documentation": "<p>The first line of a customer address.</p>",
          "shape": "string0To255"
        },
        "Address2": {
          "documentation": "<p>The second line of a customer address.</p>",
          "shape": "string0To255"
        },
        "Address3": {
          "documentation": "<p>The third line of a customer address.</p>",
          "shape": "string0To255"
        },
        "Address4": {
          "documentation": "<p>The fourth line of a customer address.</p>",
          "shape": "string0To255"
        },
        "City": {
          "documentation": "<p>The city in which a customer lives.</p>",
          "shape": "string0To255"
        },
        "Country": {
          "documentation": "<p>The country in which a customer lives.</p>",
          "shape": "string0To255"
        },
        "County": {
          "documentation": "<p>The county in which a customer lives.</p>",
          "shape": "string0To255"
        },
        "PostalCode": {
          "documentation": "<p>The postal code of a customer address.</p>",
          "shape": "string0To255"
        },
        "Province": {
          "documentation": "<p>The province in which a customer lives.</p>",
          "shape": "string0To255"
        },
        "State": {
          "documentation": "<p>The state in which a customer lives.</p>",
          "shape": "string0To255"
        }
      },
      "type": "structure"
    },
    "UpdateAttributes": {
      "key": {
        "shape": "string1To255"
      },
      "type": "map",
      "value": {
        "shape": "string0To255"
      }
    },
    "UpdateDomainRequest": {
      "members": {
        "DeadLetterQueueUrl": {
          "documentation": "<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.</p>",
          "shape": "sqsQueueUrl"
        },
        "DefaultEncryptionKey": {
          "documentation": "<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value.</p>",
          "shape": "encryptionKey"
        },
        "DefaultExpirationDays": {
          "documentation": "<p>The default number of days until the data within the domain expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "Matching": {
          "documentation": "<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>",
          "shape": "MatchingRequest"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName"
      ],
      "type": "structure"
    },
    "UpdateDomainResponse": {
      "members": {
        "CreatedAt": {
          "documentation": "<p>The timestamp of when the domain was created.</p>",
          "shape": "timestamp"
        },
        "DeadLetterQueueUrl": {
          "documentation": "<p>The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.</p>",
          "shape": "sqsQueueUrl"
        },
        "DefaultEncryptionKey": {
          "documentation": "<p>The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.</p>",
          "shape": "encryptionKey"
        },
        "DefaultExpirationDays": {
          "documentation": "<p>The default number of days until the data within the domain expires.</p>",
          "shape": "expirationDaysInteger"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "shape": "name"
        },
        "LastUpdatedAt": {
          "documentation": "<p>The timestamp of when the domain was most recently edited.</p>",
          "shape": "timestamp"
        },
        "Matching": {
          "documentation": "<p>The process of matching duplicate profiles. If <code>Matching</code> = <code>true</code>, Amazon Connect Customer Profiles starts a weekly batch process called Identity Resolution Job. If you do not specify a date and time for Identity Resolution Job to run, by default it runs every Saturday at 12AM UTC to detect duplicate profiles in your domains. </p> <p>After the Identity Resolution Job completes, use the <a href=\"https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html\">GetMatches</a> API to return and review the results. Or, if you have configured <code>ExportingConfig</code> in the <code>MatchingRequest</code>, you can download the results from S3.</p>",
          "shape": "MatchingResponse"
        },
        "Tags": {
          "documentation": "<p>The tags used to organize, track, or control access for this resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "DomainName",
        "CreatedAt",
        "LastUpdatedAt"
      ],
      "type": "structure"
    },
    "UpdateProfileRequest": {
      "members": {
        "AccountNumber": {
          "documentation": "<p>A unique account number that you have given to the customer.</p>",
          "shape": "string0To255"
        },
        "AdditionalInformation": {
          "documentation": "<p>Any additional information relevant to the customer\u2019s profile.</p>",
          "shape": "string0To1000"
        },
        "Address": {
          "documentation": "<p>A generic address associated with the customer that is not mailing, shipping, or billing.</p>",
          "shape": "UpdateAddress"
        },
        "Attributes": {
          "documentation": "<p>A key value pair of attributes of a customer profile.</p>",
          "shape": "UpdateAttributes"
        },
        "BillingAddress": {
          "documentation": "<p>The customer\u2019s billing address.</p>",
          "shape": "UpdateAddress"
        },
        "BirthDate": {
          "documentation": "<p>The customer\u2019s birth date. </p>",
          "shape": "string0To255"
        },
        "BusinessEmailAddress": {
          "documentation": "<p>The customer\u2019s business email address.</p>",
          "shape": "string0To255"
        },
        "BusinessName": {
          "documentation": "<p>The name of the customer\u2019s business.</p>",
          "shape": "string0To255"
        },
        "BusinessPhoneNumber": {
          "documentation": "<p>The customer\u2019s business phone number.</p>",
          "shape": "string0To255"
        },
        "DomainName": {
          "documentation": "<p>The unique name of the domain.</p>",
          "location": "uri",
          "locationName": "DomainName",
          "shape": "name"
        },
        "EmailAddress": {
          "documentation": "<p>The customer\u2019s email address, which has not been specified as a personal or business address. </p>",
          "shape": "string0To255"
        },
        "FirstName": {
          "documentation": "<p>The customer\u2019s first name.</p>",
          "shape": "string0To255"
        },
        "Gender": {
          "documentation": "<p>The gender with which the customer identifies. </p>",
          "shape": "Gender"
        },
        "HomePhoneNumber": {
          "documentation": "<p>The customer\u2019s home phone number.</p>",
          "shape": "string0To255"
        },
        "LastName": {
          "documentation": "<p>The customer\u2019s last name.</p>",
          "shape": "string0To255"
        },
        "MailingAddress": {
          "documentation": "<p>The customer\u2019s mailing address.</p>",
          "shape": "UpdateAddress"
        },
        "MiddleName": {
          "documentation": "<p>The customer\u2019s middle name.</p>",
          "shape": "string0To255"
        },
        "MobilePhoneNumber": {
          "documentation": "<p>The customer\u2019s mobile phone number.</p>",
          "shape": "string0To255"
        },
        "PartyType": {
          "documentation": "<p>The type of profile used to describe the customer.</p>",
          "shape": "PartyType"
        },
        "PersonalEmailAddress": {
          "documentation": "<p>The customer\u2019s personal email address.</p>",
          "shape": "string0To255"
        },
        "PhoneNumber": {
          "documentation": "<p>The customer\u2019s phone number, which has not been specified as a mobile, home, or business number. </p>",
          "shape": "string0To255"
        },
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        },
        "ShippingAddress": {
          "documentation": "<p>The customer\u2019s shipping address.</p>",
          "shape": "UpdateAddress"
        }
      },
      "required": [
        "DomainName",
        "ProfileId"
      ],
      "type": "structure"
    },
    "UpdateProfileResponse": {
      "members": {
        "ProfileId": {
          "documentation": "<p>The unique identifier of a customer profile.</p>",
          "shape": "uuid"
        }
      },
      "required": [
        "ProfileId"
      ],
      "type": "structure"
    },
    "WorkflowAttributes": {
      "documentation": "<p>Structure to hold workflow attributes.</p>",
      "members": {
        "AppflowIntegration": {
          "documentation": "<p>Workflow attributes specific to <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "AppflowIntegrationWorkflowAttributes"
        }
      },
      "type": "structure"
    },
    "WorkflowList": {
      "member": {
        "shape": "ListWorkflowsItem"
      },
      "type": "list"
    },
    "WorkflowMetrics": {
      "documentation": "<p>Generic object containing workflow execution metrics.</p>",
      "members": {
        "AppflowIntegration": {
          "documentation": "<p>Workflow execution metrics for <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "AppflowIntegrationWorkflowMetrics"
        }
      },
      "type": "structure"
    },
    "WorkflowStepItem": {
      "documentation": "<p>List containing steps in workflow.</p>",
      "members": {
        "AppflowIntegration": {
          "documentation": "<p>Workflow step information specific to <code>APPFLOW_INTEGRATION</code> workflow.</p>",
          "shape": "AppflowIntegrationWorkflowStep"
        }
      },
      "type": "structure"
    },
    "WorkflowStepsList": {
      "member": {
        "shape": "WorkflowStepItem"
      },
      "type": "list"
    },
    "WorkflowType": {
      "enum": [
        "APPFLOW_INTEGRATION"
      ],
      "type": "string"
    },
    "ZendeskConnectorOperator": {
      "enum": [
        "PROJECTION",
        "GREATER_THAN",
        "ADDITION",
        "MULTIPLICATION",
        "DIVISION",
        "SUBTRACTION",
        "MASK_ALL",
        "MASK_FIRST_N",
        "MASK_LAST_N",
        "VALIDATE_NON_NULL",
        "VALIDATE_NON_ZERO",
        "VALIDATE_NON_NEGATIVE",
        "VALIDATE_NUMERIC",
        "NO_OP"
      ],
      "type": "string"
    },
    "ZendeskSourceProperties": {
      "documentation": "<p>The properties that are applied when using Zendesk as a flow source.</p>",
      "members": {
        "Object": {
          "documentation": "<p>The object specified in the Zendesk flow source.</p>",
          "shape": "Object"
        }
      },
      "required": [
        "Object"
      ],
      "type": "structure"
    },
    "boolean": {
      "type": "boolean"
    },
    "encryptionKey": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "expirationDaysInteger": {
      "max": 1098,
      "min": 1,
      "type": "integer"
    },
    "long": {
      "type": "long"
    },
    "matchesNumber": {
      "min": 0,
      "type": "integer"
    },
    "maxSize100": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "message": {
      "type": "string"
    },
    "name": {
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9_-]+$",
      "type": "string"
    },
    "optionalBoolean": {
      "type": "boolean"
    },
    "requestValueList": {
      "member": {
        "shape": "string1To255"
      },
      "type": "list"
    },
    "s3BucketName": {
      "max": 63,
      "min": 3,
      "pattern": "^[a-z0-9.-]+$",
      "type": "string"
    },
    "s3KeyName": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "s3KeyNameCustomerOutputConfig": {
      "max": 800,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "sqsQueueUrl": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "string0To1000": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "string0To255": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "string1To1000": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "string1To255": {
      "max": 255,
      "min": 1,
      "type": "string"
    },
    "stringTo2048": {
      "max": 2048,
      "pattern": ".*",
      "type": "string"
    },
    "stringifiedJson": {
      "max": 256000,
      "min": 1,
      "type": "string"
    },
    "text": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "timestamp": {
      "type": "timestamp"
    },
    "token": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "typeName": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
      "type": "string"
    },
    "uuid": {
      "pattern": "[a-f0-9]{32}",
      "type": "string"
    }
  },
  "version": "2.0"
}
