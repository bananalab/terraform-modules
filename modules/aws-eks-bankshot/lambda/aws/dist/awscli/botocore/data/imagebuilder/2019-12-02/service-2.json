{
  "documentation": "<p>EC2 Image Builder is a fully managed Amazon Web Services service that makes it easier to automate the creation, management, and deployment of customized, secure, and up-to-date \"golden\" server images that are pre-installed and pre-configured with software and settings to meet specific IT standards.</p>",
  "metadata": {
    "apiVersion": "2019-12-02",
    "endpointPrefix": "imagebuilder",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "imagebuilder",
    "serviceFullName": "EC2 Image Builder",
    "serviceId": "imagebuilder",
    "signatureVersion": "v4",
    "signingName": "imagebuilder",
    "uid": "imagebuilder-2019-12-02"
  },
  "operations": {
    "CancelImageCreation": {
      "documentation": "<p>CancelImageCreation cancels the creation of Image. This operation can only be used on images in a non-terminal state.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CancelImageCreation"
      },
      "input": {
        "shape": "CancelImageCreationRequest"
      },
      "name": "CancelImageCreation",
      "output": {
        "shape": "CancelImageCreationResponse"
      }
    },
    "CreateComponent": {
      "documentation": "<p>Creates a new component that can be used to build, validate, test, and assess your image. The component is based on a YAML document that you specify using exactly one of the following methods:</p> <ul> <li> <p>Inline, using the <code>data</code> property in the request body.</p> </li> <li> <p>A URL that points to a YAML document file stored in Amazon S3, using the <code>uri</code> property in the request body.</p> </li> </ul>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "InvalidVersionNumberException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "InvalidParameterCombinationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateComponent"
      },
      "input": {
        "shape": "CreateComponentRequest"
      },
      "name": "CreateComponent",
      "output": {
        "shape": "CreateComponentResponse"
      }
    },
    "CreateContainerRecipe": {
      "documentation": "<p>Creates a new container recipe. Container recipes define how images are configured, tested, and assessed.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "InvalidVersionNumberException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateContainerRecipe"
      },
      "input": {
        "shape": "CreateContainerRecipeRequest"
      },
      "name": "CreateContainerRecipe",
      "output": {
        "shape": "CreateContainerRecipeResponse"
      }
    },
    "CreateDistributionConfiguration": {
      "documentation": "<p>Creates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidParameterCombinationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateDistributionConfiguration"
      },
      "input": {
        "shape": "CreateDistributionConfigurationRequest"
      },
      "name": "CreateDistributionConfiguration",
      "output": {
        "shape": "CreateDistributionConfigurationResponse"
      }
    },
    "CreateImage": {
      "documentation": "<p> Creates a new image. This request will create a new image along with all of the configured output resources defined in the distribution configuration. You must specify exactly one recipe for your image, using either a ContainerRecipeArn or an ImageRecipeArn.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateImage"
      },
      "input": {
        "shape": "CreateImageRequest"
      },
      "name": "CreateImage",
      "output": {
        "shape": "CreateImageResponse"
      }
    },
    "CreateImagePipeline": {
      "documentation": "<p> Creates a new image pipeline. Image pipelines enable you to automate the creation and distribution of images.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateImagePipeline"
      },
      "input": {
        "shape": "CreateImagePipelineRequest"
      },
      "name": "CreateImagePipeline",
      "output": {
        "shape": "CreateImagePipelineResponse"
      }
    },
    "CreateImageRecipe": {
      "documentation": "<p> Creates a new image recipe. Image recipes define how images are configured, tested, and assessed.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "InvalidVersionNumberException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateImageRecipe"
      },
      "input": {
        "shape": "CreateImageRecipeRequest"
      },
      "name": "CreateImageRecipe",
      "output": {
        "shape": "CreateImageRecipeResponse"
      }
    },
    "CreateInfrastructureConfiguration": {
      "documentation": "<p> Creates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/CreateInfrastructureConfiguration"
      },
      "input": {
        "shape": "CreateInfrastructureConfigurationRequest"
      },
      "name": "CreateInfrastructureConfiguration",
      "output": {
        "shape": "CreateInfrastructureConfigurationResponse"
      }
    },
    "DeleteComponent": {
      "documentation": "<p> Deletes a component build version.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteComponent"
      },
      "input": {
        "shape": "DeleteComponentRequest"
      },
      "name": "DeleteComponent",
      "output": {
        "shape": "DeleteComponentResponse"
      }
    },
    "DeleteContainerRecipe": {
      "documentation": "<p>Deletes a container recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteContainerRecipe"
      },
      "input": {
        "shape": "DeleteContainerRecipeRequest"
      },
      "name": "DeleteContainerRecipe",
      "output": {
        "shape": "DeleteContainerRecipeResponse"
      }
    },
    "DeleteDistributionConfiguration": {
      "documentation": "<p> Deletes a distribution configuration.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteDistributionConfiguration"
      },
      "input": {
        "shape": "DeleteDistributionConfigurationRequest"
      },
      "name": "DeleteDistributionConfiguration",
      "output": {
        "shape": "DeleteDistributionConfigurationResponse"
      }
    },
    "DeleteImage": {
      "documentation": "<p>Deletes an Image Builder image resource. This does not delete any EC2 AMIs or ECR container images that are created during the image build process. You must clean those up separately, using the appropriate Amazon EC2 or Amazon ECR console actions, or API or CLI commands.</p> <ul> <li> <p>To deregister an EC2 Linux AMI, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/deregister-ami.html\">Deregister your Linux AMI</a> in the <i> <i>Amazon EC2 User Guide</i> </i>.</p> </li> <li> <p>To deregister an EC2 Windows AMI, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/deregister-ami.html\">Deregister your Windows AMI</a> in the <i> <i>Amazon EC2 Windows Guide</i> </i>.</p> </li> <li> <p>To delete a container image from Amazon ECR, see <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/delete_image.html\">Deleting an image</a> in the <i>Amazon ECR User Guide</i>.</p> </li> </ul>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteImage"
      },
      "input": {
        "shape": "DeleteImageRequest"
      },
      "name": "DeleteImage",
      "output": {
        "shape": "DeleteImageResponse"
      }
    },
    "DeleteImagePipeline": {
      "documentation": "<p> Deletes an image pipeline.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteImagePipeline"
      },
      "input": {
        "shape": "DeleteImagePipelineRequest"
      },
      "name": "DeleteImagePipeline",
      "output": {
        "shape": "DeleteImagePipelineResponse"
      }
    },
    "DeleteImageRecipe": {
      "documentation": "<p> Deletes an image recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteImageRecipe"
      },
      "input": {
        "shape": "DeleteImageRecipeRequest"
      },
      "name": "DeleteImageRecipe",
      "output": {
        "shape": "DeleteImageRecipeResponse"
      }
    },
    "DeleteInfrastructureConfiguration": {
      "documentation": "<p> Deletes an infrastructure configuration.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceDependencyException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/DeleteInfrastructureConfiguration"
      },
      "input": {
        "shape": "DeleteInfrastructureConfigurationRequest"
      },
      "name": "DeleteInfrastructureConfiguration",
      "output": {
        "shape": "DeleteInfrastructureConfigurationResponse"
      }
    },
    "GetComponent": {
      "documentation": "<p> Gets a component object.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetComponent"
      },
      "input": {
        "shape": "GetComponentRequest"
      },
      "name": "GetComponent",
      "output": {
        "shape": "GetComponentResponse"
      }
    },
    "GetComponentPolicy": {
      "documentation": "<p> Gets a component policy.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetComponentPolicy"
      },
      "input": {
        "shape": "GetComponentPolicyRequest"
      },
      "name": "GetComponentPolicy",
      "output": {
        "shape": "GetComponentPolicyResponse"
      }
    },
    "GetContainerRecipe": {
      "documentation": "<p>Retrieves a container recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetContainerRecipe"
      },
      "input": {
        "shape": "GetContainerRecipeRequest"
      },
      "name": "GetContainerRecipe",
      "output": {
        "shape": "GetContainerRecipeResponse"
      }
    },
    "GetContainerRecipePolicy": {
      "documentation": "<p>Retrieves the policy for a container recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetContainerRecipePolicy"
      },
      "input": {
        "shape": "GetContainerRecipePolicyRequest"
      },
      "name": "GetContainerRecipePolicy",
      "output": {
        "shape": "GetContainerRecipePolicyResponse"
      }
    },
    "GetDistributionConfiguration": {
      "documentation": "<p> Gets a distribution configuration.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetDistributionConfiguration"
      },
      "input": {
        "shape": "GetDistributionConfigurationRequest"
      },
      "name": "GetDistributionConfiguration",
      "output": {
        "shape": "GetDistributionConfigurationResponse"
      }
    },
    "GetImage": {
      "documentation": "<p> Gets an image.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetImage"
      },
      "input": {
        "shape": "GetImageRequest"
      },
      "name": "GetImage",
      "output": {
        "shape": "GetImageResponse"
      }
    },
    "GetImagePipeline": {
      "documentation": "<p> Gets an image pipeline.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetImagePipeline"
      },
      "input": {
        "shape": "GetImagePipelineRequest"
      },
      "name": "GetImagePipeline",
      "output": {
        "shape": "GetImagePipelineResponse"
      }
    },
    "GetImagePolicy": {
      "documentation": "<p> Gets an image policy.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetImagePolicy"
      },
      "input": {
        "shape": "GetImagePolicyRequest"
      },
      "name": "GetImagePolicy",
      "output": {
        "shape": "GetImagePolicyResponse"
      }
    },
    "GetImageRecipe": {
      "documentation": "<p> Gets an image recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetImageRecipe"
      },
      "input": {
        "shape": "GetImageRecipeRequest"
      },
      "name": "GetImageRecipe",
      "output": {
        "shape": "GetImageRecipeResponse"
      }
    },
    "GetImageRecipePolicy": {
      "documentation": "<p> Gets an image recipe policy.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetImageRecipePolicy"
      },
      "input": {
        "shape": "GetImageRecipePolicyRequest"
      },
      "name": "GetImageRecipePolicy",
      "output": {
        "shape": "GetImageRecipePolicyResponse"
      }
    },
    "GetInfrastructureConfiguration": {
      "documentation": "<p> Gets an infrastructure configuration.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/GetInfrastructureConfiguration"
      },
      "input": {
        "shape": "GetInfrastructureConfigurationRequest"
      },
      "name": "GetInfrastructureConfiguration",
      "output": {
        "shape": "GetInfrastructureConfigurationResponse"
      }
    },
    "ImportComponent": {
      "documentation": "<p>Imports a component and transforms its data into a component document.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "InvalidVersionNumberException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "InvalidParameterCombinationException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/ImportComponent"
      },
      "input": {
        "shape": "ImportComponentRequest"
      },
      "name": "ImportComponent",
      "output": {
        "shape": "ImportComponentResponse"
      }
    },
    "ImportVmImage": {
      "documentation": "<p>When you export your virtual machine (VM) from its virtualization environment, that process creates a set of one or more disk container files that act as snapshots of your VM\u2019s environment, settings, and data. The Amazon EC2 API <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportImage.html\">ImportImage</a> action uses those files to import your VM and create an AMI. To import using the CLI command, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/ec2/import-image.html\">import-image</a> </p> <p>You can reference the task ID from the VM import to pull in the AMI that the import created as the base image for your Image Builder recipe.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/ImportVmImage"
      },
      "input": {
        "shape": "ImportVmImageRequest"
      },
      "name": "ImportVmImage",
      "output": {
        "shape": "ImportVmImageResponse"
      }
    },
    "ListComponentBuildVersions": {
      "documentation": "<p> Returns the list of component build versions for the specified semantic version.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListComponentBuildVersions"
      },
      "input": {
        "shape": "ListComponentBuildVersionsRequest"
      },
      "name": "ListComponentBuildVersions",
      "output": {
        "shape": "ListComponentBuildVersionsResponse"
      }
    },
    "ListComponents": {
      "documentation": "<p>Returns the list of component build versions for the specified semantic version.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListComponents"
      },
      "input": {
        "shape": "ListComponentsRequest"
      },
      "name": "ListComponents",
      "output": {
        "shape": "ListComponentsResponse"
      }
    },
    "ListContainerRecipes": {
      "documentation": "<p>Returns a list of container recipes.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListContainerRecipes"
      },
      "input": {
        "shape": "ListContainerRecipesRequest"
      },
      "name": "ListContainerRecipes",
      "output": {
        "shape": "ListContainerRecipesResponse"
      }
    },
    "ListDistributionConfigurations": {
      "documentation": "<p>Returns a list of distribution configurations.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListDistributionConfigurations"
      },
      "input": {
        "shape": "ListDistributionConfigurationsRequest"
      },
      "name": "ListDistributionConfigurations",
      "output": {
        "shape": "ListDistributionConfigurationsResponse"
      }
    },
    "ListImageBuildVersions": {
      "documentation": "<p> Returns a list of image build versions.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImageBuildVersions"
      },
      "input": {
        "shape": "ListImageBuildVersionsRequest"
      },
      "name": "ListImageBuildVersions",
      "output": {
        "shape": "ListImageBuildVersionsResponse"
      }
    },
    "ListImagePackages": {
      "documentation": "<p>List the Packages that are associated with an Image Build Version, as determined by Amazon Web Services Systems Manager Inventory at build time.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImagePackages"
      },
      "input": {
        "shape": "ListImagePackagesRequest"
      },
      "name": "ListImagePackages",
      "output": {
        "shape": "ListImagePackagesResponse"
      }
    },
    "ListImagePipelineImages": {
      "documentation": "<p> Returns a list of images created by the specified pipeline.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImagePipelineImages"
      },
      "input": {
        "shape": "ListImagePipelineImagesRequest"
      },
      "name": "ListImagePipelineImages",
      "output": {
        "shape": "ListImagePipelineImagesResponse"
      }
    },
    "ListImagePipelines": {
      "documentation": "<p>Returns a list of image pipelines.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImagePipelines"
      },
      "input": {
        "shape": "ListImagePipelinesRequest"
      },
      "name": "ListImagePipelines",
      "output": {
        "shape": "ListImagePipelinesResponse"
      }
    },
    "ListImageRecipes": {
      "documentation": "<p> Returns a list of image recipes.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImageRecipes"
      },
      "input": {
        "shape": "ListImageRecipesRequest"
      },
      "name": "ListImageRecipes",
      "output": {
        "shape": "ListImageRecipesResponse"
      }
    },
    "ListImages": {
      "documentation": "<p> Returns the list of images that you have access to.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListImages"
      },
      "input": {
        "shape": "ListImagesRequest"
      },
      "name": "ListImages",
      "output": {
        "shape": "ListImagesResponse"
      }
    },
    "ListInfrastructureConfigurations": {
      "documentation": "<p> Returns a list of infrastructure configurations.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidPaginationTokenException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListInfrastructureConfigurations"
      },
      "input": {
        "shape": "ListInfrastructureConfigurationsRequest"
      },
      "name": "ListInfrastructureConfigurations",
      "output": {
        "shape": "ListInfrastructureConfigurationsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p> Returns the list of tags for the specified resource.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "PutComponentPolicy": {
      "documentation": "<p> Applies a policy to a component. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutComponentPolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/PutComponentPolicy"
      },
      "input": {
        "shape": "PutComponentPolicyRequest"
      },
      "name": "PutComponentPolicy",
      "output": {
        "shape": "PutComponentPolicyResponse"
      }
    },
    "PutContainerRecipePolicy": {
      "documentation": "<p>Applies a policy to a container image. We recommend that you call the RAM API CreateResourceShare (https://docs.aws.amazon.com//ram/latest/APIReference/API_CreateResourceShare.html) to share resources. If you call the Image Builder API <code>PutContainerImagePolicy</code>, you must also call the RAM API PromoteResourceShareCreatedFromPolicy (https://docs.aws.amazon.com//ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html) in order for the resource to be visible to all principals with whom the resource is shared.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/PutContainerRecipePolicy"
      },
      "input": {
        "shape": "PutContainerRecipePolicyRequest"
      },
      "name": "PutContainerRecipePolicy",
      "output": {
        "shape": "PutContainerRecipePolicyResponse"
      }
    },
    "PutImagePolicy": {
      "documentation": "<p>Applies a policy to an image. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutImagePolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/PutImagePolicy"
      },
      "input": {
        "shape": "PutImagePolicyRequest"
      },
      "name": "PutImagePolicy",
      "output": {
        "shape": "PutImagePolicyResponse"
      }
    },
    "PutImageRecipePolicy": {
      "documentation": "<p> Applies a policy to an image recipe. We recommend that you call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html\">CreateResourceShare</a> to share resources. If you call the Image Builder API <code>PutImageRecipePolicy</code>, you must also call the RAM API <a href=\"https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html\">PromoteResourceShareCreatedFromPolicy</a> in order for the resource to be visible to all principals with whom the resource is shared.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/PutImageRecipePolicy"
      },
      "input": {
        "shape": "PutImageRecipePolicyRequest"
      },
      "name": "PutImageRecipePolicy",
      "output": {
        "shape": "PutImageRecipePolicyResponse"
      }
    },
    "StartImagePipelineExecution": {
      "documentation": "<p> Manually triggers a pipeline to create an image.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/StartImagePipelineExecution"
      },
      "input": {
        "shape": "StartImagePipelineExecutionRequest"
      },
      "name": "StartImagePipelineExecution",
      "output": {
        "shape": "StartImagePipelineExecutionResponse"
      }
    },
    "TagResource": {
      "documentation": "<p> Adds a tag to a resource.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p> Removes a tag from a resource.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDistributionConfiguration": {
      "documentation": "<p> Updates a new distribution configuration. Distribution configurations define and configure the outputs of your pipeline.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "InvalidParameterCombinationException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/UpdateDistributionConfiguration"
      },
      "input": {
        "shape": "UpdateDistributionConfigurationRequest"
      },
      "name": "UpdateDistributionConfiguration",
      "output": {
        "shape": "UpdateDistributionConfigurationResponse"
      }
    },
    "UpdateImagePipeline": {
      "documentation": "<p> Updates an image pipeline. Image pipelines enable you to automate the creation and distribution of images.</p> <note> <p>UpdateImagePipeline does not support selective updates for the pipeline. You must specify all of the required properties in the update request, not just the properties that have changed.</p> </note>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/UpdateImagePipeline"
      },
      "input": {
        "shape": "UpdateImagePipelineRequest"
      },
      "name": "UpdateImagePipeline",
      "output": {
        "shape": "UpdateImagePipelineResponse"
      }
    },
    "UpdateInfrastructureConfiguration": {
      "documentation": "<p> Updates a new infrastructure configuration. An infrastructure configuration defines the environment in which your image will be built and tested.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "CallRateLimitExceededException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/UpdateInfrastructureConfiguration"
      },
      "input": {
        "shape": "UpdateInfrastructureConfigurationRequest"
      },
      "name": "UpdateInfrastructureConfiguration",
      "output": {
        "shape": "UpdateInfrastructureConfigurationResponse"
      }
    }
  },
  "shapes": {
    "AccountId": {
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AccountList": {
      "max": 1536,
      "member": {
        "shape": "AccountId"
      },
      "min": 1,
      "type": "list"
    },
    "AdditionalInstanceConfiguration": {
      "documentation": "<p>In addition to your infrastruction configuration, these settings provide an extra layer of control over your build instances. For instances where Image Builder installs the Systems Manager agent, you can choose whether to keep it for the AMI that you create. You can also specify commands to run on launch for all of your build instances.</p>",
      "members": {
        "systemsManagerAgent": {
          "documentation": "<p>Contains settings for the Systems Manager agent on your build instance.</p>",
          "shape": "SystemsManagerAgent"
        },
        "userDataOverride": {
          "documentation": "<p>Use this property to provide commands or a command script to run when you launch your build instance.</p> <p>The userDataOverride property replaces any commands that Image Builder might have added to ensure that Systems Manager is installed on your Linux build instance. If you override the user data, make sure that you add commands to install Systems Manager, if it is not pre-installed on your base image.</p> <note> <p>The user data is always base 64 encoded. For example, the following commands are encoded as <code>IyEvYmluL2Jhc2gKbWtkaXIgLXAgL3Zhci9iYi8KdG91Y2ggL3Zhci$</code>:</p> <p> <i>#!/bin/bash</i> </p> <p>mkdir -p /var/bb/</p> <p>touch /var</p> </note>",
          "shape": "UserDataOverride"
        }
      },
      "type": "structure"
    },
    "Ami": {
      "documentation": "<p> Details of an Amazon EC2 AMI.</p>",
      "members": {
        "accountId": {
          "documentation": "<p>The account ID of the owner of the AMI.</p>",
          "shape": "NonEmptyString"
        },
        "description": {
          "documentation": "<p>The description of the Amazon EC2 AMI. Minimum and maximum length are in characters.</p>",
          "shape": "NonEmptyString"
        },
        "image": {
          "documentation": "<p>The AMI ID of the Amazon EC2 AMI.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the Amazon EC2 AMI.</p>",
          "shape": "NonEmptyString"
        },
        "region": {
          "documentation": "<p>The Amazon Web Services Region of the Amazon EC2 AMI.</p>",
          "shape": "NonEmptyString"
        },
        "state": {
          "shape": "ImageState"
        }
      },
      "type": "structure"
    },
    "AmiDistributionConfiguration": {
      "documentation": "<p> Define and configure the output AMIs of the pipeline.</p>",
      "members": {
        "amiTags": {
          "documentation": "<p>The tags to apply to AMIs distributed to this Region.</p>",
          "shape": "TagMap"
        },
        "description": {
          "documentation": "<p>The description of the AMI distribution configuration. Minimum and maximum length are in characters.</p>",
          "shape": "NonEmptyString"
        },
        "kmsKeyId": {
          "documentation": "<p>The KMS key identifier used to encrypt the distributed image.</p>",
          "shape": "NonEmptyString"
        },
        "launchPermission": {
          "documentation": "<p> Launch permissions can be used to configure which Amazon Web Services accounts can use the AMI to launch instances.</p>",
          "shape": "LaunchPermissionConfiguration"
        },
        "name": {
          "documentation": "<p>The name of the output AMI.</p>",
          "shape": "AmiNameString"
        },
        "targetAccountIds": {
          "documentation": "<p>The ID of an account to which you want to distribute an image.</p>",
          "shape": "AccountList"
        }
      },
      "type": "structure"
    },
    "AmiList": {
      "member": {
        "shape": "Ami"
      },
      "type": "list"
    },
    "AmiNameString": {
      "max": 127,
      "min": 1,
      "pattern": "^[-_A-Za-z0-9{][-_A-Za-z0-9\\s:{}\\.]+[-_A-Za-z0-9}]$",
      "type": "string"
    },
    "Arn": {
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BuildType": {
      "enum": [
        "USER_INITIATED",
        "SCHEDULED",
        "IMPORT"
      ],
      "type": "string"
    },
    "CallRateLimitExceededException": {
      "documentation": "<p>You have exceeded the permitted request rate for the specific operation.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "CancelImageCreationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image whose creation you want to cancel.</p>",
          "shape": "ImageBuildVersionArn"
        }
      },
      "required": [
        "imageBuildVersionArn",
        "clientToken"
      ],
      "type": "structure"
    },
    "CancelImageCreationResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token that was used for this request.</p>",
          "shape": "ClientToken"
        },
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image whose creation has been cancelled.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ClientException": {
      "documentation": "<p>These errors are usually caused by a client action, such as using an action or resource on behalf of a user that doesn't have permissions to use the action or resource, or specifying an invalid resource identifier.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ClientToken": {
      "max": 36,
      "min": 1,
      "type": "string"
    },
    "Component": {
      "documentation": "<p>A detailed view of a component.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component.</p>",
          "shape": "ImageBuilderArn"
        },
        "changeDescription": {
          "documentation": "<p>The change description of the component.</p>",
          "shape": "NonEmptyString"
        },
        "data": {
          "documentation": "<p>Component data contains the YAML document content for the component.</p>",
          "shape": "ComponentData"
        },
        "dateCreated": {
          "documentation": "<p>The date that the component was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the component.</p>",
          "shape": "NonEmptyString"
        },
        "encrypted": {
          "documentation": "<p>The encryption status of the component.</p>",
          "shape": "NullableBoolean"
        },
        "kmsKeyId": {
          "documentation": "<p>The KMS key identifier used to encrypt the component.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the component.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the component.</p>",
          "shape": "NonEmptyString"
        },
        "parameters": {
          "documentation": "<p>Contains parameter details for each of the parameters that are defined for the component.</p>",
          "shape": "ComponentParameterDetailList"
        },
        "platform": {
          "documentation": "<p>The platform of the component.</p>",
          "shape": "Platform"
        },
        "state": {
          "documentation": "<p>Describes the current status of the component. This is used for components that are no longer active.</p>",
          "shape": "ComponentState"
        },
        "supportedOsVersions": {
          "documentation": "<p>The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.</p>",
          "shape": "OsVersionList"
        },
        "tags": {
          "documentation": "<p>The tags associated with the component.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>The type of the component denotes whether the component is used to build the image or only to test it.</p>",
          "shape": "ComponentType"
        },
        "version": {
          "documentation": "<p>The version of the component.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ComponentBuildVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$",
      "type": "string"
    },
    "ComponentConfiguration": {
      "documentation": "<p> Configuration details of the component.</p>",
      "members": {
        "componentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component.</p>",
          "shape": "ComponentVersionArnOrBuildVersionArn"
        },
        "parameters": {
          "documentation": "<p>A group of parameter settings that are used to configure the component for a specific recipe.</p>",
          "shape": "ComponentParameterList"
        }
      },
      "required": [
        "componentArn"
      ],
      "type": "structure"
    },
    "ComponentConfigurationList": {
      "member": {
        "shape": "ComponentConfiguration"
      },
      "min": 1,
      "type": "list"
    },
    "ComponentData": {
      "type": "string"
    },
    "ComponentFormat": {
      "enum": [
        "SHELL"
      ],
      "type": "string"
    },
    "ComponentParameter": {
      "documentation": "<p>Contains a key/value pair that sets the named component parameter.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the component parameter to set.</p>",
          "shape": "ComponentParameterName"
        },
        "value": {
          "documentation": "<p>Sets the value for the named component parameter.</p>",
          "shape": "ComponentParameterValueList"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "structure"
    },
    "ComponentParameterDescription": {
      "max": 1024,
      "min": 1,
      "pattern": "[^\\x00]+",
      "type": "string"
    },
    "ComponentParameterDetail": {
      "documentation": "<p>Defines a parameter that is used to provide configuration details for the component.</p>",
      "members": {
        "defaultValue": {
          "documentation": "<p>The default value of this parameter if no input is provided.</p>",
          "shape": "ComponentParameterValueList"
        },
        "description": {
          "documentation": "<p>Describes this parameter.</p>",
          "shape": "ComponentParameterDescription"
        },
        "name": {
          "documentation": "<p>The name of this input parameter.</p>",
          "shape": "ComponentParameterName"
        },
        "type": {
          "documentation": "<p>The type of input this parameter provides. The currently supported value is \"string\".</p>",
          "shape": "ComponentParameterType"
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "structure"
    },
    "ComponentParameterDetailList": {
      "member": {
        "shape": "ComponentParameterDetail"
      },
      "type": "list"
    },
    "ComponentParameterList": {
      "member": {
        "shape": "ComponentParameter"
      },
      "min": 1,
      "type": "list"
    },
    "ComponentParameterName": {
      "max": 256,
      "min": 1,
      "pattern": "[^\\x00]+",
      "type": "string"
    },
    "ComponentParameterType": {
      "max": 20,
      "min": 1,
      "pattern": "^String|Integer|Boolean|StringList$",
      "type": "string"
    },
    "ComponentParameterValue": {
      "min": 0,
      "pattern": "[^\\x00]*",
      "type": "string"
    },
    "ComponentParameterValueList": {
      "member": {
        "shape": "ComponentParameterValue"
      },
      "type": "list"
    },
    "ComponentState": {
      "documentation": "<p>A group of fields that describe the current status of components that are no longer active.</p>",
      "members": {
        "reason": {
          "documentation": "<p>Describes how or why the component changed state.</p>",
          "shape": "NonEmptyString"
        },
        "status": {
          "documentation": "<p>The current state of the component.</p>",
          "shape": "ComponentStatus"
        }
      },
      "type": "structure"
    },
    "ComponentStatus": {
      "enum": [
        "DEPRECATED"
      ],
      "type": "string"
    },
    "ComponentSummary": {
      "documentation": "<p>A high-level summary of a component.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component.</p>",
          "shape": "ImageBuilderArn"
        },
        "changeDescription": {
          "documentation": "<p>The change description of the component.</p>",
          "shape": "NonEmptyString"
        },
        "dateCreated": {
          "documentation": "<p>The date that the component was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the component.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the component.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the component.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the component.</p>",
          "shape": "Platform"
        },
        "state": {
          "documentation": "<p>Describes the current status of the component.</p>",
          "shape": "ComponentState"
        },
        "supportedOsVersions": {
          "documentation": "<p>The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.</p>",
          "shape": "OsVersionList"
        },
        "tags": {
          "documentation": "<p>The tags associated with the component.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>The type of the component denotes whether the component is used to build the image or only to test it.</p>",
          "shape": "ComponentType"
        },
        "version": {
          "documentation": "<p>The version of the component.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ComponentSummaryList": {
      "member": {
        "shape": "ComponentSummary"
      },
      "type": "list"
    },
    "ComponentType": {
      "enum": [
        "BUILD",
        "TEST"
      ],
      "type": "string"
    },
    "ComponentVersion": {
      "documentation": "<p>The defining characteristics of a specific version of an Amazon Web Services TOE component.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component.</p> <note> <p>Semantic versioning is included in each object's Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date that the component was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the component.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the component.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the component.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the component.</p>",
          "shape": "Platform"
        },
        "supportedOsVersions": {
          "documentation": "<p>he operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.</p>",
          "shape": "OsVersionList"
        },
        "type": {
          "documentation": "<p>The type of the component denotes whether the component is used to build the image or only to test it.</p>",
          "shape": "ComponentType"
        },
        "version": {
          "documentation": "<p>The semantic version of the component.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ComponentVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$",
      "type": "string"
    },
    "ComponentVersionArnOrBuildVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):component/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$",
      "type": "string"
    },
    "ComponentVersionList": {
      "member": {
        "shape": "ComponentVersion"
      },
      "type": "list"
    },
    "Container": {
      "documentation": "<p>A container encapsulates the runtime environment for an application.</p>",
      "members": {
        "imageUris": {
          "documentation": "<p>A list of URIs for containers created in the context Region.</p>",
          "shape": "StringList"
        },
        "region": {
          "documentation": "<p>Containers and container images are Region-specific. This is the Region context for the container.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ContainerDistributionConfiguration": {
      "documentation": "<p>Container distribution settings for encryption, licensing, and sharing in a specific Region.</p>",
      "members": {
        "containerTags": {
          "documentation": "<p>Tags that are attached to the container distribution configuration.</p>",
          "shape": "StringList"
        },
        "description": {
          "documentation": "<p>The description of the container distribution configuration.</p>",
          "shape": "NonEmptyString"
        },
        "targetRepository": {
          "documentation": "<p>The destination repository for the container distribution configuration.</p>",
          "shape": "TargetContainerRepository"
        }
      },
      "required": [
        "targetRepository"
      ],
      "type": "structure"
    },
    "ContainerList": {
      "member": {
        "shape": "Container"
      },
      "type": "list"
    },
    "ContainerRecipe": {
      "documentation": "<p>A container recipe.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe.</p> <note> <p>Semantic versioning is included in each object's Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>",
          "shape": "ImageBuilderArn"
        },
        "components": {
          "documentation": "<p>Components for build and test that are included in the container recipe.</p>",
          "shape": "ComponentConfigurationList"
        },
        "containerType": {
          "documentation": "<p>Specifies the type of container, such as Docker.</p>",
          "shape": "ContainerType"
        },
        "dateCreated": {
          "documentation": "<p>The date when this container recipe was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "dockerfileTemplateData": {
          "documentation": "<p>Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.</p>",
          "shape": "DockerFileTemplate"
        },
        "encrypted": {
          "documentation": "<p>A flag that indicates if the target container is encrypted.</p>",
          "shape": "NullableBoolean"
        },
        "instanceConfiguration": {
          "documentation": "<p>A group of options that can be used to configure an instance for building and testing container images.</p>",
          "shape": "InstanceConfiguration"
        },
        "kmsKeyId": {
          "documentation": "<p>Identifies which KMS key is used to encrypt the container image for distribution to the target Region.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the container recipe.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "parentImage": {
          "documentation": "<p>The base image for the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The system platform for the container, such as Windows or Linux.</p>",
          "shape": "Platform"
        },
        "tags": {
          "documentation": "<p>Tags that are attached to the container recipe.</p>",
          "shape": "TagMap"
        },
        "targetRepository": {
          "documentation": "<p>The destination repository for the container image.</p>",
          "shape": "TargetContainerRepository"
        },
        "version": {
          "documentation": "<p>The semantic version of the container recipe.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "VersionNumber"
        },
        "workingDirectory": {
          "documentation": "<p>The working directory for use during build and test workflows.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ContainerRecipeArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):container-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$",
      "type": "string"
    },
    "ContainerRecipeSummary": {
      "documentation": "<p>A summary of a container recipe</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe.</p>",
          "shape": "ImageBuilderArn"
        },
        "containerType": {
          "documentation": "<p>Specifies the type of container, such as \"Docker\".</p>",
          "shape": "ContainerType"
        },
        "dateCreated": {
          "documentation": "<p>The date when this container recipe was created.</p>",
          "shape": "DateTime"
        },
        "name": {
          "documentation": "<p>The name of the container recipe.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "parentImage": {
          "documentation": "<p>The base image for the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The system platform for the container, such as Windows or Linux.</p>",
          "shape": "Platform"
        },
        "tags": {
          "documentation": "<p>Tags that are attached to the container recipe.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ContainerRecipeSummaryList": {
      "member": {
        "shape": "ContainerRecipeSummary"
      },
      "type": "list"
    },
    "ContainerRepositoryService": {
      "enum": [
        "ECR"
      ],
      "type": "string"
    },
    "ContainerType": {
      "enum": [
        "DOCKER"
      ],
      "type": "string"
    },
    "CreateComponentRequest": {
      "members": {
        "changeDescription": {
          "documentation": "<p>The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.</p>",
          "shape": "NonEmptyString"
        },
        "clientToken": {
          "documentation": "<p>The idempotency token of the component.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "data": {
          "documentation": "<p>Component <code>data</code> contains inline YAML document content for the component. Alternatively, you can specify the <code>uri</code> of a YAML document file stored in Amazon S3. However, you cannot specify both properties.</p>",
          "shape": "InlineComponentData"
        },
        "description": {
          "documentation": "<p>The description of the component. Describes the contents of the component.</p>",
          "shape": "NonEmptyString"
        },
        "kmsKeyId": {
          "documentation": "<p>The ID of the KMS key that should be used to encrypt this component.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the component.</p>",
          "shape": "ResourceName"
        },
        "platform": {
          "documentation": "<p>The platform of the component.</p>",
          "shape": "Platform"
        },
        "semanticVersion": {
          "documentation": "<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>",
          "shape": "VersionNumber"
        },
        "supportedOsVersions": {
          "documentation": "<p> The operating system (OS) version supported by the component. If the OS information is available, a prefix match is performed against the base image OS version during image recipe creation.</p>",
          "shape": "OsVersionList"
        },
        "tags": {
          "documentation": "<p>The tags of the component.</p>",
          "shape": "TagMap"
        },
        "uri": {
          "documentation": "<p>The <code>uri</code> of a YAML component document file. This must be an S3 URL (<code>s3://bucket/key</code>), and the requester must have permission to access the S3 bucket it points to. If you use Amazon S3, you can specify component content up to your service quota.</p> <p>Alternatively, you can specify the YAML document inline, using the component <code>data</code> property. You cannot specify both properties.</p>",
          "shape": "Uri"
        }
      },
      "required": [
        "name",
        "semanticVersion",
        "platform",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateComponentResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "componentBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component that was created by this request.</p>",
          "shape": "ComponentBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateContainerRecipeRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The client token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "components": {
          "documentation": "<p>Components for build and test that are included in the container recipe.</p>",
          "shape": "ComponentConfigurationList"
        },
        "containerType": {
          "documentation": "<p>The type of container to create.</p>",
          "shape": "ContainerType"
        },
        "description": {
          "documentation": "<p>The description of the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "dockerfileTemplateData": {
          "documentation": "<p>The Dockerfile template used to build your image as an inline data blob.</p>",
          "shape": "InlineDockerFileTemplate"
        },
        "dockerfileTemplateUri": {
          "documentation": "<p>The Amazon S3 URI for the Dockerfile that will be used to build your container image.</p>",
          "shape": "Uri"
        },
        "imageOsVersionOverride": {
          "documentation": "<p>Specifies the operating system version for the base image.</p>",
          "shape": "NonEmptyString"
        },
        "instanceConfiguration": {
          "documentation": "<p>A group of options that can be used to configure an instance for building and testing container images.</p>",
          "shape": "InstanceConfiguration"
        },
        "kmsKeyId": {
          "documentation": "<p>Identifies which KMS key is used to encrypt the container image.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the container recipe.</p>",
          "shape": "ResourceName"
        },
        "parentImage": {
          "documentation": "<p>The base image for the container recipe.</p>",
          "shape": "NonEmptyString"
        },
        "platformOverride": {
          "documentation": "<p>Specifies the operating system platform when you use a custom base image.</p>",
          "shape": "Platform"
        },
        "semanticVersion": {
          "documentation": "<p>The semantic version of the container recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>",
          "shape": "VersionNumber"
        },
        "tags": {
          "documentation": "<p>Tags that are attached to the container recipe.</p>",
          "shape": "TagMap"
        },
        "targetRepository": {
          "documentation": "<p>The destination repository for the container image.</p>",
          "shape": "TargetContainerRepository"
        },
        "workingDirectory": {
          "documentation": "<p>The working directory for use during build and test workflows.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "containerType",
        "name",
        "semanticVersion",
        "components",
        "parentImage",
        "targetRepository",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateContainerRecipeResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The client token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "containerRecipeArn": {
          "documentation": "<p>Returns the Amazon Resource Name (ARN) of the container recipe that the request created.</p>",
          "shape": "ContainerRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateDistributionConfigurationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token of the distribution configuration.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p> The description of the distribution configuration.</p>",
          "shape": "NonEmptyString"
        },
        "distributions": {
          "documentation": "<p> The distributions of the distribution configuration.</p>",
          "shape": "DistributionList"
        },
        "name": {
          "documentation": "<p> The name of the distribution configuration.</p>",
          "shape": "ResourceName"
        },
        "tags": {
          "documentation": "<p> The tags of the distribution configuration.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "distributions",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateDistributionConfigurationResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "distributionConfigurationArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the distribution configuration that was created by this request.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "requestId": {
          "documentation": "<p> The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateImagePipelineRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that is used to configure images created by this container pipeline.</p>",
          "shape": "ContainerRecipeArn"
        },
        "description": {
          "documentation": "<p> The description of the image pipeline.</p>",
          "shape": "NonEmptyString"
        },
        "distributionConfigurationArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images created by this image pipeline.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "enhancedImageMetadataEnabled": {
          "documentation": "<p> Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p>",
          "shape": "NullableBoolean"
        },
        "imageRecipeArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the image recipe that will be used to configure images created by this image pipeline.</p>",
          "shape": "ImageRecipeArn"
        },
        "imageTestsConfiguration": {
          "documentation": "<p> The image test configuration of the image pipeline.</p>",
          "shape": "ImageTestsConfiguration"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images created by this image pipeline.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "name": {
          "documentation": "<p> The name of the image pipeline.</p>",
          "shape": "ResourceName"
        },
        "schedule": {
          "documentation": "<p> The schedule of the image pipeline.</p>",
          "shape": "Schedule"
        },
        "status": {
          "documentation": "<p> The status of the image pipeline.</p>",
          "shape": "PipelineStatus"
        },
        "tags": {
          "documentation": "<p> The tags of the image pipeline.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "infrastructureConfigurationArn",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateImagePipelineResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "imagePipelineArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the image pipeline that was created by this request.</p>",
          "shape": "ImagePipelineArn"
        },
        "requestId": {
          "documentation": "<p> The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateImageRecipeRequest": {
      "members": {
        "additionalInstanceConfiguration": {
          "documentation": "<p>Specify additional settings and launch scripts for your build instances.</p>",
          "shape": "AdditionalInstanceConfiguration"
        },
        "blockDeviceMappings": {
          "documentation": "<p>The block device mappings of the image recipe.</p>",
          "shape": "InstanceBlockDeviceMappings"
        },
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "components": {
          "documentation": "<p>The components of the image recipe.</p>",
          "shape": "ComponentConfigurationList"
        },
        "description": {
          "documentation": "<p> The description of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p> The name of the image recipe.</p>",
          "shape": "ResourceName"
        },
        "parentImage": {
          "documentation": "<p>The base image of the image recipe. The value of the string can be the ARN of the base image or an AMI ID. The format for the ARN follows this example: <code>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</code>. You can provide the specific version that you want to use, or you can use a wildcard in all of the fields. If you enter an AMI ID for the string value, you must have access to the AMI, and the AMI must be in the same Region in which you are using Image Builder.</p>",
          "shape": "NonEmptyString"
        },
        "semanticVersion": {
          "documentation": "<p>The semantic version of the image recipe. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>",
          "shape": "VersionNumber"
        },
        "tags": {
          "documentation": "<p> The tags of the image recipe.</p>",
          "shape": "TagMap"
        },
        "workingDirectory": {
          "documentation": "<p>The working directory used during build and test workflows.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "name",
        "semanticVersion",
        "components",
        "parentImage",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateImageRecipeResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that was created by this request.</p>",
          "shape": "ImageRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateImageRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that defines how images are configured and tested.</p>",
          "shape": "ContainerRecipeArn"
        },
        "distributionConfigurationArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the distribution configuration that defines and configures the outputs of your pipeline.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "enhancedImageMetadataEnabled": {
          "documentation": "<p> Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p>",
          "shape": "NullableBoolean"
        },
        "imageRecipeArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the image recipe that defines how images are configured, tested, and assessed.</p>",
          "shape": "ImageRecipeArn"
        },
        "imageTestsConfiguration": {
          "documentation": "<p> The image tests configuration of the image.</p>",
          "shape": "ImageTestsConfiguration"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the infrastructure configuration that defines the environment in which your image will be built and tested.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "tags": {
          "documentation": "<p> The tags of the image.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "infrastructureConfigurationArn",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateImageResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p> The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "imageBuildVersionArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the image that was created by this request.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p> The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "CreateInfrastructureConfigurationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "instanceMetadataOptions": {
          "documentation": "<p>The instance metadata options that you can set for the HTTP requests that pipeline builds use to launch EC2 build and test instances.</p>",
          "shape": "InstanceMetadataOptions"
        },
        "instanceProfileName": {
          "documentation": "<p>The instance profile to associate with the instance used to customize your Amazon EC2 AMI.</p>",
          "shape": "InstanceProfileNameType"
        },
        "instanceTypes": {
          "documentation": "<p>The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.</p>",
          "shape": "InstanceTypeList"
        },
        "keyPair": {
          "documentation": "<p>The key pair of the infrastructure configuration. You can use this to log on to and debug the instance used to create your image.</p>",
          "shape": "NonEmptyString"
        },
        "logging": {
          "documentation": "<p>The logging configuration of the infrastructure configuration.</p>",
          "shape": "Logging"
        },
        "name": {
          "documentation": "<p>The name of the infrastructure configuration.</p>",
          "shape": "ResourceName"
        },
        "resourceTags": {
          "documentation": "<p>The tags attached to the resource created by Image Builder.</p>",
          "shape": "ResourceTagMap"
        },
        "securityGroupIds": {
          "documentation": "<p>The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.</p>",
          "shape": "SecurityGroupIds"
        },
        "snsTopicArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the SNS topic to which we send image build event notifications.</p> <note> <p>EC2 Image Builder is unable to send notifications to SNS topics that are encrypted using keys from other accounts. The key that is used to encrypt the SNS topic must reside in the account that the Image Builder service runs under.</p> </note>",
          "shape": "SnsTopicArn"
        },
        "subnetId": {
          "documentation": "<p>The subnet ID in which to place the instance used to customize your Amazon EC2 AMI.</p>",
          "shape": "NonEmptyString"
        },
        "tags": {
          "documentation": "<p>The tags of the infrastructure configuration.</p>",
          "shape": "TagMap"
        },
        "terminateInstanceOnFailure": {
          "documentation": "<p>The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.</p>",
          "shape": "NullableBoolean"
        }
      },
      "required": [
        "name",
        "instanceProfileName",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateInfrastructureConfigurationResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that was created by this request.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DateTime": {
      "type": "string"
    },
    "DeleteComponentRequest": {
      "members": {
        "componentBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component build version to delete.</p>",
          "location": "querystring",
          "locationName": "componentBuildVersionArn",
          "shape": "ComponentBuildVersionArn"
        }
      },
      "required": [
        "componentBuildVersionArn"
      ],
      "type": "structure"
    },
    "DeleteComponentResponse": {
      "members": {
        "componentBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component build version that was deleted.</p>",
          "shape": "ComponentBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteContainerRecipeRequest": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe to delete.</p>",
          "location": "querystring",
          "locationName": "containerRecipeArn",
          "shape": "ContainerRecipeArn"
        }
      },
      "required": [
        "containerRecipeArn"
      ],
      "type": "structure"
    },
    "DeleteContainerRecipeResponse": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that was deleted.</p>",
          "shape": "ContainerRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteDistributionConfigurationRequest": {
      "members": {
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration to delete.</p>",
          "location": "querystring",
          "locationName": "distributionConfigurationArn",
          "shape": "DistributionConfigurationArn"
        }
      },
      "required": [
        "distributionConfigurationArn"
      ],
      "type": "structure"
    },
    "DeleteDistributionConfigurationResponse": {
      "members": {
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration that was deleted.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteImagePipelineRequest": {
      "members": {
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline to delete.</p>",
          "location": "querystring",
          "locationName": "imagePipelineArn",
          "shape": "ImagePipelineArn"
        }
      },
      "required": [
        "imagePipelineArn"
      ],
      "type": "structure"
    },
    "DeleteImagePipelineResponse": {
      "members": {
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that was deleted.</p>",
          "shape": "ImagePipelineArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteImageRecipeRequest": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe to delete.</p>",
          "location": "querystring",
          "locationName": "imageRecipeArn",
          "shape": "ImageRecipeArn"
        }
      },
      "required": [
        "imageRecipeArn"
      ],
      "type": "structure"
    },
    "DeleteImageRecipeResponse": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that was deleted.</p>",
          "shape": "ImageRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteImageRequest": {
      "members": {
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Image Builder image resource to delete.</p>",
          "location": "querystring",
          "locationName": "imageBuildVersionArn",
          "shape": "ImageBuildVersionArn"
        }
      },
      "required": [
        "imageBuildVersionArn"
      ],
      "type": "structure"
    },
    "DeleteImageResponse": {
      "members": {
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Image Builder image resource that was deleted.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DeleteInfrastructureConfigurationRequest": {
      "members": {
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration to delete.</p>",
          "location": "querystring",
          "locationName": "infrastructureConfigurationArn",
          "shape": "InfrastructureConfigurationArn"
        }
      },
      "required": [
        "infrastructureConfigurationArn"
      ],
      "type": "structure"
    },
    "DeleteInfrastructureConfigurationResponse": {
      "members": {
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that was deleted.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "DiskImageFormat": {
      "enum": [
        "VMDK",
        "RAW",
        "VHD"
      ],
      "type": "string"
    },
    "Distribution": {
      "documentation": "<p> Defines the settings for a specific Region.</p>",
      "members": {
        "amiDistributionConfiguration": {
          "documentation": "<p>The specific AMI settings; for example, launch permissions or AMI tags.</p>",
          "shape": "AmiDistributionConfiguration"
        },
        "containerDistributionConfiguration": {
          "documentation": "<p>Container distribution settings for encryption, licensing, and sharing in a specific Region.</p>",
          "shape": "ContainerDistributionConfiguration"
        },
        "fastLaunchConfigurations": {
          "documentation": "<p>The Windows faster-launching configurations to use for AMI distribution.</p>",
          "shape": "FastLaunchConfigurationList"
        },
        "launchTemplateConfigurations": {
          "documentation": "<p>A group of launchTemplateConfiguration settings that apply to image distribution for specified accounts.</p>",
          "shape": "LaunchTemplateConfigurationList"
        },
        "licenseConfigurationArns": {
          "documentation": "<p>The License Manager Configuration to associate with the AMI in the specified Region.</p>",
          "shape": "LicenseConfigurationArnList"
        },
        "region": {
          "documentation": "<p>The target Region.</p>",
          "shape": "NonEmptyString"
        },
        "s3ExportConfiguration": {
          "documentation": "<p>Configure export settings to deliver disk images created from your image build, using a file format that is compatible with your VMs in that Region.</p>",
          "shape": "S3ExportConfiguration"
        }
      },
      "required": [
        "region"
      ],
      "type": "structure"
    },
    "DistributionConfiguration": {
      "documentation": "<p>A distribution configuration.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration.</p>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this distribution configuration was created.</p>",
          "shape": "DateTime"
        },
        "dateUpdated": {
          "documentation": "<p>The date on which this distribution configuration was last updated.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the distribution configuration.</p>",
          "shape": "NonEmptyString"
        },
        "distributions": {
          "documentation": "<p>The distribution objects that apply Region-specific settings for the deployment of the image to targeted Regions.</p>",
          "shape": "DistributionList"
        },
        "name": {
          "documentation": "<p>The name of the distribution configuration.</p>",
          "shape": "ResourceName"
        },
        "tags": {
          "documentation": "<p>The tags of the distribution configuration.</p>",
          "shape": "TagMap"
        },
        "timeoutMinutes": {
          "documentation": "<p>The maximum duration in minutes for this distribution configuration.</p>",
          "shape": "DistributionTimeoutMinutes"
        }
      },
      "required": [
        "timeoutMinutes"
      ],
      "type": "structure"
    },
    "DistributionConfigurationArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):distribution-configuration/[a-z0-9-_]+$",
      "type": "string"
    },
    "DistributionConfigurationSummary": {
      "documentation": "<p>A high-level overview of a distribution configuration.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration.</p>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which the distribution configuration was created.</p>",
          "shape": "DateTime"
        },
        "dateUpdated": {
          "documentation": "<p>The date on which the distribution configuration was updated.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the distribution configuration.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the distribution configuration.</p>",
          "shape": "ResourceName"
        },
        "regions": {
          "documentation": "<p>A list of Regions where the container image is distributed to.</p>",
          "shape": "RegionList"
        },
        "tags": {
          "documentation": "<p>The tags associated with the distribution configuration.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DistributionConfigurationSummaryList": {
      "member": {
        "shape": "DistributionConfigurationSummary"
      },
      "type": "list"
    },
    "DistributionList": {
      "member": {
        "shape": "Distribution"
      },
      "type": "list"
    },
    "DistributionTimeoutMinutes": {
      "max": 720,
      "min": 30,
      "type": "integer"
    },
    "DockerFileTemplate": {
      "type": "string"
    },
    "EbsInstanceBlockDeviceSpecification": {
      "documentation": "<p>Amazon EBS-specific block device mapping specifications.</p>",
      "members": {
        "deleteOnTermination": {
          "documentation": "<p>Use to configure delete on termination of the associated device.</p>",
          "shape": "NullableBoolean"
        },
        "encrypted": {
          "documentation": "<p>Use to configure device encryption.</p>",
          "shape": "NullableBoolean"
        },
        "iops": {
          "documentation": "<p>Use to configure device IOPS.</p>",
          "shape": "EbsIopsInteger"
        },
        "kmsKeyId": {
          "documentation": "<p>Use to configure the KMS key to use when encrypting the device.</p>",
          "shape": "NonEmptyString"
        },
        "snapshotId": {
          "documentation": "<p>The snapshot that defines the device contents.</p>",
          "shape": "NonEmptyString"
        },
        "throughput": {
          "documentation": "<p> <b>For GP3 volumes only</b> \u2013 The throughput in MiB/s that the volume supports. </p>",
          "shape": "EbsVolumeThroughput"
        },
        "volumeSize": {
          "documentation": "<p>Use to override the device's volume size.</p>",
          "shape": "EbsVolumeSizeInteger"
        },
        "volumeType": {
          "documentation": "<p>Use to override the device's volume type.</p>",
          "shape": "EbsVolumeType"
        }
      },
      "type": "structure"
    },
    "EbsIopsInteger": {
      "max": 64000,
      "min": 100,
      "type": "integer"
    },
    "EbsVolumeSizeInteger": {
      "max": 16000,
      "min": 1,
      "type": "integer"
    },
    "EbsVolumeThroughput": {
      "max": 1000,
      "min": 125,
      "type": "integer"
    },
    "EbsVolumeType": {
      "enum": [
        "standard",
        "io1",
        "io2",
        "gp2",
        "gp3",
        "sc1",
        "st1"
      ],
      "type": "string"
    },
    "EmptyString": {
      "max": 0,
      "min": 0,
      "type": "string"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "FastLaunchConfiguration": {
      "documentation": "<p>Define and configure faster launching for output Windows AMIs.</p>",
      "members": {
        "accountId": {
          "documentation": "<p>The owner account ID for the fast-launch enabled Windows AMI.</p>",
          "shape": "AccountId"
        },
        "enabled": {
          "documentation": "<p>A Boolean that represents the current state of faster launching for the Windows AMI. Set to <code>true</code> to start using Windows faster launching, or <code>false</code> to stop using it.</p>",
          "shape": "Boolean"
        },
        "launchTemplate": {
          "documentation": "<p>The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances to create pre-provisioned snapshots.</p>",
          "shape": "FastLaunchLaunchTemplateSpecification"
        },
        "maxParallelLaunches": {
          "documentation": "<p>The maximum number of parallel instances that are launched for creating resources.</p>",
          "shape": "MaxParallelLaunches"
        },
        "snapshotConfiguration": {
          "documentation": "<p>Configuration settings for managing the number of snapshots that are created from pre-provisioned instances for the Windows AMI when faster launching is enabled.</p>",
          "shape": "FastLaunchSnapshotConfiguration"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "structure"
    },
    "FastLaunchConfigurationList": {
      "max": 1000,
      "member": {
        "shape": "FastLaunchConfiguration"
      },
      "min": 1,
      "type": "list"
    },
    "FastLaunchLaunchTemplateSpecification": {
      "documentation": "<p>Identifies the launch template that the associated Windows AMI uses for launching an instance when faster launching is enabled.</p> <note> <p>You can specify either the <code>launchTemplateName</code> or the <code>launchTemplateId</code>, but not both.</p> </note>",
      "members": {
        "launchTemplateId": {
          "documentation": "<p>The ID of the launch template to use for faster launching for a Windows AMI.</p>",
          "shape": "LaunchTemplateId"
        },
        "launchTemplateName": {
          "documentation": "<p>The name of the launch template to use for faster launching for a Windows AMI.</p>",
          "shape": "NonEmptyString"
        },
        "launchTemplateVersion": {
          "documentation": "<p>The version of the launch template to use for faster launching for a Windows AMI.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "FastLaunchSnapshotConfiguration": {
      "documentation": "<p>Configuration settings for creating and managing pre-provisioned snapshots for a fast-launch enabled Windows AMI.</p>",
      "members": {
        "targetResourceCount": {
          "documentation": "<p>The number of pre-provisioned snapshots to keep on hand for a fast-launch enabled Windows AMI.</p>",
          "shape": "TargetResourceCount"
        }
      },
      "type": "structure"
    },
    "Filter": {
      "documentation": "<p>A filter name and value pair that is used to return a more specific list of results from a list operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the filter. Filter names are case-sensitive.</p>",
          "shape": "FilterName"
        },
        "values": {
          "documentation": "<p>The filter values. Filter values are case-sensitive.</p>",
          "shape": "FilterValues"
        }
      },
      "type": "structure"
    },
    "FilterList": {
      "max": 10,
      "member": {
        "shape": "Filter"
      },
      "min": 1,
      "type": "list"
    },
    "FilterName": {
      "pattern": "^[a-zA-Z]{1,1024}$",
      "type": "string"
    },
    "FilterValue": {
      "pattern": "^[0-9a-zA-Z./_ :-]{1,1024}$",
      "type": "string"
    },
    "FilterValues": {
      "max": 10,
      "member": {
        "shape": "FilterValue"
      },
      "min": 1,
      "type": "list"
    },
    "ForbiddenException": {
      "documentation": "<p>You are not authorized to perform the requested operation.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "GetComponentPolicyRequest": {
      "members": {
        "componentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component whose policy you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "componentArn",
          "shape": "ComponentBuildVersionArn"
        }
      },
      "required": [
        "componentArn"
      ],
      "type": "structure"
    },
    "GetComponentPolicyResponse": {
      "members": {
        "policy": {
          "documentation": "<p>The component policy.</p>",
          "shape": "ResourcePolicyDocument"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetComponentRequest": {
      "members": {
        "componentBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component that you want to retrieve. Regex requires \"/\\d+$\" suffix.</p>",
          "location": "querystring",
          "locationName": "componentBuildVersionArn",
          "shape": "ComponentVersionArnOrBuildVersionArn"
        }
      },
      "required": [
        "componentBuildVersionArn"
      ],
      "type": "structure"
    },
    "GetComponentResponse": {
      "members": {
        "component": {
          "documentation": "<p>The component object associated with the specified ARN.</p>",
          "shape": "Component"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetContainerRecipePolicyRequest": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe for the policy being requested.</p>",
          "location": "querystring",
          "locationName": "containerRecipeArn",
          "shape": "ContainerRecipeArn"
        }
      },
      "required": [
        "containerRecipeArn"
      ],
      "type": "structure"
    },
    "GetContainerRecipePolicyResponse": {
      "members": {
        "policy": {
          "documentation": "<p>The container recipe policy object that is returned.</p>",
          "shape": "ResourcePolicyDocument"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetContainerRecipeRequest": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe to retrieve.</p>",
          "location": "querystring",
          "locationName": "containerRecipeArn",
          "shape": "ContainerRecipeArn"
        }
      },
      "required": [
        "containerRecipeArn"
      ],
      "type": "structure"
    },
    "GetContainerRecipeResponse": {
      "members": {
        "containerRecipe": {
          "documentation": "<p>The container recipe object that is returned.</p>",
          "shape": "ContainerRecipe"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetDistributionConfigurationRequest": {
      "members": {
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration that you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "distributionConfigurationArn",
          "shape": "DistributionConfigurationArn"
        }
      },
      "required": [
        "distributionConfigurationArn"
      ],
      "type": "structure"
    },
    "GetDistributionConfigurationResponse": {
      "members": {
        "distributionConfiguration": {
          "documentation": "<p>The distribution configuration object.</p>",
          "shape": "DistributionConfiguration"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetImagePipelineRequest": {
      "members": {
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "imagePipelineArn",
          "shape": "ImagePipelineArn"
        }
      },
      "required": [
        "imagePipelineArn"
      ],
      "type": "structure"
    },
    "GetImagePipelineResponse": {
      "members": {
        "imagePipeline": {
          "documentation": "<p>The image pipeline object.</p>",
          "shape": "ImagePipeline"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetImagePolicyRequest": {
      "members": {
        "imageArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image whose policy you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "imageArn",
          "shape": "ImageBuildVersionArn"
        }
      },
      "required": [
        "imageArn"
      ],
      "type": "structure"
    },
    "GetImagePolicyResponse": {
      "members": {
        "policy": {
          "documentation": "<p>The image policy object.</p>",
          "shape": "ResourcePolicyDocument"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetImageRecipePolicyRequest": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe whose policy you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "imageRecipeArn",
          "shape": "ImageRecipeArn"
        }
      },
      "required": [
        "imageRecipeArn"
      ],
      "type": "structure"
    },
    "GetImageRecipePolicyResponse": {
      "members": {
        "policy": {
          "documentation": "<p>The image recipe policy object.</p>",
          "shape": "ResourcePolicyDocument"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetImageRecipeRequest": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "imageRecipeArn",
          "shape": "ImageRecipeArn"
        }
      },
      "required": [
        "imageRecipeArn"
      ],
      "type": "structure"
    },
    "GetImageRecipeResponse": {
      "members": {
        "imageRecipe": {
          "documentation": "<p>The image recipe object.</p>",
          "shape": "ImageRecipe"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetImageRequest": {
      "members": {
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image that you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "imageBuildVersionArn",
          "shape": "ImageVersionArnOrBuildVersionArn"
        }
      },
      "required": [
        "imageBuildVersionArn"
      ],
      "type": "structure"
    },
    "GetImageResponse": {
      "members": {
        "image": {
          "documentation": "<p>The image object.</p>",
          "shape": "Image"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "GetInfrastructureConfigurationRequest": {
      "documentation": "<p> GetInfrastructureConfiguration request object.</p>",
      "members": {
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "infrastructureConfigurationArn",
          "shape": "InfrastructureConfigurationArn"
        }
      },
      "required": [
        "infrastructureConfigurationArn"
      ],
      "type": "structure"
    },
    "GetInfrastructureConfigurationResponse": {
      "documentation": "<p>GetInfrastructureConfiguration response object.</p>",
      "members": {
        "infrastructureConfiguration": {
          "documentation": "<p>The infrastructure configuration object.</p>",
          "shape": "InfrastructureConfiguration"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "HttpPutResponseHopLimit": {
      "max": 64,
      "min": 1,
      "type": "integer"
    },
    "HttpTokens": {
      "pattern": "optional|required",
      "type": "string"
    },
    "IdempotentParameterMismatchException": {
      "documentation": "<p>You have specified a client token for an operation using parameter values that differ from a previous request that used the same client token.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Image": {
      "documentation": "<p>An Image Builder image. You must specify exactly one recipe for the image \u2013 either a container recipe (<code>containerRecipe</code>), which creates a container image, or an image recipe (<code>imageRecipe</code>), which creates an AMI.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image.</p> <note> <p>Semantic versioning is included in each object's Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>",
          "shape": "ImageBuilderArn"
        },
        "buildType": {
          "documentation": "<p>Indicates the type of build that created this image. The build can be initiated in the following ways:</p> <ul> <li> <p> <b>USER_INITIATED</b> \u2013 A manual pipeline build request.</p> </li> <li> <p> <b>SCHEDULED</b> \u2013 A pipeline build initiated by a cron expression in the Image Builder pipeline, or from EventBridge.</p> </li> <li> <p> <b>IMPORT</b> \u2013 A VM import created the image to use as the base image for the recipe.</p> </li> </ul>",
          "shape": "BuildType"
        },
        "containerRecipe": {
          "documentation": "<p>The recipe that is used to create an Image Builder container image.</p>",
          "shape": "ContainerRecipe"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this image was created.</p>",
          "shape": "DateTime"
        },
        "distributionConfiguration": {
          "documentation": "<p>The distribution configuration used when creating this image.</p>",
          "shape": "DistributionConfiguration"
        },
        "enhancedImageMetadataEnabled": {
          "documentation": "<p> Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p>",
          "shape": "NullableBoolean"
        },
        "imageRecipe": {
          "documentation": "<p>The image recipe used when creating the image.</p>",
          "shape": "ImageRecipe"
        },
        "imageTestsConfiguration": {
          "documentation": "<p>The image tests configuration used when creating this image.</p>",
          "shape": "ImageTestsConfiguration"
        },
        "infrastructureConfiguration": {
          "documentation": "<p>The infrastructure used when creating this image.</p>",
          "shape": "InfrastructureConfiguration"
        },
        "name": {
          "documentation": "<p>The name of the image.</p>",
          "shape": "ResourceName"
        },
        "osVersion": {
          "documentation": "<p>The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.</p>",
          "shape": "OsVersion"
        },
        "outputResources": {
          "documentation": "<p>The output resources produced when creating this image.</p>",
          "shape": "OutputResources"
        },
        "platform": {
          "documentation": "<p>The platform of the image.</p>",
          "shape": "Platform"
        },
        "sourcePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that created this image.</p>",
          "shape": "Arn"
        },
        "sourcePipelineName": {
          "documentation": "<p>The name of the image pipeline that created this image.</p>",
          "shape": "ResourceName"
        },
        "state": {
          "documentation": "<p>The state of the image.</p>",
          "shape": "ImageState"
        },
        "tags": {
          "documentation": "<p>The tags of the image.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>Specifies whether this is an AMI or container image.</p>",
          "shape": "ImageType"
        },
        "version": {
          "documentation": "<p>The semantic version of the image.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ImageBuildVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+$",
      "type": "string"
    },
    "ImageBuilderArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):(?:image-recipe|container-recipe|infrastructure-configuration|distribution-configuration|component|image|image-pipeline)/[a-z0-9-_]+(?:/(?:(?:x|[0-9]+)\\.(?:x|[0-9]+)\\.(?:x|[0-9]+))(?:/[0-9]+)?)?$",
      "type": "string"
    },
    "ImagePackage": {
      "documentation": "<p>Represents a package installed on an Image Builder image.</p>",
      "members": {
        "packageName": {
          "documentation": "<p>The name of the package as reported to the operating system package manager.</p>",
          "shape": "NonEmptyString"
        },
        "packageVersion": {
          "documentation": "<p>The version of the package as reported to the operating system package manager.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ImagePackageList": {
      "member": {
        "shape": "ImagePackage"
      },
      "type": "list"
    },
    "ImagePipeline": {
      "documentation": "<p>Details of an image pipeline.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline.</p>",
          "shape": "ImageBuilderArn"
        },
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that is used for this pipeline.</p>",
          "shape": "Arn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this image pipeline was created.</p>",
          "shape": "DateTime"
        },
        "dateLastRun": {
          "documentation": "<p>The date on which this image pipeline was last run.</p>",
          "shape": "DateTime"
        },
        "dateNextRun": {
          "documentation": "<p>The date on which this image pipeline will next be run.</p>",
          "shape": "DateTime"
        },
        "dateUpdated": {
          "documentation": "<p>The date on which this image pipeline was last updated.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the image pipeline.</p>",
          "shape": "NonEmptyString"
        },
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration associated with this image pipeline.</p>",
          "shape": "Arn"
        },
        "enhancedImageMetadataEnabled": {
          "documentation": "<p> Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p>",
          "shape": "NullableBoolean"
        },
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe associated with this image pipeline.</p>",
          "shape": "Arn"
        },
        "imageTestsConfiguration": {
          "documentation": "<p>The image tests configuration of the image pipeline.</p>",
          "shape": "ImageTestsConfiguration"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration associated with this image pipeline.</p>",
          "shape": "Arn"
        },
        "name": {
          "documentation": "<p>The name of the image pipeline.</p>",
          "shape": "ResourceName"
        },
        "platform": {
          "documentation": "<p>The platform of the image pipeline.</p>",
          "shape": "Platform"
        },
        "schedule": {
          "documentation": "<p>The schedule of the image pipeline.</p>",
          "shape": "Schedule"
        },
        "status": {
          "documentation": "<p>The status of the image pipeline.</p>",
          "shape": "PipelineStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this image pipeline.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ImagePipelineArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-pipeline/[a-z0-9-_]+$",
      "type": "string"
    },
    "ImagePipelineList": {
      "member": {
        "shape": "ImagePipeline"
      },
      "type": "list"
    },
    "ImageRecipe": {
      "documentation": "<p>An image recipe.</p>",
      "members": {
        "additionalInstanceConfiguration": {
          "documentation": "<p>Before you create a new AMI, Image Builder launches temporary Amazon EC2 instances to build and test your image configuration. Instance configuration adds a layer of control over those instances. You can define settings and add scripts to run when an instance is launched from your AMI.</p>",
          "shape": "AdditionalInstanceConfiguration"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe.</p>",
          "shape": "ImageBuilderArn"
        },
        "blockDeviceMappings": {
          "documentation": "<p>The block device mappings to apply when creating images from this recipe.</p>",
          "shape": "InstanceBlockDeviceMappings"
        },
        "components": {
          "documentation": "<p>The components of the image recipe.</p>",
          "shape": "ComponentConfigurationList"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this image recipe was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the image recipe.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "parentImage": {
          "documentation": "<p>The base image of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the image recipe.</p>",
          "shape": "Platform"
        },
        "tags": {
          "documentation": "<p>The tags of the image recipe.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>Specifies which type of image is created by the recipe - an AMI or a container image.</p>",
          "shape": "ImageType"
        },
        "version": {
          "documentation": "<p>The version of the image recipe.</p>",
          "shape": "VersionNumber"
        },
        "workingDirectory": {
          "documentation": "<p>The working directory to be used during build and test workflows.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ImageRecipeArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image-recipe/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$",
      "type": "string"
    },
    "ImageRecipeSummary": {
      "documentation": "<p>A summary of an image recipe.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe.</p>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this image recipe was created.</p>",
          "shape": "DateTime"
        },
        "name": {
          "documentation": "<p>The name of the image recipe.</p>",
          "shape": "ResourceName"
        },
        "owner": {
          "documentation": "<p>The owner of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "parentImage": {
          "documentation": "<p>The base image of the image recipe.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the image recipe.</p>",
          "shape": "Platform"
        },
        "tags": {
          "documentation": "<p>The tags of the image recipe.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ImageRecipeSummaryList": {
      "member": {
        "shape": "ImageRecipeSummary"
      },
      "type": "list"
    },
    "ImageState": {
      "documentation": "<p> Image state shows the image status and the reason for that status.</p>",
      "members": {
        "reason": {
          "documentation": "<p>The reason for the image's status.</p>",
          "shape": "NonEmptyString"
        },
        "status": {
          "documentation": "<p>The status of the image.</p>",
          "shape": "ImageStatus"
        }
      },
      "type": "structure"
    },
    "ImageStatus": {
      "enum": [
        "PENDING",
        "CREATING",
        "BUILDING",
        "TESTING",
        "DISTRIBUTING",
        "INTEGRATING",
        "AVAILABLE",
        "CANCELLED",
        "FAILED",
        "DEPRECATED",
        "DELETED"
      ],
      "type": "string"
    },
    "ImageSummary": {
      "documentation": "<p>An image summary.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image.</p>",
          "shape": "ImageBuilderArn"
        },
        "buildType": {
          "documentation": "<p>Indicates the type of build that created this image. The build can be initiated in the following ways:</p> <ul> <li> <p> <b>USER_INITIATED</b> \u2013 A manual pipeline build request.</p> </li> <li> <p> <b>SCHEDULED</b> \u2013 A pipeline build initiated by a cron expression in the Image Builder pipeline, or from EventBridge.</p> </li> <li> <p> <b>IMPORT</b> \u2013 A VM import created the image to use as the base image for the recipe.</p> </li> </ul>",
          "shape": "BuildType"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this image was created.</p>",
          "shape": "DateTime"
        },
        "name": {
          "documentation": "<p>The name of the image.</p>",
          "shape": "ResourceName"
        },
        "osVersion": {
          "documentation": "<p>The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.</p>",
          "shape": "OsVersion"
        },
        "outputResources": {
          "documentation": "<p>The output resources produced when creating this image.</p>",
          "shape": "OutputResources"
        },
        "owner": {
          "documentation": "<p>The owner of the image.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the image.</p>",
          "shape": "Platform"
        },
        "state": {
          "documentation": "<p>The state of the image.</p>",
          "shape": "ImageState"
        },
        "tags": {
          "documentation": "<p>The tags of the image.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>Specifies whether this is an AMI or container image.</p>",
          "shape": "ImageType"
        },
        "version": {
          "documentation": "<p>The version of the image.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ImageSummaryList": {
      "member": {
        "shape": "ImageSummary"
      },
      "type": "list"
    },
    "ImageTestsConfiguration": {
      "documentation": "<p>Configure image tests for your pipeline build. Tests run after building the image, to verify that the AMI or container image is valid before distributing it.</p>",
      "members": {
        "imageTestsEnabled": {
          "documentation": "<p>Determines if tests should run after building the image. Image Builder defaults to enable tests to run following the image build, before image distribution.</p>",
          "shape": "NullableBoolean"
        },
        "timeoutMinutes": {
          "documentation": "<p>The maximum time in minutes that tests are permitted to run.</p>",
          "shape": "ImageTestsTimeoutMinutes"
        }
      },
      "type": "structure"
    },
    "ImageTestsTimeoutMinutes": {
      "max": 1440,
      "min": 60,
      "type": "integer"
    },
    "ImageType": {
      "enum": [
        "AMI",
        "DOCKER"
      ],
      "type": "string"
    },
    "ImageVersion": {
      "documentation": "<p>The defining characteristics of a specific version of an Image Builder image.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of a specific version of an Image Builder image.</p> <note> <p>Semantic versioning is included in each object's Amazon Resource Name (ARN), at the level that applies to that object as follows:</p> <ol> <li> <p>Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.</p> </li> <li> <p>Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</p> </li> <li> <p>Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.</p> </li> </ol> </note>",
          "shape": "ImageBuilderArn"
        },
        "buildType": {
          "documentation": "<p>Indicates the type of build that created this image. The build can be initiated in the following ways:</p> <ul> <li> <p> <b>USER_INITIATED</b> \u2013 A manual pipeline build request.</p> </li> <li> <p> <b>SCHEDULED</b> \u2013 A pipeline build initiated by a cron expression in the Image Builder pipeline, or from EventBridge.</p> </li> <li> <p> <b>IMPORT</b> \u2013 A VM import created the image to use as the base image for the recipe.</p> </li> </ul>",
          "shape": "BuildType"
        },
        "dateCreated": {
          "documentation": "<p>The date on which this specific version of the Image Builder image was created.</p>",
          "shape": "DateTime"
        },
        "name": {
          "documentation": "<p>The name of this specific version of an Image Builder image.</p>",
          "shape": "ResourceName"
        },
        "osVersion": {
          "documentation": "<p>The operating system version of the Amazon EC2 build instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.</p>",
          "shape": "OsVersion"
        },
        "owner": {
          "documentation": "<p>The owner of the image version.</p>",
          "shape": "NonEmptyString"
        },
        "platform": {
          "documentation": "<p>The platform of the image version, for example \"Windows\" or \"Linux\".</p>",
          "shape": "Platform"
        },
        "type": {
          "documentation": "<p>Specifies whether this image is an AMI or a container image.</p>",
          "shape": "ImageType"
        },
        "version": {
          "documentation": "<p>Details for a specific version of an Image Builder image. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ImageVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/[0-9]+\\.[0-9]+\\.[0-9]+$",
      "type": "string"
    },
    "ImageVersionArnOrBuildVersionArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):image/[a-z0-9-_]+/(?:(?:([0-9]+|x)\\.([0-9]+|x)\\.([0-9]+|x))|(?:[0-9]+\\.[0-9]+\\.[0-9]+/[0-9]+))$",
      "type": "string"
    },
    "ImageVersionList": {
      "member": {
        "shape": "ImageVersion"
      },
      "type": "list"
    },
    "ImportComponentRequest": {
      "members": {
        "changeDescription": {
          "documentation": "<p>The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.</p>",
          "shape": "NonEmptyString"
        },
        "clientToken": {
          "documentation": "<p>The idempotency token of the component.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "data": {
          "documentation": "<p>The data of the component. Used to specify the data inline. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.</p>",
          "shape": "NonEmptyString"
        },
        "description": {
          "documentation": "<p>The description of the component. Describes the contents of the component.</p>",
          "shape": "NonEmptyString"
        },
        "format": {
          "documentation": "<p>The format of the resource that you want to import as a component.</p>",
          "shape": "ComponentFormat"
        },
        "kmsKeyId": {
          "documentation": "<p>The ID of the KMS key that should be used to encrypt this component.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p> The name of the component.</p>",
          "shape": "ResourceName"
        },
        "platform": {
          "documentation": "<p>The platform of the component.</p>",
          "shape": "Platform"
        },
        "semanticVersion": {
          "documentation": "<p>The semantic version of the component. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "VersionNumber"
        },
        "tags": {
          "documentation": "<p>The tags of the component.</p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p>The type of the component denotes whether the component is used to build the image, or only to test it.</p>",
          "shape": "ComponentType"
        },
        "uri": {
          "documentation": "<p>The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either <code>data</code> or <code>uri</code> can be used to specify the data within the component.</p>",
          "shape": "Uri"
        }
      },
      "required": [
        "name",
        "semanticVersion",
        "type",
        "format",
        "platform",
        "clientToken"
      ],
      "type": "structure"
    },
    "ImportComponentResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "componentBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the imported component.</p>",
          "shape": "ComponentBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ImportVmImageRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>Unique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html\">Ensuring idempotency</a> in the <i>Amazon EC2 API Reference</i>.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description for the base image that is created by the import process.</p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p>The name of the base image that is created by the import process.</p>",
          "shape": "NonEmptyString"
        },
        "osVersion": {
          "documentation": "<p>The operating system version for the imported VM.</p>",
          "shape": "OsVersion"
        },
        "platform": {
          "documentation": "<p>The operating system platform for the imported VM.</p>",
          "shape": "Platform"
        },
        "semanticVersion": {
          "documentation": "<p>The semantic version to attach to the base image that was created during the import process. This version follows the semantic version syntax.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Assignment:</b> For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number to the fourth node.</p> <p> <b>Patterns:</b> You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.</p> </note>",
          "shape": "VersionNumber"
        },
        "tags": {
          "documentation": "<p>Tags that are attached to the import resources.</p>",
          "shape": "TagMap"
        },
        "vmImportTaskId": {
          "documentation": "<p>The <code>importTaskId</code> (API) or <code>ImportTaskId</code> (CLI) from the Amazon EC2 VM import process. Image Builder retrieves information from the import process to pull in the AMI that is created from the VM source as the base image for your recipe.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "name",
        "semanticVersion",
        "platform",
        "vmImportTaskId",
        "clientToken"
      ],
      "type": "structure"
    },
    "ImportVmImageResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token that was used for this request.</p>",
          "shape": "ClientToken"
        },
        "imageArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the AMI that was created during the VM import process. This AMI is used as the base image for the recipe that imported the VM.</p>",
          "shape": "Arn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "InfrastructureConfiguration": {
      "documentation": "<p>Details of the infrastructure configuration.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration.</p>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which the infrastructure configuration was created.</p>",
          "shape": "DateTime"
        },
        "dateUpdated": {
          "documentation": "<p>The date on which the infrastructure configuration was last updated.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "instanceMetadataOptions": {
          "documentation": "<p>The instance metadata option settings for the infrastructure configuration.</p>",
          "shape": "InstanceMetadataOptions"
        },
        "instanceProfileName": {
          "documentation": "<p>The instance profile of the infrastructure configuration.</p>",
          "shape": "InstanceProfileNameType"
        },
        "instanceTypes": {
          "documentation": "<p>The instance types of the infrastructure configuration.</p>",
          "shape": "InstanceTypeList"
        },
        "keyPair": {
          "documentation": "<p>The Amazon EC2 key pair of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "logging": {
          "documentation": "<p>The logging configuration of the infrastructure configuration.</p>",
          "shape": "Logging"
        },
        "name": {
          "documentation": "<p>The name of the infrastructure configuration.</p>",
          "shape": "ResourceName"
        },
        "resourceTags": {
          "documentation": "<p>The tags attached to the resource created by Image Builder.</p>",
          "shape": "ResourceTagMap"
        },
        "securityGroupIds": {
          "documentation": "<p>The security group IDs of the infrastructure configuration.</p>",
          "shape": "SecurityGroupIds"
        },
        "snsTopicArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the SNS topic to which we send image build event notifications.</p> <note> <p>EC2 Image Builder is unable to send notifications to SNS topics that are encrypted using keys from other accounts. The key that is used to encrypt the SNS topic must reside in the account that the Image Builder service runs under.</p> </note>",
          "shape": "NonEmptyString"
        },
        "subnetId": {
          "documentation": "<p>The subnet ID of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "tags": {
          "documentation": "<p>The tags of the infrastructure configuration.</p>",
          "shape": "TagMap"
        },
        "terminateInstanceOnFailure": {
          "documentation": "<p>The terminate instance on failure configuration of the infrastructure configuration.</p>",
          "shape": "NullableBoolean"
        }
      },
      "type": "structure"
    },
    "InfrastructureConfigurationArn": {
      "pattern": "^arn:aws[^:]*:imagebuilder:[^:]+:(?:[0-9]{12}|aws):infrastructure-configuration/[a-z0-9-_]+$",
      "type": "string"
    },
    "InfrastructureConfigurationSummary": {
      "documentation": "<p>The infrastructure used when building Amazon EC2 AMIs.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration.</p>",
          "shape": "ImageBuilderArn"
        },
        "dateCreated": {
          "documentation": "<p>The date on which the infrastructure configuration was created.</p>",
          "shape": "DateTime"
        },
        "dateUpdated": {
          "documentation": "<p>The date on which the infrastructure configuration was last updated.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>The description of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "instanceProfileName": {
          "documentation": "<p>The instance profile of the infrastructure configuration.</p>",
          "shape": "InstanceProfileNameType"
        },
        "instanceTypes": {
          "documentation": "<p>The instance types of the infrastructure configuration.</p>",
          "shape": "InstanceTypeList"
        },
        "name": {
          "documentation": "<p>The name of the infrastructure configuration.</p>",
          "shape": "ResourceName"
        },
        "resourceTags": {
          "documentation": "<p>The tags attached to the image created by Image Builder.</p>",
          "shape": "ResourceTagMap"
        },
        "tags": {
          "documentation": "<p>The tags of the infrastructure configuration.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "InfrastructureConfigurationSummaryList": {
      "member": {
        "shape": "InfrastructureConfigurationSummary"
      },
      "type": "list"
    },
    "InlineComponentData": {
      "max": 16000,
      "min": 1,
      "pattern": "[^\\x00]+",
      "type": "string"
    },
    "InlineDockerFileTemplate": {
      "max": 16000,
      "min": 1,
      "pattern": "[^\\x00]+",
      "type": "string"
    },
    "InstanceBlockDeviceMapping": {
      "documentation": "<p>Defines block device mappings for the instance used to configure your image.</p>",
      "members": {
        "deviceName": {
          "documentation": "<p>The device to which these mappings apply.</p>",
          "shape": "NonEmptyString"
        },
        "ebs": {
          "documentation": "<p>Use to manage Amazon EBS-specific configuration for this mapping.</p>",
          "shape": "EbsInstanceBlockDeviceSpecification"
        },
        "noDevice": {
          "documentation": "<p>Use to remove a mapping from the base image.</p>",
          "shape": "EmptyString"
        },
        "virtualName": {
          "documentation": "<p>Use to manage instance ephemeral devices.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "InstanceBlockDeviceMappings": {
      "member": {
        "shape": "InstanceBlockDeviceMapping"
      },
      "type": "list"
    },
    "InstanceConfiguration": {
      "documentation": "<p>Defines a custom base AMI and block device mapping configurations of an instance used for building and testing container images.</p>",
      "members": {
        "blockDeviceMappings": {
          "documentation": "<p>Defines the block devices to attach for building an instance from this Image Builder AMI.</p>",
          "shape": "InstanceBlockDeviceMappings"
        },
        "image": {
          "documentation": "<p>The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "InstanceMetadataOptions": {
      "documentation": "<p>The instance metadata options that apply to the HTTP requests that pipeline builds use to launch EC2 build and test instances. For more information about instance metadata options, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html\">Configure the instance metadata options</a> in the <i> <i>Amazon EC2 User Guide</i> </i> for Linux instances, or <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/configuring-instance-metadata-options.html\">Configure the instance metadata options</a> in the <i> <i>Amazon EC2 Windows Guide</i> </i> for Windows instances.</p>",
      "members": {
        "httpPutResponseHopLimit": {
          "documentation": "<p>Limit the number of hops that an instance metadata request can traverse to reach its destination.</p>",
          "shape": "HttpPutResponseHopLimit"
        },
        "httpTokens": {
          "documentation": "<p>Indicates whether a signed token header is required for instance metadata retrieval requests. The values affect the response as follows:</p> <ul> <li> <p> <b>required</b> \u2013 When you retrieve the IAM role credentials, version 2.0 credentials are returned in all cases.</p> </li> <li> <p> <b>optional</b> \u2013 You can include a signed token header in your request to retrieve instance metadata, or you can leave it out. If you include it, version 2.0 credentials are returned for the IAM role. Otherwise, version 1.0 credentials are returned.</p> </li> </ul> <p>The default setting is <b>optional</b>.</p>",
          "shape": "HttpTokens"
        }
      },
      "type": "structure"
    },
    "InstanceProfileNameType": {
      "max": 256,
      "min": 1,
      "pattern": "^[\\w+=,.@-]+$",
      "type": "string"
    },
    "InstanceType": {
      "type": "string"
    },
    "InstanceTypeList": {
      "member": {
        "shape": "InstanceType"
      },
      "type": "list"
    },
    "InvalidPaginationTokenException": {
      "documentation": "<p>You have provided an invalid pagination token in your request.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidParameterCombinationException": {
      "documentation": "<p>You have specified two or more mutually exclusive parameters. Review the error message for details.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidParameterException": {
      "documentation": "<p>The specified parameter is invalid. Review the available parameters for the API request.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>The value that you provided for the specified parameter is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>You have made a request for an action that is not supported by the service.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidVersionNumberException": {
      "documentation": "<p>Your version number is out of bounds or does not follow the required syntax.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "LaunchPermissionConfiguration": {
      "documentation": "<p>Describes the configuration for a launch permission. The launch permission modification request is sent to the <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a> API on behalf of the user for each Region they have selected to distribute the AMI. To make an AMI public, set the launch permission authorized accounts to <code>all</code>. See the examples for making an AMI public at <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyImageAttribute.html\">Amazon EC2 ModifyImageAttribute</a>.</p>",
      "members": {
        "organizationArns": {
          "documentation": "<p>The ARN for an Amazon Web Services Organization that you want to share your AMI with. For more information, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html\">What is Organizations?</a>.</p>",
          "shape": "OrganizationArnList"
        },
        "organizationalUnitArns": {
          "documentation": "<p>The ARN for an Organizations organizational unit (OU) that you want to share your AMI with. For more information about key concepts for Organizations, see <a href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html\">Organizations terminology and concepts</a>.</p>",
          "shape": "OrganizationalUnitArnList"
        },
        "userGroups": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "StringList"
        },
        "userIds": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "shape": "AccountList"
        }
      },
      "type": "structure"
    },
    "LaunchTemplateConfiguration": {
      "documentation": "<p>Identifies an Amazon EC2 launch template to use for a specific account.</p>",
      "members": {
        "accountId": {
          "documentation": "<p>The account ID that this configuration applies to.</p>",
          "shape": "AccountId"
        },
        "launchTemplateId": {
          "documentation": "<p>Identifies the Amazon EC2 launch template to use.</p>",
          "shape": "LaunchTemplateId"
        },
        "setDefaultVersion": {
          "documentation": "<p>Set the specified Amazon EC2 launch template as the default launch template for the specified account.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "launchTemplateId"
      ],
      "type": "structure"
    },
    "LaunchTemplateConfigurationList": {
      "max": 100,
      "member": {
        "shape": "LaunchTemplateConfiguration"
      },
      "min": 1,
      "type": "list"
    },
    "LaunchTemplateId": {
      "pattern": "^lt-[a-z0-9-_]{17}$",
      "type": "string"
    },
    "LicenseConfigurationArn": {
      "pattern": "^arn:aws[^:]*:license-manager:[^:]+:[0-9]{12}:license-configuration:lic-[a-z0-9-_]{32}$",
      "type": "string"
    },
    "LicenseConfigurationArnList": {
      "max": 50,
      "member": {
        "shape": "LicenseConfigurationArn"
      },
      "min": 1,
      "type": "list"
    },
    "ListComponentBuildVersionsRequest": {
      "members": {
        "componentVersionArn": {
          "documentation": "<p>The component version Amazon Resource Name (ARN) whose versions you want to list.</p>",
          "shape": "ComponentVersionArn"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "componentVersionArn"
      ],
      "type": "structure"
    },
    "ListComponentBuildVersionsResponse": {
      "members": {
        "componentSummaryList": {
          "documentation": "<p>The list of component summaries for the specified semantic version.</p>",
          "shape": "ComponentSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListComponentsRequest": {
      "members": {
        "byName": {
          "documentation": "<p>Returns the list of component build versions for the specified name.</p>",
          "shape": "Boolean"
        },
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>supportedOsVersion</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        },
        "owner": {
          "documentation": "<p>The owner defines which components you want to list. By default, this request will only show components owned by your account. You can use this field to specify if you want to view components owned by yourself, by Amazon, or those components that have been shared with you by other customers.</p>",
          "shape": "Ownership"
        }
      },
      "type": "structure"
    },
    "ListComponentsResponse": {
      "members": {
        "componentVersionList": {
          "documentation": "<p>The list of component semantic versions.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> </note>",
          "shape": "ComponentVersionList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListContainerRecipesRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>containerType</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return in the list.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>Provides a token for pagination, which determines where to begin the next set of results when the current set reaches the maximum for one request.</p>",
          "shape": "NonEmptyString"
        },
        "owner": {
          "documentation": "<p>Returns container recipes belonging to the specified owner, that have been shared with you. You can omit this field to return container recipes belonging to your account.</p>",
          "shape": "Ownership"
        }
      },
      "type": "structure"
    },
    "ListContainerRecipesResponse": {
      "members": {
        "containerRecipeSummaryList": {
          "documentation": "<p>The list of container recipes returned for the request.</p>",
          "shape": "ContainerRecipeSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token field is used for paginated responses. When this is not empty, there are additional container recipes that the service has not included in this response. Use this token with the next request to retrieve additional list items.</p>",
          "shape": "NonEmptyString"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListDistributionConfigurationsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>You can filter on <code>name</code> to streamline results.</p>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDistributionConfigurationsResponse": {
      "members": {
        "distributionConfigurationSummaryList": {
          "documentation": "<p>The list of distributions.</p>",
          "shape": "DistributionConfigurationSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImageBuildVersionsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "imageVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image whose build versions you want to retrieve.</p>",
          "shape": "ImageVersionArn"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "imageVersionArn"
      ],
      "type": "structure"
    },
    "ListImageBuildVersionsResponse": {
      "members": {
        "imageSummaryList": {
          "documentation": "<p>The list of image build versions.</p>",
          "shape": "ImageSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImagePackagesRequest": {
      "members": {
        "imageBuildVersionArn": {
          "documentation": "<p>Filter results for the ListImagePackages request by the Image Build Version ARN</p>",
          "shape": "ImageBuildVersionArn"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maxiumum number of results to return from the ListImagePackages request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "imageBuildVersionArn"
      ],
      "type": "structure"
    },
    "ListImagePackagesResponse": {
      "members": {
        "imagePackageList": {
          "documentation": "<p>The list of Image Packages returned in the response.</p>",
          "shape": "ImagePackageList"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImagePipelineImagesRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline whose images you want to view.</p>",
          "shape": "ImagePipelineArn"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "imagePipelineArn"
      ],
      "type": "structure"
    },
    "ListImagePipelineImagesResponse": {
      "members": {
        "imageSummaryList": {
          "documentation": "<p>The list of images built by this pipeline.</p>",
          "shape": "ImageSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImagePipelinesRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>description</code> </p> </li> <li> <p> <code>distributionConfigurationArn</code> </p> </li> <li> <p> <code>imageRecipeArn</code> </p> </li> <li> <p> <code>infrastructureConfigurationArn</code> </p> </li> <li> <p> <code>name</code> </p> </li> <li> <p> <code>status</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListImagePipelinesResponse": {
      "members": {
        "imagePipelineList": {
          "documentation": "<p>The list of image pipelines.</p>",
          "shape": "ImagePipelineList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImageRecipesRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        },
        "owner": {
          "documentation": "<p>The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.</p>",
          "shape": "Ownership"
        }
      },
      "type": "structure"
    },
    "ListImageRecipesResponse": {
      "members": {
        "imageRecipeSummaryList": {
          "documentation": "<p>The list of image pipelines.</p>",
          "shape": "ImageRecipeSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListImagesRequest": {
      "members": {
        "byName": {
          "documentation": "<p>Requests a list of images with a specific recipe name.</p>",
          "shape": "Boolean"
        },
        "filters": {
          "documentation": "<p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>osVersion</code> </p> </li> <li> <p> <code>platform</code> </p> </li> <li> <p> <code>type</code> </p> </li> <li> <p> <code>version</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "includeDeprecated": {
          "documentation": "<p>Includes deprecated images in the response list.</p>",
          "shape": "NullableBoolean"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        },
        "owner": {
          "documentation": "<p>The owner defines which images you want to list. By default, this request will only show images owned by your account. You can use this field to specify if you want to view images owned by yourself, by Amazon, or those images that have been shared with you by other customers.</p>",
          "shape": "Ownership"
        }
      },
      "type": "structure"
    },
    "ListImagesResponse": {
      "members": {
        "imageVersionList": {
          "documentation": "<p>The list of image semantic versions.</p> <note> <p>The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.</p> <p> <b>Filtering:</b> With semantic versioning, you have the flexibility to use wildcards (x) to specify the most recent versions or nodes when selecting the base image or components for your recipe. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards.</p> </note>",
          "shape": "ImageVersionList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListInfrastructureConfigurationsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>You can filter on <code>name</code> to streamline results.</p>",
          "shape": "FilterList"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum items to return in a request.</p>",
          "shape": "RestrictedInteger"
        },
        "nextToken": {
          "documentation": "<p>A token to specify where to start paginating. This is the NextToken from a previously truncated response.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListInfrastructureConfigurationsResponse": {
      "members": {
        "infrastructureConfigurationSummaryList": {
          "documentation": "<p>The list of infrastructure configurations.</p>",
          "shape": "InfrastructureConfigurationSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The next token used for paginated responses. When this is not empty, there are additional elements that the service has not included in this request. Use this token with the next request to retrieve additional objects.</p>",
          "shape": "PaginationToken"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ImageBuilderArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>The tags for the specified resource.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "Logging": {
      "documentation": "<p>Logging configuration defines where Image Builder uploads your logs.</p>",
      "members": {
        "s3Logs": {
          "documentation": "<p>The Amazon S3 logging configuration.</p>",
          "shape": "S3Logs"
        }
      },
      "type": "structure"
    },
    "MaxParallelLaunches": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "NonEmptyString": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "NullableBoolean": {
      "type": "boolean"
    },
    "OrganizationArn": {
      "pattern": "^arn:aws[^:]*:organizations::[0-9]{12}:organization/o-[a-z0-9]{10,32}$",
      "type": "string"
    },
    "OrganizationArnList": {
      "max": 25,
      "member": {
        "shape": "OrganizationArn"
      },
      "min": 1,
      "type": "list"
    },
    "OrganizationalUnitArn": {
      "pattern": "^arn:aws[^:]*:organizations::[0-9]{12}:ou/o-[a-z0-9]{10,32}/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}",
      "type": "string"
    },
    "OrganizationalUnitArnList": {
      "max": 25,
      "member": {
        "shape": "OrganizationalUnitArn"
      },
      "min": 1,
      "type": "list"
    },
    "OsVersion": {
      "min": 1,
      "type": "string"
    },
    "OsVersionList": {
      "max": 25,
      "member": {
        "shape": "OsVersion"
      },
      "min": 1,
      "type": "list"
    },
    "OutputResources": {
      "documentation": "<p>The resources produced by this image.</p>",
      "members": {
        "amis": {
          "documentation": "<p>The Amazon EC2 AMIs created by this image.</p>",
          "shape": "AmiList"
        },
        "containers": {
          "documentation": "<p>Container images that the pipeline has generated and stored in the output repository.</p>",
          "shape": "ContainerList"
        }
      },
      "type": "structure"
    },
    "Ownership": {
      "enum": [
        "Self",
        "Shared",
        "Amazon"
      ],
      "type": "string"
    },
    "PaginationToken": {
      "max": 65535,
      "min": 1,
      "type": "string"
    },
    "PipelineExecutionStartCondition": {
      "enum": [
        "EXPRESSION_MATCH_ONLY",
        "EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE"
      ],
      "type": "string"
    },
    "PipelineStatus": {
      "enum": [
        "DISABLED",
        "ENABLED"
      ],
      "type": "string"
    },
    "Platform": {
      "enum": [
        "Windows",
        "Linux"
      ],
      "type": "string"
    },
    "PutComponentPolicyRequest": {
      "members": {
        "componentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component that this policy should be applied to.</p>",
          "shape": "ComponentBuildVersionArn"
        },
        "policy": {
          "documentation": "<p>The policy to apply.</p>",
          "shape": "ResourcePolicyDocument"
        }
      },
      "required": [
        "componentArn",
        "policy"
      ],
      "type": "structure"
    },
    "PutComponentPolicyResponse": {
      "members": {
        "componentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the component that this policy was applied to.</p>",
          "shape": "ComponentBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "PutContainerRecipePolicyRequest": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that this policy should be applied to.</p>",
          "shape": "ContainerRecipeArn"
        },
        "policy": {
          "documentation": "<p>The policy to apply to the container recipe.</p>",
          "shape": "ResourcePolicyDocument"
        }
      },
      "required": [
        "containerRecipeArn",
        "policy"
      ],
      "type": "structure"
    },
    "PutContainerRecipePolicyResponse": {
      "members": {
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container recipe that this policy was applied to.</p>",
          "shape": "ContainerRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "PutImagePolicyRequest": {
      "members": {
        "imageArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image that this policy should be applied to.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "policy": {
          "documentation": "<p>The policy to apply.</p>",
          "shape": "ResourcePolicyDocument"
        }
      },
      "required": [
        "imageArn",
        "policy"
      ],
      "type": "structure"
    },
    "PutImagePolicyResponse": {
      "members": {
        "imageArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image that this policy was applied to.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "PutImageRecipePolicyRequest": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that this policy should be applied to.</p>",
          "shape": "ImageRecipeArn"
        },
        "policy": {
          "documentation": "<p>The policy to apply.</p>",
          "shape": "ResourcePolicyDocument"
        }
      },
      "required": [
        "imageRecipeArn",
        "policy"
      ],
      "type": "structure"
    },
    "PutImageRecipePolicyResponse": {
      "members": {
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that this policy was applied to.</p>",
          "shape": "ImageRecipeArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "RegionList": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "ResourceAlreadyExistsException": {
      "documentation": "<p>The resource that you are trying to create already exists.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceDependencyException": {
      "documentation": "<p>You have attempted to mutate or delete a resource with a dependency that prohibits this action. See the error message for more details.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceInUseException": {
      "documentation": "<p>The resource that you are trying to operate on is currently in use. Review the message details and retry later.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceName": {
      "pattern": "^[-_A-Za-z-0-9][-_A-Za-z0-9 ]{1,126}[-_A-Za-z-0-9]$",
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>At least one of the resources referenced by your request does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ResourcePolicyDocument": {
      "max": 30000,
      "min": 1,
      "type": "string"
    },
    "ResourceTagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 30,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "RestrictedInteger": {
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "S3ExportConfiguration": {
      "documentation": "<p>Properties that configure export from your build instance to a compatible file format for your VM.</p>",
      "members": {
        "diskImageFormat": {
          "documentation": "<p>Export the updated image to one of the following supported disk image formats:</p> <ul> <li> <p> <b>Virtual Hard Disk (VHD)</b> \u2013 Compatible with Citrix Xen and Microsoft Hyper-V virtualization products.</p> </li> <li> <p> <b>Stream-optimized ESX Virtual Machine Disk (VMDK)</b> \u2013 Compatible with VMware ESX and VMware vSphere versions 4, 5, and 6.</p> </li> <li> <p> <b>Raw</b> \u2013 Raw format.</p> </li> </ul>",
          "shape": "DiskImageFormat"
        },
        "roleName": {
          "documentation": "<p>The name of the role that grants VM Import/Export permission to export images to your S3 bucket.</p>",
          "shape": "NonEmptyString"
        },
        "s3Bucket": {
          "documentation": "<p>The S3 bucket in which to store the output disk images for your VM.</p>",
          "shape": "NonEmptyString"
        },
        "s3Prefix": {
          "documentation": "<p>The Amazon S3 path for the bucket where the output disk images for your VM are stored.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "roleName",
        "diskImageFormat",
        "s3Bucket"
      ],
      "type": "structure"
    },
    "S3Logs": {
      "documentation": "<p>Amazon S3 logging configuration.</p>",
      "members": {
        "s3BucketName": {
          "documentation": "<p>The S3 bucket in which to store the logs.</p>",
          "shape": "NonEmptyString"
        },
        "s3KeyPrefix": {
          "documentation": "<p>The Amazon S3 path to the bucket where the logs are stored.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "Schedule": {
      "documentation": "<p>A schedule configures how often and when a pipeline will automatically create a new image.</p>",
      "members": {
        "pipelineExecutionStartCondition": {
          "documentation": "<p>The condition configures when the pipeline should trigger a new image build. When the <code>pipelineExecutionStartCondition</code> is set to <code>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</code>, and you use semantic version filters on the base image or components in your image recipe, EC2 Image Builder will build a new image only when there are new versions of the image or components in your recipe that match the semantic version filter. When it is set to <code>EXPRESSION_MATCH_ONLY</code>, it will build a new image every time the CRON expression matches the current time. For semantic version syntax, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/APIReference/API_CreateComponent.html\">CreateComponent</a> in the <i> EC2 Image Builder API Reference</i>.</p>",
          "shape": "PipelineExecutionStartCondition"
        },
        "scheduleExpression": {
          "documentation": "<p>The cron expression determines how often EC2 Image Builder evaluates your <code>pipelineExecutionStartCondition</code>.</p> <p>For information on how to format a cron expression in Image Builder, see <a href=\"https://docs.aws.amazon.com/imagebuilder/latest/userguide/image-builder-cron.html\">Use cron expressions in EC2 Image Builder</a>.</p>",
          "shape": "NonEmptyString"
        },
        "timezone": {
          "documentation": "<p>The timezone that applies to the scheduling expression. For example, \"Etc/UTC\", \"America/Los_Angeles\" in the <a href=\"https://www.joda.org/joda-time/timezones.html\">IANA timezone format</a>. If not specified this defaults to UTC.</p>",
          "shape": "Timezone"
        }
      },
      "type": "structure"
    },
    "SecurityGroupIds": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "ServiceException": {
      "documentation": "<p>This exception is thrown when the service encounters an unrecoverable exception.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>You have exceeded the number of permitted resources or operations for this service. For service quotas, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/imagebuilder.html#limits_imagebuilder\">EC2 Image Builder endpoints and quotas</a>.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is unable to process your request at this time.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "SnsTopicArn": {
      "pattern": "^arn:aws[^:]*:sns:[^:]+:[0-9]{12}:[a-zA-Z0-9-_]{1,256}$",
      "type": "string"
    },
    "StartImagePipelineExecutionRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that you want to manually invoke.</p>",
          "shape": "ImagePipelineArn"
        }
      },
      "required": [
        "imagePipelineArn",
        "clientToken"
      ],
      "type": "structure"
    },
    "StartImagePipelineExecutionResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "imageBuildVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image that was created by this request.</p>",
          "shape": "ImageBuildVersionArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "StringList": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "SystemsManagerAgent": {
      "documentation": "<p>Contains settings for the Systems Manager agent on your build instance.</p>",
      "members": {
        "uninstallAfterBuild": {
          "documentation": "<p>Controls whether the Systems Manager agent is removed from your final build image, prior to creating the new AMI. If this is set to true, then the agent is removed from the final image. If it's set to false, then the agent is left in, so that it is included in the new AMI. The default value is false.</p>",
          "shape": "NullableBoolean"
        }
      },
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ImageBuilderArn"
        },
        "tags": {
          "documentation": "<p>The tags to apply to the resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "TargetContainerRepository": {
      "documentation": "<p>The container repository where the output container image is stored.</p>",
      "members": {
        "repositoryName": {
          "documentation": "<p>The name of the container repository where the output container image is stored. This name is prefixed by the repository location.</p>",
          "shape": "NonEmptyString"
        },
        "service": {
          "documentation": "<p>Specifies the service in which this image was registered.</p>",
          "shape": "ContainerRepositoryService"
        }
      },
      "required": [
        "service",
        "repositoryName"
      ],
      "type": "structure"
    },
    "TargetResourceCount": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "Timezone": {
      "max": 100,
      "min": 3,
      "pattern": "[a-zA-Z0-9]{2,}(?:\\/[a-zA-z0-9-_+]+)*",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to untag.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "ImageBuilderArn"
        },
        "tagKeys": {
          "documentation": "<p>The tag keys to remove from the resource.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateDistributionConfigurationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token of the distribution configuration.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description of the distribution configuration.</p>",
          "shape": "NonEmptyString"
        },
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration that you want to update.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "distributions": {
          "documentation": "<p>The distributions of the distribution configuration.</p>",
          "shape": "DistributionList"
        }
      },
      "required": [
        "distributionConfigurationArn",
        "distributions",
        "clientToken"
      ],
      "type": "structure"
    },
    "UpdateDistributionConfigurationResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration that was updated by this request.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "UpdateImagePipelineRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "containerRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the container pipeline to update.</p>",
          "shape": "ContainerRecipeArn"
        },
        "description": {
          "documentation": "<p>The description of the image pipeline.</p>",
          "shape": "NonEmptyString"
        },
        "distributionConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the distribution configuration that will be used to configure and distribute images updated by this image pipeline.</p>",
          "shape": "DistributionConfigurationArn"
        },
        "enhancedImageMetadataEnabled": {
          "documentation": "<p> Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.</p>",
          "shape": "NullableBoolean"
        },
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that you want to update.</p>",
          "shape": "ImagePipelineArn"
        },
        "imageRecipeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image recipe that will be used to configure images updated by this image pipeline.</p>",
          "shape": "ImageRecipeArn"
        },
        "imageTestsConfiguration": {
          "documentation": "<p>The image test configuration of the image pipeline.</p>",
          "shape": "ImageTestsConfiguration"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that will be used to build images updated by this image pipeline.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "schedule": {
          "documentation": "<p>The schedule of the image pipeline.</p>",
          "shape": "Schedule"
        },
        "status": {
          "documentation": "<p>The status of the image pipeline.</p>",
          "shape": "PipelineStatus"
        }
      },
      "required": [
        "imagePipelineArn",
        "infrastructureConfigurationArn",
        "clientToken"
      ],
      "type": "structure"
    },
    "UpdateImagePipelineResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "imagePipelineArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the image pipeline that was updated by this request.</p>",
          "shape": "ImagePipelineArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "UpdateInfrastructureConfigurationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description of the infrastructure configuration.</p>",
          "shape": "NonEmptyString"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that you want to update.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "instanceMetadataOptions": {
          "documentation": "<p>The instance metadata options that you can set for the HTTP requests that pipeline builds use to launch EC2 build and test instances. For more information about instance metadata options, see one of the following links:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html\">Configure the instance metadata options</a> in the <i> <i>Amazon EC2 User Guide</i> </i> for Linux instances.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/configuring-instance-metadata-options.html\">Configure the instance metadata options</a> in the <i> <i>Amazon EC2 Windows Guide</i> </i> for Windows instances.</p> </li> </ul>",
          "shape": "InstanceMetadataOptions"
        },
        "instanceProfileName": {
          "documentation": "<p>The instance profile to associate with the instance used to customize your Amazon EC2 AMI.</p>",
          "shape": "InstanceProfileNameType"
        },
        "instanceTypes": {
          "documentation": "<p>The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.</p>",
          "shape": "InstanceTypeList"
        },
        "keyPair": {
          "documentation": "<p>The key pair of the infrastructure configuration. You can use this to log on to and debug the instance used to create your image.</p>",
          "shape": "NonEmptyString"
        },
        "logging": {
          "documentation": "<p>The logging configuration of the infrastructure configuration.</p>",
          "shape": "Logging"
        },
        "resourceTags": {
          "documentation": "<p>The tags attached to the resource created by Image Builder.</p>",
          "shape": "ResourceTagMap"
        },
        "securityGroupIds": {
          "documentation": "<p>The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.</p>",
          "shape": "SecurityGroupIds"
        },
        "snsTopicArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the SNS topic to which we send image build event notifications.</p> <note> <p>EC2 Image Builder is unable to send notifications to SNS topics that are encrypted using keys from other accounts. The key that is used to encrypt the SNS topic must reside in the account that the Image Builder service runs under.</p> </note>",
          "shape": "SnsTopicArn"
        },
        "subnetId": {
          "documentation": "<p>The subnet ID to place the instance used to customize your Amazon EC2 AMI in.</p>",
          "shape": "NonEmptyString"
        },
        "terminateInstanceOnFailure": {
          "documentation": "<p>The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.</p>",
          "shape": "NullableBoolean"
        }
      },
      "required": [
        "infrastructureConfigurationArn",
        "instanceProfileName",
        "clientToken"
      ],
      "type": "structure"
    },
    "UpdateInfrastructureConfigurationResponse": {
      "members": {
        "clientToken": {
          "documentation": "<p>The idempotency token used to make this request idempotent.</p>",
          "shape": "ClientToken"
        },
        "infrastructureConfigurationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the infrastructure configuration that was updated by this request.</p>",
          "shape": "InfrastructureConfigurationArn"
        },
        "requestId": {
          "documentation": "<p>The request ID that uniquely identifies this request.</p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "Uri": {
      "type": "string"
    },
    "UserDataOverride": {
      "max": 21847,
      "min": 1,
      "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
      "type": "string"
    },
    "VersionNumber": {
      "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$",
      "type": "string"
    }
  },
  "version": "2.0"
}
