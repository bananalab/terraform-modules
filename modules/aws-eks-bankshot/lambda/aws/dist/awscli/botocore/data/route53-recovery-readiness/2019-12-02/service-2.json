{
  "documentation": "<p>Recovery readiness</p>",
  "metadata": {
    "apiVersion": "2019-12-02",
    "endpointPrefix": "route53-recovery-readiness",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS Route53 Recovery Readiness",
    "serviceId": "Route53 Recovery Readiness",
    "signatureVersion": "v4",
    "signingName": "route53-recovery-readiness",
    "uid": "route53-recovery-readiness-2019-12-02"
  },
  "operations": {
    "CreateCell": {
      "documentation": "<p>Creates a cell in an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>409 response - Conflict exception. You might be using a predefined variable.</p>",
          "shape": "ConflictException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cells",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateCellRequest"
      },
      "name": "CreateCell",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "CreateCellResponse"
      }
    },
    "CreateCrossAccountAuthorization": {
      "documentation": "<p>Creates a cross-account readiness authorization. This lets you authorize another account to work with Route 53 Application Recovery Controller, for example, to check the readiness status of resources in a separate account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>409 response - Conflict exception. You might be using a predefined variable.</p>",
          "shape": "ConflictException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/crossaccountauthorizations",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateCrossAccountAuthorizationRequest"
      },
      "name": "CreateCrossAccountAuthorization",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "CreateCrossAccountAuthorizationResponse"
      }
    },
    "CreateReadinessCheck": {
      "documentation": "<p>Creates a readiness check in an account. A readiness check monitors a resource set in your application, such as a set of Amazon Aurora instances, that Application Recovery Controller is auditing recovery readiness for. The audits run once every minute on every resource that's associated with a readiness check.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>409 response - Conflict exception. You might be using a predefined variable.</p>",
          "shape": "ConflictException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/readinesschecks",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateReadinessCheckRequest"
      },
      "name": "CreateReadinessCheck",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "CreateReadinessCheckResponse"
      }
    },
    "CreateRecoveryGroup": {
      "documentation": "<p>Creates a recovery group in an account. A recovery group corresponds to an application and includes a list of the cells that make up the application.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>409 response - Conflict exception. You might be using a predefined variable.</p>",
          "shape": "ConflictException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/recoverygroups",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateRecoveryGroupRequest"
      },
      "name": "CreateRecoveryGroup",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "CreateRecoveryGroupResponse"
      }
    },
    "CreateResourceSet": {
      "documentation": "<p>Creates a resource set. A resource set is a set of resources of one type that span multiple cells. You can associate a resource set with a readiness check to monitor the resources for failover readiness.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>409 response - Conflict exception. You might be using a predefined variable.</p>",
          "shape": "ConflictException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/resourcesets",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateResourceSetRequest"
      },
      "name": "CreateResourceSet",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateResourceSetResponse"
      }
    },
    "DeleteCell": {
      "documentation": "<p>Delete a cell. When successful, the response code is 204, with no response body.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/cells/{cellName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteCellRequest"
      },
      "name": "DeleteCell"
    },
    "DeleteCrossAccountAuthorization": {
      "documentation": "<p>Deletes cross account readiness authorization.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/crossaccountauthorizations/{crossAccountAuthorization}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteCrossAccountAuthorizationRequest"
      },
      "name": "DeleteCrossAccountAuthorization",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "DeleteCrossAccountAuthorizationResponse"
      }
    },
    "DeleteReadinessCheck": {
      "documentation": "<p>Deletes a readiness check.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteReadinessCheckRequest"
      },
      "name": "DeleteReadinessCheck"
    },
    "DeleteRecoveryGroup": {
      "documentation": "<p>Deletes a recovery group.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteRecoveryGroupRequest"
      },
      "name": "DeleteRecoveryGroup"
    },
    "DeleteResourceSet": {
      "documentation": "<p>Deletes a resource set.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteResourceSetRequest"
      },
      "name": "DeleteResourceSet"
    },
    "GetArchitectureRecommendations": {
      "documentation": "<p>Gets recommendations about architecture designs for improving resiliency for an application, based on a recovery group.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups/{recoveryGroupName}/architectureRecommendations",
        "responseCode": 200
      },
      "input": {
        "shape": "GetArchitectureRecommendationsRequest"
      },
      "name": "GetArchitectureRecommendations",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetArchitectureRecommendationsResponse"
      }
    },
    "GetCell": {
      "documentation": "<p>Gets information about a cell including cell name, cell Amazon Resource Name (ARN), ARNs of nested cells for this cell, and a list of those cell ARNs with their associated recovery group ARNs.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/cells/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCellRequest"
      },
      "name": "GetCell",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetCellResponse"
      }
    },
    "GetCellReadinessSummary": {
      "documentation": "<p>Gets readiness for a cell. Aggregates the readiness of all the resources that are associated with the cell into a single value.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/cellreadiness/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCellReadinessSummaryRequest"
      },
      "name": "GetCellReadinessSummary",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetCellReadinessSummaryResponse"
      }
    },
    "GetReadinessCheck": {
      "documentation": "<p>Gets details about a readiness check.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckRequest"
      },
      "name": "GetReadinessCheck",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetReadinessCheckResponse"
      }
    },
    "GetReadinessCheckResourceStatus": {
      "documentation": "<p>Gets individual readiness status for a readiness check. To see the overall readiness status for a recovery group, that considers the readiness status for all the readiness checks in the recovery group, use GetRecoveryGroupReadinessSummary.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}/resource/{resourceIdentifier}/status",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckResourceStatusRequest"
      },
      "name": "GetReadinessCheckResourceStatus",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetReadinessCheckResourceStatusResponse"
      }
    },
    "GetReadinessCheckStatus": {
      "documentation": "<p>Gets the readiness status for an individual readiness check. To see the overall readiness status for a recovery group, that considers the readiness status for all the readiness checks in a recovery group, use GetRecoveryGroupReadinessSummary.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks/{readinessCheckName}/status",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReadinessCheckStatusRequest"
      },
      "name": "GetReadinessCheckStatus",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetReadinessCheckStatusResponse"
      }
    },
    "GetRecoveryGroup": {
      "documentation": "<p>Gets details about a recovery group, including a list of the cells that are included in it.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRecoveryGroupRequest"
      },
      "name": "GetRecoveryGroup",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetRecoveryGroupResponse"
      }
    },
    "GetRecoveryGroupReadinessSummary": {
      "documentation": "<p>Displays a summary of information about a recovery group's readiness status. Includes the readiness checks for resources in the recovery group and the readiness status of each one.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroupreadiness/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetRecoveryGroupReadinessSummaryRequest"
      },
      "name": "GetRecoveryGroupReadinessSummary",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetRecoveryGroupReadinessSummaryResponse"
      }
    },
    "GetResourceSet": {
      "documentation": "<p>Displays the details about a resource set, including a list of the resources in the set.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetResourceSetRequest"
      },
      "name": "GetResourceSet",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "GetResourceSetResponse"
      }
    },
    "ListCells": {
      "documentation": "<p>Lists the cells for an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/cells",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCellsRequest"
      },
      "name": "ListCells",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListCellsResponse"
      }
    },
    "ListCrossAccountAuthorizations": {
      "documentation": "<p>Lists the cross-account readiness authorizations that are in place for an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/crossaccountauthorizations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCrossAccountAuthorizationsRequest"
      },
      "name": "ListCrossAccountAuthorizations",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListCrossAccountAuthorizationsResponse"
      }
    },
    "ListReadinessChecks": {
      "documentation": "<p>Lists the readiness checks for an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/readinesschecks",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReadinessChecksRequest"
      },
      "name": "ListReadinessChecks",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListReadinessChecksResponse"
      }
    },
    "ListRecoveryGroups": {
      "documentation": "<p>Lists the recovery groups in an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/recoverygroups",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRecoveryGroupsRequest"
      },
      "name": "ListRecoveryGroups",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListRecoveryGroupsResponse"
      }
    },
    "ListResourceSets": {
      "documentation": "<p>Lists the resource sets in an account.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/resourcesets",
        "responseCode": 200
      },
      "input": {
        "shape": "ListResourceSetsRequest"
      },
      "name": "ListResourceSets",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListResourceSetsResponse"
      }
    },
    "ListRules": {
      "documentation": "<p>Lists all readiness rules, or lists the readiness rules for a specific resource type.</p>",
      "errors": [
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/rules",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRulesRequest"
      },
      "name": "ListRules",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListRulesResponse"
      }
    },
    "ListTagsForResources": {
      "documentation": "<p>Lists the tags for a resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourcesRequest"
      },
      "name": "ListTagsForResources",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "ListTagsForResourcesResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds a tag to a resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes a tag from a resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateCell": {
      "documentation": "<p>Updates a cell to replace the list of nested cells with a new list of nested cells.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/cells/{cellName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateCellRequest"
      },
      "name": "UpdateCell",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "UpdateCellResponse"
      }
    },
    "UpdateReadinessCheck": {
      "documentation": "<p>Updates a readiness check.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/readinesschecks/{readinessCheckName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateReadinessCheckRequest"
      },
      "name": "UpdateReadinessCheck",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "UpdateReadinessCheckResponse"
      }
    },
    "UpdateRecoveryGroup": {
      "documentation": "<p>Updates a recovery group.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/recoverygroups/{recoveryGroupName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateRecoveryGroupRequest"
      },
      "name": "UpdateRecoveryGroup",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "UpdateRecoveryGroupResponse"
      }
    },
    "UpdateResourceSet": {
      "documentation": "<p>Updates a resource set.</p>",
      "errors": [
        {
          "documentation": "<p>404 response - Malformed query string. The query string contains a syntax error or resource not found.</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>429 response - Limit exceeded exception or too many requests exception.</p>",
          "shape": "ThrottlingException"
        },
        {
          "documentation": "<p>400 response - Multiple causes. For example, you might have a malformed query string, an input parameter might be out of range, or you used parameters together incorrectly.</p>",
          "shape": "ValidationException"
        },
        {
          "documentation": "<p>500 response - Internal service error or temporary service error. Retry the request.</p>",
          "shape": "InternalServerException"
        },
        {
          "documentation": "<p>403 response - Access denied exception. You do not have sufficient access to perform this action.</p>",
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/resourcesets/{resourceSetName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateResourceSetRequest"
      },
      "name": "UpdateResourceSet",
      "output": {
        "documentation": "<p>200 response - Success.</p>",
        "shape": "UpdateResourceSetResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "User does not have sufficient access to perform this action.",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CellOutput": {
      "documentation": "<p>Information about a cell.</p>",
      "members": {
        "CellArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the cell.</p>",
          "locationName": "cellArn",
          "shape": "__stringMax256"
        },
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "locationName": "cellName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Cells": {
          "documentation": "<p>A list of cell ARNs.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "ParentReadinessScopes": {
          "documentation": "<p>The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.</p>",
          "locationName": "parentReadinessScopes",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "<p>Tags on the resources.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ParentReadinessScopes",
        "CellArn",
        "CellName",
        "Cells"
      ],
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "Updating or deleting a resource can cause an inconsistent state.",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateCellRequest": {
      "members": {
        "CellName": {
          "documentation": "<p>The name of the cell to create.</p>",
          "locationName": "cellName",
          "shape": "__string"
        },
        "Cells": {
          "documentation": "<p>A list of cell Amazon Resource Names (ARNs) contained within this cell, for use in nested cells. For example, Availability Zones within specific Amazon Web Services Regions.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "CellName"
      ],
      "type": "structure"
    },
    "CreateCellResponse": {
      "members": {
        "CellArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the cell.</p>",
          "locationName": "cellArn",
          "shape": "__stringMax256"
        },
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "locationName": "cellName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Cells": {
          "documentation": "<p>A list of cell ARNs.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "ParentReadinessScopes": {
          "documentation": "<p>The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.</p>",
          "locationName": "parentReadinessScopes",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "<p>Tags on the resources.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateCrossAccountAuthorizationRequest": {
      "members": {
        "CrossAccountAuthorization": {
          "documentation": "<p>The cross-account authorization.</p>",
          "locationName": "crossAccountAuthorization",
          "shape": "CrossAccountAuthorization"
        }
      },
      "required": [
        "CrossAccountAuthorization"
      ],
      "type": "structure"
    },
    "CreateCrossAccountAuthorizationResponse": {
      "members": {
        "CrossAccountAuthorization": {
          "documentation": "<p>The cross-account authorization.</p>",
          "locationName": "crossAccountAuthorization",
          "shape": "CrossAccountAuthorization"
        }
      },
      "type": "structure"
    },
    "CreateReadinessCheckRequest": {
      "members": {
        "ReadinessCheckName": {
          "documentation": "<p>The name of the readiness check to create.</p>",
          "locationName": "readinessCheckName",
          "shape": "__string"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set to check.</p>",
          "locationName": "resourceSetName",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ResourceSetName",
        "ReadinessCheckName"
      ],
      "type": "structure"
    },
    "CreateReadinessCheckResponse": {
      "members": {
        "ReadinessCheckArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) associated with a readiness check.</p>",
          "locationName": "readinessCheckArn",
          "shape": "__stringMax256"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "locationName": "readinessCheckName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSet": {
          "documentation": "<p>Name of the resource set to be checked.</p>",
          "locationName": "resourceSet",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateRecoveryGroupRequest": {
      "members": {
        "Cells": {
          "documentation": "<p>A list of the cell Amazon Resource Names (ARNs) in the recovery group.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of the recovery group to create.</p>",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "RecoveryGroupName"
      ],
      "type": "structure"
    },
    "CreateRecoveryGroupResponse": {
      "members": {
        "Cells": {
          "documentation": "<p>A list of a cell's Amazon Resource Names (ARNs).</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the recovery group.</p>",
          "locationName": "recoveryGroupArn",
          "shape": "__stringMax256"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of the recovery group.</p>",
          "locationName": "recoveryGroupName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the recovery group.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CreateResourceSetRequest": {
      "members": {
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set to create.</p>",
          "locationName": "resourceSetName",
          "shape": "__string"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects in the resource set.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        },
        "Tags": {
          "documentation": "<p>A tag to associate with the parameters for a resource set.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ResourceSetType",
        "ResourceSetName",
        "Resources"
      ],
      "type": "structure"
    },
    "CreateResourceSetResponse": {
      "members": {
        "ResourceSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the resource set.</p>",
          "locationName": "resourceSetArn",
          "shape": "__stringMax256"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set.</p>",
          "locationName": "resourceSetName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "CrossAccountAuthorization": {
      "documentation": "<p>CrossAccountAuthorization</p>",
      "type": "string"
    },
    "DNSTargetResource": {
      "documentation": "<p>A component for DNS/routing control readiness checks and architecture checks.</p>",
      "members": {
        "DomainName": {
          "documentation": "<p>The domain name that acts as an ingress point to a portion of the customer application.</p>",
          "locationName": "domainName",
          "shape": "__string"
        },
        "HostedZoneArn": {
          "documentation": "<p>The hosted zone Amazon Resource Name (ARN) that contains the DNS record with the provided name of the target resource.</p>",
          "locationName": "hostedZoneArn",
          "shape": "__string"
        },
        "RecordSetId": {
          "documentation": "<p>The Route 53 record set ID that uniquely identifies a DNS record, given a name and a type.</p>",
          "locationName": "recordSetId",
          "shape": "__string"
        },
        "RecordType": {
          "documentation": "<p>The type of DNS record of the target resource.</p>",
          "locationName": "recordType",
          "shape": "__string"
        },
        "TargetResource": {
          "documentation": "<p>The target resource of the DNS target resource.</p>",
          "locationName": "targetResource",
          "shape": "TargetResource"
        }
      },
      "type": "structure"
    },
    "DeleteCellRequest": {
      "members": {
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "location": "uri",
          "locationName": "cellName",
          "shape": "__string"
        }
      },
      "required": [
        "CellName"
      ],
      "type": "structure"
    },
    "DeleteCrossAccountAuthorizationRequest": {
      "members": {
        "CrossAccountAuthorization": {
          "documentation": "<p>The cross-account authorization.</p>",
          "location": "uri",
          "locationName": "crossAccountAuthorization",
          "shape": "__string"
        }
      },
      "required": [
        "CrossAccountAuthorization"
      ],
      "type": "structure"
    },
    "DeleteCrossAccountAuthorizationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteReadinessCheckRequest": {
      "members": {
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "location": "uri",
          "locationName": "readinessCheckName",
          "shape": "__string"
        }
      },
      "required": [
        "ReadinessCheckName"
      ],
      "type": "structure"
    },
    "DeleteRecoveryGroupRequest": {
      "members": {
        "RecoveryGroupName": {
          "documentation": "<p>The name of a recovery group.</p>",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        }
      },
      "required": [
        "RecoveryGroupName"
      ],
      "type": "structure"
    },
    "DeleteResourceSetRequest": {
      "members": {
        "ResourceSetName": {
          "documentation": "<p>Name of a resource set.</p>",
          "location": "uri",
          "locationName": "resourceSetName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceSetName"
      ],
      "type": "structure"
    },
    "GetArchitectureRecommendationsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of a recovery group.</p>",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        }
      },
      "required": [
        "RecoveryGroupName"
      ],
      "type": "structure"
    },
    "GetArchitectureRecommendationsResponse": {
      "members": {
        "LastAuditTimestamp": {
          "documentation": "<p>The time that a recovery group was last assessed for recommendations, in UTC ISO-8601 format.</p>",
          "locationName": "lastAuditTimestamp",
          "shape": "LastAuditTimestamp"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Recommendations": {
          "documentation": "<p>A list of the recommendations for the customer's application.</p>",
          "locationName": "recommendations",
          "shape": "__listOfRecommendation"
        }
      },
      "type": "structure"
    },
    "GetCellReadinessSummaryRequest": {
      "members": {
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "location": "uri",
          "locationName": "cellName",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "required": [
        "CellName"
      ],
      "type": "structure"
    },
    "GetCellReadinessSummaryResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Readiness": {
          "documentation": "<p>The readiness at a cell level.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "ReadinessChecks": {
          "documentation": "<p>Summaries for the readiness checks that make up the cell.</p>",
          "locationName": "readinessChecks",
          "shape": "__listOfReadinessCheckSummary"
        }
      },
      "type": "structure"
    },
    "GetCellRequest": {
      "members": {
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "location": "uri",
          "locationName": "cellName",
          "shape": "__string"
        }
      },
      "required": [
        "CellName"
      ],
      "type": "structure"
    },
    "GetCellResponse": {
      "members": {
        "CellArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the cell.</p>",
          "locationName": "cellArn",
          "shape": "__stringMax256"
        },
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "locationName": "cellName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Cells": {
          "documentation": "<p>A list of cell ARNs.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "ParentReadinessScopes": {
          "documentation": "<p>The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.</p>",
          "locationName": "parentReadinessScopes",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "<p>Tags on the resources.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "GetReadinessCheckRequest": {
      "members": {
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "location": "uri",
          "locationName": "readinessCheckName",
          "shape": "__string"
        }
      },
      "required": [
        "ReadinessCheckName"
      ],
      "type": "structure"
    },
    "GetReadinessCheckResourceStatusRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "location": "uri",
          "locationName": "readinessCheckName",
          "shape": "__string"
        },
        "ResourceIdentifier": {
          "documentation": "<p>The resource identifier, which is the Amazon Resource Name (ARN) or the identifier generated for the resource by Application Recovery Controller (for example, for a DNS target resource).</p>",
          "location": "uri",
          "locationName": "resourceIdentifier",
          "shape": "__string"
        }
      },
      "required": [
        "ReadinessCheckName",
        "ResourceIdentifier"
      ],
      "type": "structure"
    },
    "GetReadinessCheckResourceStatusResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Readiness": {
          "documentation": "<p>The readiness at a rule level.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "Rules": {
          "documentation": "<p>Details of the rule's results.</p>",
          "locationName": "rules",
          "shape": "__listOfRuleResult"
        }
      },
      "type": "structure"
    },
    "GetReadinessCheckResponse": {
      "members": {
        "ReadinessCheckArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) associated with a readiness check.</p>",
          "locationName": "readinessCheckArn",
          "shape": "__stringMax256"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "locationName": "readinessCheckName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSet": {
          "documentation": "<p>Name of the resource set to be checked.</p>",
          "locationName": "resourceSet",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "GetReadinessCheckStatusRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "location": "uri",
          "locationName": "readinessCheckName",
          "shape": "__string"
        }
      },
      "required": [
        "ReadinessCheckName"
      ],
      "type": "structure"
    },
    "GetReadinessCheckStatusResponse": {
      "members": {
        "Messages": {
          "documentation": "<p>Top level messages for readiness check status</p>",
          "locationName": "messages",
          "shape": "__listOfMessage"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Readiness": {
          "documentation": "<p>The readiness at rule level.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "Resources": {
          "documentation": "<p>Summary of the readiness of resources.</p>",
          "locationName": "resources",
          "shape": "__listOfResourceResult"
        }
      },
      "type": "structure"
    },
    "GetRecoveryGroupReadinessSummaryRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of a recovery group.</p>",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        }
      },
      "required": [
        "RecoveryGroupName"
      ],
      "type": "structure"
    },
    "GetRecoveryGroupReadinessSummaryResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Readiness": {
          "documentation": "<p>The readiness status at a recovery group level.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "ReadinessChecks": {
          "documentation": "<p>Summaries of the readiness checks for the recovery group.</p>",
          "locationName": "readinessChecks",
          "shape": "__listOfReadinessCheckSummary"
        }
      },
      "type": "structure"
    },
    "GetRecoveryGroupRequest": {
      "members": {
        "RecoveryGroupName": {
          "documentation": "<p>The name of a recovery group.</p>",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        }
      },
      "required": [
        "RecoveryGroupName"
      ],
      "type": "structure"
    },
    "GetRecoveryGroupResponse": {
      "members": {
        "Cells": {
          "documentation": "<p>A list of a cell's Amazon Resource Names (ARNs).</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the recovery group.</p>",
          "locationName": "recoveryGroupArn",
          "shape": "__stringMax256"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of the recovery group.</p>",
          "locationName": "recoveryGroupName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the recovery group.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "GetResourceSetRequest": {
      "members": {
        "ResourceSetName": {
          "documentation": "<p>Name of a resource set.</p>",
          "location": "uri",
          "locationName": "resourceSetName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceSetName"
      ],
      "type": "structure"
    },
    "GetResourceSetResponse": {
      "members": {
        "ResourceSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the resource set.</p>",
          "locationName": "resourceSetArn",
          "shape": "__stringMax256"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set.</p>",
          "locationName": "resourceSetName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "InternalServerException": {
      "documentation": "An unexpected error occurred.",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "LastAuditTimestamp": {
      "documentation": "<p>The time that a recovery group was last assessed for recommendations, in UTC ISO-8601 format.</p>",
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ListCellsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListCellsResponse": {
      "members": {
        "Cells": {
          "documentation": "<p>A list of cells.</p>",
          "locationName": "cells",
          "shape": "__listOfCellOutput"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListCrossAccountAuthorizationsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListCrossAccountAuthorizationsResponse": {
      "members": {
        "CrossAccountAuthorizations": {
          "documentation": "<p>A list of cross-account authorizations.</p>",
          "locationName": "crossAccountAuthorizations",
          "shape": "__listOfCrossAccountAuthorization"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListReadinessChecksRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListReadinessChecksResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ReadinessChecks": {
          "documentation": "<p>A list of readiness checks associated with the account.</p>",
          "locationName": "readinessChecks",
          "shape": "__listOfReadinessCheckOutput"
        }
      },
      "type": "structure"
    },
    "ListRecoveryGroupsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListRecoveryGroupsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "RecoveryGroups": {
          "documentation": "<p>A list of recovery groups.</p>",
          "locationName": "recoveryGroups",
          "shape": "__listOfRecoveryGroupOutput"
        }
      },
      "type": "structure"
    },
    "ListResourceSetsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListResourceSetsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ResourceSets": {
          "documentation": "<p>A list of resource sets associated with the account.</p>",
          "locationName": "resourceSets",
          "shape": "__listOfResourceSetOutput"
        }
      },
      "type": "structure"
    },
    "ListRulesOutput": {
      "documentation": "<p>Readiness rule information, including the resource type, rule ID, and rule description.</p>",
      "members": {
        "ResourceType": {
          "documentation": "<p>The resource type that the readiness rule applies to.</p>",
          "locationName": "resourceType",
          "shape": "__stringMax64"
        },
        "RuleDescription": {
          "documentation": "<p>The description of a readiness rule.</p>",
          "locationName": "ruleDescription",
          "shape": "__stringMax256"
        },
        "RuleId": {
          "documentation": "<p>The ID for the readiness rule.</p>",
          "locationName": "ruleId",
          "shape": "__stringMax64"
        }
      },
      "required": [
        "RuleDescription",
        "RuleId",
        "ResourceType"
      ],
      "type": "structure"
    },
    "ListRulesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of objects that you want to return with this call.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ResourceType": {
          "documentation": "<p>The resource type that a readiness rule applies to.</p>",
          "location": "querystring",
          "locationName": "resourceType",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListRulesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token that identifies which batch of results you want to see.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Rules": {
          "documentation": "<p>A list of readiness rules for a specific resource type.</p>",
          "locationName": "rules",
          "shape": "__listOfListRulesOutput"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourcesRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourcesResponse": {
      "members": {
        "Tags": {
          "documentation": "<p></p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "documentation": "<p>Information relating to readiness check status.</p>",
      "members": {
        "MessageText": {
          "documentation": "<p>The text of a readiness check message.</p>",
          "locationName": "messageText",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "NLBResource": {
      "documentation": "<p>The Network Load Balancer resource that a DNS target resource points to.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Network Load Balancer resource Amazon Resource Name (ARN).</p>",
          "locationName": "arn",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "R53ResourceRecord": {
      "documentation": "<p>The Route 53 resource that a DNS target resource record points to.</p>",
      "members": {
        "DomainName": {
          "documentation": "<p>The DNS target domain name.</p>",
          "locationName": "domainName",
          "shape": "__string"
        },
        "RecordSetId": {
          "documentation": "<p>The Route 53 Resource Record Set ID.</p>",
          "locationName": "recordSetId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "Readiness": {
      "documentation": "<p>The readiness status.</p>",
      "enum": [
        "READY",
        "NOT_READY",
        "UNKNOWN",
        "NOT_AUTHORIZED"
      ],
      "type": "string"
    },
    "ReadinessCheckOutput": {
      "documentation": "<p>A readiness check.</p>",
      "members": {
        "ReadinessCheckArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) associated with a readiness check.</p>",
          "locationName": "readinessCheckArn",
          "shape": "__stringMax256"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "locationName": "readinessCheckName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSet": {
          "documentation": "<p>Name of the resource set to be checked.</p>",
          "locationName": "resourceSet",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ReadinessCheckArn",
        "ResourceSet"
      ],
      "type": "structure"
    },
    "ReadinessCheckSummary": {
      "documentation": "<p>Summary of all readiness check statuses in a recovery group, paginated in GetRecoveryGroupReadinessSummary and GetCellReadinessSummary.</p>",
      "members": {
        "Readiness": {
          "documentation": "<p>The readiness status of this readiness check.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "ReadinessCheckName": {
          "documentation": "<p>The name of a readiness check.</p>",
          "locationName": "readinessCheckName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ReadinessCheckTimestamp": {
      "documentation": "<p>The time (UTC) that the cell was last checked for readiness, in ISO-8601 format.</p>",
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "Recommendation": {
      "documentation": "<p>Recommendations that are provided to make an application more recovery resilient.</p>",
      "members": {
        "RecommendationText": {
          "documentation": "<p>Text of the recommendations that are provided to make an application more recovery resilient.</p>",
          "locationName": "recommendationText",
          "shape": "__string"
        }
      },
      "required": [
        "RecommendationText"
      ],
      "type": "structure"
    },
    "RecoveryGroupOutput": {
      "documentation": "<p>A representation of the application, typically containing multiple cells.</p>",
      "members": {
        "Cells": {
          "documentation": "<p>A list of a cell's Amazon Resource Names (ARNs).</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the recovery group.</p>",
          "locationName": "recoveryGroupArn",
          "shape": "__stringMax256"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of the recovery group.</p>",
          "locationName": "recoveryGroupName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the recovery group.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "RecoveryGroupArn",
        "RecoveryGroupName",
        "Cells"
      ],
      "type": "structure"
    },
    "Resource": {
      "documentation": "<p>The resource element of a resource set.</p>",
      "members": {
        "ComponentId": {
          "documentation": "<p>The component identifier of the resource, generated when DNS target resource is used.</p>",
          "locationName": "componentId",
          "shape": "__string"
        },
        "DnsTargetResource": {
          "documentation": "<p>The DNS target resource.</p>",
          "locationName": "dnsTargetResource",
          "shape": "DNSTargetResource"
        },
        "ReadinessScopes": {
          "documentation": "<p>A list of recovery group Amazon Resource Names (ARNs) and cell ARNs that this resource is contained within.</p>",
          "locationName": "readinessScopes",
          "shape": "__listOf__string"
        },
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon Web Services resource.</p>",
          "locationName": "resourceArn",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "The requested resource does not exist.",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ResourceResult": {
      "documentation": "<p>The result of a successful Resource request, with status for an individual resource.</p>",
      "members": {
        "ComponentId": {
          "documentation": "<p>The component id of the resource.</p>",
          "locationName": "componentId",
          "shape": "__string"
        },
        "LastCheckedTimestamp": {
          "documentation": "<p>The time (UTC) that the resource was last checked for readiness, in ISO-8601 format.</p>",
          "locationName": "lastCheckedTimestamp",
          "shape": "ReadinessCheckTimestamp"
        },
        "Readiness": {
          "documentation": "<p>The readiness of a resource.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "locationName": "resourceArn",
          "shape": "__string"
        }
      },
      "required": [
        "Readiness",
        "LastCheckedTimestamp"
      ],
      "type": "structure"
    },
    "ResourceSetOutput": {
      "documentation": "<p>A collection of resources of the same type.</p>",
      "members": {
        "ResourceSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the resource set.</p>",
          "locationName": "resourceSetArn",
          "shape": "__stringMax256"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set.</p>",
          "locationName": "resourceSetName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ResourceSetType",
        "ResourceSetName",
        "ResourceSetArn",
        "Resources"
      ],
      "type": "structure"
    },
    "RuleResult": {
      "documentation": "<p>The result of a successful Rule request, with status for an individual rule.</p>",
      "members": {
        "LastCheckedTimestamp": {
          "documentation": "<p>The time the resource was last checked for readiness, in ISO-8601 format, UTC.</p>",
          "locationName": "lastCheckedTimestamp",
          "shape": "ReadinessCheckTimestamp"
        },
        "Messages": {
          "documentation": "<p>Details about the resource's readiness.</p>",
          "locationName": "messages",
          "shape": "__listOfMessage"
        },
        "Readiness": {
          "documentation": "<p>The readiness at rule level.</p>",
          "locationName": "readiness",
          "shape": "Readiness"
        },
        "RuleId": {
          "documentation": "<p>The identifier of the rule.</p>",
          "locationName": "ruleId",
          "shape": "__string"
        }
      },
      "required": [
        "Messages",
        "Readiness",
        "RuleId",
        "LastCheckedTimestamp"
      ],
      "type": "structure"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p></p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "Tags": {
      "documentation": "<p>A collection of tags associated with a resource.</p>",
      "key": {
        "shape": "__string"
      },
      "type": "map",
      "value": {
        "shape": "__string"
      }
    },
    "TargetResource": {
      "documentation": "<p>The target resource that the Route 53 record points to.</p>",
      "members": {
        "NLBResource": {
          "documentation": "<p>The Network Load Balancer Resource.</p>",
          "locationName": "nLBResource",
          "shape": "NLBResource"
        },
        "R53Resource": {
          "documentation": "<p>The Route 53 resource.</p>",
          "locationName": "r53Resource",
          "shape": "R53ResourceRecord"
        }
      },
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "Request was denied due to request throttling.",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "TagKeys": {
          "documentation": "<p>The keys for tags you add to resources.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "TagKeys",
        "ResourceArn"
      ],
      "type": "structure"
    },
    "UpdateCellRequest": {
      "members": {
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "location": "uri",
          "locationName": "cellName",
          "shape": "__string"
        },
        "Cells": {
          "documentation": "<p>A list of cell Amazon Resource Names (ARNs), which completely replaces the previous list.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "CellName",
        "Cells"
      ],
      "type": "structure"
    },
    "UpdateCellResponse": {
      "members": {
        "CellArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the cell.</p>",
          "locationName": "cellArn",
          "shape": "__stringMax256"
        },
        "CellName": {
          "documentation": "<p>The name of the cell.</p>",
          "locationName": "cellName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Cells": {
          "documentation": "<p>A list of cell ARNs.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "ParentReadinessScopes": {
          "documentation": "<p>The readiness scope for the cell, which can be a cell Amazon Resource Name (ARN) or a recovery group ARN. This is a list but currently can have only one element.</p>",
          "locationName": "parentReadinessScopes",
          "shape": "__listOf__string"
        },
        "Tags": {
          "documentation": "<p>Tags on the resources.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "UpdateReadinessCheckRequest": {
      "documentation": "<p>Name of a readiness check to describe.</p>",
      "members": {
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "location": "uri",
          "locationName": "readinessCheckName",
          "shape": "__string"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set to be checked.</p>",
          "locationName": "resourceSetName",
          "shape": "__string"
        }
      },
      "required": [
        "ReadinessCheckName",
        "ResourceSetName"
      ],
      "type": "structure"
    },
    "UpdateReadinessCheckResponse": {
      "members": {
        "ReadinessCheckArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) associated with a readiness check.</p>",
          "locationName": "readinessCheckArn",
          "shape": "__stringMax256"
        },
        "ReadinessCheckName": {
          "documentation": "<p>Name of a readiness check.</p>",
          "locationName": "readinessCheckName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSet": {
          "documentation": "<p>Name of the resource set to be checked.</p>",
          "locationName": "resourceSet",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "UpdateRecoveryGroupRequest": {
      "documentation": "<p>Name of a recovery group.</p>",
      "members": {
        "Cells": {
          "documentation": "<p>A list of cell Amazon Resource Names (ARNs). This list completely replaces the previous list.</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of a recovery group.</p>",
          "location": "uri",
          "locationName": "recoveryGroupName",
          "shape": "__string"
        }
      },
      "required": [
        "RecoveryGroupName",
        "Cells"
      ],
      "type": "structure"
    },
    "UpdateRecoveryGroupResponse": {
      "members": {
        "Cells": {
          "documentation": "<p>A list of a cell's Amazon Resource Names (ARNs).</p>",
          "locationName": "cells",
          "shape": "__listOf__string"
        },
        "RecoveryGroupArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the recovery group.</p>",
          "locationName": "recoveryGroupArn",
          "shape": "__stringMax256"
        },
        "RecoveryGroupName": {
          "documentation": "<p>The name of the recovery group.</p>",
          "locationName": "recoveryGroupName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the recovery group.</p>",
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "UpdateResourceSetRequest": {
      "documentation": "<p>Name of a resource set.</p>",
      "members": {
        "ResourceSetName": {
          "documentation": "<p>Name of a resource set.</p>",
          "location": "uri",
          "locationName": "resourceSetName",
          "shape": "__string"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        }
      },
      "required": [
        "ResourceSetName",
        "ResourceSetType",
        "Resources"
      ],
      "type": "structure"
    },
    "UpdateResourceSetResponse": {
      "members": {
        "ResourceSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the resource set.</p>",
          "locationName": "resourceSetArn",
          "shape": "__stringMax256"
        },
        "ResourceSetName": {
          "documentation": "<p>The name of the resource set.</p>",
          "locationName": "resourceSetName",
          "shape": "__stringMax64PatternAAZAZ09Z"
        },
        "ResourceSetType": {
          "documentation": "<p>The resource type of the resources in the resource set. Enter one of the following values for resource type:</p> <p>AWS::ApiGateway::Stage, AWS::ApiGatewayV2::Stage, AWS::AutoScaling::AutoScalingGroup, AWS::CloudWatch::Alarm, AWS::EC2::CustomerGateway, AWS::DynamoDB::Table, AWS::EC2::Volume, AWS::ElasticLoadBalancing::LoadBalancer, AWS::ElasticLoadBalancingV2::LoadBalancer, AWS::Lambda::Function, AWS::MSK::Cluster, AWS::RDS::DBCluster, AWS::Route53::HealthCheck, AWS::SQS::Queue, AWS::SNS::Topic, AWS::SNS::Subscription, AWS::EC2::VPC, AWS::EC2::VPNConnection, AWS::EC2::VPNGateway, AWS::Route53RecoveryReadiness::DNSTargetResource</p>",
          "locationName": "resourceSetType",
          "shape": "__stringPatternAWSAZaZ09AZaZ09"
        },
        "Resources": {
          "documentation": "<p>A list of resource objects.</p>",
          "locationName": "resources",
          "shape": "__listOfResource"
        },
        "Tags": {
          "locationName": "tags",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "The input fails to satisfy the constraints specified by an AWS service.",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "__listOfCellOutput": {
      "member": {
        "shape": "CellOutput"
      },
      "type": "list"
    },
    "__listOfCrossAccountAuthorization": {
      "member": {
        "shape": "CrossAccountAuthorization"
      },
      "type": "list"
    },
    "__listOfListRulesOutput": {
      "member": {
        "shape": "ListRulesOutput"
      },
      "type": "list"
    },
    "__listOfMessage": {
      "member": {
        "shape": "Message"
      },
      "type": "list"
    },
    "__listOfReadinessCheckOutput": {
      "member": {
        "shape": "ReadinessCheckOutput"
      },
      "type": "list"
    },
    "__listOfReadinessCheckSummary": {
      "member": {
        "shape": "ReadinessCheckSummary"
      },
      "type": "list"
    },
    "__listOfRecommendation": {
      "member": {
        "shape": "Recommendation"
      },
      "type": "list"
    },
    "__listOfRecoveryGroupOutput": {
      "member": {
        "shape": "RecoveryGroupOutput"
      },
      "type": "list"
    },
    "__listOfResource": {
      "member": {
        "shape": "Resource"
      },
      "type": "list"
    },
    "__listOfResourceResult": {
      "member": {
        "shape": "ResourceResult"
      },
      "type": "list"
    },
    "__listOfResourceSetOutput": {
      "member": {
        "shape": "ResourceSetOutput"
      },
      "type": "list"
    },
    "__listOfRuleResult": {
      "member": {
        "shape": "RuleResult"
      },
      "type": "list"
    },
    "__listOf__string": {
      "member": {
        "shape": "__string"
      },
      "type": "list"
    },
    "__string": {
      "type": "string"
    },
    "__stringMax256": {
      "max": 256,
      "type": "string"
    },
    "__stringMax64": {
      "max": 64,
      "type": "string"
    },
    "__stringMax64PatternAAZAZ09Z": {
      "max": 64,
      "pattern": "\\A[a-zA-Z0-9_]+\\z",
      "type": "string"
    },
    "__stringPatternAWSAZaZ09AZaZ09": {
      "pattern": "AWS::[A-Za-z0-9]+::[A-Za-z0-9]+",
      "type": "string"
    }
  }
}
