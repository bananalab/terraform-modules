{
  "documentation": "<fullname>Amazon Web Services Application Discovery Service</fullname> <p>Amazon Web Services Application Discovery Service helps you plan application migration projects. It automatically identifies servers, virtual machines (VMs), and network dependencies in your on-premises data centers. For more information, see the <a href=\"http://aws.amazon.com/application-discovery/faqs/\">Amazon Web Services Application Discovery Service FAQ</a>. Application Discovery Service offers three ways of performing discovery and collecting data about your on-premises servers:</p> <ul> <li> <p> <b>Agentless discovery</b> is recommended for environments that use VMware vCenter Server. This mode doesn't require you to install an agent on each host. It does not work in non-VMware environments.</p> <ul> <li> <p>Agentless discovery gathers server information regardless of the operating systems, which minimizes the time required for initial on-premises infrastructure assessment.</p> </li> <li> <p>Agentless discovery doesn't collect information about network dependencies, only agent-based discovery collects that information.</p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Agent-based discovery</b> collects a richer set of data than agentless discovery by using the Amazon Web Services Application Discovery Agent, which you install on one or more hosts in your data center.</p> <ul> <li> <p> The agent captures infrastructure and application information, including an inventory of running processes, system performance information, resource utilization, and network dependencies.</p> </li> <li> <p>The information collected by agents is secured at rest and in transit to the Application Discovery Service database in the cloud. </p> </li> </ul> </li> </ul> <ul> <li> <p> <b>Amazon Web Services Partner Network (APN) solutions</b> integrate with Application Discovery Service, enabling you to import details of your on-premises environment directly into Migration Hub without using the discovery connector or discovery agent.</p> <ul> <li> <p>Third-party application discovery tools can query Amazon Web Services Application Discovery Service, and they can write to the Application Discovery Service database using the public API.</p> </li> <li> <p>In this way, you can import data into Migration Hub and view it, so that you can associate applications with servers and track migrations.</p> </li> </ul> </li> </ul> <p> <b>Recommendations</b> </p> <p>We recommend that you use agent-based discovery for non-VMware environments, and whenever you want to collect information about network dependencies. You can run agent-based and agentless discovery simultaneously. Use agentless discovery to complete the initial infrastructure assessment quickly, and then install agents on select hosts to collect additional information.</p> <p> <b>Working With This Guide</b> </p> <p>This API reference provides descriptions, syntax, and usage examples for each of the actions and data types for Application Discovery Service. The topic for each action shows the API request parameters and the response. Alternatively, you can use one of the Amazon Web Services SDKs to access an API that is tailored to the programming language or platform that you're using. For more information, see <a href=\"http://aws.amazon.com/tools/#SDKs\">Amazon Web Services SDKs</a>.</p> <note> <ul> <li> <p>Remember that you must set your Migration Hub home region before you call any of these APIs.</p> </li> <li> <p>You must make API calls for write actions (create, notify, associate, disassociate, import, or put) while in your home region, or a <code>HomeRegionNotSetException</code> error is returned.</p> </li> <li> <p>API calls for read actions (list, describe, stop, and delete) are permitted outside of your home region.</p> </li> <li> <p>Although it is unlikely, the Migration Hub home region could change. If you call APIs outside the home region, an <code>InvalidInputException</code> is returned.</p> </li> <li> <p>You must call <code>GetHomeRegion</code> to obtain the latest Migration Hub home region.</p> </li> </ul> </note> <p>This guide is intended for use with the <a href=\"http://docs.aws.amazon.com/application-discovery/latest/userguide/\">Amazon Web Services Application Discovery Service User Guide</a>.</p> <important> <p>All data is handled according to the <a href=\"http://aws.amazon.com/privacy/\">Amazon Web Services Privacy Policy</a>. You can operate Application Discovery Service offline to inspect collected data before it is shared with the service.</p> </important>",
  "metadata": {
    "apiVersion": "2015-11-01",
    "endpointPrefix": "discovery",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "AWS Application Discovery Service",
    "serviceId": "Application Discovery Service",
    "signatureVersion": "v4",
    "targetPrefix": "AWSPoseidonService_V2015_11_01",
    "uid": "discovery-2015-11-01"
  },
  "operations": {
    "AssociateConfigurationItemsToApplication": {
      "documentation": "<p>Associates one or more configuration items with an application.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AssociateConfigurationItemsToApplicationRequest"
      },
      "name": "AssociateConfigurationItemsToApplication",
      "output": {
        "shape": "AssociateConfigurationItemsToApplicationResponse"
      }
    },
    "BatchDeleteImportData": {
      "documentation": "<p>Deletes one or more import tasks, each identified by their import ID. Each import task has a number of records that can identify servers or applications. </p> <p>Amazon Web Services Application Discovery Service has built-in matching logic that will identify when discovered servers match existing entries that you've previously discovered, the information for the already-existing discovered server is updated. When you delete an import task that contains records that were used to match, the information in those matched records that comes from the deleted records will also be deleted.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "BatchDeleteImportDataRequest"
      },
      "name": "BatchDeleteImportData",
      "output": {
        "shape": "BatchDeleteImportDataResponse"
      }
    },
    "CreateApplication": {
      "documentation": "<p>Creates an application with the given name and description.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateApplicationRequest"
      },
      "name": "CreateApplication",
      "output": {
        "shape": "CreateApplicationResponse"
      }
    },
    "CreateTags": {
      "documentation": "<p>Creates one or more tags for configuration items. Tags are metadata that help you categorize IT assets. This API accepts a list of multiple configuration items.</p> <important> <p>Do not store sensitive information (like personal data) in tags.</p> </important>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateTagsRequest"
      },
      "name": "CreateTags",
      "output": {
        "shape": "CreateTagsResponse"
      }
    },
    "DeleteApplications": {
      "documentation": "<p>Deletes a list of applications and their associations with configuration items.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteApplicationsRequest"
      },
      "name": "DeleteApplications",
      "output": {
        "shape": "DeleteApplicationsResponse"
      }
    },
    "DeleteTags": {
      "documentation": "<p>Deletes the association between configuration items and one or more tags. This API accepts a list of multiple configuration items.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteTagsRequest"
      },
      "name": "DeleteTags",
      "output": {
        "shape": "DeleteTagsResponse"
      }
    },
    "DescribeAgents": {
      "documentation": "<p>Lists agents or connectors as specified by ID or other filters. All agents/connectors associated with your user account can be listed if you call <code>DescribeAgents</code> as is without passing any parameters.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeAgentsRequest"
      },
      "name": "DescribeAgents",
      "output": {
        "shape": "DescribeAgentsResponse"
      }
    },
    "DescribeConfigurations": {
      "documentation": "<p>Retrieves attributes for a list of configuration item IDs.</p> <note> <p>All of the supplied IDs must be for the same asset type from one of the following:</p> <ul> <li> <p>server</p> </li> <li> <p>application</p> </li> <li> <p>process</p> </li> <li> <p>connection</p> </li> </ul> <p>Output fields are specific to the asset type specified. For example, the output for a <i>server</i> configuration item includes a list of attributes about the server, such as host name, operating system, number of network cards, etc.</p> <p>For a complete list of outputs for each asset type, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#DescribeConfigurations\">Using the DescribeConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> </note>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeConfigurationsRequest"
      },
      "name": "DescribeConfigurations",
      "output": {
        "shape": "DescribeConfigurationsResponse"
      }
    },
    "DescribeContinuousExports": {
      "documentation": "<p>Lists exports as specified by ID. All continuous exports associated with your user account can be listed if you call <code>DescribeContinuousExports</code> as is without passing any parameters.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "OperationNotPermittedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeContinuousExportsRequest"
      },
      "name": "DescribeContinuousExports",
      "output": {
        "shape": "DescribeContinuousExportsResponse"
      }
    },
    "DescribeExportConfigurations": {
      "deprecated": true,
      "documentation": "<p> <code>DescribeExportConfigurations</code> is deprecated. Use <a href=\"https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html\">DescribeExportTasks</a>, instead.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeExportConfigurationsRequest"
      },
      "name": "DescribeExportConfigurations",
      "output": {
        "shape": "DescribeExportConfigurationsResponse"
      }
    },
    "DescribeExportTasks": {
      "documentation": "<p>Retrieve status of one or more export tasks. You can retrieve the status of up to 100 export tasks.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeExportTasksRequest"
      },
      "name": "DescribeExportTasks",
      "output": {
        "shape": "DescribeExportTasksResponse"
      }
    },
    "DescribeImportTasks": {
      "documentation": "<p>Returns an array of import tasks for your account, including status information, times, IDs, the Amazon S3 Object URL for the import file, and more.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeImportTasksRequest"
      },
      "name": "DescribeImportTasks",
      "output": {
        "shape": "DescribeImportTasksResponse"
      }
    },
    "DescribeTags": {
      "documentation": "<p>Retrieves a list of configuration items that have tags as specified by the key-value pairs, name and value, passed to the optional parameter <code>filters</code>.</p> <p>There are three valid tag filter names:</p> <ul> <li> <p>tagKey</p> </li> <li> <p>tagValue</p> </li> <li> <p>configurationId</p> </li> </ul> <p>Also, all configuration items associated with your user account that have tags can be listed if you call <code>DescribeTags</code> as is without passing any parameters.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeTagsRequest"
      },
      "name": "DescribeTags",
      "output": {
        "shape": "DescribeTagsResponse"
      }
    },
    "DisassociateConfigurationItemsFromApplication": {
      "documentation": "<p>Disassociates one or more configuration items from an application.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DisassociateConfigurationItemsFromApplicationRequest"
      },
      "name": "DisassociateConfigurationItemsFromApplication",
      "output": {
        "shape": "DisassociateConfigurationItemsFromApplicationResponse"
      }
    },
    "ExportConfigurations": {
      "deprecated": true,
      "documentation": "<p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports all discovered configuration data to an Amazon S3 bucket or an application that enables you to view and evaluate the data. Data includes tags and tag associations, processes, connections, servers, and system performance. This API returns an export ID that you can query using the <i>DescribeExportConfigurations</i> API. The system imposes a limit of two configuration exports in six hours.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "OperationNotPermittedException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "name": "ExportConfigurations",
      "output": {
        "shape": "ExportConfigurationsResponse"
      }
    },
    "GetDiscoverySummary": {
      "documentation": "<p>Retrieves a short summary of discovered assets.</p> <p>This API operation takes no request parameters and is called as is at the command prompt as shown in the example.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDiscoverySummaryRequest"
      },
      "name": "GetDiscoverySummary",
      "output": {
        "shape": "GetDiscoverySummaryResponse"
      }
    },
    "ListConfigurations": {
      "documentation": "<p>Retrieves a list of configuration items as specified by the value passed to the required parameter <code>configurationType</code>. Optional filtering may be applied to refine search results.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListConfigurationsRequest"
      },
      "name": "ListConfigurations",
      "output": {
        "shape": "ListConfigurationsResponse"
      }
    },
    "ListServerNeighbors": {
      "documentation": "<p>Retrieves a list of servers that are one network hop away from a specified server.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListServerNeighborsRequest"
      },
      "name": "ListServerNeighbors",
      "output": {
        "shape": "ListServerNeighborsResponse"
      }
    },
    "StartContinuousExport": {
      "documentation": "<p>Start the continuous flow of agent's discovered data into Amazon Athena.</p>",
      "errors": [
        {
          "shape": "ConflictErrorException"
        },
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "OperationNotPermittedException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartContinuousExportRequest"
      },
      "name": "StartContinuousExport",
      "output": {
        "shape": "StartContinuousExportResponse"
      }
    },
    "StartDataCollectionByAgentIds": {
      "documentation": "<p>Instructs the specified agents or connectors to start collecting data.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartDataCollectionByAgentIdsRequest"
      },
      "name": "StartDataCollectionByAgentIds",
      "output": {
        "shape": "StartDataCollectionByAgentIdsResponse"
      }
    },
    "StartExportTask": {
      "documentation": "<p> Begins the export of discovered data to an S3 bucket.</p> <p> If you specify <code>agentIds</code> in a filter, the task exports up to 72 hours of detailed data collected by the identified Application Discovery Agent, including network, process, and performance details. A time range for exported agent data may be set by using <code>startTime</code> and <code>endTime</code>. Export of detailed agent data is limited to five concurrently running exports. </p> <p> If you do not include an <code>agentIds</code> filter, summary data is exported that includes both Amazon Web Services Agentless Discovery Connector data and summary data from Amazon Web Services Discovery Agents. Export of summary data is limited to two exports per day. </p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "OperationNotPermittedException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartExportTaskRequest"
      },
      "name": "StartExportTask",
      "output": {
        "shape": "StartExportTaskResponse"
      }
    },
    "StartImportTask": {
      "documentation": "<p>Starts an import task, which allows you to import details of your on-premises environment directly into Amazon Web Services Migration Hub without having to use the Application Discovery Service (ADS) tools such as the Discovery Connector or Discovery Agent. This gives you the option to perform migration assessment and planning directly from your imported data, including the ability to group your devices as applications and track their migration status.</p> <p>To start an import request, do this:</p> <ol> <li> <p>Download the specially formatted comma separated value (CSV) import template, which you can find here: <a href=\"https://s3.us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv\">https://s3.us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv</a>.</p> </li> <li> <p>Fill out the template with your server and application data.</p> </li> <li> <p>Upload your import file to an Amazon S3 bucket, and make a note of it's Object URL. Your import file must be in the CSV format.</p> </li> <li> <p>Use the console or the <code>StartImportTask</code> command with the Amazon Web Services CLI or one of the Amazon Web Services SDKs to import the records from your file.</p> </li> </ol> <p>For more information, including step-by-step procedures, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-import.html\">Migration Hub Import</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> <note> <p>There are limits to the number of import tasks you can create (and delete) in an Amazon Web Services account. For more information, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/ads_service_limits.html\">Amazon Web Services Application Discovery Service Limits</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p> </note>",
      "errors": [
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartImportTaskRequest"
      },
      "name": "StartImportTask",
      "output": {
        "shape": "StartImportTaskResponse"
      }
    },
    "StopContinuousExport": {
      "documentation": "<p>Stop the continuous flow of agent's discovered data into Amazon Athena.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "OperationNotPermittedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceInUseException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopContinuousExportRequest"
      },
      "name": "StopContinuousExport",
      "output": {
        "shape": "StopContinuousExportResponse"
      }
    },
    "StopDataCollectionByAgentIds": {
      "documentation": "<p>Instructs the specified agents or connectors to stop collecting data.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopDataCollectionByAgentIdsRequest"
      },
      "name": "StopDataCollectionByAgentIds",
      "output": {
        "shape": "StopDataCollectionByAgentIdsResponse"
      }
    },
    "UpdateApplication": {
      "documentation": "<p>Updates metadata about an application.</p>",
      "errors": [
        {
          "shape": "AuthorizationErrorException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalErrorException"
        },
        {
          "shape": "HomeRegionNotSetException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateApplicationRequest"
      },
      "name": "UpdateApplication",
      "output": {
        "shape": "UpdateApplicationResponse"
      }
    }
  },
  "shapes": {
    "AgentConfigurationStatus": {
      "documentation": "<p>Information about agents or connectors that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation, and whether the agent/connector configuration was updated.</p>",
      "members": {
        "agentId": {
          "documentation": "<p>The agent/connector ID.</p>",
          "shape": "String"
        },
        "description": {
          "documentation": "<p>A description of the operation performed.</p>",
          "shape": "String"
        },
        "operationSucceeded": {
          "documentation": "<p>Information about the status of the <code>StartDataCollection</code> and <code>StopDataCollection</code> operations. The system has recorded the data collection operation. The agent/connector receives this command the next time it polls for a new command. </p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "AgentConfigurationStatusList": {
      "member": {
        "shape": "AgentConfigurationStatus"
      },
      "type": "list"
    },
    "AgentId": {
      "max": 20,
      "min": 10,
      "pattern": "\\S+",
      "type": "string"
    },
    "AgentIds": {
      "member": {
        "shape": "AgentId"
      },
      "type": "list"
    },
    "AgentInfo": {
      "documentation": "<p>Information about agents or connectors associated with the user\u2019s Amazon Web Services account. Information includes agent or connector IDs, IP addresses, media access control (MAC) addresses, agent or connector health, hostname where the agent or connector resides, and agent version for each agent.</p>",
      "members": {
        "agentId": {
          "documentation": "<p>The agent or connector ID.</p>",
          "shape": "AgentId"
        },
        "agentNetworkInfoList": {
          "documentation": "<p>Network details about the host where the agent or connector resides.</p>",
          "shape": "AgentNetworkInfoList"
        },
        "agentType": {
          "documentation": "<p>Type of agent.</p>",
          "shape": "String"
        },
        "collectionStatus": {
          "documentation": "<p>Status of the collection process for an agent or connector.</p>",
          "shape": "String"
        },
        "connectorId": {
          "documentation": "<p>The ID of the connector.</p>",
          "shape": "String"
        },
        "health": {
          "documentation": "<p>The health of the agent or connector.</p>",
          "shape": "AgentStatus"
        },
        "hostName": {
          "documentation": "<p>The name of the host where the agent or connector resides. The host can be a server or virtual machine.</p>",
          "shape": "String"
        },
        "lastHealthPingTime": {
          "documentation": "<p>Time since agent or connector health was reported.</p>",
          "shape": "String"
        },
        "registeredTime": {
          "documentation": "<p>Agent's first registration timestamp in UTC.</p>",
          "shape": "String"
        },
        "version": {
          "documentation": "<p>The agent or connector version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AgentNetworkInfo": {
      "documentation": "<p>Network details about the host where the agent/connector resides.</p>",
      "members": {
        "ipAddress": {
          "documentation": "<p>The IP address for the host where the agent/connector resides.</p>",
          "shape": "String"
        },
        "macAddress": {
          "documentation": "<p>The MAC address for the host where the agent/connector resides.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AgentNetworkInfoList": {
      "member": {
        "shape": "AgentNetworkInfo"
      },
      "type": "list"
    },
    "AgentStatus": {
      "enum": [
        "HEALTHY",
        "UNHEALTHY",
        "RUNNING",
        "UNKNOWN",
        "BLACKLISTED",
        "SHUTDOWN"
      ],
      "type": "string"
    },
    "AgentsInfo": {
      "member": {
        "shape": "AgentInfo"
      },
      "type": "list"
    },
    "ApplicationDescription": {
      "max": 1000,
      "pattern": "(^$|[\\s\\S]*\\S[\\s\\S]*)",
      "type": "string"
    },
    "ApplicationId": {
      "max": 200,
      "pattern": "\\S+",
      "type": "string"
    },
    "ApplicationIdsList": {
      "member": {
        "shape": "ApplicationId"
      },
      "type": "list"
    },
    "ApplicationName": {
      "max": 127,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "AssociateConfigurationItemsToApplicationRequest": {
      "members": {
        "applicationConfigurationId": {
          "documentation": "<p>The configuration ID of an application with which items are to be associated.</p>",
          "shape": "ApplicationId"
        },
        "configurationIds": {
          "documentation": "<p>The ID of each configuration item to be associated with an application.</p>",
          "shape": "ConfigurationIdList"
        }
      },
      "required": [
        "applicationConfigurationId",
        "configurationIds"
      ],
      "type": "structure"
    },
    "AssociateConfigurationItemsToApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "AuthorizationErrorException": {
      "documentation": "<p>The Amazon Web Services user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "BatchDeleteImportDataError": {
      "documentation": "<p>Error messages returned for each import task that you deleted as a response for this command.</p>",
      "members": {
        "errorCode": {
          "documentation": "<p>The type of error that occurred for a specific import task.</p>",
          "shape": "BatchDeleteImportDataErrorCode"
        },
        "errorDescription": {
          "documentation": "<p>The description of the error that occurred for a specific import task.</p>",
          "shape": "BatchDeleteImportDataErrorDescription"
        },
        "importTaskId": {
          "documentation": "<p>The unique import ID associated with the error that occurred.</p>",
          "shape": "ImportTaskIdentifier"
        }
      },
      "type": "structure"
    },
    "BatchDeleteImportDataErrorCode": {
      "enum": [
        "NOT_FOUND",
        "INTERNAL_SERVER_ERROR",
        "OVER_LIMIT"
      ],
      "type": "string"
    },
    "BatchDeleteImportDataErrorDescription": {
      "type": "string"
    },
    "BatchDeleteImportDataErrorList": {
      "member": {
        "shape": "BatchDeleteImportDataError"
      },
      "type": "list"
    },
    "BatchDeleteImportDataRequest": {
      "members": {
        "importTaskIds": {
          "documentation": "<p>The IDs for the import tasks that you want to delete.</p>",
          "shape": "ToDeleteIdentifierList"
        }
      },
      "required": [
        "importTaskIds"
      ],
      "type": "structure"
    },
    "BatchDeleteImportDataResponse": {
      "members": {
        "errors": {
          "documentation": "<p>Error messages returned for each import task that you deleted as a response for this command.</p>",
          "shape": "BatchDeleteImportDataErrorList"
        }
      },
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BoxedInteger": {
      "box": true,
      "type": "integer"
    },
    "ClientRequestToken": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "Condition": {
      "max": 200,
      "pattern": "\\S+",
      "type": "string"
    },
    "Configuration": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "ConfigurationId": {
      "max": 200,
      "pattern": "\\S*",
      "type": "string"
    },
    "ConfigurationIdList": {
      "member": {
        "shape": "ConfigurationId"
      },
      "type": "list"
    },
    "ConfigurationItemType": {
      "enum": [
        "SERVER",
        "PROCESS",
        "CONNECTION",
        "APPLICATION"
      ],
      "type": "string"
    },
    "ConfigurationTag": {
      "documentation": "<p>Tags for a configuration item. Tags are metadata that help you categorize IT assets.</p>",
      "members": {
        "configurationId": {
          "documentation": "<p>The configuration ID for the item to tag. You can specify a list of keys and values.</p>",
          "shape": "ConfigurationId"
        },
        "configurationType": {
          "documentation": "<p>A type of IT asset to tag.</p>",
          "shape": "ConfigurationItemType"
        },
        "key": {
          "documentation": "<p>A type of tag on which to filter. For example, <i>serverType</i>.</p>",
          "shape": "TagKey"
        },
        "timeOfCreation": {
          "documentation": "<p>The time the configuration tag was created in Coordinated Universal Time (UTC).</p>",
          "shape": "TimeStamp"
        },
        "value": {
          "documentation": "<p>A value on which to filter. For example <i>key = serverType</i> and <i>value = web server</i>.</p>",
          "shape": "TagValue"
        }
      },
      "type": "structure"
    },
    "ConfigurationTagSet": {
      "member": {
        "shape": "ConfigurationTag"
      },
      "type": "list"
    },
    "Configurations": {
      "member": {
        "shape": "Configuration"
      },
      "type": "list"
    },
    "ConfigurationsDownloadUrl": {
      "type": "string"
    },
    "ConfigurationsExportId": {
      "max": 200,
      "pattern": "\\S*",
      "type": "string"
    },
    "ConflictErrorException": {
      "documentation": "<p/>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ContinuousExportDescription": {
      "documentation": "<p>A list of continuous export descriptions.</p>",
      "members": {
        "dataSource": {
          "documentation": "<p>The type of data collector used to gather this data (currently only offered for AGENT).</p>",
          "shape": "DataSource"
        },
        "exportId": {
          "documentation": "<p>The unique ID assigned to this export.</p>",
          "shape": "ConfigurationsExportId"
        },
        "s3Bucket": {
          "documentation": "<p>The name of the s3 bucket where the export data parquet files are stored.</p>",
          "shape": "S3Bucket"
        },
        "schemaStorageConfig": {
          "documentation": "<p>An object which describes how the data is stored.</p> <ul> <li> <p> <code>databaseName</code> - the name of the Glue database used to store the schema.</p> </li> </ul>",
          "shape": "SchemaStorageConfig"
        },
        "startTime": {
          "documentation": "<p>The timestamp representing when the continuous export was started.</p>",
          "shape": "TimeStamp"
        },
        "status": {
          "documentation": "<p>Describes the status of the export. Can be one of the following values:</p> <ul> <li> <p>START_IN_PROGRESS - setting up resources to start continuous export.</p> </li> <li> <p>START_FAILED - an error occurred setting up continuous export. To recover, call start-continuous-export again.</p> </li> <li> <p>ACTIVE - data is being exported to the customer bucket.</p> </li> <li> <p>ERROR - an error occurred during export. To fix the issue, call stop-continuous-export and start-continuous-export.</p> </li> <li> <p>STOP_IN_PROGRESS - stopping the export.</p> </li> <li> <p>STOP_FAILED - an error occurred stopping the export. To recover, call stop-continuous-export again.</p> </li> <li> <p>INACTIVE - the continuous export has been stopped. Data is no longer being exported to the customer bucket.</p> </li> </ul>",
          "shape": "ContinuousExportStatus"
        },
        "statusDetail": {
          "documentation": "<p>Contains information about any errors that have occurred. This data type can have the following values:</p> <ul> <li> <p>ACCESS_DENIED - You don\u2019t have permission to start Data Exploration in Amazon Athena. Contact your Amazon Web Services administrator for help. For more information, see <a href=\"http://docs.aws.amazon.com/application-discovery/latest/userguide/setting-up.html\">Setting Up Amazon Web Services Application Discovery Service</a> in the Application Discovery Service User Guide.</p> </li> <li> <p>DELIVERY_STREAM_LIMIT_FAILURE - You reached the limit for Amazon Kinesis Data Firehose delivery streams. Reduce the number of streams or request a limit increase and try again. For more information, see <a href=\"http://docs.aws.amazon.com/streams/latest/dev/service-sizes-and-limits.html\">Kinesis Data Streams Limits</a> in the Amazon Kinesis Data Streams Developer Guide.</p> </li> <li> <p>FIREHOSE_ROLE_MISSING - The Data Exploration feature is in an error state because your IAM User is missing the AWSApplicationDiscoveryServiceFirehose role. Turn on Data Exploration in Amazon Athena and try again. For more information, see <a href=\"http://docs.aws.amazon.com/application-discovery/latest/userguide/setting-up.html#setting-up-user-policy\">Step 3: Provide Application Discovery Service Access to Non-Administrator Users by Attaching Policies</a> in the Application Discovery Service User Guide.</p> </li> <li> <p>FIREHOSE_STREAM_DOES_NOT_EXIST - The Data Exploration feature is in an error state because your IAM User is missing one or more of the Kinesis data delivery streams.</p> </li> <li> <p>INTERNAL_FAILURE - The Data Exploration feature is in an error state because of an internal failure. Try again later. If this problem persists, contact Amazon Web Services Support.</p> </li> <li> <p>LAKE_FORMATION_ACCESS_DENIED - You don't have sufficient lake formation permissions to start continuous export. For more information, see <a href=\"http://docs.aws.amazon.com/lake-formation/latest/dg/upgrade-glue-lake-formation.html\"> Upgrading Amazon Web Services Glue Data Permissions to the Amazon Web Services Lake Formation Model </a> in the Amazon Web Services <i>Lake Formation Developer Guide</i>. </p> <p>You can use one of the following two ways to resolve this issue.</p> <ol> <li> <p>If you don\u2019t want to use the Lake Formation permission model, you can change the default Data Catalog settings to use only Amazon Web Services Identity and Access Management (IAM) access control for new databases. For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/getting-started-setup.html#setup-change-cat-settings\">Change Data Catalog Settings</a> in the <i>Lake Formation Developer Guide</i>.</p> </li> <li> <p>You can give the service-linked IAM roles AWSServiceRoleForApplicationDiscoveryServiceContinuousExport and AWSApplicationDiscoveryServiceFirehose the required Lake Formation permissions. For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/granting-database-permissions.html\"> Granting Database Permissions</a> in the <i>Lake Formation Developer Guide</i>. </p> <ol> <li> <p>AWSServiceRoleForApplicationDiscoveryServiceContinuousExport - Grant database creator permissions, which gives the role database creation ability and implicit permissions for any created tables. For more information, see <a href=\"https://docs.aws.amazon.com/lake-formation/latest/dg/implicit-permissions.html\"> Implicit Lake Formation Permissions </a> in the <i>Lake Formation Developer Guide</i>.</p> </li> <li> <p>AWSApplicationDiscoveryServiceFirehose - Grant describe permissions for all tables in the database.</p> </li> </ol> </li> </ol> </li> <li> <p>S3_BUCKET_LIMIT_FAILURE - You reached the limit for Amazon S3 buckets. Reduce the number of S3 buckets or request a limit increase and try again. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\">Bucket Restrictions and Limitations</a> in the Amazon Simple Storage Service Developer Guide.</p> </li> <li> <p>S3_NOT_SIGNED_UP - Your account is not signed up for the Amazon S3 service. You must sign up before you can use Amazon S3. You can sign up at the following URL: <a href=\"https://aws.amazon.com/s3\">https://aws.amazon.com/s3</a>.</p> </li> </ul>",
          "shape": "StringMax255"
        },
        "stopTime": {
          "documentation": "<p>The timestamp that represents when this continuous export was stopped.</p>",
          "shape": "TimeStamp"
        }
      },
      "type": "structure"
    },
    "ContinuousExportDescriptions": {
      "member": {
        "shape": "ContinuousExportDescription"
      },
      "type": "list"
    },
    "ContinuousExportIds": {
      "member": {
        "shape": "ConfigurationsExportId"
      },
      "type": "list"
    },
    "ContinuousExportStatus": {
      "enum": [
        "START_IN_PROGRESS",
        "START_FAILED",
        "ACTIVE",
        "ERROR",
        "STOP_IN_PROGRESS",
        "STOP_FAILED",
        "INACTIVE"
      ],
      "type": "string"
    },
    "CreateApplicationRequest": {
      "members": {
        "description": {
          "documentation": "<p>Description of the application to be created.</p>",
          "shape": "ApplicationDescription"
        },
        "name": {
          "documentation": "<p>Name of the application to be created.</p>",
          "shape": "ApplicationName"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateApplicationResponse": {
      "members": {
        "configurationId": {
          "documentation": "<p>Configuration ID of an application to be created.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateTagsRequest": {
      "members": {
        "configurationIds": {
          "documentation": "<p>A list of configuration items that you want to tag.</p>",
          "shape": "ConfigurationIdList"
        },
        "tags": {
          "documentation": "<p>Tags that you want to associate with one or more configuration items. Specify the tags that you want to create in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p>",
          "shape": "TagSet"
        }
      },
      "required": [
        "configurationIds",
        "tags"
      ],
      "type": "structure"
    },
    "CreateTagsResponse": {
      "members": {},
      "type": "structure"
    },
    "CustomerAgentInfo": {
      "documentation": "<p>Inventory data for installed discovery agents.</p>",
      "members": {
        "activeAgents": {
          "documentation": "<p>Number of active discovery agents.</p>",
          "shape": "Integer"
        },
        "blackListedAgents": {
          "documentation": "<p>Number of blacklisted discovery agents.</p>",
          "shape": "Integer"
        },
        "healthyAgents": {
          "documentation": "<p>Number of healthy discovery agents</p>",
          "shape": "Integer"
        },
        "shutdownAgents": {
          "documentation": "<p>Number of discovery agents with status SHUTDOWN.</p>",
          "shape": "Integer"
        },
        "totalAgents": {
          "documentation": "<p>Total number of discovery agents.</p>",
          "shape": "Integer"
        },
        "unhealthyAgents": {
          "documentation": "<p>Number of unhealthy discovery agents.</p>",
          "shape": "Integer"
        },
        "unknownAgents": {
          "documentation": "<p>Number of unknown discovery agents.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "activeAgents",
        "healthyAgents",
        "blackListedAgents",
        "shutdownAgents",
        "unhealthyAgents",
        "totalAgents",
        "unknownAgents"
      ],
      "type": "structure"
    },
    "CustomerAgentlessCollectorInfo": {
      "members": {
        "activeAgentlessCollectors": {
          "shape": "Integer"
        },
        "denyListedAgentlessCollectors": {
          "shape": "Integer"
        },
        "healthyAgentlessCollectors": {
          "shape": "Integer"
        },
        "shutdownAgentlessCollectors": {
          "shape": "Integer"
        },
        "totalAgentlessCollectors": {
          "shape": "Integer"
        },
        "unhealthyAgentlessCollectors": {
          "shape": "Integer"
        },
        "unknownAgentlessCollectors": {
          "shape": "Integer"
        }
      },
      "required": [
        "activeAgentlessCollectors",
        "healthyAgentlessCollectors",
        "denyListedAgentlessCollectors",
        "shutdownAgentlessCollectors",
        "unhealthyAgentlessCollectors",
        "totalAgentlessCollectors",
        "unknownAgentlessCollectors"
      ],
      "type": "structure"
    },
    "CustomerConnectorInfo": {
      "documentation": "<p>Inventory data for installed discovery connectors.</p>",
      "members": {
        "activeConnectors": {
          "documentation": "<p>Number of active discovery connectors.</p>",
          "shape": "Integer"
        },
        "blackListedConnectors": {
          "documentation": "<p>Number of blacklisted discovery connectors.</p>",
          "shape": "Integer"
        },
        "healthyConnectors": {
          "documentation": "<p>Number of healthy discovery connectors.</p>",
          "shape": "Integer"
        },
        "shutdownConnectors": {
          "documentation": "<p>Number of discovery connectors with status SHUTDOWN,</p>",
          "shape": "Integer"
        },
        "totalConnectors": {
          "documentation": "<p>Total number of discovery connectors.</p>",
          "shape": "Integer"
        },
        "unhealthyConnectors": {
          "documentation": "<p>Number of unhealthy discovery connectors.</p>",
          "shape": "Integer"
        },
        "unknownConnectors": {
          "documentation": "<p>Number of unknown discovery connectors.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "activeConnectors",
        "healthyConnectors",
        "blackListedConnectors",
        "shutdownConnectors",
        "unhealthyConnectors",
        "totalConnectors",
        "unknownConnectors"
      ],
      "type": "structure"
    },
    "CustomerMeCollectorInfo": {
      "documentation": "<p> The inventory data for installed Migration Evaluator collectors. </p>",
      "members": {
        "activeMeCollectors": {
          "documentation": "<p> The number of active Migration Evaluator collectors. </p>",
          "shape": "Integer"
        },
        "denyListedMeCollectors": {
          "documentation": "<p> The number of deny-listed Migration Evaluator collectors. </p>",
          "shape": "Integer"
        },
        "healthyMeCollectors": {
          "documentation": "<p> The number of healthy Migration Evaluator collectors. </p>",
          "shape": "Integer"
        },
        "shutdownMeCollectors": {
          "documentation": "<p> The number of Migration Evaluator collectors with <code>SHUTDOWN</code> status. </p>",
          "shape": "Integer"
        },
        "totalMeCollectors": {
          "documentation": "<p> The total number of Migration Evaluator collectors. </p>",
          "shape": "Integer"
        },
        "unhealthyMeCollectors": {
          "documentation": "<p> The number of unhealthy Migration Evaluator collectors. </p>",
          "shape": "Integer"
        },
        "unknownMeCollectors": {
          "documentation": "<p> The number of unknown Migration Evaluator collectors. </p>",
          "shape": "Integer"
        }
      },
      "required": [
        "activeMeCollectors",
        "healthyMeCollectors",
        "denyListedMeCollectors",
        "shutdownMeCollectors",
        "unhealthyMeCollectors",
        "totalMeCollectors",
        "unknownMeCollectors"
      ],
      "type": "structure"
    },
    "DataSource": {
      "enum": [
        "AGENT"
      ],
      "type": "string"
    },
    "DatabaseName": {
      "max": 252,
      "min": 1,
      "type": "string"
    },
    "DeleteApplicationsRequest": {
      "members": {
        "configurationIds": {
          "documentation": "<p>Configuration ID of an application to be deleted.</p>",
          "shape": "ApplicationIdsList"
        }
      },
      "required": [
        "configurationIds"
      ],
      "type": "structure"
    },
    "DeleteApplicationsResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteTagsRequest": {
      "members": {
        "configurationIds": {
          "documentation": "<p>A list of configuration items with tags that you want to delete.</p>",
          "shape": "ConfigurationIdList"
        },
        "tags": {
          "documentation": "<p>Tags that you want to delete from one or more configuration items. Specify the tags that you want to delete in a <i>key</i>-<i>value</i> format. For example:</p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p>",
          "shape": "TagSet"
        }
      },
      "required": [
        "configurationIds"
      ],
      "type": "structure"
    },
    "DeleteTagsResponse": {
      "members": {},
      "type": "structure"
    },
    "DescribeAgentsRequest": {
      "members": {
        "agentIds": {
          "documentation": "<p>The agent or the Connector IDs for which you want information. If you specify no IDs, the system returns information about all agents/Connectors associated with your Amazon Web Services user account.</p>",
          "shape": "AgentIds"
        },
        "filters": {
          "documentation": "<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{\"key\": \"collectionStatus\", \"value\": \"STARTED\"}</code> </p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>The total number of agents/Connectors to return in a single page of output. The maximum value is 100.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeAgentsResponse": {
      "members": {
        "agentsInfo": {
          "documentation": "<p>Lists agents or the Connector by ID or lists all agents/Connectors associated with your user account if you did not specify an agent/Connector ID. The output includes agent/Connector IDs, IP addresses, media access control (MAC) addresses, agent/Connector health, host name where the agent/Connector resides, and the version number of each agent/Connector.</p>",
          "shape": "AgentsInfo"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>DescribeAgentsRequest$agentIds</code> but set <code>DescribeAgentsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeConfigurationsAttribute": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "DescribeConfigurationsAttributes": {
      "member": {
        "shape": "DescribeConfigurationsAttribute"
      },
      "type": "list"
    },
    "DescribeConfigurationsRequest": {
      "members": {
        "configurationIds": {
          "documentation": "<p>One or more configuration IDs.</p>",
          "shape": "ConfigurationIdList"
        }
      },
      "required": [
        "configurationIds"
      ],
      "type": "structure"
    },
    "DescribeConfigurationsResponse": {
      "members": {
        "configurations": {
          "documentation": "<p>A key in the response map. The value is an array of data.</p>",
          "shape": "DescribeConfigurationsAttributes"
        }
      },
      "type": "structure"
    },
    "DescribeContinuousExportsMaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "DescribeContinuousExportsRequest": {
      "members": {
        "exportIds": {
          "documentation": "<p>The unique IDs assigned to the exports.</p>",
          "shape": "ContinuousExportIds"
        },
        "maxResults": {
          "documentation": "<p>A number between 1 and 100 specifying the maximum number of continuous export descriptions returned.</p>",
          "shape": "DescribeContinuousExportsMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token from the previous call to <code>DescribeExportTasks</code>.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeContinuousExportsResponse": {
      "members": {
        "descriptions": {
          "documentation": "<p>A list of continuous export descriptions.</p>",
          "shape": "ContinuousExportDescriptions"
        },
        "nextToken": {
          "documentation": "<p>The token from the previous call to <code>DescribeExportTasks</code>.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeExportConfigurationsRequest": {
      "members": {
        "exportIds": {
          "documentation": "<p>A list of continuous export IDs to search for.</p>",
          "shape": "ExportIds"
        },
        "maxResults": {
          "documentation": "<p>A number between 1 and 100 specifying the maximum number of continuous export descriptions returned.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>The token from the previous call to describe-export-tasks.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeExportConfigurationsResponse": {
      "members": {
        "exportsInfo": {
          "documentation": "<p/>",
          "shape": "ExportsInfo"
        },
        "nextToken": {
          "documentation": "<p>The token from the previous call to describe-export-tasks.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeExportTasksRequest": {
      "members": {
        "exportIds": {
          "documentation": "<p>One or more unique identifiers used to query the status of an export request.</p>",
          "shape": "ExportIds"
        },
        "filters": {
          "documentation": "<p>One or more filters.</p> <ul> <li> <p> <code>AgentId</code> - ID of the agent whose collected data will be exported</p> </li> </ul>",
          "shape": "ExportFilters"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of volume results returned by <code>DescribeExportTasks</code> in paginated output. When this parameter is used, <code>DescribeExportTasks</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>The <code>nextToken</code> value returned from a previous paginated <code>DescribeExportTasks</code> request where <code>maxResults</code> was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the <code>nextToken</code> value. This value is null when there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeExportTasksResponse": {
      "members": {
        "exportsInfo": {
          "documentation": "<p>Contains one or more sets of export request details. When the status of a request is <code>SUCCEEDED</code>, the response includes a URL for an Amazon S3 bucket where you can view the data in a CSV file.</p>",
          "shape": "ExportsInfo"
        },
        "nextToken": {
          "documentation": "<p>The <code>nextToken</code> value to include in a future <code>DescribeExportTasks</code> request. When the results of a <code>DescribeExportTasks</code> request exceed <code>maxResults</code>, this value can be used to retrieve the next page of results. This value is null when there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeImportTasksFilterList": {
      "member": {
        "shape": "ImportTaskFilter"
      },
      "type": "list"
    },
    "DescribeImportTasksMaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "DescribeImportTasksRequest": {
      "members": {
        "filters": {
          "documentation": "<p>An array of name-value pairs that you provide to filter the results for the <code>DescribeImportTask</code> request to a specific subset of results. Currently, wildcard values aren't supported for filters.</p>",
          "shape": "DescribeImportTasksFilterList"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results that you want this request to return, up to 100.</p>",
          "shape": "DescribeImportTasksMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to request a specific page of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeImportTasksResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to request the next page of results.</p>",
          "shape": "NextToken"
        },
        "tasks": {
          "documentation": "<p>A returned array of import tasks that match any applied filters, up to the specified number of maximum results.</p>",
          "shape": "ImportTaskList"
        }
      },
      "type": "structure"
    },
    "DescribeTagsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>You can filter the list using a <i>key</i>-<i>value</i> format. You can separate these items by using logical operators. Allowed filters include <code>tagKey</code>, <code>tagValue</code>, and <code>configurationId</code>. </p>",
          "shape": "TagFilters"
        },
        "maxResults": {
          "documentation": "<p>The total number of items to return in a single page of output. The maximum value is 100.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeTagsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The call returns a token. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        },
        "tags": {
          "documentation": "<p>Depending on the input, this is a list of configuration items tagged with a specific tag, or a list of tags for a specific configuration item.</p>",
          "shape": "ConfigurationTagSet"
        }
      },
      "type": "structure"
    },
    "DisassociateConfigurationItemsFromApplicationRequest": {
      "members": {
        "applicationConfigurationId": {
          "documentation": "<p>Configuration ID of an application from which each item is disassociated.</p>",
          "shape": "ApplicationId"
        },
        "configurationIds": {
          "documentation": "<p>Configuration ID of each item to be disassociated from an application.</p>",
          "shape": "ConfigurationIdList"
        }
      },
      "required": [
        "applicationConfigurationId",
        "configurationIds"
      ],
      "type": "structure"
    },
    "DisassociateConfigurationItemsFromApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "ExportConfigurationsResponse": {
      "members": {
        "exportId": {
          "documentation": "<p>A unique identifier that you can use to query the export status.</p>",
          "shape": "ConfigurationsExportId"
        }
      },
      "type": "structure"
    },
    "ExportDataFormat": {
      "enum": [
        "CSV",
        "GRAPHML"
      ],
      "type": "string"
    },
    "ExportDataFormats": {
      "member": {
        "shape": "ExportDataFormat"
      },
      "type": "list"
    },
    "ExportFilter": {
      "documentation": "<p>Used to select which agent's data is to be exported. A single agent ID may be selected for export using the <a href=\"http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_StartExportTask.html\">StartExportTask</a> action.</p>",
      "members": {
        "condition": {
          "documentation": "<p>Supported condition: <code>EQUALS</code> </p>",
          "shape": "Condition"
        },
        "name": {
          "documentation": "<p>A single <code>ExportFilter</code> name. Supported filters: <code>agentIds</code>.</p>",
          "shape": "FilterName"
        },
        "values": {
          "documentation": "<p>A single agent ID for a Discovery Agent. An agent ID can be found using the <a href=\"http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeAgents.html\">DescribeAgents</a> action. Typically an ADS agent ID is in the form <code>o-0123456789abcdef0</code>.</p>",
          "shape": "FilterValues"
        }
      },
      "required": [
        "name",
        "values",
        "condition"
      ],
      "type": "structure"
    },
    "ExportFilters": {
      "member": {
        "shape": "ExportFilter"
      },
      "type": "list"
    },
    "ExportIds": {
      "member": {
        "shape": "ConfigurationsExportId"
      },
      "type": "list"
    },
    "ExportInfo": {
      "documentation": "<p>Information regarding the export status of discovered data. The value is an array of objects.</p>",
      "members": {
        "configurationsDownloadUrl": {
          "documentation": "<p>A URL for an Amazon S3 bucket where you can review the exported data. The URL is displayed only if the export succeeded.</p>",
          "shape": "ConfigurationsDownloadUrl"
        },
        "exportId": {
          "documentation": "<p>A unique identifier used to query an export.</p>",
          "shape": "ConfigurationsExportId"
        },
        "exportRequestTime": {
          "documentation": "<p>The time that the data export was initiated.</p>",
          "shape": "ExportRequestTime"
        },
        "exportStatus": {
          "documentation": "<p>The status of the data export job.</p>",
          "shape": "ExportStatus"
        },
        "isTruncated": {
          "documentation": "<p>If true, the export of agent information exceeded the size limit for a single export and the exported data is incomplete for the requested time range. To address this, select a smaller time range for the export by using <code>startDate</code> and <code>endDate</code>.</p>",
          "shape": "Boolean"
        },
        "requestedEndTime": {
          "documentation": "<p>The <code>endTime</code> used in the <code>StartExportTask</code> request. If no <code>endTime</code> was requested, this result does not appear in <code>ExportInfo</code>.</p>",
          "shape": "TimeStamp"
        },
        "requestedStartTime": {
          "documentation": "<p>The value of <code>startTime</code> parameter in the <code>StartExportTask</code> request. If no <code>startTime</code> was requested, this result does not appear in <code>ExportInfo</code>.</p>",
          "shape": "TimeStamp"
        },
        "statusMessage": {
          "documentation": "<p>A status message provided for API callers.</p>",
          "shape": "ExportStatusMessage"
        }
      },
      "required": [
        "exportId",
        "exportStatus",
        "statusMessage",
        "exportRequestTime"
      ],
      "type": "structure"
    },
    "ExportRequestTime": {
      "type": "timestamp"
    },
    "ExportStatus": {
      "enum": [
        "FAILED",
        "SUCCEEDED",
        "IN_PROGRESS"
      ],
      "type": "string"
    },
    "ExportStatusMessage": {
      "type": "string"
    },
    "ExportsInfo": {
      "member": {
        "shape": "ExportInfo"
      },
      "type": "list"
    },
    "Filter": {
      "documentation": "<p>A filter that can use conditional operators.</p> <p>For more information about filters, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html\">Querying Discovered Configuration Items</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>. </p>",
      "members": {
        "condition": {
          "documentation": "<p>A conditional operator. The following operators are valid: EQUALS, NOT_EQUALS, CONTAINS, NOT_CONTAINS. If you specify multiple filters, the system utilizes all filters as though concatenated by <i>AND</i>. If you specify multiple values for a particular filter, the system differentiates the values using <i>OR</i>. Calling either <i>DescribeConfigurations</i> or <i>ListConfigurations</i> returns attributes of matching configuration items.</p>",
          "shape": "Condition"
        },
        "name": {
          "documentation": "<p>The name of the filter.</p>",
          "shape": "String"
        },
        "values": {
          "documentation": "<p>A string value on which to filter. For example, if you choose the <code>destinationServer.osVersion</code> filter name, you could specify <code>Ubuntu</code> for the value.</p>",
          "shape": "FilterValues"
        }
      },
      "required": [
        "name",
        "values",
        "condition"
      ],
      "type": "structure"
    },
    "FilterName": {
      "max": 1000,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "FilterValue": {
      "max": 1000,
      "pattern": "(^$|[\\s\\S]*\\S[\\s\\S]*)",
      "type": "string"
    },
    "FilterValues": {
      "member": {
        "shape": "FilterValue"
      },
      "type": "list"
    },
    "Filters": {
      "member": {
        "shape": "Filter"
      },
      "type": "list"
    },
    "GetDiscoverySummaryRequest": {
      "members": {},
      "type": "structure"
    },
    "GetDiscoverySummaryResponse": {
      "members": {
        "agentSummary": {
          "documentation": "<p>Details about discovered agents, including agent status and health.</p>",
          "shape": "CustomerAgentInfo"
        },
        "agentlessCollectorSummary": {
          "shape": "CustomerAgentlessCollectorInfo"
        },
        "applications": {
          "documentation": "<p>The number of applications discovered.</p>",
          "shape": "Long"
        },
        "connectorSummary": {
          "documentation": "<p>Details about discovered connectors, including connector status and health.</p>",
          "shape": "CustomerConnectorInfo"
        },
        "meCollectorSummary": {
          "documentation": "<p> Details about Migration Evaluator collectors, including collector status and health. </p>",
          "shape": "CustomerMeCollectorInfo"
        },
        "servers": {
          "documentation": "<p>The number of servers discovered.</p>",
          "shape": "Long"
        },
        "serversMappedToApplications": {
          "documentation": "<p>The number of servers mapped to applications.</p>",
          "shape": "Long"
        },
        "serversMappedtoTags": {
          "documentation": "<p>The number of servers mapped to tags.</p>",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "HomeRegionNotSetException": {
      "documentation": "<p>The home region is not set. Set the home region to continue.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ImportStatus": {
      "enum": [
        "IMPORT_IN_PROGRESS",
        "IMPORT_COMPLETE",
        "IMPORT_COMPLETE_WITH_ERRORS",
        "IMPORT_FAILED",
        "IMPORT_FAILED_SERVER_LIMIT_EXCEEDED",
        "IMPORT_FAILED_RECORD_LIMIT_EXCEEDED",
        "DELETE_IN_PROGRESS",
        "DELETE_COMPLETE",
        "DELETE_FAILED",
        "DELETE_FAILED_LIMIT_EXCEEDED",
        "INTERNAL_ERROR"
      ],
      "type": "string"
    },
    "ImportTask": {
      "documentation": "<p>An array of information related to the import task request that includes status information, times, IDs, the Amazon S3 Object URL for the import file, and more.</p>",
      "members": {
        "applicationImportFailure": {
          "documentation": "<p>The total number of application records in the import file that failed to be imported.</p>",
          "shape": "Integer"
        },
        "applicationImportSuccess": {
          "documentation": "<p>The total number of application records in the import file that were successfully imported.</p>",
          "shape": "Integer"
        },
        "clientRequestToken": {
          "documentation": "<p>A unique token used to prevent the same import request from occurring more than once. If you didn't provide a token, a token was automatically generated when the import task request was sent.</p>",
          "shape": "ClientRequestToken"
        },
        "errorsAndFailedEntriesZip": {
          "documentation": "<p>A link to a compressed archive folder (in the ZIP format) that contains an error log and a file of failed records. You can use these two files to quickly identify records that failed, why they failed, and correct those records. Afterward, you can upload the corrected file to your Amazon S3 bucket and create another import task request.</p> <p>This field also includes authorization information so you can confirm the authenticity of the compressed archive before you download it.</p> <p>If some records failed to be imported we recommend that you correct the records in the failed entries file and then imports that failed entries file. This prevents you from having to correct and update the larger original file and attempt importing it again.</p>",
          "shape": "S3PresignedUrl"
        },
        "importCompletionTime": {
          "documentation": "<p>The time that the import task request finished, presented in the Unix time stamp format.</p>",
          "shape": "TimeStamp"
        },
        "importDeletedTime": {
          "documentation": "<p>The time that the import task request was deleted, presented in the Unix time stamp format.</p>",
          "shape": "TimeStamp"
        },
        "importRequestTime": {
          "documentation": "<p>The time that the import task request was made, presented in the Unix time stamp format.</p>",
          "shape": "TimeStamp"
        },
        "importTaskId": {
          "documentation": "<p>The unique ID for a specific import task. These IDs aren't globally unique, but they are unique within an Amazon Web Services account.</p>",
          "shape": "ImportTaskIdentifier"
        },
        "importUrl": {
          "documentation": "<p>The URL for your import file that you've uploaded to Amazon S3.</p>",
          "shape": "ImportURL"
        },
        "name": {
          "documentation": "<p>A descriptive name for an import task. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.</p>",
          "shape": "ImportTaskName"
        },
        "serverImportFailure": {
          "documentation": "<p>The total number of server records in the import file that failed to be imported.</p>",
          "shape": "Integer"
        },
        "serverImportSuccess": {
          "documentation": "<p>The total number of server records in the import file that were successfully imported.</p>",
          "shape": "Integer"
        },
        "status": {
          "documentation": "<p>The status of the import task. An import can have the status of <code>IMPORT_COMPLETE</code> and still have some records fail to import from the overall request. More information can be found in the downloadable archive defined in the <code>errorsAndFailedEntriesZip</code> field, or in the Migration Hub management console.</p>",
          "shape": "ImportStatus"
        }
      },
      "type": "structure"
    },
    "ImportTaskFilter": {
      "documentation": "<p>A name-values pair of elements you can use to filter the results when querying your import tasks. Currently, wildcards are not supported for filters.</p> <note> <p>When filtering by import status, all other filter values are ignored.</p> </note>",
      "members": {
        "name": {
          "documentation": "<p>The name, status, or import task ID for a specific import task.</p>",
          "shape": "ImportTaskFilterName"
        },
        "values": {
          "documentation": "<p>An array of strings that you can provide to match against a specific name, status, or import task ID to filter the results for your import task queries.</p>",
          "shape": "ImportTaskFilterValueList"
        }
      },
      "type": "structure"
    },
    "ImportTaskFilterName": {
      "enum": [
        "IMPORT_TASK_ID",
        "STATUS",
        "NAME"
      ],
      "type": "string"
    },
    "ImportTaskFilterValue": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "ImportTaskFilterValueList": {
      "max": 100,
      "member": {
        "shape": "ImportTaskFilterValue"
      },
      "min": 1,
      "type": "list"
    },
    "ImportTaskIdentifier": {
      "max": 200,
      "pattern": "\\S*",
      "type": "string"
    },
    "ImportTaskList": {
      "member": {
        "shape": "ImportTask"
      },
      "type": "list"
    },
    "ImportTaskName": {
      "max": 100,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "ImportURL": {
      "max": 4000,
      "min": 1,
      "pattern": "\\S+://\\S+/[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InvalidParameterException": {
      "documentation": "<p>One or more parameters are not valid. Verify the parameters and try again.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>The value of one or more parameters are either invalid or out of range. Verify the parameter values and try again.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ListConfigurationsRequest": {
      "members": {
        "configurationType": {
          "documentation": "<p>A valid configuration identified by Application Discovery Service. </p>",
          "shape": "ConfigurationItemType"
        },
        "filters": {
          "documentation": "<p>You can filter the request using various logical operators and a <i>key</i>-<i>value</i> format. For example: </p> <p> <code>{\"key\": \"serverType\", \"value\": \"webServer\"}</code> </p> <p>For a complete list of filter options and guidance about using them with this action, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations\">Using the ListConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>The total number of items to return. The maximum value is 100.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if a previous call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.</p>",
          "shape": "NextToken"
        },
        "orderBy": {
          "documentation": "<p>Certain filter criteria return output that can be sorted in ascending or descending order. For a list of output characteristics for each filter, see <a href=\"https://docs.aws.amazon.com/application-discovery/latest/userguide/discovery-api-queries.html#ListConfigurations\">Using the ListConfigurations Action</a> in the <i>Amazon Web Services Application Discovery Service User Guide</i>.</p>",
          "shape": "OrderByList"
        }
      },
      "required": [
        "configurationType"
      ],
      "type": "structure"
    },
    "ListConfigurationsResponse": {
      "members": {
        "configurations": {
          "documentation": "<p>Returns configuration details, including the configuration ID, attribute names, and attribute values.</p>",
          "shape": "Configurations"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if your call to ListConfigurations returned 100 items, but you set <code>ListConfigurationsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListServerNeighborsRequest": {
      "members": {
        "configurationId": {
          "documentation": "<p>Configuration ID of the server for which neighbors are being listed.</p>",
          "shape": "ConfigurationId"
        },
        "maxResults": {
          "documentation": "<p>Maximum number of results to return in a single page of output.</p>",
          "shape": "Integer"
        },
        "neighborConfigurationIds": {
          "documentation": "<p>List of configuration IDs to test for one-hop-away.</p>",
          "shape": "ConfigurationIdList"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if you previously specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with a token. Use that token in this query to get the next set of 10.</p>",
          "shape": "String"
        },
        "portInformationNeeded": {
          "documentation": "<p>Flag to indicate if port and protocol information is needed as part of the response.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "configurationId"
      ],
      "type": "structure"
    },
    "ListServerNeighborsResponse": {
      "members": {
        "knownDependencyCount": {
          "documentation": "<p>Count of distinct servers that are one hop away from the given server.</p>",
          "shape": "Long"
        },
        "neighbors": {
          "documentation": "<p>List of distinct servers that are one hop away from the given server.</p>",
          "shape": "NeighborDetailsList"
        },
        "nextToken": {
          "documentation": "<p>Token to retrieve the next set of results. For example, if you specified 100 IDs for <code>ListServerNeighborsRequest$neighborConfigurationIds</code> but set <code>ListServerNeighborsRequest$maxResults</code> to 10, you received a set of 10 results along with this token. Use this token in the next query to retrieve the next set of 10.</p>",
          "shape": "String"
        }
      },
      "required": [
        "neighbors"
      ],
      "type": "structure"
    },
    "Long": {
      "type": "long"
    },
    "Message": {
      "type": "string"
    },
    "NeighborConnectionDetail": {
      "documentation": "<p>Details about neighboring servers.</p>",
      "members": {
        "connectionsCount": {
          "documentation": "<p>The number of open network connections with the neighboring server.</p>",
          "shape": "Long"
        },
        "destinationPort": {
          "documentation": "<p>The destination network port for the connection.</p>",
          "shape": "BoxedInteger"
        },
        "destinationServerId": {
          "documentation": "<p>The ID of the server that accepted the network connection.</p>",
          "shape": "ConfigurationId"
        },
        "sourceServerId": {
          "documentation": "<p>The ID of the server that opened the network connection.</p>",
          "shape": "ConfigurationId"
        },
        "transportProtocol": {
          "documentation": "<p>The network protocol used for the connection.</p>",
          "shape": "String"
        }
      },
      "required": [
        "sourceServerId",
        "destinationServerId",
        "connectionsCount"
      ],
      "type": "structure"
    },
    "NeighborDetailsList": {
      "member": {
        "shape": "NeighborConnectionDetail"
      },
      "type": "list"
    },
    "NextToken": {
      "type": "string"
    },
    "OperationNotPermittedException": {
      "documentation": "<p>This operation is not permitted.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "OrderByElement": {
      "documentation": "<p>A field and direction for ordered output.</p>",
      "members": {
        "fieldName": {
          "documentation": "<p>The field on which to order.</p>",
          "shape": "OrderByElementFieldName"
        },
        "sortOrder": {
          "documentation": "<p>Ordering direction.</p>",
          "shape": "orderString"
        }
      },
      "required": [
        "fieldName"
      ],
      "type": "structure"
    },
    "OrderByElementFieldName": {
      "max": 1000,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "OrderByList": {
      "member": {
        "shape": "OrderByElement"
      },
      "type": "list"
    },
    "ResourceInUseException": {
      "documentation": "<p>This issue occurs when the same <code>clientRequestToken</code> is used with the <code>StartImportTask</code> action, but with different parameters. For example, you use the same request token but have two different import URLs, you can encounter this issue. If the import tasks are meant to be different, use a different <code>clientRequestToken</code>, and try again.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified configuration ID was not located. Verify the configuration ID and try again.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "S3Bucket": {
      "type": "string"
    },
    "S3PresignedUrl": {
      "type": "string"
    },
    "SchemaStorageConfig": {
      "key": {
        "shape": "DatabaseName"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "ServerInternalErrorException": {
      "documentation": "<p>The server experienced an internal error. Try again.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "StartContinuousExportRequest": {
      "members": {},
      "type": "structure"
    },
    "StartContinuousExportResponse": {
      "members": {
        "dataSource": {
          "documentation": "<p>The type of data collector used to gather this data (currently only offered for AGENT).</p>",
          "shape": "DataSource"
        },
        "exportId": {
          "documentation": "<p>The unique ID assigned to this export.</p>",
          "shape": "ConfigurationsExportId"
        },
        "s3Bucket": {
          "documentation": "<p>The name of the s3 bucket where the export data parquet files are stored.</p>",
          "shape": "S3Bucket"
        },
        "schemaStorageConfig": {
          "documentation": "<p>A dictionary which describes how the data is stored.</p> <ul> <li> <p> <code>databaseName</code> - the name of the Glue database used to store the schema.</p> </li> </ul>",
          "shape": "SchemaStorageConfig"
        },
        "startTime": {
          "documentation": "<p>The timestamp representing when the continuous export was started.</p>",
          "shape": "TimeStamp"
        }
      },
      "type": "structure"
    },
    "StartDataCollectionByAgentIdsRequest": {
      "members": {
        "agentIds": {
          "documentation": "<p>The IDs of the agents or connectors from which to start collecting data. If you send a request to an agent/connector ID that you do not have permission to contact, according to your Amazon Web Services account, the service does not throw an exception. Instead, it returns the error in the <i>Description</i> field. If you send a request to multiple agents/connectors and you do not have permission to contact some of those agents/connectors, the system does not throw an exception. Instead, the system shows <code>Failed</code> in the <i>Description</i> field.</p>",
          "shape": "AgentIds"
        }
      },
      "required": [
        "agentIds"
      ],
      "type": "structure"
    },
    "StartDataCollectionByAgentIdsResponse": {
      "members": {
        "agentsConfigurationStatus": {
          "documentation": "<p>Information about agents or the connector that were instructed to start collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.</p>",
          "shape": "AgentConfigurationStatusList"
        }
      },
      "type": "structure"
    },
    "StartExportTaskRequest": {
      "members": {
        "endTime": {
          "documentation": "<p>The end timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, exported data includes the most recent data collected by the agent.</p>",
          "shape": "TimeStamp"
        },
        "exportDataFormat": {
          "documentation": "<p>The file format for the returned export data. Default value is <code>CSV</code>. <b>Note:</b> <i>The</i> <code>GRAPHML</code> <i>option has been deprecated.</i> </p>",
          "shape": "ExportDataFormats"
        },
        "filters": {
          "documentation": "<p>If a filter is present, it selects the single <code>agentId</code> of the Application Discovery Agent for which data is exported. The <code>agentId</code> can be found in the results of the <code>DescribeAgents</code> API or CLI. If no filter is present, <code>startTime</code> and <code>endTime</code> are ignored and exported data includes both Agentless Discovery Connector data and summary data from Application Discovery agents. </p>",
          "shape": "ExportFilters"
        },
        "startTime": {
          "documentation": "<p>The start timestamp for exported data from the single Application Discovery Agent selected in the filters. If no value is specified, data is exported starting from the first data collected by the agent.</p>",
          "shape": "TimeStamp"
        }
      },
      "type": "structure"
    },
    "StartExportTaskResponse": {
      "members": {
        "exportId": {
          "documentation": "<p>A unique identifier used to query the status of an export request.</p>",
          "shape": "ConfigurationsExportId"
        }
      },
      "type": "structure"
    },
    "StartImportTaskRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Optional. A unique token that you can provide to prevent the same import request from occurring more than once. If you don't provide a token, a token is automatically generated.</p> <p>Sending more than one <code>StartImportTask</code> request with the same client request token will return information about the original import task with that client request token.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "importUrl": {
          "documentation": "<p>The URL for your import file that you've uploaded to Amazon S3.</p> <note> <p>If you're using the Amazon Web Services CLI, this URL is structured as follows: <code>s3://BucketName/ImportFileName.CSV</code> </p> </note>",
          "shape": "ImportURL"
        },
        "name": {
          "documentation": "<p>A descriptive name for this request. You can use this name to filter future requests related to this import task, such as identifying applications and servers that were included in this import task. We recommend that you use a meaningful name for each import task.</p>",
          "shape": "ImportTaskName"
        }
      },
      "required": [
        "name",
        "importUrl"
      ],
      "type": "structure"
    },
    "StartImportTaskResponse": {
      "members": {
        "task": {
          "documentation": "<p>An array of information related to the import task request including status information, times, IDs, the Amazon S3 Object URL for the import file, and more. </p>",
          "shape": "ImportTask"
        }
      },
      "type": "structure"
    },
    "StopContinuousExportRequest": {
      "members": {
        "exportId": {
          "documentation": "<p>The unique ID assigned to this export.</p>",
          "shape": "ConfigurationsExportId"
        }
      },
      "required": [
        "exportId"
      ],
      "type": "structure"
    },
    "StopContinuousExportResponse": {
      "members": {
        "startTime": {
          "documentation": "<p>Timestamp that represents when this continuous export started collecting data.</p>",
          "shape": "TimeStamp"
        },
        "stopTime": {
          "documentation": "<p>Timestamp that represents when this continuous export was stopped.</p>",
          "shape": "TimeStamp"
        }
      },
      "type": "structure"
    },
    "StopDataCollectionByAgentIdsRequest": {
      "members": {
        "agentIds": {
          "documentation": "<p>The IDs of the agents or connectors from which to stop collecting data.</p>",
          "shape": "AgentIds"
        }
      },
      "required": [
        "agentIds"
      ],
      "type": "structure"
    },
    "StopDataCollectionByAgentIdsResponse": {
      "members": {
        "agentsConfigurationStatus": {
          "documentation": "<p>Information about the agents or connector that were instructed to stop collecting data. Information includes the agent/connector ID, a description of the operation performed, and whether the agent/connector configuration was updated.</p>",
          "shape": "AgentConfigurationStatusList"
        }
      },
      "type": "structure"
    },
    "String": {
      "max": 10000,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "StringMax255": {
      "max": 255,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "Tag": {
      "documentation": "<p>Metadata that help you categorize IT assets.</p> <important> <p>Do not store sensitive information (like personal data) in tags.</p> </important>",
      "members": {
        "key": {
          "documentation": "<p>The type of tag on which to filter.</p>",
          "shape": "TagKey"
        },
        "value": {
          "documentation": "<p>A value for a tag key on which to filter.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "structure"
    },
    "TagFilter": {
      "documentation": "<p>The tag filter. Valid names are: <code>tagKey</code>, <code>tagValue</code>, <code>configurationId</code>.</p>",
      "members": {
        "name": {
          "documentation": "<p>A name of the tag filter.</p>",
          "shape": "FilterName"
        },
        "values": {
          "documentation": "<p>Values for the tag filter.</p>",
          "shape": "FilterValues"
        }
      },
      "required": [
        "name",
        "values"
      ],
      "type": "structure"
    },
    "TagFilters": {
      "member": {
        "shape": "TagFilter"
      },
      "type": "list"
    },
    "TagKey": {
      "type": "string"
    },
    "TagSet": {
      "member": {
        "shape": "Tag"
      },
      "type": "list"
    },
    "TagValue": {
      "type": "string"
    },
    "TimeStamp": {
      "type": "timestamp"
    },
    "ToDeleteIdentifierList": {
      "max": 10,
      "member": {
        "shape": "ImportTaskIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "UpdateApplicationRequest": {
      "members": {
        "configurationId": {
          "documentation": "<p>Configuration ID of the application to be updated.</p>",
          "shape": "ApplicationId"
        },
        "description": {
          "documentation": "<p>New description of the application to be updated.</p>",
          "shape": "ApplicationDescription"
        },
        "name": {
          "documentation": "<p>New name of the application to be updated.</p>",
          "shape": "ApplicationName"
        }
      },
      "required": [
        "configurationId"
      ],
      "type": "structure"
    },
    "UpdateApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "orderString": {
      "enum": [
        "ASC",
        "DESC"
      ],
      "type": "string"
    }
  },
  "version": "2.0"
}
