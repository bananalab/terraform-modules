{
  "documentation": "<p>Describes all of the AWS IoT 1-Click device-related API operations for the service.\n Also provides sample requests, responses, and errors for the supported web services\n protocols.</p>",
  "metadata": {
    "apiVersion": "2018-05-14",
    "endpointPrefix": "devices.iot1click",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS IoT 1-Click Devices Service",
    "serviceId": "IoT 1Click Devices Service",
    "signatureVersion": "v4",
    "signingName": "iot1click",
    "uid": "devices-2018-05-14"
  },
  "operations": {
    "ClaimDevicesByClaimCode": {
      "documentation": "<p>Adds device(s) to your account (i.e., claim one or more devices) if and only if you\n received a claim code with the device(s).</p>",
      "errors": [
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        },
        {
          "documentation": "<p>403 response</p>",
          "shape": "ForbiddenException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/claims/{claimCode}",
        "responseCode": 200
      },
      "input": {
        "shape": "ClaimDevicesByClaimCodeRequest"
      },
      "name": "ClaimDevicesByClaimCode",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ClaimDevicesByClaimCodeResponse"
      }
    },
    "DescribeDevice": {
      "documentation": "<p>Given a device ID, returns a DescribeDeviceResponse object describing the\n details of the device.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/devices/{deviceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeDeviceRequest"
      },
      "name": "DescribeDevice",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DescribeDeviceResponse"
      }
    },
    "FinalizeDeviceClaim": {
      "documentation": "<p>Given a device ID, finalizes the claim request for the associated device.</p><note>\n <p>Claiming a device consists of initiating a claim, then publishing a device event,\n and finalizing the claim. For a device of type button, a device event can\n be published by simply clicking the device.</p>\n </note>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        },
        {
          "documentation": "<p>412 response</p>",
          "shape": "PreconditionFailedException"
        },
        {
          "documentation": "<p>409 response</p>",
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/devices/{deviceId}/finalize-claim",
        "responseCode": 200
      },
      "input": {
        "shape": "FinalizeDeviceClaimRequest"
      },
      "name": "FinalizeDeviceClaim",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "FinalizeDeviceClaimResponse"
      }
    },
    "GetDeviceMethods": {
      "documentation": "<p>Given a device ID, returns the invokable methods associated with the device.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/devices/{deviceId}/methods",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDeviceMethodsRequest"
      },
      "name": "GetDeviceMethods",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetDeviceMethodsResponse"
      }
    },
    "InitiateDeviceClaim": {
      "documentation": "<p>Given a device ID, initiates a claim request for the associated device.</p><note>\n <p>Claiming a device consists of initiating a claim, then publishing a device event,\n and finalizing the claim. For a device of type button, a device event can\n be published by simply clicking the device.</p>\n </note>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        },
        {
          "documentation": "<p>409 response</p>",
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/devices/{deviceId}/initiate-claim",
        "responseCode": 200
      },
      "input": {
        "shape": "InitiateDeviceClaimRequest"
      },
      "name": "InitiateDeviceClaim",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "InitiateDeviceClaimResponse"
      }
    },
    "InvokeDeviceMethod": {
      "documentation": "<p>Given a device ID, issues a request to invoke a named device method (with possible\n parameters). See the \"Example POST\" code snippet below.</p>",
      "errors": [
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>412 response</p>",
          "shape": "PreconditionFailedException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        },
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>416 response</p>",
          "shape": "RangeNotSatisfiableException"
        },
        {
          "documentation": "<p>409 response</p>",
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/devices/{deviceId}/methods",
        "responseCode": 200
      },
      "input": {
        "shape": "InvokeDeviceMethodRequest"
      },
      "name": "InvokeDeviceMethod",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "InvokeDeviceMethodResponse"
      }
    },
    "ListDeviceEvents": {
      "documentation": "<p>Using a device ID, returns a DeviceEventsResponse object containing an\n array of events for the device.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>416 response</p>",
          "shape": "RangeNotSatisfiableException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/devices/{deviceId}/events",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDeviceEventsRequest"
      },
      "name": "ListDeviceEvents",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ListDeviceEventsResponse"
      }
    },
    "ListDevices": {
      "documentation": "<p>Lists the 1-Click compatible devices associated with your AWS account.</p>",
      "errors": [
        {
          "documentation": "<p>416 response</p>",
          "shape": "RangeNotSatisfiableException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/devices",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDevicesRequest"
      },
      "name": "ListDevices",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ListDevicesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags associated with the specified resource ARN.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds or updates the tags associated with the resource ARN. See <a href=\"https://docs.aws.amazon.com/iot-1-click/latest/developerguide/1click-appendix.html#1click-limits\">AWS IoT 1-Click Service Limits</a> for the maximum number of tags allowed per\n resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UnclaimDevice": {
      "documentation": "<p>Disassociates a device from your AWS account using its device ID.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/devices/{deviceId}/unclaim",
        "responseCode": 200
      },
      "input": {
        "shape": "UnclaimDeviceRequest"
      },
      "name": "UnclaimDevice",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UnclaimDeviceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Using tag keys, deletes the tags (key/value pairs) associated with the specified\n resource ARN.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resource-arn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateDeviceState": {
      "documentation": "<p>Using a Boolean value (true or false), this operation\n enables or disables the device given a device ID.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "ResourceNotFoundException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "InvalidRequestException"
        },
        {
          "documentation": "<p>500 response</p>",
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/devices/{deviceId}/state",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateDeviceStateRequest"
      },
      "name": "UpdateDeviceState",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateDeviceStateResponse"
      }
    }
  },
  "shapes": {
    "Attributes": {
      "members": {},
      "type": "structure"
    },
    "ClaimDevicesByClaimCodeRequest": {
      "members": {
        "ClaimCode": {
          "documentation": "<p>The claim code, starting with \"C-\", as provided by the device manufacturer.</p>",
          "location": "uri",
          "locationName": "claimCode",
          "shape": "__string"
        }
      },
      "required": [
        "ClaimCode"
      ],
      "type": "structure"
    },
    "ClaimDevicesByClaimCodeResponse": {
      "members": {
        "ClaimCode": {
          "documentation": "<p>The claim code provided by the device manufacturer.</p>",
          "locationName": "claimCode",
          "shape": "__stringMin12Max40"
        },
        "Total": {
          "documentation": "<p>The total number of devices associated with the claim code that has been processed in\n the claim request.</p>",
          "locationName": "total",
          "shape": "__integer"
        }
      },
      "type": "structure"
    },
    "DescribeDeviceRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "DescribeDeviceResponse": {
      "members": {
        "DeviceDescription": {
          "documentation": "<p>Device details.</p>",
          "locationName": "deviceDescription",
          "shape": "DeviceDescription"
        }
      },
      "type": "structure"
    },
    "Device": {
      "members": {
        "Attributes": {
          "documentation": "<p>The user specified attributes associated with the device for an event.</p>",
          "locationName": "attributes",
          "shape": "Attributes"
        },
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "Type": {
          "documentation": "<p>The device type, such as \"button\".</p>",
          "locationName": "type",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeviceAttributes": {
      "documentation": "<p>\n DeviceAttributes is a string-to-string map specified by the user.</p>",
      "key": {
        "shape": "__string"
      },
      "type": "map",
      "value": {
        "shape": "__string"
      }
    },
    "DeviceClaimResponse": {
      "members": {
        "State": {
          "documentation": "<p>The device's final claim state.</p>",
          "locationName": "state",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeviceDescription": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN of the device.</p>",
          "locationName": "arn",
          "shape": "__string"
        },
        "Attributes": {
          "documentation": "<p>An array of zero or more elements of DeviceAttribute objects providing\n user specified device attributes.</p>",
          "locationName": "attributes",
          "shape": "DeviceAttributes"
        },
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "Enabled": {
          "documentation": "<p>A Boolean value indicating whether or not the device is enabled.</p>",
          "locationName": "enabled",
          "shape": "__boolean"
        },
        "RemainingLife": {
          "documentation": "<p>A value between 0 and 1 inclusive, representing the fraction of life remaining for the\n device.</p>",
          "locationName": "remainingLife",
          "shape": "__doubleMin0Max100"
        },
        "Tags": {
          "documentation": "<p>The tags currently associated with the AWS IoT 1-Click device.</p>",
          "locationName": "tags",
          "shape": "__mapOf__string"
        },
        "Type": {
          "documentation": "<p>The type of the device, such as \"button\".</p>",
          "locationName": "type",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeviceEvent": {
      "members": {
        "Device": {
          "documentation": "<p>An object representing the device associated with the event.</p>",
          "locationName": "device",
          "shape": "Device"
        },
        "StdEvent": {
          "documentation": "<p>A serialized JSON object representing the device-type specific event.</p>",
          "locationName": "stdEvent",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeviceEventsResponse": {
      "members": {
        "Events": {
          "documentation": "<p>An array of zero or more elements describing the event(s) associated with the\n device.</p>",
          "locationName": "events",
          "shape": "__listOfDeviceEvent"
        },
        "NextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeviceMethod": {
      "members": {
        "DeviceType": {
          "documentation": "<p>The type of the device, such as \"button\".</p>",
          "locationName": "deviceType",
          "shape": "__string"
        },
        "MethodName": {
          "documentation": "<p>The name of the method applicable to the deviceType.</p>",
          "locationName": "methodName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "Empty": {
      "documentation": "<p>On success, an empty object is returned.</p>",
      "members": {},
      "type": "structure"
    },
    "FinalizeDeviceClaimRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "FinalizeDeviceClaimResponse": {
      "members": {
        "State": {
          "documentation": "<p>The device's final claim state.</p>",
          "locationName": "state",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ForbiddenException": {
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>403</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The 403 error message returned by the web server.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetDeviceMethodsRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "GetDeviceMethodsResponse": {
      "members": {
        "DeviceMethods": {
          "documentation": "<p>List of available device APIs.</p>",
          "locationName": "deviceMethods",
          "shape": "__listOfDeviceMethod"
        }
      },
      "type": "structure"
    },
    "InitiateDeviceClaimRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "InitiateDeviceClaimResponse": {
      "members": {
        "State": {
          "documentation": "<p>The device's final claim state.</p>",
          "locationName": "state",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "InternalFailureException": {
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>500</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The 500 error message returned by the web server.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>400</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The 400 error message returned by the web server.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "InvokeDeviceMethodRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "DeviceMethod": {
          "documentation": "<p>The device method to invoke.</p>",
          "locationName": "deviceMethod",
          "shape": "DeviceMethod"
        },
        "DeviceMethodParameters": {
          "documentation": "<p>A JSON encoded string containing the device method request parameters.</p>",
          "locationName": "deviceMethodParameters",
          "shape": "__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "InvokeDeviceMethodResponse": {
      "members": {
        "DeviceMethodResponse": {
          "documentation": "<p>A JSON encoded string containing the device method response.</p>",
          "locationName": "deviceMethodResponse",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListDeviceEventsRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "FromTimeStamp": {
          "documentation": "<p>The start date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n </p>",
          "location": "querystring",
          "locationName": "fromTimeStamp",
          "shape": "__timestampIso8601"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per request. If not set, a default value of\n 100 is used.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "ToTimeStamp": {
          "documentation": "<p>The end date for the device event query, in ISO8061 format. For example,\n 2018-03-28T15:45:12.880Z\n </p>",
          "location": "querystring",
          "locationName": "toTimeStamp",
          "shape": "__timestampIso8601"
        }
      },
      "required": [
        "DeviceId",
        "FromTimeStamp",
        "ToTimeStamp"
      ],
      "type": "structure"
    },
    "ListDeviceEventsResponse": {
      "members": {
        "Events": {
          "documentation": "<p>An array of zero or more elements describing the event(s) associated with the\n device.</p>",
          "locationName": "events",
          "shape": "__listOfDeviceEvent"
        },
        "NextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListDevicesRequest": {
      "members": {
        "DeviceType": {
          "documentation": "<p>The type of the device, such as \"button\".</p>",
          "location": "querystring",
          "locationName": "deviceType",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per request. If not set, a default value of\n 100 is used.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListDevicesResponse": {
      "members": {
        "Devices": {
          "documentation": "<p>A list of devices.</p>",
          "locationName": "devices",
          "shape": "__listOfDeviceDescription"
        },
        "NextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "PreconditionFailedException": {
      "error": {
        "httpStatusCode": 412
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>412</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>An error message explaining the error or its remedy.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "RangeNotSatisfiableException": {
      "error": {
        "httpStatusCode": 416
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>416</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The requested number of results specified by nextToken cannot be\n satisfied.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ResourceConflictException": {
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>409</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>An error message explaining the error or its remedy.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Code": {
          "documentation": "<p>404</p>",
          "locationName": "code",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>The requested device could not be found.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "Tags": {
          "documentation": "<p>A collection of key/value pairs defining the resource tags. For example, {\n \"tags\": {\"key1\": \"value1\", \"key2\": \"value2\"} }. For more information, see <a href=\"https://aws.amazon.com/answers/account-management/aws-tagging-strategies/\">AWS\n Tagging Strategies</a>.</p><p>\n \n </p>",
          "locationName": "tags",
          "shape": "__mapOf__string"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "UnclaimDeviceRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "UnclaimDeviceResponse": {
      "members": {
        "State": {
          "documentation": "<p>The device's final claim state.</p>",
          "locationName": "state",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resource-arn",
          "shape": "__string"
        },
        "TagKeys": {
          "documentation": "<p>A collections of tag keys. For example, {\"key1\",\"key2\"}</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "__listOf__string"
        }
      },
      "required": [
        "TagKeys",
        "ResourceArn"
      ],
      "type": "structure"
    },
    "UpdateDeviceStateRequest": {
      "members": {
        "DeviceId": {
          "documentation": "<p>The unique identifier of the device.</p>",
          "location": "uri",
          "locationName": "deviceId",
          "shape": "__string"
        },
        "Enabled": {
          "documentation": "<p>If true, the device is enabled. If false, the device is\n disabled.</p>",
          "locationName": "enabled",
          "shape": "__boolean"
        }
      },
      "required": [
        "DeviceId"
      ],
      "type": "structure"
    },
    "UpdateDeviceStateResponse": {
      "members": {},
      "type": "structure"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "type": "double"
    },
    "__doubleMin0Max100": {
      "type": "double"
    },
    "__integer": {
      "type": "integer"
    },
    "__listOfDeviceDescription": {
      "member": {
        "shape": "DeviceDescription"
      },
      "type": "list"
    },
    "__listOfDeviceEvent": {
      "member": {
        "shape": "DeviceEvent"
      },
      "type": "list"
    },
    "__listOfDeviceMethod": {
      "member": {
        "shape": "DeviceMethod"
      },
      "type": "list"
    },
    "__listOf__string": {
      "member": {
        "shape": "__string"
      },
      "type": "list"
    },
    "__long": {
      "type": "long"
    },
    "__mapOf__string": {
      "key": {
        "shape": "__string"
      },
      "type": "map",
      "value": {
        "shape": "__string"
      }
    },
    "__string": {
      "type": "string"
    },
    "__stringMin12Max40": {
      "max": 40,
      "min": 12,
      "type": "string"
    },
    "__timestampIso8601": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "__timestampUnix": {
      "timestampFormat": "unixTimestamp",
      "type": "timestamp"
    }
  }
}
