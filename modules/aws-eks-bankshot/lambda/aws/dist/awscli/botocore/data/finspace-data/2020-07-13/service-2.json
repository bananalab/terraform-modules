{
  "documentation": "<p> The FinSpace APIs let you take actions inside the FinSpace.</p>",
  "metadata": {
    "apiVersion": "2020-07-13",
    "endpointPrefix": "finspace-api",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "FinSpace Data",
    "serviceFullName": "FinSpace Public API",
    "serviceId": "finspace data",
    "signatureVersion": "v4",
    "signingName": "finspace-api",
    "uid": "finspace-2020-07-13"
  },
  "operations": {
    "AssociateUserToPermissionGroup": {
      "documentation": "<p>Adds a user account to a permission group to grant permissions for actions a user can perform in FinSpace.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/permission-group/{permissionGroupId}/users/{userId}"
      },
      "input": {
        "shape": "AssociateUserToPermissionGroupRequest"
      },
      "name": "AssociateUserToPermissionGroup",
      "output": {
        "shape": "AssociateUserToPermissionGroupResponse"
      }
    },
    "CreateChangeset": {
      "documentation": "<p>Creates a new Changeset in a FinSpace Dataset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/datasets/{datasetId}/changesetsv2"
      },
      "input": {
        "shape": "CreateChangesetRequest"
      },
      "name": "CreateChangeset",
      "output": {
        "shape": "CreateChangesetResponse"
      }
    },
    "CreateDataView": {
      "documentation": "<p>Creates a Dataview for a Dataset.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/datasets/{datasetId}/dataviewsv2"
      },
      "input": {
        "shape": "CreateDataViewRequest"
      },
      "name": "CreateDataView",
      "output": {
        "shape": "CreateDataViewResponse"
      }
    },
    "CreateDataset": {
      "documentation": "<p>Creates a new FinSpace Dataset.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/datasetsv2"
      },
      "input": {
        "shape": "CreateDatasetRequest"
      },
      "name": "CreateDataset",
      "output": {
        "shape": "CreateDatasetResponse"
      }
    },
    "CreatePermissionGroup": {
      "documentation": "<p>Creates a group of permissions for various actions that a user can perform in FinSpace.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/permission-group"
      },
      "input": {
        "shape": "CreatePermissionGroupRequest"
      },
      "name": "CreatePermissionGroup",
      "output": {
        "shape": "CreatePermissionGroupResponse"
      }
    },
    "CreateUser": {
      "documentation": "<p>Creates a new user in FinSpace.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user"
      },
      "input": {
        "shape": "CreateUserRequest"
      },
      "name": "CreateUser",
      "output": {
        "shape": "CreateUserResponse"
      }
    },
    "DeleteDataset": {
      "documentation": "<p>Deletes a FinSpace Dataset.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/datasetsv2/{datasetId}"
      },
      "input": {
        "shape": "DeleteDatasetRequest"
      },
      "name": "DeleteDataset",
      "output": {
        "shape": "DeleteDatasetResponse"
      }
    },
    "DeletePermissionGroup": {
      "documentation": "<p>Deletes a permission group. This action is irreversible.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/permission-group/{permissionGroupId}"
      },
      "input": {
        "shape": "DeletePermissionGroupRequest"
      },
      "name": "DeletePermissionGroup",
      "output": {
        "shape": "DeletePermissionGroupResponse"
      }
    },
    "DisableUser": {
      "documentation": "<p>Denies access to the FinSpace web application and API for the specified user.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/{userId}/disable"
      },
      "input": {
        "shape": "DisableUserRequest"
      },
      "name": "DisableUser",
      "output": {
        "shape": "DisableUserResponse"
      }
    },
    "DisassociateUserFromPermissionGroup": {
      "documentation": "<p>Removes a user account from a permission group.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/permission-group/{permissionGroupId}/users/{userId}"
      },
      "input": {
        "shape": "DisassociateUserFromPermissionGroupRequest"
      },
      "name": "DisassociateUserFromPermissionGroup",
      "output": {
        "shape": "DisassociateUserFromPermissionGroupResponse"
      }
    },
    "EnableUser": {
      "documentation": "<p> Allows the specified user to access the FinSpace web application and API.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/{userId}/enable"
      },
      "input": {
        "shape": "EnableUserRequest"
      },
      "name": "EnableUser",
      "output": {
        "shape": "EnableUserResponse"
      }
    },
    "GetChangeset": {
      "documentation": "<p>Get information about a Changeset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasets/{datasetId}/changesetsv2/{changesetId}"
      },
      "input": {
        "shape": "GetChangesetRequest"
      },
      "name": "GetChangeset",
      "output": {
        "shape": "GetChangesetResponse"
      }
    },
    "GetDataView": {
      "documentation": "<p>Gets information about a Dataview.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasets/{datasetId}/dataviewsv2/{dataviewId}"
      },
      "input": {
        "shape": "GetDataViewRequest"
      },
      "name": "GetDataView",
      "output": {
        "shape": "GetDataViewResponse"
      }
    },
    "GetDataset": {
      "documentation": "<p>Returns information about a Dataset.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasetsv2/{datasetId}"
      },
      "input": {
        "shape": "GetDatasetRequest"
      },
      "name": "GetDataset",
      "output": {
        "shape": "GetDatasetResponse"
      }
    },
    "GetExternalDataViewAccessDetails": {
      "documentation": "<p>Returns the credentials to access the external Dataview from an S3 location. To call this API:</p> <ul> <li> <p>You must retrieve the programmatic credentials.</p> </li> <li> <p>You must be a member of a FinSpace user group, where the dataset that you want to access has <code>Read Dataset Data</code> permissions.</p> </li> </ul>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/datasets/{datasetId}/dataviewsv2/{dataviewId}/external-access-details"
      },
      "input": {
        "shape": "GetExternalDataViewAccessDetailsRequest"
      },
      "name": "GetExternalDataViewAccessDetails",
      "output": {
        "shape": "GetExternalDataViewAccessDetailsResponse"
      }
    },
    "GetPermissionGroup": {
      "documentation": "<p>Retrieves the details of a specific permission group.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/permission-group/{permissionGroupId}"
      },
      "input": {
        "shape": "GetPermissionGroupRequest"
      },
      "name": "GetPermissionGroup",
      "output": {
        "shape": "GetPermissionGroupResponse"
      }
    },
    "GetProgrammaticAccessCredentials": {
      "documentation": "<p>Request programmatic credentials to use with FinSpace SDK.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/credentials/programmatic"
      },
      "input": {
        "shape": "GetProgrammaticAccessCredentialsRequest"
      },
      "name": "GetProgrammaticAccessCredentials",
      "output": {
        "shape": "GetProgrammaticAccessCredentialsResponse"
      }
    },
    "GetUser": {
      "documentation": "<p>Retrieves details for a specific user.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user/{userId}"
      },
      "input": {
        "shape": "GetUserRequest"
      },
      "name": "GetUser",
      "output": {
        "shape": "GetUserResponse"
      }
    },
    "GetWorkingLocation": {
      "documentation": "<p>A temporary Amazon S3 location, where you can copy your files from a source location to stage or use as a scratch space in FinSpace notebook.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workingLocationV1"
      },
      "input": {
        "shape": "GetWorkingLocationRequest"
      },
      "name": "GetWorkingLocation",
      "output": {
        "shape": "GetWorkingLocationResponse"
      }
    },
    "ListChangesets": {
      "documentation": "<p>Lists the FinSpace Changesets for a Dataset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasets/{datasetId}/changesetsv2"
      },
      "input": {
        "shape": "ListChangesetsRequest"
      },
      "name": "ListChangesets",
      "output": {
        "shape": "ListChangesetsResponse"
      }
    },
    "ListDataViews": {
      "documentation": "<p>Lists all available Dataviews for a Dataset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasets/{datasetId}/dataviewsv2"
      },
      "input": {
        "shape": "ListDataViewsRequest"
      },
      "name": "ListDataViews",
      "output": {
        "shape": "ListDataViewsResponse"
      }
    },
    "ListDatasets": {
      "documentation": "<p>Lists all of the active Datasets that a user has access to.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/datasetsv2"
      },
      "input": {
        "shape": "ListDatasetsRequest"
      },
      "name": "ListDatasets",
      "output": {
        "shape": "ListDatasetsResponse"
      }
    },
    "ListPermissionGroups": {
      "documentation": "<p>Lists all available permission groups in FinSpace.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/permission-group"
      },
      "input": {
        "shape": "ListPermissionGroupsRequest"
      },
      "name": "ListPermissionGroups",
      "output": {
        "shape": "ListPermissionGroupsResponse"
      }
    },
    "ListPermissionGroupsByUser": {
      "documentation": "<p>Lists all the permission groups that are associated with a specific user account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user/{userId}/permission-groups"
      },
      "input": {
        "shape": "ListPermissionGroupsByUserRequest"
      },
      "name": "ListPermissionGroupsByUser",
      "output": {
        "shape": "ListPermissionGroupsByUserResponse"
      }
    },
    "ListUsers": {
      "documentation": "<p>Lists all available user accounts in FinSpace.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/user"
      },
      "input": {
        "shape": "ListUsersRequest"
      },
      "name": "ListUsers",
      "output": {
        "shape": "ListUsersResponse"
      }
    },
    "ListUsersByPermissionGroup": {
      "documentation": "<p>Lists details of all the users in a specific permission group.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/permission-group/{permissionGroupId}/users"
      },
      "input": {
        "shape": "ListUsersByPermissionGroupRequest"
      },
      "name": "ListUsersByPermissionGroup",
      "output": {
        "shape": "ListUsersByPermissionGroupResponse"
      }
    },
    "ResetUserPassword": {
      "documentation": "<p>Resets the password for a specified user ID and generates a temporary one. Only a superuser can reset password for other users. Resetting the password immediately invalidates the previous password associated with the user.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/{userId}/password"
      },
      "input": {
        "shape": "ResetUserPasswordRequest"
      },
      "name": "ResetUserPassword",
      "output": {
        "shape": "ResetUserPasswordResponse"
      }
    },
    "UpdateChangeset": {
      "documentation": "<p>Updates a FinSpace Changeset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/datasets/{datasetId}/changesetsv2/{changesetId}"
      },
      "input": {
        "shape": "UpdateChangesetRequest"
      },
      "name": "UpdateChangeset",
      "output": {
        "shape": "UpdateChangesetResponse"
      }
    },
    "UpdateDataset": {
      "documentation": "<p>Updates a FinSpace Dataset.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/datasetsv2/{datasetId}"
      },
      "input": {
        "shape": "UpdateDatasetRequest"
      },
      "name": "UpdateDataset",
      "output": {
        "shape": "UpdateDatasetResponse"
      }
    },
    "UpdatePermissionGroup": {
      "documentation": "<p>Modifies the details of a permission group. You cannot modify a <code>permissionGroupID</code>.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/permission-group/{permissionGroupId}"
      },
      "input": {
        "shape": "UpdatePermissionGroupRequest"
      },
      "name": "UpdatePermissionGroup",
      "output": {
        "shape": "UpdatePermissionGroupResponse"
      }
    },
    "UpdateUser": {
      "documentation": "<p>Modifies the details of the specified user account. You cannot update the <code>userId</code> for a user.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/user/{userId}"
      },
      "input": {
        "shape": "UpdateUserRequest"
      },
      "name": "UpdateUser",
      "output": {
        "shape": "UpdateUserResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "AccessKeyId": {
      "max": 255,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "AliasString": {
      "max": 255,
      "min": 1,
      "pattern": "^alias\\/\\S+",
      "type": "string"
    },
    "ApiAccess": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "ApplicationPermission": {
      "enum": [
        "CreateDataset",
        "ManageClusters",
        "ManageUsersAndGroups",
        "ManageAttributeSets",
        "ViewAuditData",
        "AccessNotebooks",
        "GetTemporaryCredentials"
      ],
      "type": "string"
    },
    "ApplicationPermissionList": {
      "member": {
        "shape": "ApplicationPermission"
      },
      "type": "list"
    },
    "AssociateUserToPermissionGroupRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "permissionGroupId",
        "userId"
      ],
      "type": "structure"
    },
    "AssociateUserToPermissionGroupResponse": {
      "members": {
        "statusCode": {
          "documentation": "<p>The returned status code of the response.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "AwsCredentials": {
      "documentation": "<p> The credentials required to access the external Dataview from the S3 location.</p>",
      "members": {
        "accessKeyId": {
          "documentation": "<p> The unique identifier for the security credentials.</p>",
          "shape": "AccessKeyId"
        },
        "expiration": {
          "documentation": "<p> The Epoch time when the current credentials expire.</p>",
          "shape": "TimestampEpoch"
        },
        "secretAccessKey": {
          "documentation": "<p> The secret access key that can be used to sign requests.</p>",
          "shape": "SecretAccessKey"
        },
        "sessionToken": {
          "documentation": "<p> The token that users must pass to use the credentials.</p>",
          "shape": "SessionToken"
        }
      },
      "type": "structure"
    },
    "Boolean": {
      "documentation": "Common Boolean data type",
      "type": "boolean"
    },
    "ChangeType": {
      "documentation": "Indicates how the given change will be applied to the dataset.",
      "enum": [
        "REPLACE",
        "APPEND",
        "MODIFY"
      ],
      "type": "string"
    },
    "ChangesetArn": {
      "documentation": "Arn for a given Changeset",
      "type": "string"
    },
    "ChangesetErrorInfo": {
      "documentation": "<p>The structure with error messages.</p>",
      "members": {
        "errorCategory": {
          "documentation": "<p>The category of the error.</p> <ul> <li> <p> <code>VALIDATION</code> \u2013 The inputs to this request are invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code> \u2013 Service quotas have been exceeded. Please contact AWS support to increase quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> \u2013 Missing required permission to perform this request.</p> </li> <li> <p> <code>RESOURCE_NOT_FOUND</code> \u2013 One or more inputs to this request were not found.</p> </li> <li> <p> <code>THROTTLING</code> \u2013 The system temporarily lacks sufficient resources to process the request.</p> </li> <li> <p> <code>INTERNAL_SERVICE_EXCEPTION</code> \u2013 An internal service error has occurred.</p> </li> <li> <p> <code>CANCELLED</code> \u2013 Cancelled.</p> </li> <li> <p> <code>USER_RECOVERABLE</code> \u2013 A user recoverable error has occurred.</p> </li> </ul>",
          "shape": "ErrorCategory"
        },
        "errorMessage": {
          "documentation": "<p>The text of the error message.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ChangesetId": {
      "documentation": "ID used to identify a Changeset",
      "max": 26,
      "min": 1,
      "type": "string"
    },
    "ChangesetList": {
      "documentation": "List of Changeset Summaries",
      "member": {
        "shape": "ChangesetSummary"
      },
      "type": "list"
    },
    "ChangesetSummary": {
      "documentation": "<p>A Changeset is unit of data in a Dataset.</p>",
      "members": {
        "activeFromTimestamp": {
          "box": true,
          "documentation": "<p>Beginning time from which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "activeUntilTimestamp": {
          "box": true,
          "documentation": "<p>Time until which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "changeType": {
          "documentation": "<p>Type that indicates how a Changeset is applied to a Dataset.</p> <ul> <li> <p> <code>REPLACE</code> \u2013 Changeset is considered as a replacement to all prior loaded Changesets.</p> </li> <li> <p> <code>APPEND</code> \u2013 Changeset is considered as an addition to the end of all prior loaded Changesets.</p> </li> <li> <p> <code>MODIFY</code> \u2013 Changeset is considered as a replacement to a specific prior ingested Changeset.</p> </li> </ul>",
          "shape": "ChangeType"
        },
        "changesetArn": {
          "documentation": "<p>The ARN identifier of the Changeset.</p>",
          "shape": "ChangesetArn"
        },
        "changesetId": {
          "documentation": "<p>The unique identifier for a Changeset.</p>",
          "shape": "ChangesetId"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset in which the Changeset is created.</p>",
          "shape": "DatasetId"
        },
        "errorInfo": {
          "documentation": "<p>The structure with error messages.</p>",
          "shape": "ChangesetErrorInfo"
        },
        "formatParams": {
          "documentation": "<p>Options that define the structure of the source file(s).</p>",
          "shape": "FormatParams"
        },
        "sourceParams": {
          "documentation": "<p>Options that define the location of the data being ingested.</p>",
          "shape": "SourceParams"
        },
        "status": {
          "documentation": "<p>Status of the Changeset ingestion.</p> <ul> <li> <p> <code>PENDING</code> \u2013 Changeset is pending creation.</p> </li> <li> <p> <code>FAILED</code> \u2013 Changeset creation has failed.</p> </li> <li> <p> <code>SUCCESS</code> \u2013 Changeset creation has succeeded.</p> </li> <li> <p> <code>RUNNING</code> \u2013 Changeset creation is running.</p> </li> <li> <p> <code>STOP_REQUESTED</code> \u2013 User requested Changeset creation to stop.</p> </li> </ul>",
          "shape": "IngestionStatus"
        },
        "updatedByChangesetId": {
          "documentation": "<p>The unique identifier of the updated Changeset.</p>",
          "shape": "ChangesetId"
        },
        "updatesChangesetId": {
          "documentation": "<p>The unique identifier of the Changeset that is updated.</p>",
          "shape": "ChangesetId"
        }
      },
      "type": "structure"
    },
    "ClientToken": {
      "documentation": "Idempotence Token for API operations",
      "max": 128,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "ColumnDataType": {
      "documentation": "Data type of a column.",
      "enum": [
        "STRING",
        "CHAR",
        "INTEGER",
        "TINYINT",
        "SMALLINT",
        "BIGINT",
        "FLOAT",
        "DOUBLE",
        "DATE",
        "DATETIME",
        "BOOLEAN",
        "BINARY"
      ],
      "type": "string"
    },
    "ColumnDefinition": {
      "documentation": "<p>The definition of a column in a tabular Dataset.</p>",
      "members": {
        "columnDescription": {
          "documentation": "<p>Description for a column.</p>",
          "shape": "ColumnDescription"
        },
        "columnName": {
          "documentation": "<p>The name of a column.</p>",
          "shape": "ColumnName"
        },
        "dataType": {
          "documentation": "<p>Data type of a column.</p> <ul> <li> <p> <code>STRING</code> \u2013 A String data type.</p> <p> <code>CHAR</code> \u2013 A char data type.</p> <p> <code>INTEGER</code> \u2013 An integer data type.</p> <p> <code>TINYINT</code> \u2013 A tinyint data type.</p> <p> <code>SMALLINT</code> \u2013 A smallint data type.</p> <p> <code>BIGINT</code> \u2013 A bigint data type.</p> <p> <code>FLOAT</code> \u2013 A float data type.</p> <p> <code>DOUBLE</code> \u2013 A double data type.</p> <p> <code>DATE</code> \u2013 A date data type.</p> <p> <code>DATETIME</code> \u2013 A datetime data type.</p> <p> <code>BOOLEAN</code> \u2013 A boolean data type.</p> <p> <code>BINARY</code> \u2013 A binary data type.</p> </li> </ul>",
          "shape": "ColumnDataType"
        }
      },
      "type": "structure"
    },
    "ColumnDescription": {
      "documentation": "Column Description",
      "max": 512,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "ColumnList": {
      "documentation": "List of Column Definitions",
      "member": {
        "shape": "ColumnDefinition"
      },
      "type": "list"
    },
    "ColumnName": {
      "documentation": "Column Name",
      "max": 126,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "ColumnNameList": {
      "documentation": "List of Column Names",
      "member": {
        "shape": "ColumnName"
      },
      "type": "list"
    },
    "ConflictException": {
      "documentation": "<p>The request conflicts with an existing resource.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        },
        "reason": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "CreateChangesetRequest": {
      "documentation": "The request for a CreateChangeset operation.",
      "members": {
        "changeType": {
          "documentation": "<p>The option to indicate how a Changeset will be applied to a Dataset.</p> <ul> <li> <p> <code>REPLACE</code> \u2013 Changeset will be considered as a replacement to all prior loaded Changesets.</p> </li> <li> <p> <code>APPEND</code> \u2013 Changeset will be considered as an addition to the end of all prior loaded Changesets.</p> </li> <li> <p> <code>MODIFY</code> \u2013 Changeset is considered as a replacement to a specific prior ingested Changeset.</p> </li> </ul>",
          "shape": "ChangeType"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset where the Changeset will be created. </p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "formatParams": {
          "documentation": "<p>Options that define the structure of the source file(s) including the format type (<code>formatType</code>), header row (<code>withHeader</code>), data separation character (<code>separator</code>) and the type of compression (<code>compression</code>). </p> <p> <code>formatType</code> is a required attribute and can have the following values: </p> <ul> <li> <p> <code>PARQUET</code> \u2013 Parquet source file format.</p> </li> <li> <p> <code>CSV</code> \u2013 CSV source file format.</p> </li> <li> <p> <code>JSON</code> \u2013 JSON source file format.</p> </li> <li> <p> <code>XML</code> \u2013 XML source file format.</p> </li> </ul> <p>Here is an example of how you could specify the <code>formatParams</code>:</p> <p> <code> \"formatParams\": { \"formatType\": \"CSV\", \"withHeader\": \"true\", \"separator\": \",\", \"compression\":\"None\" } </code> </p> <p>Note that if you only provide <code>formatType</code> as <code>CSV</code>, the rest of the attributes will automatically default to CSV values as following:</p> <p> <code> { \"withHeader\": \"true\", \"separator\": \",\" } </code> </p> <p> For more information about supported file formats, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/supported-data-types.html\">Supported Data Types and File Formats</a> in the FinSpace User Guide.</p>",
          "shape": "FormatParams"
        },
        "sourceParams": {
          "documentation": "<p>Options that define the location of the data being ingested (<code>s3SourcePath</code>) and the source of the changeset (<code>sourceType</code>).</p> <p>Both <code>s3SourcePath</code> and <code>sourceType</code> are required attributes.</p> <p>Here is an example of how you could specify the <code>sourceParams</code>:</p> <p> <code> \"sourceParams\": { \"s3SourcePath\": \"s3://finspace-landing-us-east-2-bk7gcfvitndqa6ebnvys4d/scratch/wr5hh8pwkpqqkxa4sxrmcw/ingestion/equity.csv\", \"sourceType\": \"S3\" } </code> </p> <p>The S3 path that you specify must allow the FinSpace role access. To do that, you first need to configure the IAM policy on S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/finspace/latest/data-api/fs-using-the-finspace-api.html#access-s3-buckets\">Loading data from an Amazon S3 Bucket using the FinSpace API</a> section.</p>",
          "shape": "SourceParams"
        }
      },
      "required": [
        "datasetId",
        "changeType",
        "sourceParams",
        "formatParams"
      ],
      "type": "structure"
    },
    "CreateChangesetResponse": {
      "documentation": "The response from a CreateChangeset operation.",
      "members": {
        "changesetId": {
          "documentation": "<p>The unique identifier of the Changeset that is created.</p>",
          "shape": "ChangesetId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "CreateDataViewRequest": {
      "documentation": "Request for creating a data view.",
      "members": {
        "asOfTimestamp": {
          "box": true,
          "documentation": "<p>Beginning time to use for the Dataview. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "autoUpdate": {
          "documentation": "<p>Flag to indicate Dataview should be updated automatically.</p>",
          "shape": "Boolean"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "datasetId": {
          "documentation": "<p>The unique Dataset identifier that is used to create a Dataview.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "destinationTypeParams": {
          "documentation": "<p>Options that define the destination type for the Dataview.</p>",
          "shape": "DataViewDestinationTypeParams"
        },
        "partitionColumns": {
          "documentation": "<p>Ordered set of column names used to partition data.</p>",
          "shape": "PartitionColumnList"
        },
        "sortColumns": {
          "documentation": "<p>Columns to be used for sorting the data.</p>",
          "shape": "SortColumnList"
        }
      },
      "required": [
        "datasetId",
        "destinationTypeParams"
      ],
      "type": "structure"
    },
    "CreateDataViewResponse": {
      "documentation": "Response for creating a data view.",
      "members": {
        "dataViewId": {
          "documentation": "<p>The unique identifier for the created Dataview.</p>",
          "shape": "DataViewId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier of the Dataset used for the Dataview.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "CreateDatasetRequest": {
      "documentation": "The request for a CreateDataset operation",
      "members": {
        "alias": {
          "documentation": "<p>The unique resource identifier for a Dataset.</p>",
          "shape": "AliasString"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "datasetDescription": {
          "documentation": "<p>Description of a Dataset.</p>",
          "shape": "DatasetDescription"
        },
        "datasetTitle": {
          "documentation": "<p>Display title for a FinSpace Dataset.</p>",
          "shape": "DatasetTitle"
        },
        "kind": {
          "documentation": "<p>The format in which Dataset data is structured.</p> <ul> <li> <p> <code>TABULAR</code> \u2013 Data is structured in a tabular format.</p> </li> <li> <p> <code>NON_TABULAR</code> \u2013 Data is structured in a non-tabular format.</p> </li> </ul>",
          "shape": "DatasetKind"
        },
        "ownerInfo": {
          "documentation": "<p>Contact information for a Dataset owner.</p>",
          "shape": "DatasetOwnerInfo"
        },
        "permissionGroupParams": {
          "documentation": "<p>Permission group parameters for Dataset permissions.</p>",
          "shape": "PermissionGroupParams"
        },
        "schemaDefinition": {
          "documentation": "<p>Definition for a schema on a tabular Dataset.</p>",
          "shape": "SchemaUnion"
        }
      },
      "required": [
        "datasetTitle",
        "kind",
        "permissionGroupParams"
      ],
      "type": "structure"
    },
    "CreateDatasetResponse": {
      "documentation": "The response from a CreateDataset operation",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier for the created Dataset.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "CreatePermissionGroupRequest": {
      "members": {
        "applicationPermissions": {
          "documentation": "<p>The option to indicate FinSpace application permissions that are granted to a specific group.</p> <important> <p>When assigning application permissions, be aware that the permission <code>ManageUsersAndGroups</code> allows users to grant themselves or others access to any functionality in their FinSpace environment's application. It should only be granted to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code> \u2013 Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code> \u2013 Group members can manage Apache Spark clusters from FinSpace notebooks.</p> </li> <li> <p> <code>ManageUsersAndGroups</code> \u2013 Group members can manage users and permission groups. This is a privileged permission that allows users to grant themselves or others access to any functionality in the application. It should only be granted to trusted users.</p> </li> <li> <p> <code>ManageAttributeSets</code> \u2013 Group members can manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code> \u2013 Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code> \u2013 Group members will have access to FinSpace notebooks.</p> </li> <li> <p> <code>GetTemporaryCredentials</code> \u2013 Group members can get temporary API credentials.</p> </li> </ul>",
          "shape": "ApplicationPermissionList"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>A brief description for the permission group.</p>",
          "shape": "PermissionGroupDescription"
        },
        "name": {
          "documentation": "<p>The name of the permission group.</p>",
          "shape": "PermissionGroupName"
        }
      },
      "required": [
        "name",
        "applicationPermissions"
      ],
      "type": "structure"
    },
    "CreatePermissionGroupResponse": {
      "members": {
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "CreateUserRequest": {
      "members": {
        "ApiAccess": {
          "documentation": "<p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code> API to obtain credentials that can then be used to access other FinSpace Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> \u2013 The user has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user does not have permissions to use any APIs.</p> </li> </ul>",
          "shape": "ApiAccess"
        },
        "apiAccessPrincipalArn": {
          "documentation": "<p>The ARN identifier of an AWS user or role that is allowed to call the <code>GetProgrammaticAccessCredentials</code> API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.</p>",
          "shape": "RoleArn"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "emailAddress": {
          "documentation": "<p>The email address of the user that you want to register. The email address serves as a uniquer identifier for each user and cannot be changed after it's created.</p>",
          "shape": "Email"
        },
        "firstName": {
          "documentation": "<p>The first name of the user that you want to register.</p>",
          "shape": "FirstName"
        },
        "lastName": {
          "documentation": "<p>The last name of the user that you want to register.</p>",
          "shape": "LastName"
        },
        "type": {
          "documentation": "<p>The option to indicate the type of user. Use one of the following options to specify this parameter:</p> <ul> <li> <p> <code>SUPER_USER</code> \u2013 A user with permission to all the functionality and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> \u2013 A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.</p> </li> </ul>",
          "shape": "UserType"
        }
      },
      "required": [
        "emailAddress",
        "type"
      ],
      "type": "structure"
    },
    "CreateUserResponse": {
      "members": {
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "Credentials": {
      "documentation": "<p>Short term API credentials.</p>",
      "members": {
        "accessKeyId": {
          "documentation": "<p>The access key identifier.</p>",
          "shape": "stringValueLength1to255"
        },
        "secretAccessKey": {
          "documentation": "<p>The access key.</p>",
          "shape": "stringValueMaxLength1000"
        },
        "sessionToken": {
          "documentation": "<p>The session token.</p>",
          "shape": "stringValueMaxLength1000"
        }
      },
      "type": "structure"
    },
    "DataViewArn": {
      "documentation": "Arn of a DataView",
      "type": "string"
    },
    "DataViewDestinationType": {
      "documentation": "DataView Destination Type",
      "type": "string"
    },
    "DataViewDestinationTypeParams": {
      "documentation": "<p>Structure for the Dataview destination type parameters.</p>",
      "members": {
        "destinationType": {
          "documentation": "<p>Destination type for a Dataview.</p> <ul> <li> <p> <code>GLUE_TABLE</code> \u2013 Glue table destination type.</p> </li> <li> <p> <code>S3</code> \u2013 S3 destination type.</p> </li> </ul>",
          "shape": "DataViewDestinationType"
        },
        "s3DestinationExportFileFormat": {
          "documentation": "<p>Dataview export file format.</p> <ul> <li> <p> <code>PARQUET</code> \u2013 Parquet export file format.</p> </li> <li> <p> <code>DELIMITED_TEXT</code> \u2013 Delimited text export file format.</p> </li> </ul>",
          "shape": "ExportFileFormat"
        },
        "s3DestinationExportFileFormatOptions": {
          "documentation": "<p>Format Options for S3 Destination type.</p> <p>Here is an example of how you could specify the <code>s3DestinationExportFileFormatOptions</code> </p> <p> <code> { \"header\": \"true\", \"delimiter\": \",\", \"compression\": \"gzip\" }</code> </p>",
          "shape": "S3DestinationFormatOptions"
        }
      },
      "required": [
        "destinationType"
      ],
      "type": "structure"
    },
    "DataViewErrorInfo": {
      "documentation": "<p>The structure with error messages.</p>",
      "members": {
        "errorCategory": {
          "documentation": "<p>The category of the error.</p> <ul> <li> <p> <code>VALIDATION</code> \u2013 The inputs to this request are invalid.</p> </li> <li> <p> <code>SERVICE_QUOTA_EXCEEDED</code> \u2013 Service quotas have been exceeded. Please contact AWS support to increase quotas.</p> </li> <li> <p> <code>ACCESS_DENIED</code> \u2013 Missing required permission to perform this request.</p> </li> <li> <p> <code>RESOURCE_NOT_FOUND</code> \u2013 One or more inputs to this request were not found.</p> </li> <li> <p> <code>THROTTLING</code> \u2013 The system temporarily lacks sufficient resources to process the request.</p> </li> <li> <p> <code>INTERNAL_SERVICE_EXCEPTION</code> \u2013 An internal service error has occurred.</p> </li> <li> <p> <code>CANCELLED</code> \u2013 Cancelled.</p> </li> <li> <p> <code>USER_RECOVERABLE</code> \u2013 A user recoverable error has occurred.</p> </li> </ul>",
          "shape": "ErrorCategory"
        },
        "errorMessage": {
          "documentation": "<p>The text of the error message.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "DataViewId": {
      "documentation": "DataView ID",
      "max": 26,
      "min": 1,
      "type": "string"
    },
    "DataViewList": {
      "documentation": "List of Data Views",
      "member": {
        "shape": "DataViewSummary"
      },
      "type": "list"
    },
    "DataViewStatus": {
      "documentation": "Status of a DataView",
      "enum": [
        "RUNNING",
        "STARTING",
        "FAILED",
        "CANCELLED",
        "TIMEOUT",
        "SUCCESS",
        "PENDING",
        "FAILED_CLEANUP_FAILED"
      ],
      "type": "string"
    },
    "DataViewSummary": {
      "documentation": "<p>Structure for the summary of a Dataview.</p>",
      "members": {
        "asOfTimestamp": {
          "box": true,
          "documentation": "<p>Time range to use for the Dataview. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "autoUpdate": {
          "documentation": "<p>The flag to indicate Dataview should be updated automatically.</p>",
          "shape": "Boolean"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Dataview was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "dataViewArn": {
          "documentation": "<p>The ARN identifier of the Dataview.</p>",
          "shape": "DataViewArn"
        },
        "dataViewId": {
          "documentation": "<p>The unique identifier for the Dataview.</p>",
          "shape": "DataViewId"
        },
        "datasetId": {
          "documentation": "<p>Th unique identifier for the Dataview Dataset.</p>",
          "shape": "DatasetId"
        },
        "destinationTypeProperties": {
          "documentation": "<p>Information about the Dataview destination.</p>",
          "shape": "DataViewDestinationTypeParams"
        },
        "errorInfo": {
          "documentation": "<p>The structure with error messages.</p>",
          "shape": "DataViewErrorInfo"
        },
        "lastModifiedTime": {
          "documentation": "<p>The last time that a Dataview was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "partitionColumns": {
          "documentation": "<p>Ordered set of column names used to partition data.</p>",
          "shape": "PartitionColumnList"
        },
        "sortColumns": {
          "documentation": "<p>Columns to be used for sorting the data.</p>",
          "shape": "SortColumnList"
        },
        "status": {
          "documentation": "<p>The status of a Dataview creation.</p> <ul> <li> <p> <code>RUNNING</code> \u2013 Dataview creation is running.</p> </li> <li> <p> <code>STARTING</code> \u2013 Dataview creation is starting.</p> </li> <li> <p> <code>FAILED</code> \u2013 Dataview creation has failed.</p> </li> <li> <p> <code>CANCELLED</code> \u2013 Dataview creation has been cancelled.</p> </li> <li> <p> <code>TIMEOUT</code> \u2013 Dataview creation has timed out.</p> </li> <li> <p> <code>SUCCESS</code> \u2013 Dataview creation has succeeded.</p> </li> <li> <p> <code>PENDING</code> \u2013 Dataview creation is pending.</p> </li> <li> <p> <code>FAILED_CLEANUP_FAILED</code> \u2013 Dataview creation failed and resource cleanup failed.</p> </li> </ul>",
          "shape": "DataViewStatus"
        }
      },
      "type": "structure"
    },
    "Dataset": {
      "documentation": "<p>The structure for a Dataset.</p>",
      "members": {
        "alias": {
          "documentation": "<p>The unique resource identifier for a Dataset.</p>",
          "shape": "AliasString"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Dataset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "datasetArn": {
          "documentation": "<p>The ARN identifier of the Dataset.</p>",
          "shape": "DatasetArn"
        },
        "datasetDescription": {
          "documentation": "<p>Description for a Dataset.</p>",
          "shape": "DatasetDescription"
        },
        "datasetId": {
          "documentation": "<p>An identifier for a Dataset.</p>",
          "shape": "DatasetId"
        },
        "datasetTitle": {
          "documentation": "<p>Display title for a Dataset.</p>",
          "shape": "DatasetTitle"
        },
        "kind": {
          "documentation": "<p>The format in which Dataset data is structured.</p> <ul> <li> <p> <code>TABULAR</code> \u2013 Data is structured in a tabular format.</p> </li> <li> <p> <code>NON_TABULAR</code> \u2013 Data is structured in a non-tabular format.</p> </li> </ul>",
          "shape": "DatasetKind"
        },
        "lastModifiedTime": {
          "documentation": "<p>The last time that the Dataset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "ownerInfo": {
          "documentation": "<p>Contact information for a Dataset owner.</p>",
          "shape": "DatasetOwnerInfo"
        },
        "schemaDefinition": {
          "documentation": "<p>Definition for a schema on a tabular Dataset.</p>",
          "shape": "SchemaUnion"
        }
      },
      "type": "structure"
    },
    "DatasetArn": {
      "documentation": "Arn of a Dataset",
      "type": "string"
    },
    "DatasetDescription": {
      "documentation": "Description of a dataset",
      "max": 1000,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "DatasetId": {
      "documentation": "ID for a given Dataset",
      "max": 26,
      "min": 1,
      "type": "string"
    },
    "DatasetKind": {
      "documentation": "Dataset Kind",
      "enum": [
        "TABULAR",
        "NON_TABULAR"
      ],
      "type": "string"
    },
    "DatasetList": {
      "documentation": "List of Dataset structures",
      "member": {
        "shape": "Dataset"
      },
      "type": "list"
    },
    "DatasetOwnerInfo": {
      "documentation": "<p>A structure for Dataset owner info.</p>",
      "members": {
        "email": {
          "documentation": "<p>Email address for the Dataset owner.</p>",
          "shape": "Email"
        },
        "name": {
          "documentation": "<p>The name of the Dataset owner.</p>",
          "shape": "OwnerName"
        },
        "phoneNumber": {
          "documentation": "<p>Phone number for the Dataset owner.</p>",
          "shape": "PhoneNumber"
        }
      },
      "type": "structure"
    },
    "DatasetStatus": {
      "documentation": "Status of the dataset process returned from scheduler service.",
      "enum": [
        "PENDING",
        "FAILED",
        "SUCCESS",
        "RUNNING"
      ],
      "type": "string"
    },
    "DatasetTitle": {
      "documentation": "Title for a given Dataset",
      "max": 255,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "DeleteDatasetRequest": {
      "documentation": "The request for a DeleteDataset operation.",
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "ClientToken"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier of the Dataset to be deleted.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        }
      },
      "required": [
        "datasetId"
      ],
      "type": "structure"
    },
    "DeleteDatasetResponse": {
      "documentation": "The response from an DeleteDataset operation",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier for the deleted Dataset.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "DeletePermissionGroupRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "ClientToken"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group that you want to delete.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        }
      },
      "required": [
        "permissionGroupId"
      ],
      "type": "structure"
    },
    "DeletePermissionGroupResponse": {
      "members": {
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the deleted permission group.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "DisableUserRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user account that you want to disable.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId"
      ],
      "type": "structure"
    },
    "DisableUserResponse": {
      "members": {
        "userId": {
          "documentation": "<p>The unique identifier for the disabled user account.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "DisassociateUserFromPermissionGroupRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "ClientToken"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "permissionGroupId",
        "userId"
      ],
      "type": "structure"
    },
    "DisassociateUserFromPermissionGroupResponse": {
      "members": {
        "statusCode": {
          "documentation": "<p>The returned status code of the response.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "Email": {
      "max": 320,
      "min": 4,
      "pattern": "[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}",
      "sensitive": true,
      "type": "string"
    },
    "EnableUserRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user account that you want to enable.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId"
      ],
      "type": "structure"
    },
    "EnableUserResponse": {
      "members": {
        "userId": {
          "documentation": "<p>The unique identifier for the enabled user account.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "ErrorCategory": {
      "documentation": "Changeset Error Category",
      "enum": [
        "VALIDATION",
        "SERVICE_QUOTA_EXCEEDED",
        "ACCESS_DENIED",
        "RESOURCE_NOT_FOUND",
        "THROTTLING",
        "INTERNAL_SERVICE_EXCEPTION",
        "CANCELLED",
        "USER_RECOVERABLE"
      ],
      "type": "string"
    },
    "ErrorMessage": {
      "documentation": "Changeset Error Message",
      "max": 1000,
      "type": "string"
    },
    "ExportFileFormat": {
      "documentation": "Data View Export File Format",
      "enum": [
        "PARQUET",
        "DELIMITED_TEXT"
      ],
      "type": "string"
    },
    "FirstName": {
      "max": 50,
      "min": 1,
      "pattern": ".*\\S.*",
      "sensitive": true,
      "type": "string"
    },
    "FormatParams": {
      "documentation": "Format Parameters of a Changeset",
      "key": {
        "shape": "StringMapKey"
      },
      "type": "map",
      "value": {
        "shape": "StringMapValue"
      }
    },
    "GetChangesetRequest": {
      "documentation": "Request to describe a changeset.",
      "members": {
        "changesetId": {
          "documentation": "<p>The unique identifier of the Changeset for which to get data.</p>",
          "location": "uri",
          "locationName": "changesetId",
          "shape": "ChangesetId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        }
      },
      "required": [
        "datasetId",
        "changesetId"
      ],
      "type": "structure"
    },
    "GetChangesetResponse": {
      "documentation": "The response from a describe changeset operation",
      "members": {
        "activeFromTimestamp": {
          "box": true,
          "documentation": "<p>Beginning time from which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "activeUntilTimestamp": {
          "box": true,
          "documentation": "<p>Time until which the Changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "changeType": {
          "documentation": "<p>Type that indicates how a Changeset is applied to a Dataset.</p> <ul> <li> <p> <code>REPLACE</code> \u2013 Changeset is considered as a replacement to all prior loaded Changesets.</p> </li> <li> <p> <code>APPEND</code> \u2013 Changeset is considered as an addition to the end of all prior loaded Changesets.</p> </li> <li> <p> <code>MODIFY</code> \u2013 Changeset is considered as a replacement to a specific prior ingested Changeset.</p> </li> </ul>",
          "shape": "ChangeType"
        },
        "changesetArn": {
          "documentation": "<p>The ARN identifier of the Changeset.</p>",
          "shape": "ChangesetArn"
        },
        "changesetId": {
          "documentation": "<p>The unique identifier for a Changeset.</p>",
          "shape": "ChangesetId"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset where the Changeset is created.</p>",
          "shape": "DatasetId"
        },
        "errorInfo": {
          "documentation": "<p>The structure with error messages.</p>",
          "shape": "ChangesetErrorInfo"
        },
        "formatParams": {
          "documentation": "<p>Structure of the source file(s).</p>",
          "shape": "FormatParams"
        },
        "sourceParams": {
          "documentation": "<p>Options that define the location of the data being ingested.</p>",
          "shape": "SourceParams"
        },
        "status": {
          "documentation": "<p>The status of Changeset creation operation.</p>",
          "shape": "IngestionStatus"
        },
        "updatedByChangesetId": {
          "documentation": "<p>The unique identifier of the updated Changeset.</p>",
          "shape": "ChangesetId"
        },
        "updatesChangesetId": {
          "documentation": "<p>The unique identifier of the Changeset that is being updated.</p>",
          "shape": "ChangesetId"
        }
      },
      "type": "structure"
    },
    "GetDataViewRequest": {
      "documentation": "Request for retrieving a data view detail. Grouped / accessible within a dataset by its dataset id.",
      "members": {
        "dataViewId": {
          "documentation": "<p>The unique identifier for the Dataview.</p>",
          "location": "uri",
          "locationName": "dataviewId",
          "shape": "DataViewId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the Dataset used in the Dataview.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        }
      },
      "required": [
        "dataViewId",
        "datasetId"
      ],
      "type": "structure"
    },
    "GetDataViewResponse": {
      "documentation": "Response from retrieving a dataview, which includes details on the target database and table name",
      "members": {
        "asOfTimestamp": {
          "box": true,
          "documentation": "<p>Time range to use for the Dataview. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "autoUpdate": {
          "documentation": "<p>Flag to indicate Dataview should be updated automatically.</p>",
          "shape": "Boolean"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Dataview was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "dataViewArn": {
          "documentation": "<p>The ARN identifier of the Dataview.</p>",
          "shape": "DataViewArn"
        },
        "dataViewId": {
          "documentation": "<p>The unique identifier for the Dataview.</p>",
          "shape": "DataViewId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the Dataset used in the Dataview.</p>",
          "shape": "DatasetId"
        },
        "destinationTypeParams": {
          "documentation": "<p>Options that define the destination type for the Dataview.</p>",
          "shape": "DataViewDestinationTypeParams"
        },
        "errorInfo": {
          "documentation": "<p>Information about an error that occurred for the Dataview.</p>",
          "shape": "DataViewErrorInfo"
        },
        "lastModifiedTime": {
          "documentation": "<p>The last time that a Dataview was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "partitionColumns": {
          "documentation": "<p>Ordered set of column names used to partition data.</p>",
          "shape": "PartitionColumnList"
        },
        "sortColumns": {
          "documentation": "<p>Columns to be used for sorting the data.</p>",
          "shape": "SortColumnList"
        },
        "status": {
          "documentation": "<p>The status of a Dataview creation.</p> <ul> <li> <p> <code>RUNNING</code> \u2013 Dataview creation is running.</p> </li> <li> <p> <code>STARTING</code> \u2013 Dataview creation is starting.</p> </li> <li> <p> <code>FAILED</code> \u2013 Dataview creation has failed.</p> </li> <li> <p> <code>CANCELLED</code> \u2013 Dataview creation has been cancelled.</p> </li> <li> <p> <code>TIMEOUT</code> \u2013 Dataview creation has timed out.</p> </li> <li> <p> <code>SUCCESS</code> \u2013 Dataview creation has succeeded.</p> </li> <li> <p> <code>PENDING</code> \u2013 Dataview creation is pending.</p> </li> <li> <p> <code>FAILED_CLEANUP_FAILED</code> \u2013 Dataview creation failed and resource cleanup failed.</p> </li> </ul>",
          "shape": "DataViewStatus"
        }
      },
      "type": "structure"
    },
    "GetDatasetRequest": {
      "documentation": "Request for the GetDataset operation.",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier for a Dataset.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "StringValueLength1to255"
        }
      },
      "required": [
        "datasetId"
      ],
      "type": "structure"
    },
    "GetDatasetResponse": {
      "documentation": "Response for the GetDataset operation",
      "members": {
        "alias": {
          "documentation": "<p>The unique resource identifier for a Dataset.</p>",
          "shape": "AliasString"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the Dataset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "datasetArn": {
          "documentation": "<p>The ARN identifier of the Dataset.</p>",
          "shape": "DatasetArn"
        },
        "datasetDescription": {
          "documentation": "<p>A description of the Dataset.</p>",
          "shape": "DatasetDescription"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for a Dataset.</p>",
          "shape": "DatasetId"
        },
        "datasetTitle": {
          "documentation": "<p>Display title for a Dataset.</p>",
          "shape": "DatasetTitle"
        },
        "kind": {
          "documentation": "<p>The format in which Dataset data is structured.</p> <ul> <li> <p> <code>TABULAR</code> \u2013 Data is structured in a tabular format.</p> </li> <li> <p> <code>NON_TABULAR</code> \u2013 Data is structured in a non-tabular format.</p> </li> </ul>",
          "shape": "DatasetKind"
        },
        "lastModifiedTime": {
          "documentation": "<p>The last time that the Dataset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>",
          "shape": "TimestampEpoch"
        },
        "schemaDefinition": {
          "documentation": "<p>Definition for a schema on a tabular Dataset.</p>",
          "shape": "SchemaUnion"
        },
        "status": {
          "documentation": "<p>Status of the Dataset creation.</p> <ul> <li> <p> <code>PENDING</code> \u2013 Dataset is pending creation.</p> </li> <li> <p> <code>FAILED</code> \u2013 Dataset creation has failed.</p> </li> <li> <p> <code>SUCCESS</code> \u2013 Dataset creation has succeeded.</p> </li> <li> <p> <code>RUNNING</code> \u2013 Dataset creation is running.</p> </li> </ul>",
          "shape": "DatasetStatus"
        }
      },
      "type": "structure"
    },
    "GetExternalDataViewAccessDetailsRequest": {
      "members": {
        "dataViewId": {
          "documentation": "<p>The unique identifier for the Dataview that you want to access.</p>",
          "location": "uri",
          "locationName": "dataviewId",
          "shape": "DataViewId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the Dataset.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        }
      },
      "required": [
        "dataViewId",
        "datasetId"
      ],
      "type": "structure"
    },
    "GetExternalDataViewAccessDetailsResponse": {
      "members": {
        "credentials": {
          "documentation": "<p>The credentials required to access the external Dataview from the S3 location.</p>",
          "shape": "AwsCredentials"
        },
        "s3Location": {
          "documentation": "<p>The location where the external Dataview is stored.</p>",
          "shape": "S3Location"
        }
      },
      "type": "structure"
    },
    "GetPermissionGroupRequest": {
      "members": {
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        }
      },
      "required": [
        "permissionGroupId"
      ],
      "type": "structure"
    },
    "GetPermissionGroupResponse": {
      "members": {
        "permissionGroup": {
          "shape": "PermissionGroup"
        }
      },
      "type": "structure"
    },
    "GetProgrammaticAccessCredentialsRequest": {
      "documentation": "Request for GetProgrammaticAccessCredentials operation",
      "members": {
        "durationInMinutes": {
          "documentation": "<p>The time duration in which the credentials remain valid. </p>",
          "location": "querystring",
          "locationName": "durationInMinutes",
          "shape": "SessionDuration"
        },
        "environmentId": {
          "documentation": "<p>The FinSpace environment identifier.</p>",
          "location": "querystring",
          "locationName": "environmentId",
          "shape": "IdType"
        }
      },
      "required": [
        "environmentId"
      ],
      "type": "structure"
    },
    "GetProgrammaticAccessCredentialsResponse": {
      "documentation": "Response for GetProgrammaticAccessCredentials operation",
      "members": {
        "credentials": {
          "documentation": "<p>Returns the programmatic credentials.</p>",
          "shape": "Credentials"
        },
        "durationInMinutes": {
          "documentation": "<p>Returns the duration in which the credentials will remain valid.</p>",
          "shape": "SessionDuration"
        }
      },
      "type": "structure"
    },
    "GetUserRequest": {
      "members": {
        "userId": {
          "documentation": "<p>The unique identifier of the user to get data for.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId"
      ],
      "type": "structure"
    },
    "GetUserResponse": {
      "members": {
        "apiAccess": {
          "documentation": "<p>Indicates whether the user can use the <code>GetProgrammaticAccessCredentials</code> API to obtain credentials that can then be used to access other FinSpace Data API operations. </p> <ul> <li> <p> <code>ENABLED</code> \u2013 The user has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user does not have permissions to use any APIs.</p> </li> </ul>",
          "shape": "ApiAccess"
        },
        "apiAccessPrincipalArn": {
          "documentation": "<p>The ARN identifier of an AWS user or role that is allowed to call the <code>GetProgrammaticAccessCredentials</code> API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.</p>",
          "shape": "RoleArn"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the user account was created in FinSpace. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "emailAddress": {
          "documentation": "<p>The email address that is associated with the user.</p>",
          "shape": "Email"
        },
        "firstName": {
          "documentation": "<p>The first name of the user.</p>",
          "shape": "FirstName"
        },
        "lastDisabledTime": {
          "documentation": "<p>Describes the last time the user account was disabled. The value is determined as epoch time in milliseconds.</p>",
          "shape": "TimestampEpoch"
        },
        "lastEnabledTime": {
          "documentation": "<p>Describes the last time the user account was enabled. The value is determined as epoch time in milliseconds.</p>",
          "shape": "TimestampEpoch"
        },
        "lastLoginTime": {
          "documentation": "<p>Describes the last time that the user logged into their account. The value is determined as epoch time in milliseconds.</p>",
          "shape": "TimestampEpoch"
        },
        "lastModifiedTime": {
          "documentation": "<p>Describes the last time the user account was updated. The value is determined as epoch time in milliseconds.</p>",
          "shape": "TimestampEpoch"
        },
        "lastName": {
          "documentation": "<p>The last name of the user.</p>",
          "shape": "LastName"
        },
        "status": {
          "documentation": "<p>The current status of the user account. </p> <ul> <li> <p> <code>CREATING</code> \u2013 The user account creation is in progress.</p> </li> <li> <p> <code>ENABLED</code> \u2013 The user account is created and is currently active.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user account is currently inactive.</p> </li> </ul>",
          "shape": "UserStatus"
        },
        "type": {
          "documentation": "<p>Indicates the type of user. </p> <ul> <li> <p> <code>SUPER_USER</code> \u2013 A user with permission to all the functionality and data in FinSpace.</p> </li> </ul> <ul> <li> <p> <code>APP_USER</code> \u2013 A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.</p> </li> </ul>",
          "shape": "UserType"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user account that is retrieved.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "GetWorkingLocationRequest": {
      "members": {
        "locationType": {
          "documentation": "<p>Specify the type of the working location.</p> <ul> <li> <p> <code>SAGEMAKER</code> \u2013 Use the Amazon S3 location as a temporary location to store data content when working with FinSpace Notebooks that run on SageMaker studio.</p> </li> <li> <p> <code>INGESTION</code> \u2013 Use the Amazon S3 location as a staging location to copy your data content and then use the location with the Changeset creation operation.</p> </li> </ul>",
          "shape": "locationType"
        }
      },
      "type": "structure"
    },
    "GetWorkingLocationResponse": {
      "members": {
        "s3Bucket": {
          "documentation": "<p>Returns the Amazon S3 bucket name for the working location.</p>",
          "shape": "stringValueLength1to63"
        },
        "s3Path": {
          "documentation": "<p>Returns the Amazon S3 Path for the working location.</p>",
          "shape": "stringValueLength1to1024"
        },
        "s3Uri": {
          "documentation": "<p>Returns the Amazon S3 URI for the working location.</p>",
          "shape": "stringValueLength1to1024"
        }
      },
      "type": "structure"
    },
    "IdType": {
      "max": 26,
      "min": 1,
      "type": "string"
    },
    "IngestionStatus": {
      "documentation": "Status of the ingestion process returned from scheduler service.",
      "enum": [
        "PENDING",
        "FAILED",
        "SUCCESS",
        "RUNNING",
        "STOP_REQUESTED"
      ],
      "type": "string"
    },
    "InternalServerException": {
      "documentation": "<p>The request processing has failed because of an unknown error, exception or failure.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "LastName": {
      "max": 50,
      "min": 1,
      "pattern": ".*\\S.*",
      "sensitive": true,
      "type": "string"
    },
    "LimitExceededException": {
      "documentation": "<p>A limit has exceeded.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ListChangesetsRequest": {
      "documentation": "Request to ListChangesetsRequest. It exposes minimal query filters.",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset to which the Changeset belongs.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "datasetId"
      ],
      "type": "structure"
    },
    "ListChangesetsResponse": {
      "documentation": "Response to ListChangesetsResponse. This returns a list of dataset changesets that match the query criteria.",
      "members": {
        "changesets": {
          "documentation": "<p>List of Changesets found.</p>",
          "shape": "ChangesetList"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDataViewsRequest": {
      "documentation": "Request for a list data views.",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier of the Dataset for which to retrieve Dataviews.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "datasetId"
      ],
      "type": "structure"
    },
    "ListDataViewsResponse": {
      "members": {
        "dataViews": {
          "documentation": "<p>A list of Dataviews.</p>",
          "shape": "DataViewList"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDatasetsRequest": {
      "documentation": "Request for the ListDatasets operation.",
      "members": {
        "maxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDatasetsResponse": {
      "documentation": "Response for the ListDatasets operation",
      "members": {
        "datasets": {
          "documentation": "<p>List of Datasets.</p>",
          "shape": "DatasetList"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListPermissionGroupsByUserRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId",
        "maxResults"
      ],
      "type": "structure"
    },
    "ListPermissionGroupsByUserResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        },
        "permissionGroups": {
          "documentation": "<p>A list of returned permission groups.</p>",
          "shape": "PermissionGroupByUserList"
        }
      },
      "type": "structure"
    },
    "ListPermissionGroupsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "maxResults"
      ],
      "type": "structure"
    },
    "ListPermissionGroupsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        },
        "permissionGroups": {
          "documentation": "<p>A list of all the permission groups.</p>",
          "shape": "PermissionGroupList"
        }
      },
      "type": "structure"
    },
    "ListUsersByPermissionGroupRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        }
      },
      "required": [
        "permissionGroupId",
        "maxResults"
      ],
      "type": "structure"
    },
    "ListUsersByPermissionGroupResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        },
        "users": {
          "documentation": "<p>Lists details of all users in a specific permission group.</p>",
          "shape": "UserByPermissionGroupList"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "maxResults"
      ],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where a results page should begin.</p>",
          "shape": "PaginationToken"
        },
        "users": {
          "documentation": "<p>A list of all the user accounts.</p>",
          "shape": "UserList"
        }
      },
      "type": "structure"
    },
    "OwnerName": {
      "documentation": "1 - 250 character String",
      "max": 250,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "PaginationToken": {
      "type": "string"
    },
    "PartitionColumnList": {
      "documentation": "DataView Partition Column List",
      "member": {
        "shape": "StringValueLength1to255"
      },
      "type": "list"
    },
    "Password": {
      "max": 20,
      "min": 8,
      "pattern": ".*\\S.*",
      "sensitive": true,
      "type": "string"
    },
    "PermissionGroup": {
      "documentation": "<p>The structure for a permission group.</p>",
      "members": {
        "applicationPermissions": {
          "documentation": "<p>Indicates the permissions that are granted to a specific group for accessing the FinSpace application.</p> <important> <p>When assigning application permissions, be aware that the permission <code>ManageUsersAndGroups</code> allows users to grant themselves or others access to any functionality in their FinSpace environment's application. It should only be granted to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code> \u2013 Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code> \u2013 Group members can manage Apache Spark clusters from FinSpace notebooks.</p> </li> <li> <p> <code>ManageUsersAndGroups</code> \u2013 Group members can manage users and permission groups. This is a privileged permission that allows users to grant themselves or others access to any functionality in the application. It should only be granted to trusted users.</p> </li> <li> <p> <code>ManageAttributeSets</code> \u2013 Group members can manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code> \u2013 Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code> \u2013 Group members will have access to FinSpace notebooks.</p> </li> <li> <p> <code>GetTemporaryCredentials</code> \u2013 Group members can get temporary API credentials.</p> </li> </ul>",
          "shape": "ApplicationPermissionList"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the group was created in FinSpace. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "description": {
          "documentation": "<p> A brief description for the permission group.</p>",
          "shape": "PermissionGroupDescription"
        },
        "lastModifiedTime": {
          "documentation": "<p>Describes the last time the permission group was updated. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "membershipStatus": {
          "documentation": "<p>Indicates the status of the user account within a permission group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> \u2013 The user account is currently being added to the permission group.</p> </li> <li> <p> <code>ADDITION_SUCCESS</code> \u2013 The user account is successfully added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code> \u2013 The user is currently being removed from the permission group.</p> </li> </ul>",
          "shape": "PermissionGroupMembershipStatus"
        },
        "name": {
          "documentation": "<p>The name of the permission group.</p>",
          "shape": "PermissionGroupName"
        },
        "permissionGroupId": {
          "documentation": "<p> The unique identifier for the permission group.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "PermissionGroupByUser": {
      "documentation": "<p>The structure of a permission group associated with a user account.</p>",
      "members": {
        "membershipStatus": {
          "documentation": "<p>Indicates the status of the user account within a permission group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> \u2013 The user account is currently being added to the permission group.</p> </li> <li> <p> <code>ADDITION_SUCCESS</code> \u2013 The user account is successfully added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code> \u2013 The user is currently being removed from the permission group.</p> </li> </ul>",
          "shape": "PermissionGroupMembershipStatus"
        },
        "name": {
          "documentation": "<p>The name of the permission group.</p>",
          "shape": "PermissionGroupName"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "PermissionGroupByUserList": {
      "member": {
        "shape": "PermissionGroupByUser"
      },
      "type": "list"
    },
    "PermissionGroupDescription": {
      "max": 4000,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "sensitive": true,
      "type": "string"
    },
    "PermissionGroupId": {
      "max": 26,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "PermissionGroupList": {
      "member": {
        "shape": "PermissionGroup"
      },
      "type": "list"
    },
    "PermissionGroupMembershipStatus": {
      "enum": [
        "ADDITION_IN_PROGRESS",
        "ADDITION_SUCCESS",
        "REMOVAL_IN_PROGRESS"
      ],
      "type": "string"
    },
    "PermissionGroupName": {
      "max": 255,
      "min": 1,
      "pattern": ".*\\S.*",
      "sensitive": true,
      "type": "string"
    },
    "PermissionGroupParams": {
      "documentation": "<p>Permission group parameters for Dataset permissions.</p> <p>Here is an example of how you could specify the <code>PermissionGroupParams</code>:</p> <p> <code> { \"permissionGroupId\": \"0r6fCRtSTUk4XPfXQe3M0g\", \"datasetPermissions\": [ {\"permission\": \"ViewDatasetDetails\"}, {\"permission\": \"AddDatasetData\"}, {\"permission\": \"EditDatasetMetadata\"}, {\"permission\": \"DeleteDataset\"} ] } </code> </p>",
      "members": {
        "datasetPermissions": {
          "documentation": "<p>List of resource permissions.</p>",
          "shape": "ResourcePermissionsList"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the <code>PermissionGroup</code>.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "PhoneNumber": {
      "documentation": "PhoneNumber of Dataset Owner",
      "max": 20,
      "min": 10,
      "pattern": "^[\\+0-9\\#\\,\\(][\\+0-9\\-\\.\\/\\(\\)\\,\\#\\s]+$",
      "type": "string"
    },
    "ResetUserPasswordRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "userId": {
          "documentation": "<p>The unique identifier of the user that a temporary password is requested for.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId"
      ],
      "type": "structure"
    },
    "ResetUserPasswordResponse": {
      "members": {
        "temporaryPassword": {
          "documentation": "<p>A randomly generated temporary password for the requested user account. This password expires in 7 days.</p>",
          "shape": "Password"
        },
        "userId": {
          "documentation": "<p>The unique identifier of the user that a new password is generated for.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>One or more resources can't be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        },
        "reason": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ResourcePermission": {
      "documentation": "<p>Resource permission for a dataset. When you create a dataset, all the other members of the same user group inherit access to the dataset. You can only create a dataset if your user group has application permission for Create Datasets.</p> <p>The following is a list of valid dataset permissions that you can apply: </p> <ul> <li> <p> <code>ViewDatasetDetails</code> </p> </li> <li> <p> <code>ReadDatasetDetails</code> </p> </li> <li> <p> <code>AddDatasetData</code> </p> </li> <li> <p> <code>CreateDataView</code> </p> </li> <li> <p> <code>EditDatasetMetadata</code> </p> </li> <li> <p> <code>DeleteDataset</code> </p> </li> </ul> <p>For more information on the dataset permissions, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/managing-user-permissions.html#supported-dataset-permissions\">Supported Dataset Permissions</a> in the FinSpace User Guide.</p>",
      "members": {
        "permission": {
          "documentation": "<p>Permission for a resource.</p>",
          "shape": "StringValueLength1to250"
        }
      },
      "type": "structure"
    },
    "ResourcePermissionsList": {
      "documentation": "List of Resource Permissions",
      "member": {
        "shape": "ResourcePermission"
      },
      "type": "list"
    },
    "ResultLimit": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "RoleArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "type": "string"
    },
    "S3BucketName": {
      "max": 63,
      "min": 1,
      "pattern": "^.*\\S.*$",
      "type": "string"
    },
    "S3DestinationFormatOptions": {
      "key": {
        "shape": "StringMapKey"
      },
      "type": "map",
      "value": {
        "shape": "StringMapValue"
      }
    },
    "S3Key": {
      "max": 1024,
      "min": 1,
      "pattern": "^.*\\S.*$",
      "type": "string"
    },
    "S3Location": {
      "documentation": "<p>The location of an external Dataview in an S3 bucket.</p>",
      "members": {
        "bucket": {
          "documentation": "<p> The name of the S3 bucket.</p>",
          "shape": "S3BucketName"
        },
        "key": {
          "documentation": "<p> The path of the folder, within the S3 bucket that contains the Dataset.</p>",
          "shape": "S3Key"
        }
      },
      "required": [
        "bucket",
        "key"
      ],
      "type": "structure"
    },
    "SchemaDefinition": {
      "documentation": "<p>Definition for a schema on a tabular Dataset.</p>",
      "members": {
        "columns": {
          "documentation": "<p>List of column definitions.</p>",
          "shape": "ColumnList"
        },
        "primaryKeyColumns": {
          "documentation": "<p>List of column names used for primary key.</p>",
          "shape": "ColumnNameList"
        }
      },
      "type": "structure"
    },
    "SchemaUnion": {
      "documentation": "<p>A union of schema types.</p>",
      "members": {
        "tabularSchemaConfig": {
          "documentation": "<p>The configuration for a schema on a tabular Dataset.</p>",
          "shape": "SchemaDefinition"
        }
      },
      "type": "structure"
    },
    "SecretAccessKey": {
      "max": 1000,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "sensitive": true,
      "type": "string"
    },
    "SessionDuration": {
      "max": 720,
      "min": 60,
      "type": "long"
    },
    "SessionToken": {
      "max": 1000,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "sensitive": true,
      "type": "string"
    },
    "SortColumnList": {
      "documentation": "DataView Sort Column List",
      "member": {
        "shape": "StringValueLength1to255"
      },
      "type": "list"
    },
    "SourceParams": {
      "documentation": "Source Parameters of a Changeset",
      "key": {
        "shape": "StringMapKey"
      },
      "type": "map",
      "value": {
        "shape": "StringMapValue"
      }
    },
    "StatusCode": {
      "type": "integer"
    },
    "StringMapKey": {
      "max": 128,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "StringMapValue": {
      "max": 1000,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "StringValueLength1to250": {
      "documentation": "1 - 250 character String",
      "max": 250,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "StringValueLength1to255": {
      "documentation": "1 - 255 character String",
      "max": 255,
      "min": 1,
      "pattern": "[\\s\\S]*\\S[\\s\\S]*",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {},
      "type": "structure"
    },
    "TimestampEpoch": {
      "documentation": "Milliseconds since UTC epoch",
      "type": "long"
    },
    "UpdateChangesetRequest": {
      "documentation": "Request to update an existing changeset.",
      "members": {
        "changesetId": {
          "documentation": "<p>The unique identifier for the Changeset to update.</p>",
          "location": "uri",
          "locationName": "changesetId",
          "shape": "ChangesetId"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset in which the Changeset is created.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "formatParams": {
          "documentation": "<p>Options that define the structure of the source file(s) including the format type (<code>formatType</code>), header row (<code>withHeader</code>), data separation character (<code>separator</code>) and the type of compression (<code>compression</code>). </p> <p> <code>formatType</code> is a required attribute and can have the following values: </p> <ul> <li> <p> <code>PARQUET</code> \u2013 Parquet source file format.</p> </li> <li> <p> <code>CSV</code> \u2013 CSV source file format.</p> </li> <li> <p> <code>JSON</code> \u2013 JSON source file format.</p> </li> <li> <p> <code>XML</code> \u2013 XML source file format.</p> </li> </ul> <p>Here is an example of how you could specify the <code>formatParams</code>:</p> <p> <code> \"formatParams\": { \"formatType\": \"CSV\", \"withHeader\": \"true\", \"separator\": \",\", \"compression\":\"None\" } </code> </p> <p>Note that if you only provide <code>formatType</code> as <code>CSV</code>, the rest of the attributes will automatically default to CSV values as following:</p> <p> <code> { \"withHeader\": \"true\", \"separator\": \",\" } </code> </p> <p> For more information about supported file formats, see <a href=\"https://docs.aws.amazon.com/finspace/latest/userguide/supported-data-types.html\">Supported Data Types and File Formats</a> in the FinSpace User Guide.</p>",
          "shape": "FormatParams"
        },
        "sourceParams": {
          "documentation": "<p>Options that define the location of the data being ingested (<code>s3SourcePath</code>) and the source of the changeset (<code>sourceType</code>).</p> <p>Both <code>s3SourcePath</code> and <code>sourceType</code> are required attributes.</p> <p>Here is an example of how you could specify the <code>sourceParams</code>:</p> <p> <code> \"sourceParams\": { \"s3SourcePath\": \"s3://finspace-landing-us-east-2-bk7gcfvitndqa6ebnvys4d/scratch/wr5hh8pwkpqqkxa4sxrmcw/ingestion/equity.csv\", \"sourceType\": \"S3\" } </code> </p> <p>The S3 path that you specify must allow the FinSpace role access. To do that, you first need to configure the IAM policy on S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/finspace/latest/data-api/fs-using-the-finspace-api.html#access-s3-buckets\">Loading data from an Amazon S3 Bucket using the FinSpace API</a>section.</p>",
          "shape": "SourceParams"
        }
      },
      "required": [
        "datasetId",
        "changesetId",
        "sourceParams",
        "formatParams"
      ],
      "type": "structure"
    },
    "UpdateChangesetResponse": {
      "documentation": "The response from a update changeset operation.",
      "members": {
        "changesetId": {
          "documentation": "<p>The unique identifier for the Changeset to update.</p>",
          "shape": "ChangesetId"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the FinSpace Dataset in which the Changeset is created.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "UpdateDatasetRequest": {
      "documentation": "The request for an UpdateDataset operation",
      "members": {
        "alias": {
          "documentation": "<p>The unique resource identifier for a Dataset.</p>",
          "shape": "AliasString"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "datasetDescription": {
          "documentation": "<p>A description for the Dataset.</p>",
          "shape": "DatasetDescription"
        },
        "datasetId": {
          "documentation": "<p>The unique identifier for the Dataset to update.</p>",
          "location": "uri",
          "locationName": "datasetId",
          "shape": "DatasetId"
        },
        "datasetTitle": {
          "documentation": "<p>A display title for the Dataset.</p>",
          "shape": "DatasetTitle"
        },
        "kind": {
          "documentation": "<p>The format in which the Dataset data is structured.</p> <ul> <li> <p> <code>TABULAR</code> \u2013 Data is structured in a tabular format.</p> </li> <li> <p> <code>NON_TABULAR</code> \u2013 Data is structured in a non-tabular format.</p> </li> </ul>",
          "shape": "DatasetKind"
        },
        "schemaDefinition": {
          "documentation": "<p>Definition for a schema on a tabular Dataset.</p>",
          "shape": "SchemaUnion"
        }
      },
      "required": [
        "datasetId",
        "datasetTitle",
        "kind"
      ],
      "type": "structure"
    },
    "UpdateDatasetResponse": {
      "documentation": "The response from an UpdateDataset operation",
      "members": {
        "datasetId": {
          "documentation": "<p>The unique identifier for updated Dataset.</p>",
          "shape": "DatasetId"
        }
      },
      "type": "structure"
    },
    "UpdatePermissionGroupRequest": {
      "members": {
        "applicationPermissions": {
          "documentation": "<p>The permissions that are granted to a specific group for accessing the FinSpace application.</p> <important> <p>When assigning application permissions, be aware that the permission <code>ManageUsersAndGroups</code> allows users to grant themselves or others access to any functionality in their FinSpace environment's application. It should only be granted to trusted users.</p> </important> <ul> <li> <p> <code>CreateDataset</code> \u2013 Group members can create new datasets.</p> </li> <li> <p> <code>ManageClusters</code> \u2013 Group members can manage Apache Spark clusters from FinSpace notebooks.</p> </li> <li> <p> <code>ManageUsersAndGroups</code> \u2013 Group members can manage users and permission groups. This is a privileged permission that allows users to grant themselves or others access to any functionality in the application. It should only be granted to trusted users.</p> </li> <li> <p> <code>ManageAttributeSets</code> \u2013 Group members can manage attribute sets.</p> </li> <li> <p> <code>ViewAuditData</code> \u2013 Group members can view audit data.</p> </li> <li> <p> <code>AccessNotebooks</code> \u2013 Group members will have access to FinSpace notebooks.</p> </li> <li> <p> <code>GetTemporaryCredentials</code> \u2013 Group members can get temporary API credentials.</p> </li> </ul>",
          "shape": "ApplicationPermissionList"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>A brief description for the permission group.</p>",
          "shape": "PermissionGroupDescription"
        },
        "name": {
          "documentation": "<p>The name of the permission group.</p>",
          "shape": "PermissionGroupName"
        },
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the permission group to update.</p>",
          "location": "uri",
          "locationName": "permissionGroupId",
          "shape": "PermissionGroupId"
        }
      },
      "required": [
        "permissionGroupId"
      ],
      "type": "structure"
    },
    "UpdatePermissionGroupResponse": {
      "members": {
        "permissionGroupId": {
          "documentation": "<p>The unique identifier for the updated permission group.</p>",
          "shape": "PermissionGroupId"
        }
      },
      "type": "structure"
    },
    "UpdateUserRequest": {
      "members": {
        "apiAccess": {
          "documentation": "<p>The option to indicate whether the user can use the <code>GetProgrammaticAccessCredentials</code> API to obtain credentials that can then be used to access other FinSpace Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> \u2013 The user has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user does not have permissions to use any APIs.</p> </li> </ul>",
          "shape": "ApiAccess"
        },
        "apiAccessPrincipalArn": {
          "documentation": "<p>The ARN identifier of an AWS user or role that is allowed to call the <code>GetProgrammaticAccessCredentials</code> API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.</p>",
          "shape": "RoleArn"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures idempotency. This token expires in 10 minutes.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "firstName": {
          "documentation": "<p>The first name of the user.</p>",
          "shape": "FirstName"
        },
        "lastName": {
          "documentation": "<p>The last name of the user.</p>",
          "shape": "LastName"
        },
        "type": {
          "documentation": "<p>The option to indicate the type of user.</p> <ul> <li> <p> <code>SUPER_USER</code>\u2013 A user with permission to all the functionality and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> \u2013 A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.</p> </li> </ul>",
          "shape": "UserType"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user account to update.</p>",
          "location": "uri",
          "locationName": "userId",
          "shape": "UserId"
        }
      },
      "required": [
        "userId"
      ],
      "type": "structure"
    },
    "UpdateUserResponse": {
      "members": {
        "userId": {
          "documentation": "<p>The unique identifier of the updated user account.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "User": {
      "documentation": "<p>The details of the user account.</p>",
      "members": {
        "apiAccess": {
          "documentation": "<p>Indicates whether the user can use the <code>GetProgrammaticAccessCredentials</code> API to obtain credentials that can then be used to access other FinSpace Data API operations.</p> <ul> <li> <p> <code>ENABLED</code> \u2013 The user has permissions to use the APIs.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user does not have permissions to use any APIs.</p> </li> </ul>",
          "shape": "ApiAccess"
        },
        "apiAccessPrincipalArn": {
          "documentation": "<p>The ARN identifier of an AWS user or role that is allowed to call the <code>GetProgrammaticAccessCredentials</code> API to obtain a credentials token for a specific FinSpace user. This must be an IAM role within your FinSpace account.</p>",
          "shape": "RoleArn"
        },
        "createTime": {
          "documentation": "<p>The timestamp at which the user account was created in FinSpace. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "emailAddress": {
          "documentation": "<p>The email address of the user. The email address serves as a uniquer identifier for each user and cannot be changed after it's created.</p>",
          "shape": "Email"
        },
        "firstName": {
          "documentation": "<p>The first name of the user.</p>",
          "shape": "FirstName"
        },
        "lastDisabledTime": {
          "documentation": "<p>Describes the last time the user account was disabled. The value is determined as epoch time in milliseconds.</p>",
          "shape": "TimestampEpoch"
        },
        "lastEnabledTime": {
          "documentation": "<p> Describes the last time the user account was enabled. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "lastLoginTime": {
          "documentation": "<p>Describes the last time that the user logged into their account. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "lastModifiedTime": {
          "documentation": "<p>Describes the last time the user account was updated. The value is determined as epoch time in milliseconds. </p>",
          "shape": "TimestampEpoch"
        },
        "lastName": {
          "documentation": "<p> The last name of the user.</p>",
          "shape": "LastName"
        },
        "status": {
          "documentation": "<p>The current status of the user account. </p> <ul> <li> <p> <code>CREATING</code> \u2013 The user account creation is in progress.</p> </li> <li> <p> <code>ENABLED</code> \u2013 The user account is created and is currently active.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user account is currently inactive.</p> </li> </ul>",
          "shape": "UserStatus"
        },
        "type": {
          "documentation": "<p> Indicates the type of user.</p> <ul> <li> <p> <code>SUPER_USER</code> \u2013 A user with permission to all the functionality and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> \u2013 A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.</p> </li> </ul>",
          "shape": "UserType"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "UserByPermissionGroup": {
      "documentation": "<p>The structure of a user account associated with a permission group.</p>",
      "members": {
        "apiAccess": {
          "documentation": "<p>Indicates whether the user can access FinSpace API operations.</p> <ul> <li> <p> <code>ENABLED</code> \u2013 The user has permissions to use the API operations.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user does not have permissions to use any API operations.</p> </li> </ul>",
          "shape": "ApiAccess"
        },
        "apiAccessPrincipalArn": {
          "documentation": "<p>The IAM ARN identifier that is attached to FinSpace API calls.</p>",
          "shape": "RoleArn"
        },
        "emailAddress": {
          "documentation": "<p>The email address of the user. The email address serves as a unique identifier for each user and cannot be changed after it's created.</p>",
          "shape": "Email"
        },
        "firstName": {
          "documentation": "<p>The first name of the user.</p>",
          "shape": "FirstName"
        },
        "lastName": {
          "documentation": "<p>The last name of the user.</p>",
          "shape": "LastName"
        },
        "membershipStatus": {
          "documentation": "<p>Indicates the status of the user account within a permission group.</p> <ul> <li> <p> <code>ADDITION_IN_PROGRESS</code> \u2013 The user account is currently being added to the permission group.</p> </li> <li> <p> <code>ADDITION_SUCCESS</code> \u2013 The user account is successfully added to the permission group.</p> </li> <li> <p> <code>REMOVAL_IN_PROGRESS</code> \u2013 The user is currently being removed from the permission group.</p> </li> </ul>",
          "shape": "PermissionGroupMembershipStatus"
        },
        "status": {
          "documentation": "<p>The current status of the user account. </p> <ul> <li> <p> <code>CREATING</code> \u2013 The user account creation is in progress.</p> </li> <li> <p> <code>ENABLED</code> \u2013 The user account is created and is currently active.</p> </li> <li> <p> <code>DISABLED</code> \u2013 The user account is currently inactive.</p> </li> </ul>",
          "shape": "UserStatus"
        },
        "type": {
          "documentation": "<p> Indicates the type of user.</p> <ul> <li> <p> <code>SUPER_USER</code> \u2013 A user with permission to all the functionality and data in FinSpace.</p> </li> <li> <p> <code>APP_USER</code> \u2013 A user with specific permissions in FinSpace. The users are assigned permissions by adding them to a permission group.</p> </li> </ul>",
          "shape": "UserType"
        },
        "userId": {
          "documentation": "<p>The unique identifier for the user.</p>",
          "shape": "UserId"
        }
      },
      "type": "structure"
    },
    "UserByPermissionGroupList": {
      "member": {
        "shape": "UserByPermissionGroup"
      },
      "type": "list"
    },
    "UserId": {
      "max": 26,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "UserList": {
      "member": {
        "shape": "User"
      },
      "type": "list"
    },
    "UserStatus": {
      "enum": [
        "CREATING",
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "UserType": {
      "enum": [
        "SUPER_USER",
        "APP_USER"
      ],
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        },
        "reason": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "errorMessage": {
      "type": "string"
    },
    "locationType": {
      "enum": [
        "INGESTION",
        "SAGEMAKER"
      ],
      "type": "string"
    },
    "stringValueLength1to1024": {
      "max": 1024,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "stringValueLength1to255": {
      "max": 255,
      "min": 1,
      "type": "string"
    },
    "stringValueLength1to63": {
      "max": 63,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "stringValueMaxLength1000": {
      "max": 1000,
      "type": "string"
    }
  },
  "version": "2.0"
}
