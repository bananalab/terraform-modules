{
  "documentation": "<p>The FinSpace management service provides the APIs for managing FinSpace environments.</p>",
  "metadata": {
    "apiVersion": "2021-03-12",
    "endpointPrefix": "finspace",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "finspace",
    "serviceFullName": "FinSpace User Environment Management service",
    "serviceId": "finspace",
    "signatureVersion": "v4",
    "signingName": "finspace",
    "uid": "finspace-2021-03-12"
  },
  "operations": {
    "CreateEnvironment": {
      "documentation": "<p>Create a new FinSpace environment.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/environment"
      },
      "input": {
        "shape": "CreateEnvironmentRequest"
      },
      "name": "CreateEnvironment",
      "output": {
        "shape": "CreateEnvironmentResponse"
      }
    },
    "DeleteEnvironment": {
      "documentation": "<p>Delete an FinSpace environment.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/environment/{environmentId}"
      },
      "input": {
        "shape": "DeleteEnvironmentRequest"
      },
      "name": "DeleteEnvironment",
      "output": {
        "shape": "DeleteEnvironmentResponse"
      }
    },
    "GetEnvironment": {
      "documentation": "<p>Returns the FinSpace environment object.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/environment/{environmentId}"
      },
      "input": {
        "shape": "GetEnvironmentRequest"
      },
      "name": "GetEnvironment",
      "output": {
        "shape": "GetEnvironmentResponse"
      }
    },
    "ListEnvironments": {
      "documentation": "<p>A list of all of your FinSpace environments.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/environment"
      },
      "input": {
        "shape": "ListEnvironmentsRequest"
      },
      "name": "ListEnvironments",
      "output": {
        "shape": "ListEnvironmentsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>A list of all tags for a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds metadata tags to a FinSpace resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes metadata tags from a FinSpace resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateEnvironment": {
      "documentation": "<p>Update your FinSpace environment.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/environment/{environmentId}"
      },
      "input": {
        "shape": "UpdateEnvironmentRequest"
      },
      "name": "UpdateEnvironment",
      "output": {
        "shape": "UpdateEnvironmentResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {},
      "type": "structure"
    },
    "AttributeMap": {
      "key": {
        "shape": "FederationAttributeKey"
      },
      "type": "map",
      "value": {
        "shape": "url"
      }
    },
    "CreateEnvironmentRequest": {
      "members": {
        "dataBundles": {
          "documentation": "<p>The list of Amazon Resource Names (ARN) of the data bundles to install. Currently supported data bundle ARNs:</p> <ul> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/capital-markets-sample</code> - Contains sample Capital Markets datasets, categories and controlled vocabularies.</p> </li> <li> <p> <code>arn:aws:finspace:${Region}::data-bundle/taq</code> (default) - Contains trades and quotes data in addition to sample Capital Markets data.</p> </li> </ul>",
          "shape": "DataBundleArns"
        },
        "description": {
          "documentation": "<p>The description of the FinSpace environment to be created.</p>",
          "shape": "Description"
        },
        "federationMode": {
          "documentation": "<p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>",
          "shape": "FederationMode"
        },
        "federationParameters": {
          "documentation": "<p>Configuration information when authentication mode is FEDERATED.</p>",
          "shape": "FederationParameters"
        },
        "kmsKeyId": {
          "documentation": "<p>The KMS key id to encrypt your data in the FinSpace environment.</p>",
          "shape": "KmsKeyId"
        },
        "name": {
          "documentation": "<p>The name of the FinSpace environment to be created.</p>",
          "shape": "EnvironmentName"
        },
        "superuserParameters": {
          "documentation": "<p>Configuration information for the superuser.</p>",
          "shape": "SuperuserParameters"
        },
        "tags": {
          "documentation": "<p>Add tags to your FinSpace environment.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateEnvironmentResponse": {
      "members": {
        "environmentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the FinSpace environment that you created.</p>",
          "shape": "EnvironmentArn"
        },
        "environmentId": {
          "documentation": "<p>The unique identifier for FinSpace environment that you created.</p>",
          "shape": "IdType"
        },
        "environmentUrl": {
          "documentation": "<p>The sign-in url for the web application of the FinSpace environment you created.</p>",
          "shape": "url"
        }
      },
      "type": "structure"
    },
    "DataBundleArn": {
      "documentation": "<p>The Amazon Resource Name (ARN) of the data bundle.</p>",
      "max": 2048,
      "min": 20,
      "pattern": "^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\\d*:data-bundle/[0-9A-Za-z_-]{1,128}$",
      "type": "string"
    },
    "DataBundleArns": {
      "member": {
        "shape": "DataBundleArn"
      },
      "type": "list"
    },
    "DeleteEnvironmentRequest": {
      "members": {
        "environmentId": {
          "documentation": "<p>The identifier for the FinSpace environment.</p>",
          "location": "uri",
          "locationName": "environmentId",
          "shape": "IdType"
        }
      },
      "required": [
        "environmentId"
      ],
      "type": "structure"
    },
    "DeleteEnvironmentResponse": {
      "members": {},
      "type": "structure"
    },
    "Description": {
      "max": 1000,
      "min": 1,
      "pattern": "^[a-zA-Z0-9. ]{1,1000}$",
      "type": "string"
    },
    "EmailId": {
      "max": 128,
      "min": 1,
      "pattern": "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+[.]+[A-Za-z]+",
      "sensitive": true,
      "type": "string"
    },
    "Environment": {
      "documentation": "<p>Represents an FinSpace environment.</p>",
      "members": {
        "awsAccountId": {
          "documentation": "<p>The ID of the AWS account in which the FinSpace environment is created.</p>",
          "shape": "IdType"
        },
        "dedicatedServiceAccountId": {
          "documentation": "<p>The AWS account ID of the dedicated service account associated with your FinSpace environment.</p>",
          "shape": "IdType"
        },
        "description": {
          "documentation": "<p>The description of the FinSpace environment.</p>",
          "shape": "Description"
        },
        "environmentArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your FinSpace environment.</p>",
          "shape": "EnvironmentArn"
        },
        "environmentId": {
          "documentation": "<p>The identifier of the FinSpace environment.</p>",
          "shape": "IdType"
        },
        "environmentUrl": {
          "documentation": "<p>The sign-in url for the web application of your FinSpace environment.</p>",
          "shape": "url"
        },
        "federationMode": {
          "documentation": "<p>The authentication mode for the environment.</p>",
          "shape": "FederationMode"
        },
        "federationParameters": {
          "documentation": "<p>Configuration information when authentication mode is FEDERATED.</p>",
          "shape": "FederationParameters"
        },
        "kmsKeyId": {
          "documentation": "<p>The KMS key id used to encrypt in the FinSpace environment.</p>",
          "shape": "KmsKeyId"
        },
        "name": {
          "documentation": "<p>The name of the FinSpace environment.</p>",
          "shape": "EnvironmentName"
        },
        "sageMakerStudioDomainUrl": {
          "documentation": "<p>The url of the integrated FinSpace notebook environment in your web application.</p>",
          "shape": "SmsDomainUrl"
        },
        "status": {
          "documentation": "<p>The current status of creation of the FinSpace environment.</p>",
          "shape": "EnvironmentStatus"
        }
      },
      "type": "structure"
    },
    "EnvironmentArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:aws:finspace:[A-Za-z0-9_/.-]{0,63}:\\d+:environment/[0-9A-Za-z_-]{1,128}$",
      "type": "string"
    },
    "EnvironmentList": {
      "member": {
        "shape": "Environment"
      },
      "type": "list"
    },
    "EnvironmentName": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]$",
      "type": "string"
    },
    "EnvironmentStatus": {
      "enum": [
        "CREATE_REQUESTED",
        "CREATING",
        "CREATED",
        "DELETE_REQUESTED",
        "DELETING",
        "DELETED",
        "FAILED_CREATION",
        "RETRY_DELETION",
        "FAILED_DELETION",
        "SUSPENDED"
      ],
      "type": "string"
    },
    "FederationAttributeKey": {
      "max": 32,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "FederationMode": {
      "enum": [
        "FEDERATED",
        "LOCAL"
      ],
      "type": "string"
    },
    "FederationParameters": {
      "documentation": "<p>Configuration information when authentication mode is FEDERATED.</p>",
      "members": {
        "applicationCallBackURL": {
          "documentation": "<p>The redirect or sign-in URL that should be entered into the SAML 2.0 compliant identity provider configuration (IdP).</p>",
          "shape": "url"
        },
        "attributeMap": {
          "documentation": "<p>SAML attribute name and value. The name must always be <code>Email</code> and the value should be set to the attribute definition in which user email is set. For example, name would be <code>Email</code> and value <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code>. Please check your SAML 2.0 compliant identity provider (IdP) documentation for details.</p>",
          "shape": "AttributeMap"
        },
        "federationProviderName": {
          "documentation": "<p>Name of the identity provider (IdP).</p>",
          "shape": "FederationProviderName"
        },
        "federationURN": {
          "documentation": "<p>The Uniform Resource Name (URN). Also referred as Service Provider URN or Audience URI or Service Provider Entity ID.</p>",
          "shape": "urn"
        },
        "samlMetadataDocument": {
          "documentation": "<p>SAML 2.0 Metadata document from identity provider (IdP).</p>",
          "shape": "SamlMetadataDocument"
        },
        "samlMetadataURL": {
          "documentation": "<p>Provide the metadata URL from your SAML 2.0 compliant identity provider (IdP).</p>",
          "shape": "url"
        }
      },
      "type": "structure"
    },
    "FederationProviderName": {
      "max": 32,
      "min": 1,
      "pattern": "[^_\\p{Z}][\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}][^_\\p{Z}]+",
      "type": "string"
    },
    "GetEnvironmentRequest": {
      "members": {
        "environmentId": {
          "documentation": "<p>The identifier of the FinSpace environment.</p>",
          "location": "uri",
          "locationName": "environmentId",
          "shape": "IdType"
        }
      },
      "required": [
        "environmentId"
      ],
      "type": "structure"
    },
    "GetEnvironmentResponse": {
      "members": {
        "environment": {
          "documentation": "<p>The name of the FinSpace environment.</p>",
          "shape": "Environment"
        }
      },
      "type": "structure"
    },
    "IdType": {
      "max": 26,
      "min": 1,
      "pattern": "^[a-zA-Z0-9]{1,26}$",
      "type": "string"
    },
    "InternalServerException": {
      "documentation": "<p>The request processing has failed because of an unknown error, exception or failure.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>The request is invalid. Something is wrong with the input to the request.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "KmsKeyId": {
      "max": 1000,
      "min": 1,
      "pattern": "^[a-zA-Z-0-9-:\\/]*$",
      "type": "string"
    },
    "LimitExceededException": {
      "documentation": "<p>A service limit or quota is exceeded.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ListEnvironmentsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ResultLimit"
        },
        "nextToken": {
          "documentation": "<p>A token generated by FinSpace that specifies where to continue pagination if a previous request was truncated. To get the next set of pages, pass in the nextToken value from the response object of the previous page call.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListEnvironmentsResponse": {
      "members": {
        "environments": {
          "documentation": "<p>A list of all of your FinSpace environments.</p>",
          "shape": "EnvironmentList"
        },
        "nextToken": {
          "documentation": "<p>A token that you can use in a subsequent call to retrieve the next set of results.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "EnvironmentArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>A list of all tags for a resource.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "NameString": {
      "max": 50,
      "min": 1,
      "pattern": "^[a-zA-Z0-9]{1,50}$",
      "type": "string"
    },
    "PaginationToken": {
      "max": 1000,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>One or more resources can't be found.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ResultLimit": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "SamlMetadataDocument": {
      "max": 10000000,
      "min": 1000,
      "pattern": ".*",
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p> You have exceeded your service quota. To perform the requested action, remove some of the relevant resources, or use Service Quotas to request a service quota increase.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "SmsDomainUrl": {
      "max": 1000,
      "min": 1,
      "pattern": "^[a-zA-Z-0-9-:\\/.]*$",
      "type": "string"
    },
    "SuperuserParameters": {
      "documentation": "<p>Configuration information for the superuser.</p>",
      "members": {
        "emailAddress": {
          "documentation": "<p>The email address of the superuser.</p>",
          "shape": "EmailId"
        },
        "firstName": {
          "documentation": "<p>The first name of the superuser.</p>",
          "shape": "NameString"
        },
        "lastName": {
          "documentation": "<p>The last name of the superuser.</p>",
          "shape": "NameString"
        }
      },
      "required": [
        "emailAddress",
        "firstName",
        "lastName"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "EnvironmentArn"
        },
        "tags": {
          "documentation": "<p>One or more tags to be assigned to the resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 1,
      "pattern": "^[a-zA-Z0-9+-=._:@ ]+$",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {},
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>A FinSpace resource from which you want to remove a tag or tags. The value for this parameter is an Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "EnvironmentArn"
        },
        "tagKeys": {
          "documentation": "<p>The tag keys (names) of one or more tags to be removed.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateEnvironmentRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the environment.</p>",
          "shape": "Description"
        },
        "environmentId": {
          "documentation": "<p>The identifier of the FinSpace environment.</p>",
          "location": "uri",
          "locationName": "environmentId",
          "shape": "IdType"
        },
        "federationMode": {
          "documentation": "<p>Authentication mode for the environment.</p> <ul> <li> <p> <code>FEDERATED</code> - Users access FinSpace through Single Sign On (SSO) via your Identity provider.</p> </li> <li> <p> <code>LOCAL</code> - Users access FinSpace via email and password managed within the FinSpace environment.</p> </li> </ul>",
          "shape": "FederationMode"
        },
        "federationParameters": {
          "shape": "FederationParameters"
        },
        "name": {
          "documentation": "<p>The name of the environment.</p>",
          "shape": "EnvironmentName"
        }
      },
      "required": [
        "environmentId"
      ],
      "type": "structure"
    },
    "UpdateEnvironmentResponse": {
      "members": {
        "environment": {
          "documentation": "<p>Returns the FinSpace environment object.</p>",
          "shape": "Environment"
        }
      },
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "errorMessage": {
      "type": "string"
    },
    "url": {
      "max": 1000,
      "min": 1,
      "pattern": "^https?://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&@#/%=~_|]",
      "type": "string"
    },
    "urn": {
      "max": 255,
      "min": 1,
      "pattern": "^[A-Za-z0-9._\\-:\\/#\\+]+$",
      "type": "string"
    }
  },
  "version": "2.0"
}
