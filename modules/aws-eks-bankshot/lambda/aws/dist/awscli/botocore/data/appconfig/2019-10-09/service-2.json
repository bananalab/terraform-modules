{
  "documentation": "<p>Use AppConfig, a capability of Amazon Web Services Systems Manager, to create, manage, and quickly deploy application configurations. AppConfig supports controlled deployments to applications of any size and includes built-in validation checks and monitoring. You can use AppConfig with applications hosted on Amazon EC2 instances, Lambda, containers, mobile applications, or IoT devices.</p> <p>To prevent errors when deploying application configurations, especially for production systems where a simple typo could cause an unexpected outage, AppConfig includes validators. A validator provides a syntactic or semantic check to ensure that the configuration you want to deploy works as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.</p> <p>During a configuration deployment, AppConfig monitors the application to ensure that the deployment is successful. If the system encounters an error, AppConfig rolls back the change to minimize impact for your application users. You can configure a deployment strategy for each application or environment that includes deployment criteria, including velocity, bake time, and alarms to monitor. Similar to error monitoring, if a deployment triggers an alarm, AppConfig automatically rolls back to the previous version. </p> <p>AppConfig supports multiple use cases. Here are some examples:</p> <ul> <li> <p> <b>Feature flags</b>: Use AppConfig to turn on new features that require a timely deployment, such as a product launch or announcement. </p> </li> <li> <p> <b>Application tuning</b>: Use AppConfig to carefully introduce changes to your application that can only be tested with production traffic.</p> </li> <li> <p> <b>Allow list</b>: Use AppConfig to allow premium subscribers to access paid content. </p> </li> <li> <p> <b>Operational issues</b>: Use AppConfig to reduce stress on your application when a dependency or other external factor impacts the system.</p> </li> </ul> <p>This reference is intended to be used with the <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/what-is-appconfig.html\">AppConfig User Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2019-10-09",
    "endpointPrefix": "appconfig",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "AppConfig",
    "serviceFullName": "Amazon AppConfig",
    "serviceId": "AppConfig",
    "signatureVersion": "v4",
    "signingName": "appconfig",
    "uid": "appconfig-2019-10-09"
  },
  "operations": {
    "CreateApplication": {
      "documentation": "<p>Creates an application. In AppConfig, an application is simply an organizational construct like a folder. This organizational construct has a relationship with some unit of executable code. For example, you could create an application called MyMobileApp to organize and manage configuration data for a mobile application installed by your users.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateApplicationRequest"
      },
      "name": "CreateApplication",
      "output": {
        "shape": "Application"
      }
    },
    "CreateConfigurationProfile": {
      "documentation": "<p>Creates a configuration profile, which is information that enables AppConfig to access the configuration source. Valid configuration sources include the AppConfig hosted configuration store, Amazon Web Services Systems Manager (SSM) documents, SSM Parameter Store parameters, Amazon S3 objects, or any <a href=\"http://docs.aws.amazon.com/codepipeline/latest/userguide/integrations-action-type.html#integrations-source\">integration source action</a> supported by CodePipeline. A configuration profile includes the following information:</p> <ul> <li> <p>The URI location of the configuration data.</p> </li> <li> <p>The Identity and Access Management (IAM) role that provides access to the configuration data.</p> </li> <li> <p>A validator for the configuration data. Available validators include either a JSON Schema or an Amazon Web Services Lambda function.</p> </li> </ul> <p>For more information, see <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-creating-configuration-and-profile.html\">Create a Configuration and a Configuration Profile</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateConfigurationProfileRequest"
      },
      "name": "CreateConfigurationProfile",
      "output": {
        "shape": "ConfigurationProfile"
      }
    },
    "CreateDeploymentStrategy": {
      "documentation": "<p>Creates a deployment strategy that defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deploymentstrategies",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateDeploymentStrategyRequest"
      },
      "name": "CreateDeploymentStrategy",
      "output": {
        "shape": "DeploymentStrategy"
      }
    },
    "CreateEnvironment": {
      "documentation": "<p>Creates an environment. For each application, you define one or more environments. An environment is a deployment group of AppConfig targets, such as applications in a <code>Beta</code> or <code>Production</code> environment. You can also define environments for application subcomponents such as the <code>Web</code>, <code>Mobile</code> and <code>Back-end</code> components for your application. You can configure Amazon CloudWatch alarms for each environment. The system monitors alarms during a configuration deployment. If an alarm is triggered, the system rolls back the configuration.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications/{ApplicationId}/environments",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateEnvironmentRequest"
      },
      "name": "CreateEnvironment",
      "output": {
        "shape": "Environment"
      }
    },
    "CreateExtension": {
      "documentation": "<p>Creates an AppConfig extension. An extension augments your ability to inject logic or behavior at different points during the AppConfig workflow of creating or deploying a configuration.</p> <p>You can create your own extensions or use the Amazon Web Services-authored extensions provided by AppConfig. For most use-cases, to create your own extension, you must create an Lambda function to perform any computation and processing defined in the extension. For more information about extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/extensions",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateExtensionRequest"
      },
      "name": "CreateExtension",
      "output": {
        "shape": "Extension"
      }
    },
    "CreateExtensionAssociation": {
      "documentation": "<p>When you create an extension or configure an Amazon Web Services-authored extension, you associate the extension with an AppConfig application, environment, or configuration profile. For example, you can choose to run the <code>AppConfig deployment events to Amazon SNS</code> Amazon Web Services-authored extension and receive notifications on an Amazon SNS topic anytime a configuration deployment is started for a specific application. Defining which extension to associate with an AppConfig resource is called an <i>extension association</i>. An extension association is a specified relationship between an extension and an AppConfig resource, such as an application or a configuration profile. For more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/extensionassociations",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateExtensionAssociationRequest"
      },
      "name": "CreateExtensionAssociation",
      "output": {
        "shape": "ExtensionAssociation"
      }
    },
    "CreateHostedConfigurationVersion": {
      "documentation": "<p>Creates a new configuration in the AppConfig hosted configuration store.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "PayloadTooLargeException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateHostedConfigurationVersionRequest"
      },
      "name": "CreateHostedConfigurationVersion",
      "output": {
        "shape": "HostedConfigurationVersion"
      }
    },
    "DeleteApplication": {
      "documentation": "<p>Deletes an application. Deleting an application does not delete a configuration from a host.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{ApplicationId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteApplicationRequest"
      },
      "name": "DeleteApplication"
    },
    "DeleteConfigurationProfile": {
      "documentation": "<p>Deletes a configuration profile. Deleting a configuration profile does not delete a configuration from a host.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteConfigurationProfileRequest"
      },
      "name": "DeleteConfigurationProfile"
    },
    "DeleteDeploymentStrategy": {
      "documentation": "<p>Deletes a deployment strategy. Deleting a deployment strategy does not delete a configuration from a host.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/deployementstrategies/{DeploymentStrategyId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteDeploymentStrategyRequest"
      },
      "name": "DeleteDeploymentStrategy"
    },
    "DeleteEnvironment": {
      "documentation": "<p>Deletes an environment. Deleting an environment does not delete a configuration from a host.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteEnvironmentRequest"
      },
      "name": "DeleteEnvironment"
    },
    "DeleteExtension": {
      "documentation": "<p>Deletes an AppConfig extension. You must delete all associations to an extension before you delete the extension.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/extensions/{ExtensionIdentifier}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteExtensionRequest"
      },
      "name": "DeleteExtension"
    },
    "DeleteExtensionAssociation": {
      "documentation": "<p>Deletes an extension association. This action doesn't delete extensions defined in the association.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/extensionassociations/{ExtensionAssociationId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteExtensionAssociationRequest"
      },
      "name": "DeleteExtensionAssociation"
    },
    "DeleteHostedConfigurationVersion": {
      "documentation": "<p>Deletes a version of a configuration from the AppConfig hosted configuration store.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions/{VersionNumber}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteHostedConfigurationVersionRequest"
      },
      "name": "DeleteHostedConfigurationVersion"
    },
    "GetApplication": {
      "documentation": "<p>Retrieves information about an application.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetApplicationRequest"
      },
      "name": "GetApplication",
      "output": {
        "shape": "Application"
      }
    },
    "GetConfiguration": {
      "deprecated": true,
      "deprecatedMessage": "This API has been deprecated in favor of the GetLatestConfiguration API used in conjunction with StartConfigurationSession.",
      "documentation": "<p>Retrieves the latest deployed configuration.</p> <important> <p>Note the following important information.</p> <ul> <li> <p>This API action has been deprecated. Calls to receive configuration data should use the <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_StartConfigurationSession.html\">StartConfigurationSession</a> and <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/API_appconfigdata_GetLatestConfiguration.html\">GetLatestConfiguration</a> APIs instead. </p> </li> <li> <p> <code>GetConfiguration</code> is a priced call. For more information, see <a href=\"https://aws.amazon.com/systems-manager/pricing/\">Pricing</a>.</p> </li> <li> <p>AppConfig uses the value of the <code>ClientConfigurationVersion</code> parameter to identify the configuration version on your clients. If you don\u2019t send <code>ClientConfigurationVersion</code> with each call to <code>GetConfiguration</code>, your clients receive the current configuration. You are charged each time your clients receive a configuration.</p> <p>To avoid excess charges, we recommend you use the <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/StartConfigurationSession.html\">StartConfigurationSession</a> and <a href=\"https://docs.aws.amazon.com/appconfig/2019-10-09/APIReference/GetLatestConfiguration.html\">GetLatestConfiguration</a> APIs, which track the client configuration version on your behalf. If you choose to continue using <code>GetConfiguration</code>, we recommend that you include the <code>ClientConfigurationVersion</code> value with every call to <code>GetConfiguration</code>. The value to use for <code>ClientConfigurationVersion</code> comes from the <code>ConfigurationVersion</code> attribute returned by <code>GetConfiguration</code> when there is new or updated data, and should be saved for subsequent calls to <code>GetConfiguration</code>.</p> </li> </ul> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{Application}/environments/{Environment}/configurations/{Configuration}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetConfigurationRequest"
      },
      "name": "GetConfiguration",
      "output": {
        "shape": "Configuration"
      }
    },
    "GetConfigurationProfile": {
      "documentation": "<p>Retrieves information about a configuration profile.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetConfigurationProfileRequest"
      },
      "name": "GetConfigurationProfile",
      "output": {
        "shape": "ConfigurationProfile"
      }
    },
    "GetDeployment": {
      "documentation": "<p>Retrieves information about a configuration deployment.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}/deployments/{DeploymentNumber}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDeploymentRequest"
      },
      "name": "GetDeployment",
      "output": {
        "shape": "Deployment"
      }
    },
    "GetDeploymentStrategy": {
      "documentation": "<p>Retrieves information about a deployment strategy. A deployment strategy defines important criteria for rolling out your configuration to the designated targets. A deployment strategy includes the overall duration required, a percentage of targets to receive the deployment during each interval, an algorithm that defines how percentage grows, and bake time.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/deploymentstrategies/{DeploymentStrategyId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDeploymentStrategyRequest"
      },
      "name": "GetDeploymentStrategy",
      "output": {
        "shape": "DeploymentStrategy"
      }
    },
    "GetEnvironment": {
      "documentation": "<p>Retrieves information about an environment. An environment is a deployment group of AppConfig applications, such as applications in a <code>Production</code> environment or in an <code>EU_Region</code> environment. Each configuration deployment targets an environment. You can enable one or more Amazon CloudWatch alarms for an environment. If an alarm is triggered during a deployment, AppConfig roles back the configuration.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetEnvironmentRequest"
      },
      "name": "GetEnvironment",
      "output": {
        "shape": "Environment"
      }
    },
    "GetExtension": {
      "documentation": "<p>Returns information about an AppConfig extension.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/extensions/{ExtensionIdentifier}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetExtensionRequest"
      },
      "name": "GetExtension",
      "output": {
        "shape": "Extension"
      }
    },
    "GetExtensionAssociation": {
      "documentation": "<p>Returns information about an AppConfig extension association. For more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/extensionassociations/{ExtensionAssociationId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetExtensionAssociationRequest"
      },
      "name": "GetExtensionAssociation",
      "output": {
        "shape": "ExtensionAssociation"
      }
    },
    "GetHostedConfigurationVersion": {
      "documentation": "<p>Retrieves information about a specific configuration version.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions/{VersionNumber}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetHostedConfigurationVersionRequest"
      },
      "name": "GetHostedConfigurationVersion",
      "output": {
        "shape": "HostedConfigurationVersion"
      }
    },
    "ListApplications": {
      "documentation": "<p>Lists all applications in your Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications",
        "responseCode": 200
      },
      "input": {
        "shape": "ListApplicationsRequest"
      },
      "name": "ListApplications",
      "output": {
        "shape": "Applications"
      }
    },
    "ListConfigurationProfiles": {
      "documentation": "<p>Lists the configuration profiles for an application.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles",
        "responseCode": 200
      },
      "input": {
        "shape": "ListConfigurationProfilesRequest"
      },
      "name": "ListConfigurationProfiles",
      "output": {
        "shape": "ConfigurationProfiles"
      }
    },
    "ListDeploymentStrategies": {
      "documentation": "<p>Lists deployment strategies.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/deploymentstrategies",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDeploymentStrategiesRequest"
      },
      "name": "ListDeploymentStrategies",
      "output": {
        "shape": "DeploymentStrategies"
      }
    },
    "ListDeployments": {
      "documentation": "<p>Lists the deployments for an environment in descending deployment number order.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}/deployments",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDeploymentsRequest"
      },
      "name": "ListDeployments",
      "output": {
        "shape": "Deployments"
      }
    },
    "ListEnvironments": {
      "documentation": "<p>Lists the environments for an application.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/environments",
        "responseCode": 200
      },
      "input": {
        "shape": "ListEnvironmentsRequest"
      },
      "name": "ListEnvironments",
      "output": {
        "shape": "Environments"
      }
    },
    "ListExtensionAssociations": {
      "documentation": "<p>Lists all AppConfig extension associations in the account. For more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/extensionassociations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListExtensionAssociationsRequest"
      },
      "name": "ListExtensionAssociations",
      "output": {
        "shape": "ExtensionAssociations"
      }
    },
    "ListExtensions": {
      "documentation": "<p>Lists all custom and Amazon Web Services-authored AppConfig extensions in the account. For more information about extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/extensions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListExtensionsRequest"
      },
      "name": "ListExtensions",
      "output": {
        "shape": "Extensions"
      }
    },
    "ListHostedConfigurationVersions": {
      "documentation": "<p>Lists configurations stored in the AppConfig hosted configuration store by version.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/hostedconfigurationversions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListHostedConfigurationVersionsRequest"
      },
      "name": "ListHostedConfigurationVersions",
      "output": {
        "shape": "HostedConfigurationVersions"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Retrieves the list of key-value tags assigned to the resource.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{ResourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ResourceTags"
      }
    },
    "StartDeployment": {
      "documentation": "<p>Starts a deployment.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}/deployments",
        "responseCode": 201
      },
      "input": {
        "shape": "StartDeploymentRequest"
      },
      "name": "StartDeployment",
      "output": {
        "shape": "Deployment"
      }
    },
    "StopDeployment": {
      "documentation": "<p>Stops a deployment. This API action works only on deployments that have a status of <code>DEPLOYING</code>. This action moves the deployment to a status of <code>ROLLED_BACK</code>.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}/deployments/{DeploymentNumber}",
        "responseCode": 202
      },
      "input": {
        "shape": "StopDeploymentRequest"
      },
      "name": "StopDeployment",
      "output": {
        "shape": "Deployment"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns metadata to an AppConfig resource. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define. You can specify a maximum of 50 tags for a resource.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{ResourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UntagResource": {
      "documentation": "<p>Deletes a tag key and value from an AppConfig resource.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{ResourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateApplication": {
      "documentation": "<p>Updates an application.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/applications/{ApplicationId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateApplicationRequest"
      },
      "name": "UpdateApplication",
      "output": {
        "shape": "Application"
      }
    },
    "UpdateConfigurationProfile": {
      "documentation": "<p>Updates a configuration profile.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateConfigurationProfileRequest"
      },
      "name": "UpdateConfigurationProfile",
      "output": {
        "shape": "ConfigurationProfile"
      }
    },
    "UpdateDeploymentStrategy": {
      "documentation": "<p>Updates a deployment strategy.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/deploymentstrategies/{DeploymentStrategyId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateDeploymentStrategyRequest"
      },
      "name": "UpdateDeploymentStrategy",
      "output": {
        "shape": "DeploymentStrategy"
      }
    },
    "UpdateEnvironment": {
      "documentation": "<p>Updates an environment.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/applications/{ApplicationId}/environments/{EnvironmentId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateEnvironmentRequest"
      },
      "name": "UpdateEnvironment",
      "output": {
        "shape": "Environment"
      }
    },
    "UpdateExtension": {
      "documentation": "<p>Updates an AppConfig extension. For more information about extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/extensions/{ExtensionIdentifier}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateExtensionRequest"
      },
      "name": "UpdateExtension",
      "output": {
        "shape": "Extension"
      }
    },
    "UpdateExtensionAssociation": {
      "documentation": "<p>Updates an association. For more information about extensions and associations, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/extensionassociations/{ExtensionAssociationId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateExtensionAssociationRequest"
      },
      "name": "UpdateExtensionAssociation",
      "output": {
        "shape": "ExtensionAssociation"
      }
    },
    "ValidateConfiguration": {
      "documentation": "<p>Uses the validators in a configuration profile to validate a configuration.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications/{ApplicationId}/configurationprofiles/{ConfigurationProfileId}/validators",
        "responseCode": 204
      },
      "input": {
        "shape": "ValidateConfigurationRequest"
      },
      "name": "ValidateConfiguration"
    }
  },
  "shapes": {
    "Action": {
      "documentation": "<p>An action defines the tasks the extension performs during the AppConfig workflow. Each action includes an action point such as <code>ON_CREATE_HOSTED_CONFIGURATION</code>, <code>PRE_DEPLOYMENT</code>, or <code>ON_DEPLOYMENT</code>. Each action also includes a name, a URI to an Lambda function, and an Amazon Resource Name (ARN) for an Identity and Access Management assume role. You specify the name, URI, and ARN for each <i>action point</i> defined in the extension. You can specify the following actions for an extension:</p> <ul> <li> <p> <code>PRE_CREATE_HOSTED_CONFIGURATION_VERSION</code> </p> </li> <li> <p> <code>PRE_START_DEPLOYMENT</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_START</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_STEP</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_BAKING</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_COMPLETE</code> </p> </li> <li> <p> <code>ON_DEPLOYMENT_ROLLED_BACK</code> </p> </li> </ul>",
      "members": {
        "Description": {
          "documentation": "<p>Information about the action.</p>",
          "shape": "Description"
        },
        "Name": {
          "documentation": "<p>The action name.</p>",
          "shape": "Name"
        },
        "RoleArn": {
          "documentation": "<p>An Amazon Resource Name (ARN) for an Identity and Access Management assume role.</p>",
          "shape": "Arn"
        },
        "Uri": {
          "documentation": "<p>The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.</p>",
          "shape": "Uri"
        }
      },
      "type": "structure"
    },
    "ActionInvocation": {
      "documentation": "<p>An extension that was invoked as part of a deployment event.</p>",
      "members": {
        "ActionName": {
          "documentation": "<p>The name of the action.</p>",
          "shape": "Name"
        },
        "ErrorCode": {
          "documentation": "<p>The error code when an extension invocation fails.</p>",
          "shape": "String"
        },
        "ErrorMessage": {
          "documentation": "<p>The error message when an extension invocation fails.</p>",
          "shape": "String"
        },
        "ExtensionIdentifier": {
          "documentation": "<p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>",
          "shape": "Identifier"
        },
        "InvocationId": {
          "documentation": "<p>A system-generated ID for this invocation.</p>",
          "shape": "Id"
        },
        "RoleArn": {
          "documentation": "<p>An Amazon Resource Name (ARN) for an Identity and Access Management assume role.</p>",
          "shape": "Arn"
        },
        "Uri": {
          "documentation": "<p>The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.</p>",
          "shape": "Uri"
        }
      },
      "type": "structure"
    },
    "ActionInvocations": {
      "member": {
        "shape": "ActionInvocation"
      },
      "type": "list"
    },
    "ActionList": {
      "max": 1,
      "member": {
        "shape": "Action"
      },
      "min": 1,
      "type": "list"
    },
    "ActionPoint": {
      "enum": [
        "PRE_CREATE_HOSTED_CONFIGURATION_VERSION",
        "PRE_START_DEPLOYMENT",
        "ON_DEPLOYMENT_START",
        "ON_DEPLOYMENT_STEP",
        "ON_DEPLOYMENT_BAKING",
        "ON_DEPLOYMENT_COMPLETE",
        "ON_DEPLOYMENT_ROLLED_BACK"
      ],
      "type": "string"
    },
    "ActionsMap": {
      "key": {
        "shape": "ActionPoint"
      },
      "max": 5,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "ActionList"
      }
    },
    "Application": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the application.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>The application ID.</p>",
          "shape": "Id"
        },
        "Name": {
          "documentation": "<p>The application name.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "ApplicationList": {
      "member": {
        "shape": "Application"
      },
      "type": "list"
    },
    "Applications": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "ApplicationList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "AppliedExtension": {
      "documentation": "<p>An extension that was invoked during a deployment.</p>",
      "members": {
        "ExtensionAssociationId": {
          "documentation": "<p>The system-generated ID for the association.</p>",
          "shape": "Id"
        },
        "ExtensionId": {
          "documentation": "<p>The system-generated ID of the extension.</p>",
          "shape": "Id"
        },
        "Parameters": {
          "documentation": "<p>One or more parameters for the actions called by the extension.</p>",
          "shape": "ParameterValueMap"
        },
        "VersionNumber": {
          "documentation": "<p>The extension version number.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "AppliedExtensions": {
      "member": {
        "shape": "AppliedExtension"
      },
      "type": "list"
    },
    "Arn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:(aws[a-zA-Z-]*)?:[a-z]+:([a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1})?:(\\d{12})?:[a-zA-Z0-9-_/:.]+",
      "type": "string"
    },
    "BadRequestDetails": {
      "documentation": "<p>Detailed information about the input that failed to satisfy the constraints specified by a call.</p>",
      "members": {
        "InvalidConfiguration": {
          "documentation": "<p>Detailed information about the bad request exception error when creating a hosted configuration version.</p>",
          "shape": "InvalidConfigurationDetailList"
        }
      },
      "type": "structure",
      "union": true
    },
    "BadRequestException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an Amazon Web Services service.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Details": {
          "shape": "BadRequestDetails"
        },
        "Message": {
          "shape": "String"
        },
        "Reason": {
          "shape": "BadRequestReason"
        }
      },
      "type": "structure"
    },
    "BadRequestReason": {
      "enum": [
        "InvalidConfiguration"
      ],
      "type": "string"
    },
    "Blob": {
      "sensitive": true,
      "type": "blob"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BytesMeasure": {
      "enum": [
        "KILOBYTES"
      ],
      "type": "string"
    },
    "Configuration": {
      "members": {
        "ConfigurationVersion": {
          "documentation": "<p>The configuration version.</p>",
          "location": "header",
          "locationName": "Configuration-Version",
          "shape": "Version"
        },
        "Content": {
          "documentation": "<p>The content of the configuration or the configuration data.</p> <important> <p>The <code>Content</code> attribute only contains data if the system finds new or updated configuration data. If there is no new or updated data and <code>ClientConfigurationVersion</code> matches the version of the current configuration, AppConfig returns a <code>204 No Content</code> HTTP response code and the <code>Content</code> value will be empty.</p> </important>",
          "shape": "Blob"
        },
        "ContentType": {
          "documentation": "<p>A standard MIME type describing the format of the configuration content. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">Content-Type</a>.</p>",
          "location": "header",
          "locationName": "Content-Type",
          "shape": "String"
        }
      },
      "payload": "Content",
      "type": "structure"
    },
    "ConfigurationProfile": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>The configuration profile description.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>The configuration profile ID.</p>",
          "shape": "Id"
        },
        "LocationUri": {
          "documentation": "<p>The URI location of the configuration.</p>",
          "shape": "Uri"
        },
        "Name": {
          "documentation": "<p>The name of the configuration profile.</p>",
          "shape": "LongName"
        },
        "RetrievalRoleArn": {
          "documentation": "<p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p>",
          "shape": "RoleArn"
        },
        "Type": {
          "documentation": "<p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code> </p> <p> <code>AWS.Freeform</code> </p>",
          "shape": "ConfigurationProfileType"
        },
        "Validators": {
          "documentation": "<p>A list of methods for validating the configuration.</p>",
          "shape": "ValidatorList"
        }
      },
      "type": "structure"
    },
    "ConfigurationProfileSummary": {
      "documentation": "<p>A summary of a configuration profile.</p>",
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "shape": "Id"
        },
        "Id": {
          "documentation": "<p>The ID of the configuration profile.</p>",
          "shape": "Id"
        },
        "LocationUri": {
          "documentation": "<p>The URI location of the configuration.</p>",
          "shape": "Uri"
        },
        "Name": {
          "documentation": "<p>The name of the configuration profile.</p>",
          "shape": "LongName"
        },
        "Type": {
          "documentation": "<p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code> </p> <p> <code>AWS.Freeform</code> </p>",
          "shape": "ConfigurationProfileType"
        },
        "ValidatorTypes": {
          "documentation": "<p>The types of validators in the configuration profile.</p>",
          "shape": "ValidatorTypeList"
        }
      },
      "type": "structure"
    },
    "ConfigurationProfileSummaryList": {
      "member": {
        "shape": "ConfigurationProfileSummary"
      },
      "type": "list"
    },
    "ConfigurationProfileType": {
      "pattern": "^[a-zA-Z\\.]+",
      "type": "string"
    },
    "ConfigurationProfiles": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "ConfigurationProfileSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>The request could not be processed because of conflict in the current state of the resource.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateApplicationRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the application.</p>",
          "shape": "Description"
        },
        "Name": {
          "documentation": "<p>A name for the application.</p>",
          "shape": "Name"
        },
        "Tags": {
          "documentation": "<p>Metadata to assign to the application. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "CreateConfigurationProfileRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>A description of the configuration profile.</p>",
          "shape": "Description"
        },
        "LocationUri": {
          "documentation": "<p>A URI to locate the configuration. You can specify the AppConfig hosted configuration store, Systems Manager (SSM) document, an SSM Parameter Store parameter, or an Amazon S3 object. For the hosted configuration store and for feature flags, specify <code>hosted</code>. For an SSM document, specify either the document name in the format <code>ssm-document://&lt;Document_name&gt;</code> or the Amazon Resource Name (ARN). For a parameter, specify either the parameter name in the format <code>ssm-parameter://&lt;Parameter_name&gt;</code> or the ARN. For an Amazon S3 object, specify the URI in the following format: <code>s3://&lt;bucket&gt;/&lt;objectKey&gt; </code>. Here is an example: <code>s3://my-bucket/my-app/us-east-1/my-config.json</code> </p>",
          "shape": "Uri"
        },
        "Name": {
          "documentation": "<p>A name for the configuration profile.</p>",
          "shape": "LongName"
        },
        "RetrievalRoleArn": {
          "documentation": "<p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p> <important> <p>A retrieval role ARN is not required for configurations stored in the AppConfig hosted configuration store. It is required for all other sources that store your configuration. </p> </important>",
          "shape": "RoleArn"
        },
        "Tags": {
          "documentation": "<p>Metadata to assign to the configuration profile. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        },
        "Type": {
          "documentation": "<p>The type of configurations contained in the profile. AppConfig supports <code>feature flags</code> and <code>freeform</code> configurations. We recommend you create feature flag configurations to enable or disable new features and freeform configurations to distribute configurations to an application. When calling this API, enter one of the following values for <code>Type</code>:</p> <p> <code>AWS.AppConfig.FeatureFlags</code> </p> <p> <code>AWS.Freeform</code> </p>",
          "shape": "ConfigurationProfileType"
        },
        "Validators": {
          "documentation": "<p>A list of methods for validating the configuration.</p>",
          "shape": "ValidatorList"
        }
      },
      "required": [
        "ApplicationId",
        "Name",
        "LocationUri"
      ],
      "type": "structure"
    },
    "CreateDeploymentStrategyRequest": {
      "members": {
        "DeploymentDurationInMinutes": {
          "box": true,
          "documentation": "<p>Total amount of time for a deployment to last.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "Description": {
          "documentation": "<p>A description of the deployment strategy.</p>",
          "shape": "Description"
        },
        "FinalBakeTimeInMinutes": {
          "documentation": "<p>Specifies the amount of time AppConfig monitors for Amazon CloudWatch alarms after the configuration has been deployed to 100% of its targets, before considering the deployment to be complete. If an alarm is triggered during this time, AppConfig rolls back the deployment. You must configure permissions for AppConfig to roll back based on CloudWatch alarms. For more information, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/getting-started-with-appconfig-cloudwatch-alarms-permissions.html\">Configuring permissions for rollback based on Amazon CloudWatch alarms</a> in the <i>AppConfig User Guide</i>.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "GrowthFactor": {
          "box": true,
          "documentation": "<p>The percentage of targets to receive a deployed configuration during each interval.</p>",
          "shape": "GrowthFactor"
        },
        "GrowthType": {
          "documentation": "<p>The algorithm used to define how percentage grows over time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>: For this type, AppConfig processes the deployment by dividing the total number of targets by the value specified for <code>Step percentage</code>. For example, a linear deployment that uses a <code>Step percentage</code> of 10 deploys the configuration to 10 percent of the hosts. After those deployments are complete, the system deploys the configuration to the next 10 percent. This continues until 100% of the targets have successfully received the configuration.</p> <p> <b>Exponential</b>: For this type, AppConfig processes the deployment exponentially using the following formula: <code>G*(2^N)</code>. In this formula, <code>G</code> is the growth factor specified by the user and <code>N</code> is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:</p> <p> <code>2*(2^0)</code> </p> <p> <code>2*(2^1)</code> </p> <p> <code>2*(2^2)</code> </p> <p>Expressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.</p>",
          "shape": "GrowthType"
        },
        "Name": {
          "documentation": "<p>A name for the deployment strategy.</p>",
          "shape": "Name"
        },
        "ReplicateTo": {
          "documentation": "<p>Save the deployment strategy to a Systems Manager (SSM) document.</p>",
          "shape": "ReplicateTo"
        },
        "Tags": {
          "documentation": "<p>Metadata to assign to the deployment strategy. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "Name",
        "DeploymentDurationInMinutes",
        "GrowthFactor"
      ],
      "type": "structure"
    },
    "CreateEnvironmentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>A description of the environment.</p>",
          "shape": "Description"
        },
        "Monitors": {
          "documentation": "<p>Amazon CloudWatch alarms to monitor during the deployment process.</p>",
          "shape": "MonitorList"
        },
        "Name": {
          "documentation": "<p>A name for the environment.</p>",
          "shape": "Name"
        },
        "Tags": {
          "documentation": "<p>Metadata to assign to the environment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "ApplicationId",
        "Name"
      ],
      "type": "structure"
    },
    "CreateExtensionAssociationRequest": {
      "members": {
        "ExtensionIdentifier": {
          "documentation": "<p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>",
          "shape": "Identifier"
        },
        "ExtensionVersionNumber": {
          "box": true,
          "documentation": "<p>The version number of the extension. If not specified, AppConfig uses the maximum version of the extension.</p>",
          "shape": "Integer"
        },
        "Parameters": {
          "documentation": "<p>The parameter names and values defined in the extensions. Extension parameters marked <code>Required</code> must be entered for this field.</p>",
          "shape": "ParameterValueMap"
        },
        "ResourceIdentifier": {
          "documentation": "<p>The ARN of an application, configuration profile, or environment.</p>",
          "shape": "Identifier"
        },
        "Tags": {
          "documentation": "<p>Adds one or more tags for the specified extension association. Tags are metadata that help you categorize resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "ExtensionIdentifier",
        "ResourceIdentifier"
      ],
      "type": "structure"
    },
    "CreateExtensionRequest": {
      "members": {
        "Actions": {
          "documentation": "<p>The actions defined in the extension.</p>",
          "shape": "ActionsMap"
        },
        "Description": {
          "documentation": "<p>Information about the extension.</p>",
          "shape": "Description"
        },
        "LatestVersionNumber": {
          "box": true,
          "documentation": "<p>You can omit this field when you create an extension. When you create a new version, specify the most recent current version number. For example, you create version 3, enter 2 for this field.</p>",
          "location": "header",
          "locationName": "Latest-Version-Number",
          "shape": "Integer"
        },
        "Name": {
          "documentation": "<p>A name for the extension. Each extension name in your account must be unique. Extension versions use the same name.</p>",
          "shape": "Name"
        },
        "Parameters": {
          "documentation": "<p>The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the <code>CreateExtensionAssociation</code> API action. For Lambda extension actions, these parameters are included in the Lambda request object.</p>",
          "shape": "ParameterMap"
        },
        "Tags": {
          "documentation": "<p>Adds one or more tags for the specified extension. Tags are metadata that help you categorize resources in different ways, for example, by purpose, owner, or environment. Each tag consists of a key and an optional value, both of which you define. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "Name",
        "Actions"
      ],
      "type": "structure"
    },
    "CreateHostedConfigurationVersionRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "Content": {
          "documentation": "<p>The content of the configuration or the configuration data.</p>",
          "shape": "Blob"
        },
        "ContentType": {
          "documentation": "<p>A standard MIME type describing the format of the configuration content. For more information, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">Content-Type</a>.</p>",
          "location": "header",
          "locationName": "Content-Type",
          "shape": "StringWithLengthBetween1And255"
        },
        "Description": {
          "documentation": "<p>A description of the configuration.</p>",
          "location": "header",
          "locationName": "Description",
          "shape": "Description"
        },
        "LatestVersionNumber": {
          "box": true,
          "documentation": "<p>An optional locking token used to prevent race conditions from overwriting configuration updates when creating a new version. To ensure your data is not overwritten when creating multiple hosted configuration versions in rapid succession, specify the version number of the latest hosted configuration version.</p>",
          "location": "header",
          "locationName": "Latest-Version-Number",
          "shape": "Integer"
        }
      },
      "payload": "Content",
      "required": [
        "ApplicationId",
        "ConfigurationProfileId",
        "Content",
        "ContentType"
      ],
      "type": "structure"
    },
    "DeleteApplicationRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application to delete.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId"
      ],
      "type": "structure"
    },
    "DeleteConfigurationProfileRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID that includes the configuration profile you want to delete.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The ID of the configuration profile you want to delete.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId"
      ],
      "type": "structure"
    },
    "DeleteDeploymentStrategyRequest": {
      "members": {
        "DeploymentStrategyId": {
          "documentation": "<p>The ID of the deployment strategy you want to delete.</p>",
          "location": "uri",
          "locationName": "DeploymentStrategyId",
          "shape": "DeploymentStrategyId"
        }
      },
      "required": [
        "DeploymentStrategyId"
      ],
      "type": "structure"
    },
    "DeleteEnvironmentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID that includes the environment that you want to delete.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "EnvironmentId": {
          "documentation": "<p>The ID of the environment that you want to delete.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId"
      ],
      "type": "structure"
    },
    "DeleteExtensionAssociationRequest": {
      "members": {
        "ExtensionAssociationId": {
          "documentation": "<p>The ID of the extension association to delete.</p>",
          "location": "uri",
          "locationName": "ExtensionAssociationId",
          "shape": "Id"
        }
      },
      "required": [
        "ExtensionAssociationId"
      ],
      "type": "structure"
    },
    "DeleteExtensionRequest": {
      "members": {
        "ExtensionIdentifier": {
          "documentation": "<p>The name, ID, or Amazon Resource Name (ARN) of the extension you want to delete.</p>",
          "location": "uri",
          "locationName": "ExtensionIdentifier",
          "shape": "Identifier"
        },
        "VersionNumber": {
          "box": true,
          "documentation": "<p>A specific version of an extension to delete. If omitted, the highest version is deleted.</p>",
          "location": "querystring",
          "locationName": "version",
          "shape": "Integer"
        }
      },
      "required": [
        "ExtensionIdentifier"
      ],
      "type": "structure"
    },
    "DeleteHostedConfigurationVersionRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "VersionNumber": {
          "documentation": "<p>The versions number to delete.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "Integer"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "Deployment": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application that was deployed.</p>",
          "shape": "Id"
        },
        "AppliedExtensions": {
          "documentation": "<p>A list of extensions that were processed as part of the deployment. The extensions that were previously associated to the configuration profile, environment, or the application when <code>StartDeployment</code> was called.</p>",
          "shape": "AppliedExtensions"
        },
        "CompletedAt": {
          "documentation": "<p>The time the deployment completed. </p>",
          "shape": "Iso8601DateTime"
        },
        "ConfigurationLocationUri": {
          "documentation": "<p>Information about the source location of the configuration.</p>",
          "shape": "Uri"
        },
        "ConfigurationName": {
          "documentation": "<p>The name of the configuration.</p>",
          "shape": "Name"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The ID of the configuration profile that was deployed.</p>",
          "shape": "Id"
        },
        "ConfigurationVersion": {
          "documentation": "<p>The configuration version that was deployed.</p>",
          "shape": "Version"
        },
        "DeploymentDurationInMinutes": {
          "documentation": "<p>Total amount of time the deployment lasted.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "DeploymentNumber": {
          "documentation": "<p>The sequence number of the deployment.</p>",
          "shape": "Integer"
        },
        "DeploymentStrategyId": {
          "documentation": "<p>The ID of the deployment strategy that was deployed.</p>",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>The description of the deployment.</p>",
          "shape": "Description"
        },
        "EnvironmentId": {
          "documentation": "<p>The ID of the environment that was deployed.</p>",
          "shape": "Id"
        },
        "EventLog": {
          "documentation": "<p>A list containing all events related to a deployment. The most recent events are displayed first.</p>",
          "shape": "DeploymentEvents"
        },
        "FinalBakeTimeInMinutes": {
          "documentation": "<p>The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "GrowthFactor": {
          "documentation": "<p>The percentage of targets to receive a deployed configuration during each interval.</p>",
          "shape": "Percentage"
        },
        "GrowthType": {
          "documentation": "<p>The algorithm used to define how percentage grew over time.</p>",
          "shape": "GrowthType"
        },
        "PercentageComplete": {
          "documentation": "<p>The percentage of targets for which the deployment is available.</p>",
          "shape": "Percentage"
        },
        "StartedAt": {
          "documentation": "<p>The time the deployment started.</p>",
          "shape": "Iso8601DateTime"
        },
        "State": {
          "documentation": "<p>The state of the deployment.</p>",
          "shape": "DeploymentState"
        }
      },
      "type": "structure"
    },
    "DeploymentEvent": {
      "documentation": "<p>An object that describes a deployment event.</p>",
      "members": {
        "ActionInvocations": {
          "documentation": "<p>The list of extensions that were invoked as part of the deployment.</p>",
          "shape": "ActionInvocations"
        },
        "Description": {
          "documentation": "<p>A description of the deployment event. Descriptions include, but are not limited to, the user account or the Amazon CloudWatch alarm ARN that initiated a rollback, the percentage of hosts that received the deployment, or in the case of an internal error, a recommendation to attempt a new deployment.</p>",
          "shape": "Description"
        },
        "EventType": {
          "documentation": "<p>The type of deployment event. Deployment event types include the start, stop, or completion of a deployment; a percentage update; the start or stop of a bake period; and the start or completion of a rollback.</p>",
          "shape": "DeploymentEventType"
        },
        "OccurredAt": {
          "documentation": "<p>The date and time the event occurred.</p>",
          "shape": "Iso8601DateTime"
        },
        "TriggeredBy": {
          "documentation": "<p>The entity that triggered the deployment event. Events can be triggered by a user, AppConfig, an Amazon CloudWatch alarm, or an internal error.</p>",
          "shape": "TriggeredBy"
        }
      },
      "type": "structure"
    },
    "DeploymentEventType": {
      "enum": [
        "PERCENTAGE_UPDATED",
        "ROLLBACK_STARTED",
        "ROLLBACK_COMPLETED",
        "BAKE_TIME_STARTED",
        "DEPLOYMENT_STARTED",
        "DEPLOYMENT_COMPLETED"
      ],
      "type": "string"
    },
    "DeploymentEvents": {
      "member": {
        "shape": "DeploymentEvent"
      },
      "type": "list"
    },
    "DeploymentList": {
      "member": {
        "shape": "DeploymentSummary"
      },
      "type": "list"
    },
    "DeploymentState": {
      "enum": [
        "BAKING",
        "VALIDATING",
        "DEPLOYING",
        "COMPLETE",
        "ROLLING_BACK",
        "ROLLED_BACK"
      ],
      "type": "string"
    },
    "DeploymentStrategies": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "DeploymentStrategyList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DeploymentStrategy": {
      "members": {
        "DeploymentDurationInMinutes": {
          "documentation": "<p>Total amount of time the deployment lasted.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "Description": {
          "documentation": "<p>The description of the deployment strategy.</p>",
          "shape": "Description"
        },
        "FinalBakeTimeInMinutes": {
          "documentation": "<p>The amount of time that AppConfig monitored for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "GrowthFactor": {
          "documentation": "<p>The percentage of targets that received a deployed configuration during each interval.</p>",
          "shape": "Percentage"
        },
        "GrowthType": {
          "documentation": "<p>The algorithm used to define how percentage grew over time.</p>",
          "shape": "GrowthType"
        },
        "Id": {
          "documentation": "<p>The deployment strategy ID.</p>",
          "shape": "Id"
        },
        "Name": {
          "documentation": "<p>The name of the deployment strategy.</p>",
          "shape": "Name"
        },
        "ReplicateTo": {
          "documentation": "<p>Save the deployment strategy to a Systems Manager (SSM) document.</p>",
          "shape": "ReplicateTo"
        }
      },
      "type": "structure"
    },
    "DeploymentStrategyId": {
      "pattern": "(^[a-z0-9]{4,7}$|^AppConfig\\.[A-Za-z0-9]{9,40}$)",
      "type": "string"
    },
    "DeploymentStrategyList": {
      "member": {
        "shape": "DeploymentStrategy"
      },
      "type": "list"
    },
    "DeploymentSummary": {
      "documentation": "<p>Information about the deployment.</p>",
      "members": {
        "CompletedAt": {
          "documentation": "<p>Time the deployment completed.</p>",
          "shape": "Iso8601DateTime"
        },
        "ConfigurationName": {
          "documentation": "<p>The name of the configuration.</p>",
          "shape": "Name"
        },
        "ConfigurationVersion": {
          "documentation": "<p>The version of the configuration.</p>",
          "shape": "Version"
        },
        "DeploymentDurationInMinutes": {
          "documentation": "<p>Total amount of time the deployment lasted.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "DeploymentNumber": {
          "documentation": "<p>The sequence number of the deployment.</p>",
          "shape": "Integer"
        },
        "FinalBakeTimeInMinutes": {
          "documentation": "<p>The amount of time that AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "GrowthFactor": {
          "documentation": "<p>The percentage of targets to receive a deployed configuration during each interval.</p>",
          "shape": "Percentage"
        },
        "GrowthType": {
          "documentation": "<p>The algorithm used to define how percentage grows over time.</p>",
          "shape": "GrowthType"
        },
        "PercentageComplete": {
          "documentation": "<p>The percentage of targets for which the deployment is available.</p>",
          "shape": "Percentage"
        },
        "StartedAt": {
          "documentation": "<p>Time the deployment started.</p>",
          "shape": "Iso8601DateTime"
        },
        "State": {
          "documentation": "<p>The state of the deployment.</p>",
          "shape": "DeploymentState"
        }
      },
      "type": "structure"
    },
    "Deployments": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "DeploymentList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "Description": {
      "max": 1024,
      "min": 0,
      "type": "string"
    },
    "Environment": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>The description of the environment.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>The environment ID.</p>",
          "shape": "Id"
        },
        "Monitors": {
          "documentation": "<p>Amazon CloudWatch alarms monitored during the deployment.</p>",
          "shape": "MonitorList"
        },
        "Name": {
          "documentation": "<p>The name of the environment.</p>",
          "shape": "Name"
        },
        "State": {
          "documentation": "<p>The state of the environment. An environment can be in one of the following states: <code>READY_FOR_DEPLOYMENT</code>, <code>DEPLOYING</code>, <code>ROLLING_BACK</code>, or <code>ROLLED_BACK</code> </p>",
          "shape": "EnvironmentState"
        }
      },
      "type": "structure"
    },
    "EnvironmentList": {
      "member": {
        "shape": "Environment"
      },
      "type": "list"
    },
    "EnvironmentState": {
      "enum": [
        "READY_FOR_DEPLOYMENT",
        "DEPLOYING",
        "ROLLING_BACK",
        "ROLLED_BACK"
      ],
      "type": "string"
    },
    "Environments": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "EnvironmentList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "Extension": {
      "members": {
        "Actions": {
          "documentation": "<p>The actions defined in the extension.</p>",
          "shape": "ActionsMap"
        },
        "Arn": {
          "documentation": "<p>The system-generated Amazon Resource Name (ARN) for the extension.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>Information about the extension.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>The system-generated ID of the extension.</p>",
          "shape": "Id"
        },
        "Name": {
          "documentation": "<p>The extension name.</p>",
          "shape": "Name"
        },
        "Parameters": {
          "documentation": "<p>The parameters accepted by the extension. You specify parameter values when you associate the extension to an AppConfig resource by using the <code>CreateExtensionAssociation</code> API action. For Lambda extension actions, these parameters are included in the Lambda request object.</p>",
          "shape": "ParameterMap"
        },
        "VersionNumber": {
          "documentation": "<p>The extension version number.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ExtensionAssociation": {
      "members": {
        "Arn": {
          "documentation": "<p>The system-generated Amazon Resource Name (ARN) for the extension.</p>",
          "shape": "Arn"
        },
        "ExtensionArn": {
          "documentation": "<p>The ARN of the extension defined in the association.</p>",
          "shape": "Arn"
        },
        "ExtensionVersionNumber": {
          "documentation": "<p>The version number for the extension defined in the association.</p>",
          "shape": "Integer"
        },
        "Id": {
          "documentation": "<p>The system-generated ID for the association.</p>",
          "shape": "Identifier"
        },
        "Parameters": {
          "documentation": "<p>The parameter names and values defined in the association.</p>",
          "shape": "ParameterValueMap"
        },
        "ResourceArn": {
          "documentation": "<p>The ARNs of applications, configuration profiles, or environments defined in the association.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ExtensionAssociationSummaries": {
      "member": {
        "shape": "ExtensionAssociationSummary"
      },
      "type": "list"
    },
    "ExtensionAssociationSummary": {
      "documentation": "<p>Information about an association between an extension and an AppConfig resource such as an application, environment, or configuration profile. Call <code>GetExtensionAssociation</code> to get more information about an association.</p>",
      "members": {
        "ExtensionArn": {
          "documentation": "<p>The system-generated Amazon Resource Name (ARN) for the extension.</p>",
          "shape": "Arn"
        },
        "Id": {
          "documentation": "<p>The extension association ID. This ID is used to call other <code>ExtensionAssociation</code> API actions such as <code>GetExtensionAssociation</code> or <code>DeleteExtensionAssociation</code>.</p>",
          "shape": "Identifier"
        },
        "ResourceArn": {
          "documentation": "<p>The ARNs of applications, configuration profiles, or environments defined in the association.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ExtensionAssociations": {
      "members": {
        "Items": {
          "documentation": "<p>The list of extension associations. Each item represents an extension association to an application, environment, or configuration profile. </p>",
          "shape": "ExtensionAssociationSummaries"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ExtensionSummaries": {
      "member": {
        "shape": "ExtensionSummary"
      },
      "type": "list"
    },
    "ExtensionSummary": {
      "documentation": "<p>Information about an extension. Call <code>GetExtension</code> to get more information about an extension.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The system-generated Amazon Resource Name (ARN) for the extension.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>Information about the extension.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>The system-generated ID of the extension.</p>",
          "shape": "Id"
        },
        "Name": {
          "documentation": "<p>The extension name.</p>",
          "shape": "Name"
        },
        "VersionNumber": {
          "documentation": "<p>The extension version number.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "Extensions": {
      "members": {
        "Items": {
          "documentation": "<p>The list of available extensions. The list includes Amazon Web Services-authored and user-created extensions.</p>",
          "shape": "ExtensionSummaries"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "Float": {
      "type": "float"
    },
    "GetApplicationRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application you want to get.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId"
      ],
      "type": "structure"
    },
    "GetConfigurationProfileRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application that includes the configuration profile you want to get.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The ID of the configuration profile that you want to get.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId"
      ],
      "type": "structure"
    },
    "GetConfigurationRequest": {
      "members": {
        "Application": {
          "documentation": "<p>The application to get. Specify either the application name or the application ID.</p>",
          "location": "uri",
          "locationName": "Application",
          "shape": "StringWithLengthBetween1And64"
        },
        "ClientConfigurationVersion": {
          "documentation": "<p>The configuration version returned in the most recent <code>GetConfiguration</code> response.</p> <important> <p>AppConfig uses the value of the <code>ClientConfigurationVersion</code> parameter to identify the configuration version on your clients. If you don\u2019t send <code>ClientConfigurationVersion</code> with each call to <code>GetConfiguration</code>, your clients receive the current configuration. You are charged each time your clients receive a configuration.</p> <p>To avoid excess charges, we recommend that you include the <code>ClientConfigurationVersion</code> value with every call to <code>GetConfiguration</code>. This value must be saved on your client. Subsequent calls to <code>GetConfiguration</code> must pass this value by using the <code>ClientConfigurationVersion</code> parameter. </p> </important> <p>For more information about working with configurations, see <a href=\"http://docs.aws.amazon.com/appconfig/latest/userguide/appconfig-retrieving-the-configuration.html\">Retrieving the Configuration</a> in the <i>AppConfig User Guide</i>.</p>",
          "location": "querystring",
          "locationName": "client_configuration_version",
          "shape": "Version"
        },
        "ClientId": {
          "documentation": "<p>The clientId parameter in the following command is a unique, user-specified ID to identify the client for the configuration. This ID enables AppConfig to deploy the configuration in intervals, as defined in the deployment strategy. </p>",
          "location": "querystring",
          "locationName": "client_id",
          "shape": "StringWithLengthBetween1And64"
        },
        "Configuration": {
          "documentation": "<p>The configuration to get. Specify either the configuration name or the configuration ID.</p>",
          "location": "uri",
          "locationName": "Configuration",
          "shape": "StringWithLengthBetween1And64"
        },
        "Environment": {
          "documentation": "<p>The environment to get. Specify either the environment name or the environment ID.</p>",
          "location": "uri",
          "locationName": "Environment",
          "shape": "StringWithLengthBetween1And64"
        }
      },
      "required": [
        "Application",
        "Environment",
        "Configuration",
        "ClientId"
      ],
      "type": "structure"
    },
    "GetDeploymentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application that includes the deployment you want to get. </p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "DeploymentNumber": {
          "box": true,
          "documentation": "<p>The sequence number of the deployment.</p>",
          "location": "uri",
          "locationName": "DeploymentNumber",
          "shape": "Integer"
        },
        "EnvironmentId": {
          "documentation": "<p>The ID of the environment that includes the deployment you want to get. </p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId",
        "DeploymentNumber"
      ],
      "type": "structure"
    },
    "GetDeploymentStrategyRequest": {
      "members": {
        "DeploymentStrategyId": {
          "documentation": "<p>The ID of the deployment strategy to get.</p>",
          "location": "uri",
          "locationName": "DeploymentStrategyId",
          "shape": "DeploymentStrategyId"
        }
      },
      "required": [
        "DeploymentStrategyId"
      ],
      "type": "structure"
    },
    "GetEnvironmentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The ID of the application that includes the environment you want to get.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "EnvironmentId": {
          "documentation": "<p>The ID of the environment that you want to get.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId"
      ],
      "type": "structure"
    },
    "GetExtensionAssociationRequest": {
      "members": {
        "ExtensionAssociationId": {
          "documentation": "<p>The extension association ID to get.</p>",
          "location": "uri",
          "locationName": "ExtensionAssociationId",
          "shape": "Id"
        }
      },
      "required": [
        "ExtensionAssociationId"
      ],
      "type": "structure"
    },
    "GetExtensionRequest": {
      "members": {
        "ExtensionIdentifier": {
          "documentation": "<p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>",
          "location": "uri",
          "locationName": "ExtensionIdentifier",
          "shape": "Identifier"
        },
        "VersionNumber": {
          "box": true,
          "documentation": "<p>The extension version number. If no version number was defined, AppConfig uses the highest version.</p>",
          "location": "querystring",
          "locationName": "version_number",
          "shape": "Integer"
        }
      },
      "required": [
        "ExtensionIdentifier"
      ],
      "type": "structure"
    },
    "GetHostedConfigurationVersionRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "VersionNumber": {
          "documentation": "<p>The version.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "Integer"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "GrowthFactor": {
      "max": 100.0,
      "min": 1.0,
      "type": "float"
    },
    "GrowthType": {
      "enum": [
        "LINEAR",
        "EXPONENTIAL"
      ],
      "type": "string"
    },
    "HostedConfigurationVersion": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "header",
          "locationName": "Application-Id",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "header",
          "locationName": "Configuration-Profile-Id",
          "shape": "Id"
        },
        "Content": {
          "documentation": "<p>The content of the configuration or the configuration data.</p>",
          "shape": "Blob"
        },
        "ContentType": {
          "documentation": "<p>A standard MIME type describing the format of the configuration content. For more information, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">Content-Type</a>.</p>",
          "location": "header",
          "locationName": "Content-Type",
          "shape": "StringWithLengthBetween1And255"
        },
        "Description": {
          "documentation": "<p>A description of the configuration.</p>",
          "location": "header",
          "locationName": "Description",
          "shape": "Description"
        },
        "VersionNumber": {
          "documentation": "<p>The configuration version.</p>",
          "location": "header",
          "locationName": "Version-Number",
          "shape": "Integer"
        }
      },
      "payload": "Content",
      "type": "structure"
    },
    "HostedConfigurationVersionSummary": {
      "documentation": "<p>Information about the configuration.</p>",
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "shape": "Id"
        },
        "ContentType": {
          "documentation": "<p>A standard MIME type describing the format of the configuration content. For more information, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">Content-Type</a>.</p>",
          "shape": "StringWithLengthBetween1And255"
        },
        "Description": {
          "documentation": "<p>A description of the configuration.</p>",
          "shape": "Description"
        },
        "VersionNumber": {
          "documentation": "<p>The configuration version.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "HostedConfigurationVersionSummaryList": {
      "member": {
        "shape": "HostedConfigurationVersionSummary"
      },
      "type": "list"
    },
    "HostedConfigurationVersions": {
      "members": {
        "Items": {
          "documentation": "<p>The elements from this collection.</p>",
          "shape": "HostedConfigurationVersionSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of items to return. Use this token to get the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "Id": {
      "pattern": "[a-z0-9]{4,7}",
      "type": "string"
    },
    "Identifier": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServerException": {
      "documentation": "<p>There was an internal failure in the AppConfig service.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidConfigurationDetail": {
      "documentation": "<p>Detailed information about the bad request exception error when creating a hosted configuration version.</p>",
      "members": {
        "Constraint": {
          "documentation": "<p>The invalid or out-of-range validation constraint in your JSON schema that failed validation.</p>",
          "shape": "String"
        },
        "Location": {
          "documentation": "<p>Location of the validation constraint in the configuration JSON schema that failed validation.</p>",
          "shape": "String"
        },
        "Reason": {
          "documentation": "<p>The reason for an invalid configuration error.</p>",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>The type of error for an invalid configuration.</p>",
          "shape": "String"
        },
        "Value": {
          "documentation": "<p>Details about an error with Lambda when a synchronous extension experiences an error during an invocation.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidConfigurationDetailList": {
      "member": {
        "shape": "InvalidConfigurationDetail"
      },
      "type": "list"
    },
    "Iso8601DateTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "ListApplicationsRequest": {
      "members": {
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Next token is a pagination token generated by AppConfig to describe what page the previous List call ended on. For the first List request, the nextToken should not be set. On subsequent calls, the nextToken parameter should be set to the previous responses nextToken value. Use this token to get the next set of results. </p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListConfigurationProfilesRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        },
        "Type": {
          "documentation": "<p>A filter based on the type of configurations that the configuration profile contains. A configuration can be a feature flag or a freeform configuration.</p>",
          "location": "querystring",
          "locationName": "type",
          "shape": "ConfigurationProfileType"
        }
      },
      "required": [
        "ApplicationId"
      ],
      "type": "structure"
    },
    "ListDeploymentStrategiesRequest": {
      "members": {
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDeploymentsRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "EnvironmentId": {
          "documentation": "<p>The environment ID.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items that may be returned for this call. If there are items that have not yet been returned, the response will include a non-null <code>NextToken</code> that you can provide in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token returned by a prior call to this operation indicating the next set of results to be returned. If not specified, the operation will return the first set of results.</p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId"
      ],
      "type": "structure"
    },
    "ListEnvironmentsRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "required": [
        "ApplicationId"
      ],
      "type": "structure"
    },
    "ListExtensionAssociationsRequest": {
      "members": {
        "ExtensionIdentifier": {
          "documentation": "<p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>",
          "location": "querystring",
          "locationName": "extension_identifier",
          "shape": "Identifier"
        },
        "ExtensionVersionNumber": {
          "box": true,
          "documentation": "<p>The version number for the extension defined in the association.</p>",
          "location": "querystring",
          "locationName": "extension_version_number",
          "shape": "Integer"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results or pass null to get the first set of results. </p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        },
        "ResourceIdentifier": {
          "documentation": "<p>The ARN of an application, configuration profile, or environment.</p>",
          "location": "querystring",
          "locationName": "resource_identifier",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ListExtensionsRequest": {
      "members": {
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "Name": {
          "documentation": "<p>The extension name.</p>",
          "location": "querystring",
          "locationName": "name",
          "shape": "QueryName"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results. </p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListHostedConfigurationVersionsRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "max_results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A token to start the list. Use this token to get the next set of results. </p>",
          "location": "querystring",
          "locationName": "next_token",
          "shape": "NextToken"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The resource ARN.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "LongName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "MaxResults": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "MinutesBetween0And24Hours": {
      "max": 1440,
      "min": 0,
      "type": "integer"
    },
    "Monitor": {
      "documentation": "<p>Amazon CloudWatch alarms to monitor during the deployment process.</p>",
      "members": {
        "AlarmArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the Amazon CloudWatch alarm.</p>",
          "shape": "StringWithLengthBetween1And2048"
        },
        "AlarmRoleArn": {
          "documentation": "<p>ARN of an Identity and Access Management (IAM) role for AppConfig to monitor <code>AlarmArn</code>.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "AlarmArn"
      ],
      "type": "structure"
    },
    "MonitorList": {
      "max": 5,
      "member": {
        "shape": "Monitor"
      },
      "min": 0,
      "type": "list"
    },
    "Name": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "NextToken": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "Parameter": {
      "documentation": "<p>A value such as an Amazon Resource Name (ARN) or an Amazon Simple Notification Service topic entered in an extension when invoked. Parameter values are specified in an extension association. For more information about extensions, see <a href=\"https://docs.aws.amazon.com/appconfig/latest/userguide/working-with-appconfig-extensions.html\">Working with AppConfig extensions</a> in the <i>AppConfig User Guide</i>.</p>",
      "members": {
        "Description": {
          "documentation": "<p>Information about the parameter.</p>",
          "shape": "Description"
        },
        "Required": {
          "documentation": "<p>A parameter value must be specified in the extension association.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "ParameterMap": {
      "key": {
        "shape": "Name"
      },
      "max": 5,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "Parameter"
      }
    },
    "ParameterValueMap": {
      "key": {
        "shape": "Name"
      },
      "max": 5,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "StringWithLengthBetween1And2048"
      }
    },
    "PayloadTooLargeException": {
      "documentation": "<p>The configuration size is too large.</p>",
      "error": {
        "httpStatusCode": 413
      },
      "exception": true,
      "members": {
        "Limit": {
          "shape": "Float"
        },
        "Measure": {
          "shape": "BytesMeasure"
        },
        "Message": {
          "shape": "String"
        },
        "Size": {
          "shape": "Float"
        }
      },
      "type": "structure"
    },
    "Percentage": {
      "max": 100.0,
      "min": 1.0,
      "type": "float"
    },
    "QueryName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ReplicateTo": {
      "enum": [
        "NONE",
        "SSM_DOCUMENT"
      ],
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The requested resource could not be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "ResourceName": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceTags": {
      "members": {
        "Tags": {
          "documentation": "<p>Metadata to assign to AppConfig resources. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^((arn):(aws|aws-cn|aws-iso|aws-iso-[a-z]{1}|aws-us-gov):(iam)::\\d{12}:role[/].*)$",
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The number of hosted configuration versions exceeds the limit for the AppConfig hosted configuration store. Delete one or more versions and try again.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StartDeploymentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "shape": "Id"
        },
        "ConfigurationVersion": {
          "documentation": "<p>The configuration version to deploy.</p>",
          "shape": "Version"
        },
        "DeploymentStrategyId": {
          "documentation": "<p>The deployment strategy ID.</p>",
          "shape": "DeploymentStrategyId"
        },
        "Description": {
          "documentation": "<p>A description of the deployment.</p>",
          "shape": "Description"
        },
        "EnvironmentId": {
          "documentation": "<p>The environment ID.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        },
        "Tags": {
          "documentation": "<p>Metadata to assign to the deployment. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId",
        "DeploymentStrategyId",
        "ConfigurationProfileId",
        "ConfigurationVersion"
      ],
      "type": "structure"
    },
    "StopDeploymentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "DeploymentNumber": {
          "box": true,
          "documentation": "<p>The sequence number of the deployment.</p>",
          "location": "uri",
          "locationName": "DeploymentNumber",
          "shape": "Integer"
        },
        "EnvironmentId": {
          "documentation": "<p>The environment ID.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId",
        "DeploymentNumber"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "StringWithLengthBetween0And32768": {
      "max": 32768,
      "min": 0,
      "sensitive": true,
      "type": "string"
    },
    "StringWithLengthBetween1And2048": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "StringWithLengthBetween1And255": {
      "max": 255,
      "min": 1,
      "type": "string"
    },
    "StringWithLengthBetween1And64": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The ARN of the resource for which to retrieve tags.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>The key-value string map. The valid character set is [a-zA-Z+-=._:/]. The tag key can be up to 128 characters and must not start with <code>aws:</code>. The tag value can be up to 256 characters.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "TriggeredBy": {
      "enum": [
        "USER",
        "APPCONFIG",
        "CLOUDWATCH_ALARM",
        "INTERNAL_ERROR"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The ARN of the resource for which to remove tags.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>The tag keys to delete.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UpdateApplicationRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>A description of the application.</p>",
          "shape": "Description"
        },
        "Name": {
          "documentation": "<p>The name of the application.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "ApplicationId"
      ],
      "type": "structure"
    },
    "UpdateConfigurationProfileRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The ID of the configuration profile.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>A description of the configuration profile.</p>",
          "shape": "Description"
        },
        "Name": {
          "documentation": "<p>The name of the configuration profile.</p>",
          "shape": "Name"
        },
        "RetrievalRoleArn": {
          "documentation": "<p>The ARN of an IAM role with permission to access the configuration at the specified <code>LocationUri</code>.</p>",
          "shape": "RoleArn"
        },
        "Validators": {
          "documentation": "<p>A list of methods for validating the configuration.</p>",
          "shape": "ValidatorList"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId"
      ],
      "type": "structure"
    },
    "UpdateDeploymentStrategyRequest": {
      "members": {
        "DeploymentDurationInMinutes": {
          "box": true,
          "documentation": "<p>Total amount of time for a deployment to last.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "DeploymentStrategyId": {
          "documentation": "<p>The deployment strategy ID.</p>",
          "location": "uri",
          "locationName": "DeploymentStrategyId",
          "shape": "DeploymentStrategyId"
        },
        "Description": {
          "documentation": "<p>A description of the deployment strategy.</p>",
          "shape": "Description"
        },
        "FinalBakeTimeInMinutes": {
          "box": true,
          "documentation": "<p>The amount of time that AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic rollback.</p>",
          "shape": "MinutesBetween0And24Hours"
        },
        "GrowthFactor": {
          "box": true,
          "documentation": "<p>The percentage of targets to receive a deployed configuration during each interval.</p>",
          "shape": "GrowthFactor"
        },
        "GrowthType": {
          "documentation": "<p>The algorithm used to define how percentage grows over time. AppConfig supports the following growth types:</p> <p> <b>Linear</b>: For this type, AppConfig processes the deployment by increments of the growth factor evenly distributed over the deployment time. For example, a linear deployment that uses a growth factor of 20 initially makes the configuration available to 20 percent of the targets. After 1/5th of the deployment time has passed, the system updates the percentage to 40 percent. This continues until 100% of the targets are set to receive the deployed configuration.</p> <p> <b>Exponential</b>: For this type, AppConfig processes the deployment exponentially using the following formula: <code>G*(2^N)</code>. In this formula, <code>G</code> is the growth factor specified by the user and <code>N</code> is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:</p> <p> <code>2*(2^0)</code> </p> <p> <code>2*(2^1)</code> </p> <p> <code>2*(2^2)</code> </p> <p>Expressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.</p>",
          "shape": "GrowthType"
        }
      },
      "required": [
        "DeploymentStrategyId"
      ],
      "type": "structure"
    },
    "UpdateEnvironmentRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "Description": {
          "documentation": "<p>A description of the environment.</p>",
          "shape": "Description"
        },
        "EnvironmentId": {
          "documentation": "<p>The environment ID.</p>",
          "location": "uri",
          "locationName": "EnvironmentId",
          "shape": "Id"
        },
        "Monitors": {
          "documentation": "<p>Amazon CloudWatch alarms to monitor during the deployment process.</p>",
          "shape": "MonitorList"
        },
        "Name": {
          "documentation": "<p>The name of the environment.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "ApplicationId",
        "EnvironmentId"
      ],
      "type": "structure"
    },
    "UpdateExtensionAssociationRequest": {
      "members": {
        "ExtensionAssociationId": {
          "documentation": "<p>The system-generated ID for the association.</p>",
          "location": "uri",
          "locationName": "ExtensionAssociationId",
          "shape": "Id"
        },
        "Parameters": {
          "documentation": "<p>The parameter names and values defined in the extension.</p>",
          "shape": "ParameterValueMap"
        }
      },
      "required": [
        "ExtensionAssociationId"
      ],
      "type": "structure"
    },
    "UpdateExtensionRequest": {
      "members": {
        "Actions": {
          "documentation": "<p>The actions defined in the extension.</p>",
          "shape": "ActionsMap"
        },
        "Description": {
          "documentation": "<p>Information about the extension.</p>",
          "shape": "Description"
        },
        "ExtensionIdentifier": {
          "documentation": "<p>The name, the ID, or the Amazon Resource Name (ARN) of the extension.</p>",
          "location": "uri",
          "locationName": "ExtensionIdentifier",
          "shape": "Identifier"
        },
        "Parameters": {
          "documentation": "<p>One or more parameters for the actions called by the extension.</p>",
          "shape": "ParameterMap"
        },
        "VersionNumber": {
          "box": true,
          "documentation": "<p>The extension version number.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "ExtensionIdentifier"
      ],
      "type": "structure"
    },
    "Uri": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "ValidateConfigurationRequest": {
      "members": {
        "ApplicationId": {
          "documentation": "<p>The application ID.</p>",
          "location": "uri",
          "locationName": "ApplicationId",
          "shape": "Id"
        },
        "ConfigurationProfileId": {
          "documentation": "<p>The configuration profile ID.</p>",
          "location": "uri",
          "locationName": "ConfigurationProfileId",
          "shape": "Id"
        },
        "ConfigurationVersion": {
          "documentation": "<p>The version of the configuration to validate.</p>",
          "location": "querystring",
          "locationName": "configuration_version",
          "shape": "Version"
        }
      },
      "required": [
        "ApplicationId",
        "ConfigurationProfileId",
        "ConfigurationVersion"
      ],
      "type": "structure"
    },
    "Validator": {
      "documentation": "<p>A validator provides a syntactic or semantic check to ensure the configuration that you want to deploy functions as intended. To validate your application configuration data, you provide a schema or an Amazon Web Services Lambda function that runs against the configuration. The configuration deployment or update can only proceed when the configuration data is valid.</p>",
      "members": {
        "Content": {
          "documentation": "<p>Either the JSON Schema content or the Amazon Resource Name (ARN) of an Lambda function.</p>",
          "shape": "StringWithLengthBetween0And32768"
        },
        "Type": {
          "documentation": "<p>AppConfig supports validators of type <code>JSON_SCHEMA</code> and <code>LAMBDA</code> </p>",
          "shape": "ValidatorType"
        }
      },
      "required": [
        "Type",
        "Content"
      ],
      "type": "structure"
    },
    "ValidatorList": {
      "max": 2,
      "member": {
        "shape": "Validator"
      },
      "min": 0,
      "type": "list"
    },
    "ValidatorType": {
      "enum": [
        "JSON_SCHEMA",
        "LAMBDA"
      ],
      "type": "string"
    },
    "ValidatorTypeList": {
      "max": 2,
      "member": {
        "shape": "ValidatorType"
      },
      "min": 0,
      "type": "list"
    },
    "Version": {
      "max": 1024,
      "min": 1,
      "type": "string"
    }
  },
  "version": "2.0"
}
