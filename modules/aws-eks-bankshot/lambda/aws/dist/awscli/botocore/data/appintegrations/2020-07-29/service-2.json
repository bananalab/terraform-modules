{
  "documentation": "<p>The Amazon AppIntegrations service enables you to configure and reuse connections to external applications.</p> <p>For information about how you can use external applications with Amazon Connect, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/crm.html\">Set up pre-built integrations</a> and <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-wisdom.html\">Deliver information to agents using Amazon Connect Wisdom</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
  "metadata": {
    "apiVersion": "2020-07-29",
    "endpointPrefix": "app-integrations",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon AppIntegrations Service",
    "serviceId": "AppIntegrations",
    "signatureVersion": "v4",
    "signingName": "app-integrations",
    "uid": "appintegrations-2020-07-29"
  },
  "operations": {
    "CreateDataIntegration": {
      "documentation": "<p>Creates and persists a DataIntegration resource.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <code>CreateDataIntegration</code> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ResourceQuotaExceededException"
        },
        {
          "shape": "DuplicateResourceException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/dataIntegrations"
      },
      "input": {
        "shape": "CreateDataIntegrationRequest"
      },
      "name": "CreateDataIntegration",
      "output": {
        "shape": "CreateDataIntegrationResponse"
      }
    },
    "CreateEventIntegration": {
      "documentation": "<p>Creates an EventIntegration, given a specified name, description, and a reference to an Amazon EventBridge bus in your account and a partner event source that pushes events to that bus. No objects are created in the your account, only metadata that is persisted on the EventIntegration control plane.</p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ResourceQuotaExceededException"
        },
        {
          "shape": "DuplicateResourceException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/eventIntegrations"
      },
      "input": {
        "shape": "CreateEventIntegrationRequest"
      },
      "name": "CreateEventIntegration",
      "output": {
        "shape": "CreateEventIntegrationResponse"
      }
    },
    "DeleteDataIntegration": {
      "documentation": "<p>Deletes the DataIntegration. Only DataIntegrations that don't have any DataIntegrationAssociations can be deleted. Deleting a DataIntegration also deletes the underlying Amazon AppFlow flow and service linked role. </p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/dataIntegrations/{Identifier}"
      },
      "input": {
        "shape": "DeleteDataIntegrationRequest"
      },
      "name": "DeleteDataIntegration",
      "output": {
        "shape": "DeleteDataIntegrationResponse"
      }
    },
    "DeleteEventIntegration": {
      "documentation": "<p>Deletes the specified existing event integration. If the event integration is associated with clients, the request is rejected.</p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/eventIntegrations/{Name}"
      },
      "input": {
        "shape": "DeleteEventIntegrationRequest"
      },
      "name": "DeleteEventIntegration",
      "output": {
        "shape": "DeleteEventIntegrationResponse"
      }
    },
    "GetDataIntegration": {
      "documentation": "<p>Returns information about the DataIntegration.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataIntegrations/{Identifier}"
      },
      "input": {
        "shape": "GetDataIntegrationRequest"
      },
      "name": "GetDataIntegration",
      "output": {
        "shape": "GetDataIntegrationResponse"
      }
    },
    "GetEventIntegration": {
      "documentation": "<p>Returns information about the event integration.</p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/eventIntegrations/{Name}"
      },
      "input": {
        "shape": "GetEventIntegrationRequest"
      },
      "name": "GetEventIntegration",
      "output": {
        "shape": "GetEventIntegrationResponse"
      }
    },
    "ListDataIntegrationAssociations": {
      "documentation": "<p>Returns a paginated list of DataIntegration associations in the account.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataIntegrations/{Identifier}/associations"
      },
      "input": {
        "shape": "ListDataIntegrationAssociationsRequest"
      },
      "name": "ListDataIntegrationAssociations",
      "output": {
        "shape": "ListDataIntegrationAssociationsResponse"
      }
    },
    "ListDataIntegrations": {
      "documentation": "<p>Returns a paginated list of DataIntegrations in the account.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataIntegrations"
      },
      "input": {
        "shape": "ListDataIntegrationsRequest"
      },
      "name": "ListDataIntegrations",
      "output": {
        "shape": "ListDataIntegrationsResponse"
      }
    },
    "ListEventIntegrationAssociations": {
      "documentation": "<p>Returns a paginated list of event integration associations in the account. </p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/eventIntegrations/{Name}/associations"
      },
      "input": {
        "shape": "ListEventIntegrationAssociationsRequest"
      },
      "name": "ListEventIntegrationAssociations",
      "output": {
        "shape": "ListEventIntegrationAssociationsResponse"
      }
    },
    "ListEventIntegrations": {
      "documentation": "<p>Returns a paginated list of event integrations in the account.</p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/eventIntegrations"
      },
      "input": {
        "shape": "ListEventIntegrationsRequest"
      },
      "name": "ListEventIntegrations",
      "output": {
        "shape": "ListEventIntegrationsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags for the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds the specified tags to the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDataIntegration": {
      "documentation": "<p>Updates the description of a DataIntegration.</p> <note> <p>You cannot create a DataIntegration association for a DataIntegration that has been previously associated. Use a different DataIntegration, or recreate the DataIntegration using the <a href=\"https://docs.aws.amazon.com/appintegrations/latest/APIReference/API_CreateDataIntegration.html\">CreateDataIntegration</a> API.</p> </note>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/dataIntegrations/{Identifier}"
      },
      "input": {
        "shape": "UpdateDataIntegrationRequest"
      },
      "name": "UpdateDataIntegration",
      "output": {
        "shape": "UpdateDataIntegrationResponse"
      }
    },
    "UpdateEventIntegration": {
      "documentation": "<p>Updates the description of an event integration.</p>",
      "errors": [
        {
          "shape": "InternalServiceError"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/eventIntegrations/{Name}"
      },
      "input": {
        "shape": "UpdateEventIntegrationRequest"
      },
      "name": "UpdateEventIntegration",
      "output": {
        "shape": "UpdateEventIntegrationResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Arn": {
      "max": 2048,
      "min": 1,
      "pattern": "^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
      "type": "string"
    },
    "ClientAssociationMetadata": {
      "key": {
        "shape": "NonBlankString"
      },
      "type": "map",
      "value": {
        "shape": "NonBlankString"
      }
    },
    "ClientId": {
      "max": 255,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "CreateDataIntegrationRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "Description": {
          "documentation": "<p>A description of the DataIntegration.</p>",
          "shape": "Description"
        },
        "KmsKey": {
          "documentation": "<p>The KMS key for the DataIntegration.</p>",
          "shape": "NonBlankString"
        },
        "Name": {
          "documentation": "<p>The name of the DataIntegration.</p>",
          "shape": "Name"
        },
        "ScheduleConfig": {
          "documentation": "<p>The name of the data and how often it should be pulled from the source.</p>",
          "shape": "ScheduleConfiguration"
        },
        "SourceURI": {
          "documentation": "<p>The URI of the data source.</p>",
          "shape": "NonBlankString"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "CreateDataIntegrationResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN)</p>",
          "shape": "Arn"
        },
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "IdempotencyToken"
        },
        "Description": {
          "documentation": "<p>A description of the DataIntegration.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>A unique identifier.</p>",
          "shape": "UUID"
        },
        "KmsKey": {
          "documentation": "<p>The KMS key for the DataIntegration.</p>",
          "shape": "NonBlankString"
        },
        "Name": {
          "documentation": "<p>The name of the DataIntegration.</p>",
          "shape": "Name"
        },
        "ScheduleConfiguration": {
          "documentation": "<p>The name of the data and how often it should be pulled from the source.</p>",
          "shape": "ScheduleConfiguration"
        },
        "SourceURI": {
          "documentation": "<p>The URI of the data source.</p>",
          "shape": "NonBlankString"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateEventIntegrationRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "Description": {
          "documentation": "<p>The description of the event integration.</p>",
          "shape": "Description"
        },
        "EventBridgeBus": {
          "documentation": "<p>The EventBridge bus.</p>",
          "shape": "EventBridgeBus"
        },
        "EventFilter": {
          "documentation": "<p>The event filter.</p>",
          "shape": "EventFilter"
        },
        "Name": {
          "documentation": "<p>The name of the event integration.</p>",
          "shape": "Name"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "Name",
        "EventFilter",
        "EventBridgeBus"
      ],
      "type": "structure"
    },
    "CreateEventIntegrationResponse": {
      "members": {
        "EventIntegrationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the event integration. </p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "DataIntegrationAssociationSummary": {
      "documentation": "<p>Summary information about the DataIntegration association.</p>",
      "members": {
        "ClientId": {
          "documentation": "<p>The identifier for teh client that is associated with the DataIntegration association.</p>",
          "shape": "ClientId"
        },
        "DataIntegrationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN)of the DataIntegration.</p>",
          "shape": "Arn"
        },
        "DataIntegrationAssociationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the DataIntegration association.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "DataIntegrationAssociationsList": {
      "max": 50,
      "member": {
        "shape": "DataIntegrationAssociationSummary"
      },
      "min": 1,
      "type": "list"
    },
    "DataIntegrationSummary": {
      "documentation": "<p>Summary information about the DataIntegration.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the DataIntegration.</p>",
          "shape": "Arn"
        },
        "Name": {
          "documentation": "<p>The name of the DataIntegration.</p>",
          "shape": "Name"
        },
        "SourceURI": {
          "documentation": "<p>The URI of the data source.</p>",
          "shape": "NonBlankString"
        }
      },
      "type": "structure"
    },
    "DataIntegrationsList": {
      "max": 50,
      "member": {
        "shape": "DataIntegrationSummary"
      },
      "min": 1,
      "type": "list"
    },
    "DeleteDataIntegrationRequest": {
      "members": {
        "DataIntegrationIdentifier": {
          "documentation": "<p>A unique identifier for the DataIntegration.</p>",
          "location": "uri",
          "locationName": "Identifier",
          "shape": "Identifier"
        }
      },
      "required": [
        "DataIntegrationIdentifier"
      ],
      "type": "structure"
    },
    "DeleteDataIntegrationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteEventIntegrationRequest": {
      "members": {
        "Name": {
          "documentation": "<p>The name of the event integration.</p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Name"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "DeleteEventIntegrationResponse": {
      "members": {},
      "type": "structure"
    },
    "Description": {
      "max": 1000,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "DuplicateResourceException": {
      "documentation": "<p>A resource with the specified name already exists.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "EventBridgeBus": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
      "type": "string"
    },
    "EventBridgeRuleName": {
      "max": 2048,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
      "type": "string"
    },
    "EventFilter": {
      "documentation": "<p>The event filter.</p>",
      "members": {
        "Source": {
          "documentation": "<p>The source of the events.</p>",
          "shape": "Source"
        }
      },
      "required": [
        "Source"
      ],
      "type": "structure"
    },
    "EventIntegration": {
      "documentation": "<p>The event integration.</p>",
      "members": {
        "Description": {
          "documentation": "<p>The event integration description.</p>",
          "shape": "Description"
        },
        "EventBridgeBus": {
          "documentation": "<p>The Amazon EventBridge bus for the event integration.</p>",
          "shape": "EventBridgeBus"
        },
        "EventFilter": {
          "documentation": "<p>The event integration filter.</p>",
          "shape": "EventFilter"
        },
        "EventIntegrationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the event integration.</p>",
          "shape": "Arn"
        },
        "Name": {
          "documentation": "<p>The name of the event integration.</p>",
          "shape": "Name"
        },
        "Tags": {
          "documentation": "<p>The tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "EventIntegrationAssociation": {
      "documentation": "<p>The event integration association.</p>",
      "members": {
        "ClientAssociationMetadata": {
          "documentation": "<p>The metadata associated with the client.</p>",
          "shape": "ClientAssociationMetadata"
        },
        "ClientId": {
          "documentation": "<p>The identifier for the client that is associated with the event integration.</p>",
          "shape": "ClientId"
        },
        "EventBridgeRuleName": {
          "documentation": "<p>The name of the EventBridge rule.</p>",
          "shape": "EventBridgeRuleName"
        },
        "EventIntegrationAssociationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the event integration association.</p>",
          "shape": "Arn"
        },
        "EventIntegrationAssociationId": {
          "documentation": "<p>The identifier for the event integration association.</p>",
          "shape": "UUID"
        },
        "EventIntegrationName": {
          "documentation": "<p>The name of the event integration.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "EventIntegrationAssociationsList": {
      "max": 50,
      "member": {
        "shape": "EventIntegrationAssociation"
      },
      "min": 1,
      "type": "list"
    },
    "EventIntegrationsList": {
      "max": 50,
      "member": {
        "shape": "EventIntegration"
      },
      "min": 1,
      "type": "list"
    },
    "GetDataIntegrationRequest": {
      "members": {
        "Identifier": {
          "documentation": "<p>A unique identifier.</p>",
          "location": "uri",
          "locationName": "Identifier",
          "shape": "Identifier"
        }
      },
      "required": [
        "Identifier"
      ],
      "type": "structure"
    },
    "GetDataIntegrationResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the DataIntegration.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>The KMS key for the DataIntegration.</p>",
          "shape": "Description"
        },
        "Id": {
          "documentation": "<p>A unique identifier.</p>",
          "shape": "UUID"
        },
        "KmsKey": {
          "documentation": "<p>The KMS key for the DataIntegration.</p>",
          "shape": "NonBlankString"
        },
        "Name": {
          "documentation": "<p>The name of the DataIntegration.</p>",
          "shape": "Name"
        },
        "ScheduleConfiguration": {
          "documentation": "<p>The name of the data and how often it should be pulled from the source.</p>",
          "shape": "ScheduleConfiguration"
        },
        "SourceURI": {
          "documentation": "<p>The URI of the data source.</p>",
          "shape": "NonBlankString"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "GetEventIntegrationRequest": {
      "members": {
        "Name": {
          "documentation": "<p>The name of the event integration. </p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Name"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "GetEventIntegrationResponse": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the event integration.</p>",
          "shape": "Description"
        },
        "EventBridgeBus": {
          "documentation": "<p>The EventBridge bus.</p>",
          "shape": "EventBridgeBus"
        },
        "EventFilter": {
          "documentation": "<p>The event filter.</p>",
          "shape": "EventFilter"
        },
        "EventIntegrationArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the event integration.</p>",
          "shape": "Arn"
        },
        "Name": {
          "documentation": "<p>The name of the event integration. </p>",
          "shape": "Name"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "IdempotencyToken": {
      "max": 2048,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "Identifier": {
      "max": 255,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "InternalServiceError": {
      "documentation": "<p>Request processing failed due to an error or failure with the service.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>The request is not valid. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ListDataIntegrationAssociationsRequest": {
      "members": {
        "DataIntegrationIdentifier": {
          "documentation": "<p>A unique identifier for the DataIntegration.</p>",
          "location": "uri",
          "locationName": "Identifier",
          "shape": "Identifier"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "DataIntegrationIdentifier"
      ],
      "type": "structure"
    },
    "ListDataIntegrationAssociationsResponse": {
      "members": {
        "DataIntegrationAssociations": {
          "documentation": "<p>The Amazon Resource Name (ARN) and unique ID of the DataIntegration association.</p>",
          "shape": "DataIntegrationAssociationsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDataIntegrationsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDataIntegrationsResponse": {
      "members": {
        "DataIntegrations": {
          "documentation": "<p>The DataIntegrations associated with this account.</p>",
          "shape": "DataIntegrationsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListEventIntegrationAssociationsRequest": {
      "members": {
        "EventIntegrationName": {
          "documentation": "<p>The name of the event integration. </p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Name"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "EventIntegrationName"
      ],
      "type": "structure"
    },
    "ListEventIntegrationAssociationsResponse": {
      "members": {
        "EventIntegrationAssociations": {
          "documentation": "<p>The event integration associations.</p>",
          "shape": "EventIntegrationAssociationsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListEventIntegrationsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListEventIntegrationsResponse": {
      "members": {
        "EventIntegrations": {
          "documentation": "<p>The event integrations.</p>",
          "shape": "EventIntegrationsList"
        },
        "NextToken": {
          "documentation": "<p>If there are additional results, this is the token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource. </p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>Information about the tags.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "type": "string"
    },
    "Name": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
      "type": "string"
    },
    "NextToken": {
      "max": 1000,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "NonBlankString": {
      "max": 255,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "Object": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource was not found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ResourceQuotaExceededException": {
      "documentation": "<p>The allowed quota for the resource has been exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Schedule": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\/\\._\\-]+$",
      "type": "string"
    },
    "ScheduleConfiguration": {
      "documentation": "<p>The name of the data and how often it should be pulled from the source.</p>",
      "members": {
        "FirstExecutionFrom": {
          "documentation": "<p>The start date for objects to import in the first flow run.</p>",
          "shape": "NonBlankString"
        },
        "Object": {
          "documentation": "<p>The name of the object to pull from the data source.</p>",
          "shape": "Object"
        },
        "ScheduleExpression": {
          "documentation": "<p>How often the data should be pulled from data source.</p>",
          "shape": "Schedule"
        }
      },
      "type": "structure"
    },
    "Source": {
      "max": 256,
      "min": 1,
      "pattern": "^aws\\.partner\\/.*$",
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 200,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 200,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>One or more tags. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The throttling limit has been exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "UUID": {
      "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tagKeys": {
          "documentation": "<p>The tag keys.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateDataIntegrationRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the DataIntegration.</p>",
          "shape": "Description"
        },
        "Identifier": {
          "documentation": "<p>A unique identifier for the DataIntegration.</p>",
          "location": "uri",
          "locationName": "Identifier",
          "shape": "Identifier"
        },
        "Name": {
          "documentation": "<p>The name of the DataIntegration.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "Identifier"
      ],
      "type": "structure"
    },
    "UpdateDataIntegrationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateEventIntegrationRequest": {
      "members": {
        "Description": {
          "documentation": "<p>The description of the event inegration.</p>",
          "shape": "Description"
        },
        "Name": {
          "documentation": "<p>The name of the event integration.</p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Name"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "UpdateEventIntegrationResponse": {
      "members": {},
      "type": "structure"
    }
  },
  "version": "2.0"
}
