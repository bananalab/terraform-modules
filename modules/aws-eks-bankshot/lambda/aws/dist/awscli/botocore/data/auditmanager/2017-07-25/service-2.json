{
  "documentation": "<p>Welcome to the Audit Manager API reference. This guide is for developers who need detailed information about the Audit Manager API operations, data types, and errors. </p> <p>Audit Manager is a service that provides automated evidence collection so that you can continually audit your Amazon Web Services usage. You can use it to assess the effectiveness of your controls, manage risk, and simplify compliance.</p> <p>Audit Manager provides prebuilt frameworks that structure and automate assessments for a given compliance standard. Frameworks include a prebuilt collection of controls with descriptions and testing procedures. These controls are grouped according to the requirements of the specified compliance standard or regulation. You can also customize frameworks and controls to support internal audits with specific requirements. </p> <p>Use the following links to get started with the Audit Manager API:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Operations.html\">Actions</a>: An alphabetical list of all Audit Manager API operations.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_Types.html\">Data types</a>: An alphabetical list of all Audit Manager data types.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonParameters.html\">Common parameters</a>: Parameters that all Query operations can use.</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/CommonErrors.html\">Common errors</a>: Client and server errors that all operations can return.</p> </li> </ul> <p>If you're new to Audit Manager, we recommend that you review the <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/what-is.html\"> Audit Manager User Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2017-07-25",
    "endpointPrefix": "auditmanager",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS Audit Manager",
    "serviceId": "AuditManager",
    "signatureVersion": "v4",
    "signingName": "auditmanager",
    "uid": "auditmanager-2017-07-25"
  },
  "operations": {
    "AssociateAssessmentReportEvidenceFolder": {
      "documentation": "<p> Associates an evidence folder to an assessment report in a Audit Manager assessment. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/associateToAssessmentReport"
      },
      "input": {
        "shape": "AssociateAssessmentReportEvidenceFolderRequest"
      },
      "name": "AssociateAssessmentReportEvidenceFolder",
      "output": {
        "shape": "AssociateAssessmentReportEvidenceFolderResponse"
      }
    },
    "BatchAssociateAssessmentReportEvidence": {
      "documentation": "<p> Associates a list of evidence to an assessment report in an Audit Manager assessment. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/batchAssociateToAssessmentReport"
      },
      "input": {
        "shape": "BatchAssociateAssessmentReportEvidenceRequest"
      },
      "name": "BatchAssociateAssessmentReportEvidence",
      "output": {
        "shape": "BatchAssociateAssessmentReportEvidenceResponse"
      }
    },
    "BatchCreateDelegationByAssessment": {
      "documentation": "<p> Creates a batch of delegations for an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessments/{assessmentId}/delegations"
      },
      "input": {
        "shape": "BatchCreateDelegationByAssessmentRequest"
      },
      "name": "BatchCreateDelegationByAssessment",
      "output": {
        "shape": "BatchCreateDelegationByAssessmentResponse"
      }
    },
    "BatchDeleteDelegationByAssessment": {
      "documentation": "<p> Deletes a batch of delegations for an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/delegations"
      },
      "input": {
        "shape": "BatchDeleteDelegationByAssessmentRequest"
      },
      "name": "BatchDeleteDelegationByAssessment",
      "output": {
        "shape": "BatchDeleteDelegationByAssessmentResponse"
      }
    },
    "BatchDisassociateAssessmentReportEvidence": {
      "documentation": "<p> Disassociates a list of evidence from an assessment report in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/batchDisassociateFromAssessmentReport"
      },
      "input": {
        "shape": "BatchDisassociateAssessmentReportEvidenceRequest"
      },
      "name": "BatchDisassociateAssessmentReportEvidence",
      "output": {
        "shape": "BatchDisassociateAssessmentReportEvidenceResponse"
      }
    },
    "BatchImportEvidenceToAssessmentControl": {
      "documentation": "<p> Uploads one or more pieces of evidence to a control in an Audit Manager assessment. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}/evidence"
      },
      "input": {
        "shape": "BatchImportEvidenceToAssessmentControlRequest"
      },
      "name": "BatchImportEvidenceToAssessmentControl",
      "output": {
        "shape": "BatchImportEvidenceToAssessmentControlResponse"
      }
    },
    "CreateAssessment": {
      "documentation": "<p> Creates an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessments"
      },
      "input": {
        "shape": "CreateAssessmentRequest"
      },
      "name": "CreateAssessment",
      "output": {
        "shape": "CreateAssessmentResponse"
      }
    },
    "CreateAssessmentFramework": {
      "documentation": "<p> Creates a custom framework in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessmentFrameworks"
      },
      "input": {
        "shape": "CreateAssessmentFrameworkRequest"
      },
      "name": "CreateAssessmentFramework",
      "output": {
        "shape": "CreateAssessmentFrameworkResponse"
      }
    },
    "CreateAssessmentReport": {
      "documentation": "<p> Creates an assessment report for the specified assessment. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessments/{assessmentId}/reports"
      },
      "input": {
        "shape": "CreateAssessmentReportRequest"
      },
      "name": "CreateAssessmentReport",
      "output": {
        "shape": "CreateAssessmentReportResponse"
      }
    },
    "CreateControl": {
      "documentation": "<p> Creates a new custom control in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/controls"
      },
      "input": {
        "shape": "CreateControlRequest"
      },
      "name": "CreateControl",
      "output": {
        "shape": "CreateControlResponse"
      }
    },
    "DeleteAssessment": {
      "documentation": "<p> Deletes an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/assessments/{assessmentId}"
      },
      "input": {
        "shape": "DeleteAssessmentRequest"
      },
      "name": "DeleteAssessment",
      "output": {
        "shape": "DeleteAssessmentResponse"
      }
    },
    "DeleteAssessmentFramework": {
      "documentation": "<p> Deletes a custom framework in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/assessmentFrameworks/{frameworkId}"
      },
      "input": {
        "shape": "DeleteAssessmentFrameworkRequest"
      },
      "name": "DeleteAssessmentFramework",
      "output": {
        "shape": "DeleteAssessmentFrameworkResponse"
      }
    },
    "DeleteAssessmentFrameworkShare": {
      "documentation": "<p> Deletes a share request for a custom framework in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/assessmentFrameworkShareRequests/{requestId}"
      },
      "input": {
        "shape": "DeleteAssessmentFrameworkShareRequest"
      },
      "name": "DeleteAssessmentFrameworkShare",
      "output": {
        "shape": "DeleteAssessmentFrameworkShareResponse"
      }
    },
    "DeleteAssessmentReport": {
      "documentation": "<p>Deletes an assessment report in Audit Manager. </p> <p>When you run the <code>DeleteAssessmentReport</code> operation, Audit Manager attempts to delete the following data:</p> <ol> <li> <p>The specified assessment report that\u2019s stored in your S3 bucket</p> </li> <li> <p>The associated metadata that\u2019s stored in Audit Manager</p> </li> </ol> <p>If Audit Manager can\u2019t access the assessment report in your S3 bucket, the report isn\u2019t deleted. In this event, the <code>DeleteAssessmentReport</code> operation doesn\u2019t fail. Instead, it proceeds to delete the associated metadata only. You must then delete the assessment report from the S3 bucket yourself. </p> <p>This scenario happens when Audit Manager receives a <code>403 (Forbidden)</code> or <code>404 (Not Found)</code> error from Amazon S3. To avoid this, make sure that your S3 bucket is available, and that you configured the correct permissions for Audit Manager to delete resources in your S3 bucket. For an example permissions policy that you can use, see <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/security_iam_id-based-policy-examples.html#full-administrator-access-assessment-report-destination\">Assessment report destination permissions</a> in the <i>Audit Manager User Guide</i>. For information about the issues that could cause a <code>403 (Forbidden)</code> or <code>404 (Not Found</code>) error from Amazon S3, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html#ErrorCodeList\">List of Error Codes</a> in the <i>Amazon Simple Storage Service API Reference</i>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/assessments/{assessmentId}/reports/{assessmentReportId}"
      },
      "input": {
        "shape": "DeleteAssessmentReportRequest"
      },
      "name": "DeleteAssessmentReport",
      "output": {
        "shape": "DeleteAssessmentReportResponse"
      }
    },
    "DeleteControl": {
      "documentation": "<p> Deletes a custom control in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/controls/{controlId}"
      },
      "input": {
        "shape": "DeleteControlRequest"
      },
      "name": "DeleteControl",
      "output": {
        "shape": "DeleteControlResponse"
      }
    },
    "DeregisterAccount": {
      "documentation": "<p> Deregisters an account in Audit Manager. </p> <note> <p>When you deregister your account from Audit Manager, your data isn\u2019t deleted. If you want to delete your resource data, you must perform that task separately before you deregister your account. Either, you can do this in the Audit Manager console. Or, you can use one of the delete API operations that are provided by Audit Manager. </p> <p>To delete your Audit Manager resource data, see the following instructions: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessment.html\">DeleteAssessment</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-assessment.html\">Deleting an assessment</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFramework.html\">DeleteAssessmentFramework</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-custom-framework.html\">Deleting a custom framework</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFrameworkShare.html\">DeleteAssessmentFrameworkShare</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/deleting-shared-framework-requests.html\">Deleting a share request</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentReport.html\">DeleteAssessmentReport</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#delete-assessment-report-steps\">Deleting an assessment report</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteControl.html\">DeleteControl</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-controls.html\">Deleting a custom control</a> in the <i>Audit Manager User Guide</i>)</p> </li> </ul> <p>At this time, Audit Manager doesn't provide an option to delete evidence. All available delete operations are listed above.</p> </note>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/account/deregisterAccount"
      },
      "input": {
        "shape": "DeregisterAccountRequest"
      },
      "name": "DeregisterAccount",
      "output": {
        "shape": "DeregisterAccountResponse"
      }
    },
    "DeregisterOrganizationAdminAccount": {
      "documentation": "<p>Removes the specified Amazon Web Services account as a delegated administrator for Audit Manager. </p> <important> <p>When you remove a delegated administrator from your Audit Manager settings, you continue to have access to the evidence that you previously collected under that account. This is also the case when you deregister a delegated administrator from Organizations. However, Audit Manager will stop collecting and attaching evidence to that delegated administrator account moving forward.</p> </important> <note> <p>When you deregister a delegated administrator account for Audit Manager, the data for that account isn\u2019t deleted. If you want to delete resource data for a delegated administrator account, you must perform that task separately before you deregister the account. Either, you can do this in the Audit Manager console. Or, you can use one of the delete API operations that are provided by Audit Manager. </p> <p>To delete your Audit Manager resource data, see the following instructions: </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessment.html\">DeleteAssessment</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-assessment.html\">Deleting an assessment</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFramework.html\">DeleteAssessmentFramework</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-custom-framework.html\">Deleting a custom framework</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentFrameworkShare.html\">DeleteAssessmentFrameworkShare</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/deleting-shared-framework-requests.html\">Deleting a share request</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteAssessmentReport.html\">DeleteAssessmentReport</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/generate-assessment-report.html#delete-assessment-report-steps\">Deleting an assessment report</a> in the <i>Audit Manager User Guide</i>)</p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/APIReference/API_DeleteControl.html\">DeleteControl</a> (see also: <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/delete-controls.html\">Deleting a custom control</a> in the <i>Audit Manager User Guide</i>)</p> </li> </ul> <p>At this time, Audit Manager doesn't provide an option to delete evidence. All available delete operations are listed above.</p> </note>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/account/deregisterOrganizationAdminAccount"
      },
      "input": {
        "shape": "DeregisterOrganizationAdminAccountRequest"
      },
      "name": "DeregisterOrganizationAdminAccount",
      "output": {
        "shape": "DeregisterOrganizationAdminAccountResponse"
      }
    },
    "DisassociateAssessmentReportEvidenceFolder": {
      "documentation": "<p> Disassociates an evidence folder from the specified assessment report in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/disassociateFromAssessmentReport"
      },
      "input": {
        "shape": "DisassociateAssessmentReportEvidenceFolderRequest"
      },
      "name": "DisassociateAssessmentReportEvidenceFolder",
      "output": {
        "shape": "DisassociateAssessmentReportEvidenceFolderResponse"
      }
    },
    "GetAccountStatus": {
      "documentation": "<p> Returns the registration status of an account in Audit Manager. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/account/status"
      },
      "input": {
        "shape": "GetAccountStatusRequest"
      },
      "name": "GetAccountStatus",
      "output": {
        "shape": "GetAccountStatusResponse"
      }
    },
    "GetAssessment": {
      "documentation": "<p>Returns an assessment from Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}"
      },
      "input": {
        "shape": "GetAssessmentRequest"
      },
      "name": "GetAssessment",
      "output": {
        "shape": "GetAssessmentResponse"
      }
    },
    "GetAssessmentFramework": {
      "documentation": "<p>Returns a framework from Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessmentFrameworks/{frameworkId}"
      },
      "input": {
        "shape": "GetAssessmentFrameworkRequest"
      },
      "name": "GetAssessmentFramework",
      "output": {
        "shape": "GetAssessmentFrameworkResponse"
      }
    },
    "GetAssessmentReportUrl": {
      "documentation": "<p> Returns the URL of an assessment report in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/reports/{assessmentReportId}/url"
      },
      "input": {
        "shape": "GetAssessmentReportUrlRequest"
      },
      "name": "GetAssessmentReportUrl",
      "output": {
        "shape": "GetAssessmentReportUrlResponse"
      }
    },
    "GetChangeLogs": {
      "documentation": "<p> Returns a list of changelogs from Audit Manager. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/changelogs"
      },
      "input": {
        "shape": "GetChangeLogsRequest"
      },
      "name": "GetChangeLogs",
      "output": {
        "shape": "GetChangeLogsResponse"
      }
    },
    "GetControl": {
      "documentation": "<p> Returns a control from Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/controls/{controlId}"
      },
      "input": {
        "shape": "GetControlRequest"
      },
      "name": "GetControl",
      "output": {
        "shape": "GetControlResponse"
      }
    },
    "GetDelegations": {
      "documentation": "<p> Returns a list of delegations from an audit owner to a delegate. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/delegations"
      },
      "input": {
        "shape": "GetDelegationsRequest"
      },
      "name": "GetDelegations",
      "output": {
        "shape": "GetDelegationsResponse"
      }
    },
    "GetEvidence": {
      "documentation": "<p> Returns evidence from Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence/{evidenceId}"
      },
      "input": {
        "shape": "GetEvidenceRequest"
      },
      "name": "GetEvidence",
      "output": {
        "shape": "GetEvidenceResponse"
      }
    },
    "GetEvidenceByEvidenceFolder": {
      "documentation": "<p> Returns all evidence from a specified evidence folder in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}/evidence"
      },
      "input": {
        "shape": "GetEvidenceByEvidenceFolderRequest"
      },
      "name": "GetEvidenceByEvidenceFolder",
      "output": {
        "shape": "GetEvidenceByEvidenceFolderResponse"
      }
    },
    "GetEvidenceFolder": {
      "documentation": "<p> Returns an evidence folder from the specified assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/evidenceFolders/{evidenceFolderId}"
      },
      "input": {
        "shape": "GetEvidenceFolderRequest"
      },
      "name": "GetEvidenceFolder",
      "output": {
        "shape": "GetEvidenceFolderResponse"
      }
    },
    "GetEvidenceFoldersByAssessment": {
      "documentation": "<p> Returns the evidence folders from a specified assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/evidenceFolders"
      },
      "input": {
        "shape": "GetEvidenceFoldersByAssessmentRequest"
      },
      "name": "GetEvidenceFoldersByAssessment",
      "output": {
        "shape": "GetEvidenceFoldersByAssessmentResponse"
      }
    },
    "GetEvidenceFoldersByAssessmentControl": {
      "documentation": "<p> Returns a list of evidence folders that are associated with a specified control of an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments/{assessmentId}/evidenceFolders-by-assessment-control/{controlSetId}/{controlId}"
      },
      "input": {
        "shape": "GetEvidenceFoldersByAssessmentControlRequest"
      },
      "name": "GetEvidenceFoldersByAssessmentControl",
      "output": {
        "shape": "GetEvidenceFoldersByAssessmentControlResponse"
      }
    },
    "GetInsights": {
      "documentation": "<p>Gets the latest analytics data for all your current active assessments. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights"
      },
      "input": {
        "shape": "GetInsightsRequest"
      },
      "name": "GetInsights",
      "output": {
        "shape": "GetInsightsResponse"
      }
    },
    "GetInsightsByAssessment": {
      "documentation": "<p>Gets the latest analytics data for a specific active assessment. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights/assessments/{assessmentId}"
      },
      "input": {
        "shape": "GetInsightsByAssessmentRequest"
      },
      "name": "GetInsightsByAssessment",
      "output": {
        "shape": "GetInsightsByAssessmentResponse"
      }
    },
    "GetOrganizationAdminAccount": {
      "documentation": "<p> Returns the name of the delegated Amazon Web Services administrator account for the organization. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/account/organizationAdminAccount"
      },
      "input": {
        "shape": "GetOrganizationAdminAccountRequest"
      },
      "name": "GetOrganizationAdminAccount",
      "output": {
        "shape": "GetOrganizationAdminAccountResponse"
      }
    },
    "GetServicesInScope": {
      "documentation": "<p> Returns a list of the in-scope Amazon Web Services for the specified assessment. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/services"
      },
      "input": {
        "shape": "GetServicesInScopeRequest"
      },
      "name": "GetServicesInScope",
      "output": {
        "shape": "GetServicesInScopeResponse"
      }
    },
    "GetSettings": {
      "documentation": "<p> Returns the settings for the specified Amazon Web Services account. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/settings/{attribute}"
      },
      "input": {
        "shape": "GetSettingsRequest"
      },
      "name": "GetSettings",
      "output": {
        "shape": "GetSettingsResponse"
      }
    },
    "ListAssessmentControlInsightsByControlDomain": {
      "documentation": "<p>Lists the latest analytics data for controls within a specific control domain and a specific active assessment.</p> <note> <p>Control insights are listed only if the control belongs to the control domain and assessment that was specified. Moreover, the control must have collected evidence on the <code>lastUpdated</code> date of <code>controlInsightsByAssessment</code>. If neither of these conditions are met, no data is listed for that control. </p> </note>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights/controls-by-assessment"
      },
      "input": {
        "shape": "ListAssessmentControlInsightsByControlDomainRequest"
      },
      "name": "ListAssessmentControlInsightsByControlDomain",
      "output": {
        "shape": "ListAssessmentControlInsightsByControlDomainResponse"
      }
    },
    "ListAssessmentFrameworkShareRequests": {
      "documentation": "<p> Returns a list of sent or received share requests for custom frameworks in Audit Manager. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessmentFrameworkShareRequests"
      },
      "input": {
        "shape": "ListAssessmentFrameworkShareRequestsRequest"
      },
      "name": "ListAssessmentFrameworkShareRequests",
      "output": {
        "shape": "ListAssessmentFrameworkShareRequestsResponse"
      }
    },
    "ListAssessmentFrameworks": {
      "documentation": "<p> Returns a list of the frameworks that are available in the Audit Manager framework library. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessmentFrameworks"
      },
      "input": {
        "shape": "ListAssessmentFrameworksRequest"
      },
      "name": "ListAssessmentFrameworks",
      "output": {
        "shape": "ListAssessmentFrameworksResponse"
      }
    },
    "ListAssessmentReports": {
      "documentation": "<p> Returns a list of assessment reports created in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessmentReports"
      },
      "input": {
        "shape": "ListAssessmentReportsRequest"
      },
      "name": "ListAssessmentReports",
      "output": {
        "shape": "ListAssessmentReportsResponse"
      }
    },
    "ListAssessments": {
      "documentation": "<p> Returns a list of current and past assessments from Audit Manager. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/assessments"
      },
      "input": {
        "shape": "ListAssessmentsRequest"
      },
      "name": "ListAssessments",
      "output": {
        "shape": "ListAssessmentsResponse"
      }
    },
    "ListControlDomainInsights": {
      "documentation": "<p>Lists the latest analytics data for control domains across all of your active assessments. </p> <note> <p>A control domain is listed only if at least one of the controls within that domain collected evidence on the <code>lastUpdated</code> date of <code>controlDomainInsights</code>. If this condition isn\u2019t met, no data is listed for that control domain.</p> </note>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights/control-domains"
      },
      "input": {
        "shape": "ListControlDomainInsightsRequest"
      },
      "name": "ListControlDomainInsights",
      "output": {
        "shape": "ListControlDomainInsightsResponse"
      }
    },
    "ListControlDomainInsightsByAssessment": {
      "documentation": "<p>Lists analytics data for control domains within a specified active assessment.</p> <note> <p>A control domain is listed only if at least one of the controls within that domain collected evidence on the <code>lastUpdated</code> date of <code>controlDomainInsights</code>. If this condition isn\u2019t met, no data is listed for that domain.</p> </note>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights/control-domains-by-assessment"
      },
      "input": {
        "shape": "ListControlDomainInsightsByAssessmentRequest"
      },
      "name": "ListControlDomainInsightsByAssessment",
      "output": {
        "shape": "ListControlDomainInsightsByAssessmentResponse"
      }
    },
    "ListControlInsightsByControlDomain": {
      "documentation": "<p>Lists the latest analytics data for controls within a specific control domain across all active assessments.</p> <note> <p>Control insights are listed only if the control belongs to the control domain that was specified and the control collected evidence on the <code>lastUpdated</code> date of <code>controlInsightsMetadata</code>. If neither of these conditions are met, no data is listed for that control. </p> </note>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/insights/controls"
      },
      "input": {
        "shape": "ListControlInsightsByControlDomainRequest"
      },
      "name": "ListControlInsightsByControlDomain",
      "output": {
        "shape": "ListControlInsightsByControlDomainResponse"
      }
    },
    "ListControls": {
      "documentation": "<p> Returns a list of controls from Audit Manager. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/controls"
      },
      "input": {
        "shape": "ListControlsRequest"
      },
      "name": "ListControls",
      "output": {
        "shape": "ListControlsResponse"
      }
    },
    "ListKeywordsForDataSource": {
      "documentation": "<p> Returns a list of keywords that are pre-mapped to the specified control data source. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataSourceKeywords"
      },
      "input": {
        "shape": "ListKeywordsForDataSourceRequest"
      },
      "name": "ListKeywordsForDataSource",
      "output": {
        "shape": "ListKeywordsForDataSourceResponse"
      }
    },
    "ListNotifications": {
      "documentation": "<p> Returns a list of all Audit Manager notifications. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/notifications"
      },
      "input": {
        "shape": "ListNotificationsRequest"
      },
      "name": "ListNotifications",
      "output": {
        "shape": "ListNotificationsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p> Returns a list of tags for the specified resource in Audit Manager. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "RegisterAccount": {
      "documentation": "<p> Enables Audit Manager for the specified Amazon Web Services account. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/account/registerAccount"
      },
      "input": {
        "shape": "RegisterAccountRequest"
      },
      "name": "RegisterAccount",
      "output": {
        "shape": "RegisterAccountResponse"
      }
    },
    "RegisterOrganizationAdminAccount": {
      "documentation": "<p> Enables an Amazon Web Services account within the organization as the delegated administrator for Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/account/registerOrganizationAdminAccount"
      },
      "input": {
        "shape": "RegisterOrganizationAdminAccountRequest"
      },
      "name": "RegisterOrganizationAdminAccount",
      "output": {
        "shape": "RegisterOrganizationAdminAccountResponse"
      }
    },
    "StartAssessmentFrameworkShare": {
      "documentation": "<p> Creates a share request for a custom framework in Audit Manager. </p> <p>The share request specifies a recipient and notifies them that a custom framework is available. Recipients have 120 days to accept or decline the request. If no action is taken, the share request expires.</p> <p>When you create a share request, Audit Manager stores a snapshot of your custom framework in the US East (N. Virginia) Amazon Web Services Region. Audit Manager also stores a backup of the same snapshot in the US West (Oregon) Amazon Web Services Region.</p> <p>Audit Manager deletes the snapshot and the backup snapshot when one of the following events occurs:</p> <ul> <li> <p>The sender revokes the share request.</p> </li> <li> <p>The recipient declines the share request.</p> </li> <li> <p>The recipient encounters an error and doesn't successfully accept the share request.</p> </li> <li> <p>The share request expires before the recipient responds to the request.</p> </li> </ul> <p>When a sender <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/framework-sharing.html#framework-sharing-resend\">resends a share request</a>, the snapshot is replaced with an updated version that corresponds with the latest version of the custom framework. </p> <p>When a recipient accepts a share request, the snapshot is replicated into their Amazon Web Services account under the Amazon Web Services Region that was specified in the share request. </p> <important> <p>When you invoke the <code>StartAssessmentFrameworkShare</code> API, you are about to share a custom framework with another Amazon Web Services account. You may not share a custom framework that is derived from a standard framework if the standard framework is designated as not eligible for sharing by Amazon Web Services, unless you have obtained permission to do so from the owner of the standard framework. To learn more about which standard frameworks are eligible for sharing, see <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/share-custom-framework-concepts-and-terminology.html#eligibility\">Framework sharing eligibility</a> in the <i>Audit Manager User Guide</i>.</p> </important>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessmentFrameworks/{frameworkId}/shareRequests"
      },
      "input": {
        "shape": "StartAssessmentFrameworkShareRequest"
      },
      "name": "StartAssessmentFrameworkShare",
      "output": {
        "shape": "StartAssessmentFrameworkShareResponse"
      }
    },
    "TagResource": {
      "documentation": "<p> Tags the specified resource in Audit Manager. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p> Removes a tag from a resource in Audit Manager. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAssessment": {
      "documentation": "<p> Edits an Audit Manager assessment. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}"
      },
      "input": {
        "shape": "UpdateAssessmentRequest"
      },
      "name": "UpdateAssessment",
      "output": {
        "shape": "UpdateAssessmentResponse"
      }
    },
    "UpdateAssessmentControl": {
      "documentation": "<p> Updates a control within an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/controls/{controlId}"
      },
      "input": {
        "shape": "UpdateAssessmentControlRequest"
      },
      "name": "UpdateAssessmentControl",
      "output": {
        "shape": "UpdateAssessmentControlResponse"
      }
    },
    "UpdateAssessmentControlSetStatus": {
      "documentation": "<p> Updates the status of a control set in an Audit Manager assessment. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/controlSets/{controlSetId}/status"
      },
      "input": {
        "shape": "UpdateAssessmentControlSetStatusRequest"
      },
      "name": "UpdateAssessmentControlSetStatus",
      "output": {
        "shape": "UpdateAssessmentControlSetStatusResponse"
      }
    },
    "UpdateAssessmentFramework": {
      "documentation": "<p> Updates a custom framework in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessmentFrameworks/{frameworkId}"
      },
      "input": {
        "shape": "UpdateAssessmentFrameworkRequest"
      },
      "name": "UpdateAssessmentFramework",
      "output": {
        "shape": "UpdateAssessmentFrameworkResponse"
      }
    },
    "UpdateAssessmentFrameworkShare": {
      "documentation": "<p> Updates a share request for a custom framework in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessmentFrameworkShareRequests/{requestId}"
      },
      "input": {
        "shape": "UpdateAssessmentFrameworkShareRequest"
      },
      "name": "UpdateAssessmentFrameworkShare",
      "output": {
        "shape": "UpdateAssessmentFrameworkShareResponse"
      }
    },
    "UpdateAssessmentStatus": {
      "documentation": "<p> Updates the status of an assessment in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/assessments/{assessmentId}/status"
      },
      "input": {
        "shape": "UpdateAssessmentStatusRequest"
      },
      "name": "UpdateAssessmentStatus",
      "output": {
        "shape": "UpdateAssessmentStatusResponse"
      }
    },
    "UpdateControl": {
      "documentation": "<p> Updates a custom control in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/controls/{controlId}"
      },
      "input": {
        "shape": "UpdateControlRequest"
      },
      "name": "UpdateControl",
      "output": {
        "shape": "UpdateControlResponse"
      }
    },
    "UpdateSettings": {
      "documentation": "<p> Updates Audit Manager settings for the current user account. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/settings"
      },
      "input": {
        "shape": "UpdateSettingsRequest"
      },
      "name": "UpdateSettings",
      "output": {
        "shape": "UpdateSettingsResponse"
      }
    },
    "ValidateAssessmentReportIntegrity": {
      "documentation": "<p> Validates the integrity of an assessment report in Audit Manager. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/assessmentReports/integrity"
      },
      "input": {
        "shape": "ValidateAssessmentReportIntegrityRequest"
      },
      "name": "ValidateAssessmentReportIntegrity",
      "output": {
        "shape": "ValidateAssessmentReportIntegrityResponse"
      }
    }
  },
  "shapes": {
    "AWSAccount": {
      "documentation": "<p> The wrapper of Amazon Web Services account details, such as account ID or email address. </p>",
      "members": {
        "emailAddress": {
          "documentation": "<p> The email address that's associated with the Amazon Web Services account. </p>",
          "shape": "EmailAddress"
        },
        "id": {
          "documentation": "<p> The identifier for the Amazon Web Services account. </p>",
          "shape": "AccountId"
        },
        "name": {
          "documentation": "<p> The name of the Amazon Web Services account. </p>",
          "shape": "AccountName"
        }
      },
      "type": "structure"
    },
    "AWSAccounts": {
      "member": {
        "shape": "AWSAccount"
      },
      "type": "list"
    },
    "AWSService": {
      "documentation": "<p> An Amazon Web Service such as Amazon S3 or CloudTrail. </p>",
      "members": {
        "serviceName": {
          "documentation": "<p> The name of the Amazon Web Service. </p>",
          "shape": "AWSServiceName"
        }
      },
      "type": "structure"
    },
    "AWSServiceName": {
      "max": 40,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-\\s().]+$",
      "type": "string"
    },
    "AWSServices": {
      "member": {
        "shape": "AWSService"
      },
      "type": "list"
    },
    "AccessDeniedException": {
      "documentation": "<p> Your account isn't registered with Audit Manager. Check the delegated administrator setup on the Audit Manager settings page, and try again. </p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "AccountId": {
      "max": 12,
      "min": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AccountName": {
      "max": 50,
      "min": 1,
      "pattern": "^[\\u0020-\\u007E]+$",
      "type": "string"
    },
    "AccountStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "PENDING_ACTIVATION"
      ],
      "type": "string"
    },
    "ActionEnum": {
      "enum": [
        "CREATE",
        "UPDATE_METADATA",
        "ACTIVE",
        "INACTIVE",
        "DELETE",
        "UNDER_REVIEW",
        "REVIEWED",
        "IMPORT_EVIDENCE"
      ],
      "type": "string"
    },
    "ActionPlanInstructions": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ActionPlanTitle": {
      "max": 300,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Assessment": {
      "documentation": "<p> An entity that defines the scope of audit evidence collected by Audit Manager. An Audit Manager assessment is an implementation of an Audit Manager framework. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the assessment. </p>",
          "shape": "AuditManagerArn"
        },
        "awsAccount": {
          "documentation": "<p> The Amazon Web Services account that's associated with the assessment. </p>",
          "shape": "AWSAccount"
        },
        "framework": {
          "documentation": "<p> The framework that the assessment was created from. </p>",
          "shape": "AssessmentFramework"
        },
        "metadata": {
          "documentation": "<p> The metadata for the assessment. </p>",
          "shape": "AssessmentMetadata"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the assessment. </p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "AssessmentControl": {
      "documentation": "<p> The control entity that represents a standard control or a custom control in an Audit Manager assessment. </p>",
      "members": {
        "assessmentReportEvidenceCount": {
          "documentation": "<p> The amount of evidence in the assessment report. </p>",
          "shape": "Integer"
        },
        "comments": {
          "documentation": "<p> The list of comments that's attached to the control. </p>",
          "shape": "ControlComments"
        },
        "description": {
          "documentation": "<p> The description of the control. </p>",
          "shape": "ControlDescription"
        },
        "evidenceCount": {
          "documentation": "<p> The amount of evidence that's generated for the control. </p>",
          "shape": "Integer"
        },
        "evidenceSources": {
          "documentation": "<p> The list of data sources for the evidence. </p>",
          "shape": "EvidenceSources"
        },
        "id": {
          "documentation": "<p> The identifier for the control. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the control. </p>",
          "shape": "ControlName"
        },
        "response": {
          "documentation": "<p> The response of the control. </p>",
          "shape": "ControlResponse"
        },
        "status": {
          "documentation": "<p> The status of the control. </p>",
          "shape": "ControlStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentControlSet": {
      "documentation": "<p> Represents a set of controls in an Audit Manager assessment. </p>",
      "members": {
        "controls": {
          "documentation": "<p> The list of controls that's contained with the control set. </p>",
          "shape": "AssessmentControls"
        },
        "delegations": {
          "documentation": "<p> The delegations that are associated with the control set. </p>",
          "shape": "Delegations"
        },
        "description": {
          "documentation": "<p> The description for the control set. </p>",
          "shape": "NonEmptyString"
        },
        "id": {
          "documentation": "<p> The identifier of the control set in the assessment. This is the control set name in a plain string format. </p>",
          "shape": "ControlSetId"
        },
        "manualEvidenceCount": {
          "documentation": "<p> The total number of evidence objects that are uploaded manually to the control set. </p>",
          "shape": "Integer"
        },
        "roles": {
          "documentation": "<p> The roles that are associated with the control set. </p>",
          "shape": "Roles"
        },
        "status": {
          "documentation": "<p> Specifies the current status of the control set. </p>",
          "shape": "ControlSetStatus"
        },
        "systemEvidenceCount": {
          "documentation": "<p> The total number of evidence objects that are retrieved automatically for the control set. </p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "AssessmentControlSets": {
      "member": {
        "shape": "AssessmentControlSet"
      },
      "type": "list"
    },
    "AssessmentControls": {
      "member": {
        "shape": "AssessmentControl"
      },
      "type": "list"
    },
    "AssessmentDescription": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentEvidenceFolder": {
      "documentation": "<p> The folder where Audit Manager stores evidence for an assessment. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "shape": "UUID"
        },
        "assessmentReportSelectionCount": {
          "documentation": "<p> The total count of evidence that's included in the assessment report. </p>",
          "shape": "Integer"
        },
        "author": {
          "documentation": "<p> The name of the user who created the evidence folder. </p>",
          "shape": "String"
        },
        "controlId": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "shape": "UUID"
        },
        "controlName": {
          "documentation": "<p> The name of the control. </p>",
          "shape": "ControlName"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set. </p>",
          "shape": "ControlSetId"
        },
        "dataSource": {
          "documentation": "<p> The Amazon Web Service that the evidence was collected from. </p>",
          "shape": "String"
        },
        "date": {
          "documentation": "<p> The date when the first evidence was added to the evidence folder. </p>",
          "shape": "Timestamp"
        },
        "evidenceAwsServiceSourceCount": {
          "documentation": "<p> The total number of Amazon Web Services resources that were assessed to generate the evidence. </p>",
          "shape": "Integer"
        },
        "evidenceByTypeComplianceCheckCount": {
          "documentation": "<p> The number of evidence that falls under the compliance check category. This evidence is collected from Config or Security Hub. </p>",
          "shape": "Integer"
        },
        "evidenceByTypeComplianceCheckIssuesCount": {
          "documentation": "<p> The total number of issues that were reported directly from Security Hub, Config, or both. </p>",
          "shape": "Integer"
        },
        "evidenceByTypeConfigurationDataCount": {
          "documentation": "<p> The number of evidence that falls under the configuration data category. This evidence is collected from configuration snapshots of other Amazon Web Services such as Amazon EC2, Amazon S3, or IAM. </p>",
          "shape": "Integer"
        },
        "evidenceByTypeManualCount": {
          "documentation": "<p> The number of evidence that falls under the manual category. This evidence is imported manually. </p>",
          "shape": "Integer"
        },
        "evidenceByTypeUserActivityCount": {
          "documentation": "<p> The number of evidence that falls under the user activity category. This evidence is collected from CloudTrail logs. </p>",
          "shape": "Integer"
        },
        "evidenceResourcesIncludedCount": {
          "documentation": "<p> The amount of evidence that's included in the evidence folder. </p>",
          "shape": "Integer"
        },
        "id": {
          "documentation": "<p> The identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the evidence folder. </p>",
          "shape": "AssessmentEvidenceFolderName"
        },
        "totalEvidence": {
          "documentation": "<p> The total amount of evidence in the evidence folder. </p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "AssessmentEvidenceFolderName": {
      "max": 300,
      "min": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentEvidenceFolders": {
      "member": {
        "shape": "AssessmentEvidenceFolder"
      },
      "type": "list"
    },
    "AssessmentFramework": {
      "documentation": "<p> The file used to structure and automate Audit Manager assessments for a given compliance standard. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the framework. </p>",
          "shape": "AuditManagerArn"
        },
        "controlSets": {
          "documentation": "<p> The control sets that are associated with the framework. </p>",
          "shape": "AssessmentControlSets"
        },
        "id": {
          "documentation": "<p> The unique identifier for the framework. </p>",
          "shape": "UUID"
        },
        "metadata": {
          "shape": "FrameworkMetadata"
        }
      },
      "type": "structure"
    },
    "AssessmentFrameworkDescription": {
      "max": 200,
      "min": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentFrameworkMetadata": {
      "documentation": "<p> The metadata that's associated with a standard framework or a custom framework. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the framework. </p>",
          "shape": "AuditManagerArn"
        },
        "complianceType": {
          "documentation": "<p> The compliance type that the new custom framework supports, such as CIS or HIPAA. </p>",
          "shape": "ComplianceType"
        },
        "controlSetsCount": {
          "documentation": "<p> The number of control sets that are associated with the framework. </p>",
          "shape": "ControlSetsCount"
        },
        "controlsCount": {
          "documentation": "<p> The number of controls that are associated with the framework. </p>",
          "shape": "ControlsCount"
        },
        "createdAt": {
          "documentation": "<p> Specifies when the framework was created. </p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p> The description of the framework. </p>",
          "shape": "FrameworkDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the framework. </p>",
          "shape": "UUID"
        },
        "lastUpdatedAt": {
          "documentation": "<p> Specifies when the framework was most recently updated. </p>",
          "shape": "Timestamp"
        },
        "logo": {
          "documentation": "<p> The logo that's associated with the framework. </p>",
          "shape": "Filename"
        },
        "name": {
          "documentation": "<p> The name of the framework. </p>",
          "shape": "FrameworkName"
        },
        "type": {
          "documentation": "<p> The framework type, such as a standard framework or a custom framework. </p>",
          "shape": "FrameworkType"
        }
      },
      "type": "structure"
    },
    "AssessmentFrameworkShareRequest": {
      "documentation": "<p> Represents a share request for a custom framework in Audit Manager. </p>",
      "members": {
        "comment": {
          "documentation": "<p> An optional comment from the sender about the share request. </p>",
          "shape": "ShareRequestComment"
        },
        "complianceType": {
          "documentation": "<p>The compliance type that the shared custom framework supports, such as CIS or HIPAA.</p>",
          "shape": "ComplianceType"
        },
        "creationTime": {
          "documentation": "<p> The time when the share request was created. </p>",
          "shape": "Timestamp"
        },
        "customControlsCount": {
          "documentation": "<p>The number of custom controls that are part of the shared custom framework.</p>",
          "shape": "NullableInteger"
        },
        "destinationAccount": {
          "documentation": "<p> The Amazon Web Services account of the recipient. </p>",
          "shape": "AccountId"
        },
        "destinationRegion": {
          "documentation": "<p> The Amazon Web Services Region of the recipient. </p>",
          "shape": "Region"
        },
        "expirationTime": {
          "documentation": "<p> The time when the share request expires. </p>",
          "shape": "Timestamp"
        },
        "frameworkDescription": {
          "documentation": "<p>The description of the shared custom framework.</p>",
          "shape": "FrameworkDescription"
        },
        "frameworkId": {
          "documentation": "<p>The unique identifier for the shared custom framework. </p>",
          "shape": "UUID"
        },
        "frameworkName": {
          "documentation": "<p> The name of the custom framework that the share request is for. </p>",
          "shape": "FrameworkName"
        },
        "id": {
          "documentation": "<p> The unique identifier for the share request. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p> Specifies when the share request was last updated. </p>",
          "shape": "Timestamp"
        },
        "sourceAccount": {
          "documentation": "<p> The Amazon Web Services account of the sender. </p>",
          "shape": "AccountId"
        },
        "standardControlsCount": {
          "documentation": "<p>The number of standard controls that are part of the shared custom framework. </p>",
          "shape": "NullableInteger"
        },
        "status": {
          "documentation": "<p> The status of the share request. </p>",
          "shape": "ShareRequestStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentFrameworkShareRequestList": {
      "member": {
        "shape": "AssessmentFrameworkShareRequest"
      },
      "type": "list"
    },
    "AssessmentMetadata": {
      "documentation": "<p> The metadata that's associated with the specified assessment. </p>",
      "members": {
        "assessmentReportsDestination": {
          "documentation": "<p> The destination that evidence reports are stored in for the assessment. </p>",
          "shape": "AssessmentReportsDestination"
        },
        "complianceType": {
          "documentation": "<p> The name of the compliance standard that's related to the assessment, such as PCI-DSS. </p>",
          "shape": "ComplianceType"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the assessment was created. </p>",
          "shape": "Timestamp"
        },
        "delegations": {
          "documentation": "<p> The delegations that are associated with the assessment. </p>",
          "shape": "Delegations"
        },
        "description": {
          "documentation": "<p> The description of the assessment. </p>",
          "shape": "AssessmentDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p> The time of the most recent update. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p> The name of the assessment. </p>",
          "shape": "AssessmentName"
        },
        "roles": {
          "documentation": "<p> The roles that are associated with the assessment. </p>",
          "shape": "Roles"
        },
        "scope": {
          "documentation": "<p> The wrapper of Amazon Web Services accounts and services that are in scope for the assessment. </p>",
          "shape": "Scope"
        },
        "status": {
          "documentation": "<p> The overall status of the assessment. </p>",
          "shape": "AssessmentStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentMetadataItem": {
      "documentation": "<p> A metadata object that's associated with an assessment in Audit Manager. </p>",
      "members": {
        "complianceType": {
          "documentation": "<p> The name of the compliance standard that's related to the assessment, such as PCI-DSS. </p>",
          "shape": "ComplianceType"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the assessment was created. </p>",
          "shape": "Timestamp"
        },
        "delegations": {
          "documentation": "<p> The delegations that are associated with the assessment. </p>",
          "shape": "Delegations"
        },
        "id": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p> The time of the most recent update. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p> The name of the assessment. </p>",
          "shape": "AssessmentName"
        },
        "roles": {
          "documentation": "<p> The roles that are associated with the assessment. </p>",
          "shape": "Roles"
        },
        "status": {
          "documentation": "<p> The current status of the assessment. </p>",
          "shape": "AssessmentStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentName": {
      "max": 300,
      "min": 1,
      "pattern": "^[^\\\\]*$",
      "type": "string"
    },
    "AssessmentReport": {
      "documentation": "<p> A finalized document that's generated from an Audit Manager assessment. These reports summarize the relevant evidence that was collected for your audit, and link to the relevant evidence folders. These evidence folders are named and organized according to the controls that are specified in your assessment. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the specified assessment. </p>",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p> The name of the associated assessment. </p>",
          "shape": "AssessmentName"
        },
        "author": {
          "documentation": "<p> The name of the user who created the assessment report. </p>",
          "shape": "Username"
        },
        "awsAccountId": {
          "documentation": "<p> The identifier for the specified Amazon Web Services account. </p>",
          "shape": "AccountId"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the assessment report was created. </p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p> The description of the specified assessment report. </p>",
          "shape": "AssessmentReportDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the assessment report. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name that's given to the assessment report. </p>",
          "shape": "AssessmentReportName"
        },
        "status": {
          "documentation": "<p> The current status of the specified assessment report. </p>",
          "shape": "AssessmentReportStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentReportDescription": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "AssessmentReportDestinationType": {
      "enum": [
        "S3"
      ],
      "type": "string"
    },
    "AssessmentReportEvidenceError": {
      "documentation": "<p> An error entity for the <code>AssessmentReportEvidence</code> API. This is used to provide more meaningful errors than a simple string message. </p>",
      "members": {
        "errorCode": {
          "documentation": "<p> The error code that the <code>AssessmentReportEvidence</code> API returned. </p>",
          "shape": "ErrorCode"
        },
        "errorMessage": {
          "documentation": "<p> The error message that the <code>AssessmentReportEvidence</code> API returned. </p>",
          "shape": "ErrorMessage"
        },
        "evidenceId": {
          "documentation": "<p> The identifier for the evidence. </p>",
          "shape": "UUID"
        }
      },
      "type": "structure"
    },
    "AssessmentReportEvidenceErrors": {
      "member": {
        "shape": "AssessmentReportEvidenceError"
      },
      "type": "list"
    },
    "AssessmentReportMetadata": {
      "documentation": "<p> The metadata objects that are associated with the specified assessment report. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the associated assessment. </p>",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p>The name of the associated assessment. </p>",
          "shape": "AssessmentName"
        },
        "author": {
          "documentation": "<p> The name of the user who created the assessment report. </p>",
          "shape": "Username"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the assessment report was created. </p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p> The description of the assessment report. </p>",
          "shape": "AssessmentReportDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the assessment report. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the assessment report. </p>",
          "shape": "AssessmentReportName"
        },
        "status": {
          "documentation": "<p> The current status of the assessment report. </p>",
          "shape": "AssessmentReportStatus"
        }
      },
      "type": "structure"
    },
    "AssessmentReportName": {
      "max": 300,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_\\.]+$",
      "type": "string"
    },
    "AssessmentReportStatus": {
      "enum": [
        "COMPLETE",
        "IN_PROGRESS",
        "FAILED"
      ],
      "type": "string"
    },
    "AssessmentReportsDestination": {
      "documentation": "<p> The location where Audit Manager saves assessment reports for the given assessment. </p>",
      "members": {
        "destination": {
          "documentation": "<p> The destination of the assessment report. </p>",
          "shape": "S3Url"
        },
        "destinationType": {
          "documentation": "<p> The destination type, such as Amazon S3. </p>",
          "shape": "AssessmentReportDestinationType"
        }
      },
      "type": "structure"
    },
    "AssessmentReportsMetadata": {
      "member": {
        "shape": "AssessmentReportMetadata"
      },
      "type": "list"
    },
    "AssessmentStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "AssociateAssessmentReportEvidenceFolderRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "evidenceFolderId": {
          "documentation": "<p> The identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId",
        "evidenceFolderId"
      ],
      "type": "structure"
    },
    "AssociateAssessmentReportEvidenceFolderResponse": {
      "members": {},
      "type": "structure"
    },
    "AuditManagerArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:.*:auditmanager:.*",
      "type": "string"
    },
    "BatchAssociateAssessmentReportEvidenceRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "evidenceFolderId": {
          "documentation": "<p> The identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        },
        "evidenceIds": {
          "documentation": "<p> The list of evidence identifiers. </p>",
          "shape": "EvidenceIds"
        }
      },
      "required": [
        "assessmentId",
        "evidenceFolderId",
        "evidenceIds"
      ],
      "type": "structure"
    },
    "BatchAssociateAssessmentReportEvidenceResponse": {
      "members": {
        "errors": {
          "documentation": "<p> A list of errors that the <code>BatchAssociateAssessmentReportEvidence</code> API returned. </p>",
          "shape": "AssessmentReportEvidenceErrors"
        },
        "evidenceIds": {
          "documentation": "<p> The list of evidence identifiers. </p>",
          "shape": "EvidenceIds"
        }
      },
      "type": "structure"
    },
    "BatchCreateDelegationByAssessmentError": {
      "documentation": "<p> An error entity for the <code>BatchCreateDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. </p>",
      "members": {
        "createDelegationRequest": {
          "documentation": "<p> The API request to batch create delegations in Audit Manager. </p>",
          "shape": "CreateDelegationRequest"
        },
        "errorCode": {
          "documentation": "<p> The error code that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>",
          "shape": "ErrorCode"
        },
        "errorMessage": {
          "documentation": "<p> The error message that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "BatchCreateDelegationByAssessmentErrors": {
      "member": {
        "shape": "BatchCreateDelegationByAssessmentError"
      },
      "type": "list"
    },
    "BatchCreateDelegationByAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "createDelegationRequests": {
          "documentation": "<p> The API request to batch create delegations in Audit Manager. </p>",
          "shape": "CreateDelegationRequests"
        }
      },
      "required": [
        "createDelegationRequests",
        "assessmentId"
      ],
      "type": "structure"
    },
    "BatchCreateDelegationByAssessmentResponse": {
      "members": {
        "delegations": {
          "documentation": "<p> The delegations that are associated with the assessment. </p>",
          "shape": "Delegations"
        },
        "errors": {
          "documentation": "<p> A list of errors that the <code>BatchCreateDelegationByAssessment</code> API returned. </p>",
          "shape": "BatchCreateDelegationByAssessmentErrors"
        }
      },
      "type": "structure"
    },
    "BatchDeleteDelegationByAssessmentError": {
      "documentation": "<p> An error entity for the <code>BatchDeleteDelegationByAssessment</code> API. This is used to provide more meaningful errors than a simple string message. </p>",
      "members": {
        "delegationId": {
          "documentation": "<p> The identifier for the delegation. </p>",
          "shape": "UUID"
        },
        "errorCode": {
          "documentation": "<p> The error code that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>",
          "shape": "ErrorCode"
        },
        "errorMessage": {
          "documentation": "<p> The error message that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "BatchDeleteDelegationByAssessmentErrors": {
      "member": {
        "shape": "BatchDeleteDelegationByAssessmentError"
      },
      "type": "list"
    },
    "BatchDeleteDelegationByAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "delegationIds": {
          "documentation": "<p> The identifiers for the delegations. </p>",
          "shape": "DelegationIds"
        }
      },
      "required": [
        "delegationIds",
        "assessmentId"
      ],
      "type": "structure"
    },
    "BatchDeleteDelegationByAssessmentResponse": {
      "members": {
        "errors": {
          "documentation": "<p> A list of errors that the <code>BatchDeleteDelegationByAssessment</code> API returned. </p>",
          "shape": "BatchDeleteDelegationByAssessmentErrors"
        }
      },
      "type": "structure"
    },
    "BatchDisassociateAssessmentReportEvidenceRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "evidenceFolderId": {
          "documentation": "<p> The identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        },
        "evidenceIds": {
          "documentation": "<p> The list of evidence identifiers. </p>",
          "shape": "EvidenceIds"
        }
      },
      "required": [
        "assessmentId",
        "evidenceFolderId",
        "evidenceIds"
      ],
      "type": "structure"
    },
    "BatchDisassociateAssessmentReportEvidenceResponse": {
      "members": {
        "errors": {
          "documentation": "<p> A list of errors that the <code>BatchDisassociateAssessmentReportEvidence</code> API returned. </p>",
          "shape": "AssessmentReportEvidenceErrors"
        },
        "evidenceIds": {
          "documentation": "<p> The identifier for the evidence. </p>",
          "shape": "EvidenceIds"
        }
      },
      "type": "structure"
    },
    "BatchImportEvidenceToAssessmentControlError": {
      "documentation": "<p> An error entity for the <code>BatchImportEvidenceToAssessmentControl</code> API. This is used to provide more meaningful errors than a simple string message. </p>",
      "members": {
        "errorCode": {
          "documentation": "<p> The error code that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. </p>",
          "shape": "ErrorCode"
        },
        "errorMessage": {
          "documentation": "<p> The error message that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. </p>",
          "shape": "ErrorMessage"
        },
        "manualEvidence": {
          "documentation": "<p> Manual evidence that can't be collected automatically by Audit Manager. </p>",
          "shape": "ManualEvidence"
        }
      },
      "type": "structure"
    },
    "BatchImportEvidenceToAssessmentControlErrors": {
      "member": {
        "shape": "BatchImportEvidenceToAssessmentControlError"
      },
      "type": "list"
    },
    "BatchImportEvidenceToAssessmentControlRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlId": {
          "documentation": "<p> The identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "manualEvidence": {
          "documentation": "<p> The list of manual evidence objects. </p>",
          "shape": "ManualEvidenceList"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "controlId",
        "manualEvidence"
      ],
      "type": "structure"
    },
    "BatchImportEvidenceToAssessmentControlResponse": {
      "members": {
        "errors": {
          "documentation": "<p> A list of errors that the <code>BatchImportEvidenceToAssessmentControl</code> API returned. </p>",
          "shape": "BatchImportEvidenceToAssessmentControlErrors"
        }
      },
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "ChangeLog": {
      "documentation": "<p> The record of a change within Audit Manager. For example, this could be the status change of an assessment or the delegation of a control set. </p>",
      "members": {
        "action": {
          "documentation": "<p> The action that was performed. </p>",
          "shape": "ActionEnum"
        },
        "createdAt": {
          "documentation": "<p> The time when the action was performed and the changelog record was created. </p>",
          "shape": "Timestamp"
        },
        "createdBy": {
          "documentation": "<p> The IAM user or role that performed the action. </p>",
          "shape": "IamArn"
        },
        "objectName": {
          "documentation": "<p> The name of the object that changed. This could be the name of an assessment, control, or control set.</p>",
          "shape": "NonEmptyString"
        },
        "objectType": {
          "documentation": "<p> The object that was changed, such as an assessment, control, or control set. </p>",
          "shape": "ObjectTypeEnum"
        }
      },
      "type": "structure"
    },
    "ChangeLogs": {
      "member": {
        "shape": "ChangeLog"
      },
      "type": "list"
    },
    "ComplianceType": {
      "max": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Control": {
      "documentation": "<p> A control in Audit Manager. </p>",
      "members": {
        "actionPlanInstructions": {
          "documentation": "<p> The recommended actions to carry out if the control isn't fulfilled. </p>",
          "shape": "ActionPlanInstructions"
        },
        "actionPlanTitle": {
          "documentation": "<p> The title of the action plan for remediating the control. </p>",
          "shape": "ActionPlanTitle"
        },
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the control. </p>",
          "shape": "AuditManagerArn"
        },
        "controlMappingSources": {
          "documentation": "<p> The data mapping sources for the control. </p>",
          "shape": "ControlMappingSources"
        },
        "controlSources": {
          "documentation": "<p> The data source that determines where Audit Manager collects evidence from for the control. </p>",
          "shape": "ControlSources"
        },
        "createdAt": {
          "documentation": "<p> Specifies when the control was created. </p>",
          "shape": "Timestamp"
        },
        "createdBy": {
          "documentation": "<p> The IAM user or role that created the control. </p>",
          "shape": "CreatedBy"
        },
        "description": {
          "documentation": "<p> The description of the control. </p>",
          "shape": "ControlDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "shape": "UUID"
        },
        "lastUpdatedAt": {
          "documentation": "<p> Specifies when the control was most recently updated. </p>",
          "shape": "Timestamp"
        },
        "lastUpdatedBy": {
          "documentation": "<p> The IAM user or role that most recently updated the control. </p>",
          "shape": "LastUpdatedBy"
        },
        "name": {
          "documentation": "<p> The name of the control. </p>",
          "shape": "ControlName"
        },
        "tags": {
          "documentation": "<p> The tags associated with the control. </p>",
          "shape": "TagMap"
        },
        "testingInformation": {
          "documentation": "<p> The steps that you should follow to determine if the control has been satisfied. </p>",
          "shape": "TestingInformation"
        },
        "type": {
          "documentation": "<p> The type of control, such as a custom control or a standard control. </p>",
          "shape": "ControlType"
        }
      },
      "type": "structure"
    },
    "ControlComment": {
      "documentation": "<p> A comment that's posted by a user on a control. This includes the author's name, the comment text, and a timestamp. </p>",
      "members": {
        "authorName": {
          "documentation": "<p> The name of the user who authored the comment. </p>",
          "shape": "Username"
        },
        "commentBody": {
          "documentation": "<p> The body text of a control comment. </p>",
          "shape": "ControlCommentBody"
        },
        "postedDate": {
          "documentation": "<p> The time when the comment was posted. </p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "ControlCommentBody": {
      "max": 500,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlComments": {
      "member": {
        "shape": "ControlComment"
      },
      "type": "list"
    },
    "ControlDescription": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlDomainInsights": {
      "documentation": "<p>A summary of the latest analytics data for a specific control domain.</p> <p>Control domain insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence.</p>",
      "members": {
        "controlsCountByNoncompliantEvidence": {
          "documentation": "<p>The number of controls in the control domain that collected non-compliant evidence on the <code>lastUpdated</code> date. </p>",
          "shape": "NullableInteger"
        },
        "evidenceInsights": {
          "documentation": "<p>A breakdown of the compliance check status for the evidence that\u2019s associated with the control domain. </p>",
          "shape": "EvidenceInsights"
        },
        "id": {
          "documentation": "<p>The unique identifier for the control domain. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p>The time when the control domain insights were last updated. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the control domain. </p>",
          "shape": "NonEmptyString"
        },
        "totalControlsCount": {
          "documentation": "<p>The total number of controls in the control domain. </p>",
          "shape": "NullableInteger"
        }
      },
      "type": "structure"
    },
    "ControlDomainInsightsList": {
      "member": {
        "shape": "ControlDomainInsights"
      },
      "type": "list"
    },
    "ControlInsightsMetadata": {
      "member": {
        "shape": "ControlInsightsMetadataItem"
      },
      "type": "list"
    },
    "ControlInsightsMetadataByAssessment": {
      "member": {
        "shape": "ControlInsightsMetadataByAssessmentItem"
      },
      "type": "list"
    },
    "ControlInsightsMetadataByAssessmentItem": {
      "documentation": "<p>A summary of the latest analytics data for a specific control in a specific active assessment.</p> <p>Control insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence. </p>",
      "members": {
        "controlSetName": {
          "documentation": "<p>The name of the control set that the assessment control belongs to. </p>",
          "shape": "NonEmptyString"
        },
        "evidenceInsights": {
          "documentation": "<p>A breakdown of the compliance check status for the evidence that\u2019s associated with the assessment control. </p>",
          "shape": "EvidenceInsights"
        },
        "id": {
          "documentation": "<p>The unique identifier for the assessment control. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p>The time when the assessment control insights were last updated. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the assessment control. </p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ControlInsightsMetadataItem": {
      "documentation": "<p>A summary of the latest analytics data for a specific control. </p> <p>This data reflects the total counts for the specified control across all active assessments. Control insights are grouped by control domain, and ranked by the highest total count of non-compliant evidence.</p>",
      "members": {
        "evidenceInsights": {
          "documentation": "<p>A breakdown of the compliance check status for the evidence that\u2019s associated with the control. </p>",
          "shape": "EvidenceInsights"
        },
        "id": {
          "documentation": "<p>The unique identifier for the control. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p>The time when the control insights were last updated. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the control. </p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "ControlMappingSource": {
      "documentation": "<p> The data source that determines where Audit Manager collects evidence from for the control. </p>",
      "members": {
        "sourceDescription": {
          "documentation": "<p> The description of the source. </p>",
          "shape": "SourceDescription"
        },
        "sourceFrequency": {
          "documentation": "<p> The frequency of evidence collection for the control mapping source. </p>",
          "shape": "SourceFrequency"
        },
        "sourceId": {
          "documentation": "<p> The unique identifier for the source. </p>",
          "shape": "UUID"
        },
        "sourceKeyword": {
          "shape": "SourceKeyword"
        },
        "sourceName": {
          "documentation": "<p> The name of the source. </p>",
          "shape": "SourceName"
        },
        "sourceSetUpOption": {
          "documentation": "<p> The setup option for the data source. This option reflects if the evidence collection is automated or manual. </p>",
          "shape": "SourceSetUpOption"
        },
        "sourceType": {
          "documentation": "<p> Specifies one of the five types of data sources for evidence collection. </p>",
          "shape": "SourceType"
        },
        "troubleshootingText": {
          "documentation": "<p> The instructions for troubleshooting the control. </p>",
          "shape": "TroubleshootingText"
        }
      },
      "type": "structure"
    },
    "ControlMappingSources": {
      "member": {
        "shape": "ControlMappingSource"
      },
      "min": 1,
      "type": "list"
    },
    "ControlMetadata": {
      "documentation": "<p> The metadata that's associated with the standard control or custom control. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the control. </p>",
          "shape": "AuditManagerArn"
        },
        "controlSources": {
          "documentation": "<p> The data source that determines where Audit Manager collects evidence from for the control. </p>",
          "shape": "ControlSources"
        },
        "createdAt": {
          "documentation": "<p> Specifies when the control was created. </p>",
          "shape": "Timestamp"
        },
        "id": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "shape": "UUID"
        },
        "lastUpdatedAt": {
          "documentation": "<p> Specifies when the control was most recently updated. </p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p> The name of the control. </p>",
          "shape": "ControlName"
        }
      },
      "type": "structure"
    },
    "ControlMetadataList": {
      "member": {
        "shape": "ControlMetadata"
      },
      "type": "list"
    },
    "ControlName": {
      "max": 300,
      "min": 1,
      "pattern": "^[^\\\\]*$",
      "type": "string"
    },
    "ControlResponse": {
      "enum": [
        "MANUAL",
        "AUTOMATE",
        "DEFER",
        "IGNORE"
      ],
      "type": "string"
    },
    "ControlSet": {
      "documentation": "<p> A set of controls in Audit Manager. </p>",
      "members": {
        "controls": {
          "documentation": "<p> The list of controls within the control set. </p>",
          "shape": "Controls"
        },
        "id": {
          "documentation": "<p> The identifier of the control set in the assessment. This is the control set name in a plain string format. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the control set. </p>",
          "shape": "ControlSetName"
        }
      },
      "type": "structure"
    },
    "ControlSetId": {
      "max": 300,
      "min": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ControlSetName": {
      "max": 300,
      "min": 1,
      "pattern": "^[^\\\\\\_]*$",
      "type": "string"
    },
    "ControlSetStatus": {
      "enum": [
        "ACTIVE",
        "UNDER_REVIEW",
        "REVIEWED"
      ],
      "type": "string"
    },
    "ControlSets": {
      "member": {
        "shape": "ControlSet"
      },
      "min": 1,
      "type": "list"
    },
    "ControlSetsCount": {
      "type": "integer"
    },
    "ControlSources": {
      "max": 100,
      "min": 1,
      "pattern": "^[a-zA-Z_0-9-\\s.,]+$",
      "type": "string"
    },
    "ControlStatus": {
      "enum": [
        "UNDER_REVIEW",
        "REVIEWED",
        "INACTIVE"
      ],
      "type": "string"
    },
    "ControlType": {
      "enum": [
        "Standard",
        "Custom"
      ],
      "type": "string"
    },
    "Controls": {
      "member": {
        "shape": "Control"
      },
      "min": 1,
      "type": "list"
    },
    "ControlsCount": {
      "type": "integer"
    },
    "CreateAssessmentFrameworkControl": {
      "documentation": "<p> The control entity attributes that uniquely identify an existing control to be added to a framework in Audit Manager. </p>",
      "members": {
        "id": {
          "documentation": "<p> The unique identifier of the control. </p>",
          "shape": "UUID"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "CreateAssessmentFrameworkControlSet": {
      "documentation": "<p> A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This doesn't contain the control set ID. </p>",
      "members": {
        "controls": {
          "documentation": "<p> The list of controls within the control set. This doesn't contain the control set ID. </p>",
          "shape": "CreateAssessmentFrameworkControls"
        },
        "name": {
          "documentation": "<p> The name of the control set. </p>",
          "shape": "ControlSetName"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateAssessmentFrameworkControlSets": {
      "member": {
        "shape": "CreateAssessmentFrameworkControlSet"
      },
      "min": 1,
      "type": "list"
    },
    "CreateAssessmentFrameworkControls": {
      "member": {
        "shape": "CreateAssessmentFrameworkControl"
      },
      "min": 1,
      "type": "list"
    },
    "CreateAssessmentFrameworkRequest": {
      "members": {
        "complianceType": {
          "documentation": "<p> The compliance type that the new custom framework supports, such as CIS or HIPAA. </p>",
          "shape": "ComplianceType"
        },
        "controlSets": {
          "documentation": "<p> The control sets that are associated with the framework. </p>",
          "shape": "CreateAssessmentFrameworkControlSets"
        },
        "description": {
          "documentation": "<p> An optional description for the new custom framework. </p>",
          "shape": "FrameworkDescription"
        },
        "name": {
          "documentation": "<p> The name of the new custom framework. </p>",
          "shape": "FrameworkName"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the framework. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "controlSets"
      ],
      "type": "structure"
    },
    "CreateAssessmentFrameworkResponse": {
      "members": {
        "framework": {
          "documentation": "<p> The name of the new framework that the <code>CreateAssessmentFramework</code> API returned. </p>",
          "shape": "Framework"
        }
      },
      "type": "structure"
    },
    "CreateAssessmentReportRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "description": {
          "documentation": "<p> The description of the assessment report. </p>",
          "shape": "AssessmentReportDescription"
        },
        "name": {
          "documentation": "<p> The name of the new assessment report. </p>",
          "shape": "AssessmentReportName"
        }
      },
      "required": [
        "name",
        "assessmentId"
      ],
      "type": "structure"
    },
    "CreateAssessmentReportResponse": {
      "members": {
        "assessmentReport": {
          "documentation": "<p> The new assessment report that the <code>CreateAssessmentReport</code> API returned. </p>",
          "shape": "AssessmentReport"
        }
      },
      "type": "structure"
    },
    "CreateAssessmentRequest": {
      "members": {
        "assessmentReportsDestination": {
          "documentation": "<p> The assessment report storage destination for the assessment that's being created. </p>",
          "shape": "AssessmentReportsDestination"
        },
        "description": {
          "documentation": "<p> The optional description of the assessment to be created. </p>",
          "shape": "AssessmentDescription"
        },
        "frameworkId": {
          "documentation": "<p> The identifier for the framework that the assessment will be created from. </p>",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the assessment to be created. </p>",
          "shape": "AssessmentName"
        },
        "roles": {
          "documentation": "<p> The list of roles for the assessment. </p>",
          "shape": "Roles"
        },
        "scope": {
          "shape": "Scope"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the assessment. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "assessmentReportsDestination",
        "scope",
        "roles",
        "frameworkId"
      ],
      "type": "structure"
    },
    "CreateAssessmentResponse": {
      "members": {
        "assessment": {
          "shape": "Assessment"
        }
      },
      "type": "structure"
    },
    "CreateControlMappingSource": {
      "documentation": "<p> The control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This doesn't contain <code>mappingID</code>. </p>",
      "members": {
        "sourceDescription": {
          "documentation": "<p> The description of the data source that determines where Audit Manager collects evidence from for the control. </p>",
          "shape": "SourceDescription"
        },
        "sourceFrequency": {
          "documentation": "<p> The frequency of evidence collection for the control mapping source. </p>",
          "shape": "SourceFrequency"
        },
        "sourceKeyword": {
          "shape": "SourceKeyword"
        },
        "sourceName": {
          "documentation": "<p> The name of the control mapping data source. </p>",
          "shape": "SourceName"
        },
        "sourceSetUpOption": {
          "documentation": "<p> The setup option for the data source, which reflects if the evidence collection is automated or manual. </p>",
          "shape": "SourceSetUpOption"
        },
        "sourceType": {
          "documentation": "<p> Specifies one of the five types of data sources for evidence collection. </p>",
          "shape": "SourceType"
        },
        "troubleshootingText": {
          "documentation": "<p> The instructions for troubleshooting the control. </p>",
          "shape": "TroubleshootingText"
        }
      },
      "type": "structure"
    },
    "CreateControlMappingSources": {
      "member": {
        "shape": "CreateControlMappingSource"
      },
      "min": 1,
      "type": "list"
    },
    "CreateControlRequest": {
      "members": {
        "actionPlanInstructions": {
          "documentation": "<p> The recommended actions to carry out if the control isn't fulfilled. </p>",
          "shape": "ActionPlanInstructions"
        },
        "actionPlanTitle": {
          "documentation": "<p> The title of the action plan for remediating the control. </p>",
          "shape": "ActionPlanTitle"
        },
        "controlMappingSources": {
          "documentation": "<p> The data mapping sources for the control. </p>",
          "shape": "CreateControlMappingSources"
        },
        "description": {
          "documentation": "<p> The description of the control. </p>",
          "shape": "ControlDescription"
        },
        "name": {
          "documentation": "<p> The name of the control. </p>",
          "shape": "ControlName"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the control. </p>",
          "shape": "TagMap"
        },
        "testingInformation": {
          "documentation": "<p> The steps to follow to determine if the control is satisfied. </p>",
          "shape": "TestingInformation"
        }
      },
      "required": [
        "name",
        "controlMappingSources"
      ],
      "type": "structure"
    },
    "CreateControlResponse": {
      "members": {
        "control": {
          "documentation": "<p> The new control that the <code>CreateControl</code> API returned. </p>",
          "shape": "Control"
        }
      },
      "type": "structure"
    },
    "CreateDelegationRequest": {
      "documentation": "<p> A collection of attributes that's used to create a delegation for an assessment in Audit Manager. </p>",
      "members": {
        "comment": {
          "documentation": "<p> A comment that's related to the delegation request. </p>",
          "shape": "DelegationComment"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "shape": "ControlSetId"
        },
        "roleArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the IAM role. </p>",
          "shape": "IamArn"
        },
        "roleType": {
          "documentation": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>",
          "shape": "RoleType"
        }
      },
      "type": "structure"
    },
    "CreateDelegationRequests": {
      "max": 50,
      "member": {
        "shape": "CreateDelegationRequest"
      },
      "min": 1,
      "type": "list"
    },
    "CreatedBy": {
      "max": 100,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
      "type": "string"
    },
    "Delegation": {
      "documentation": "<p> The assignment of a control set to a delegate for review. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment that's associated with the delegation. </p>",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p> The name of the assessment that's associated with the delegation. </p>",
          "shape": "AssessmentName"
        },
        "comment": {
          "documentation": "<p> The comment that's related to the delegation. </p>",
          "shape": "DelegationComment"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set that's associated with the delegation. </p>",
          "shape": "ControlSetId"
        },
        "createdBy": {
          "documentation": "<p> The IAM user or role that created the delegation. </p>",
          "shape": "CreatedBy"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the delegation was created. </p>",
          "shape": "Timestamp"
        },
        "id": {
          "documentation": "<p> The unique identifier for the delegation. </p>",
          "shape": "UUID"
        },
        "lastUpdated": {
          "documentation": "<p> Specifies when the delegation was last updated. </p>",
          "shape": "Timestamp"
        },
        "roleArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the IAM role. </p>",
          "shape": "IamArn"
        },
        "roleType": {
          "documentation": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>",
          "shape": "RoleType"
        },
        "status": {
          "documentation": "<p> The status of the delegation. </p>",
          "shape": "DelegationStatus"
        }
      },
      "type": "structure"
    },
    "DelegationComment": {
      "max": 350,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "DelegationIds": {
      "max": 50,
      "member": {
        "shape": "UUID"
      },
      "min": 1,
      "type": "list"
    },
    "DelegationMetadata": {
      "documentation": "<p> The metadata that's associated with the delegation. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p> The name of the associated assessment. </p>",
          "shape": "AssessmentName"
        },
        "controlSetName": {
          "documentation": "<p> Specifies the name of the control set that was delegated for review. </p>",
          "shape": "NonEmptyString"
        },
        "creationTime": {
          "documentation": "<p> Specifies when the delegation was created. </p>",
          "shape": "Timestamp"
        },
        "id": {
          "documentation": "<p> The unique identifier for the delegation. </p>",
          "shape": "UUID"
        },
        "roleArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the IAM role. </p>",
          "shape": "IamArn"
        },
        "status": {
          "documentation": "<p> The current status of the delegation. </p>",
          "shape": "DelegationStatus"
        }
      },
      "type": "structure"
    },
    "DelegationMetadataList": {
      "member": {
        "shape": "DelegationMetadata"
      },
      "type": "list"
    },
    "DelegationStatus": {
      "enum": [
        "IN_PROGRESS",
        "UNDER_REVIEW",
        "COMPLETE"
      ],
      "type": "string"
    },
    "Delegations": {
      "member": {
        "shape": "Delegation"
      },
      "type": "list"
    },
    "DeleteAssessmentFrameworkRequest": {
      "members": {
        "frameworkId": {
          "documentation": "<p> The identifier for the custom framework. </p>",
          "location": "uri",
          "locationName": "frameworkId",
          "shape": "UUID"
        }
      },
      "required": [
        "frameworkId"
      ],
      "type": "structure"
    },
    "DeleteAssessmentFrameworkResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAssessmentFrameworkShareRequest": {
      "members": {
        "requestId": {
          "documentation": "<p>The unique identifier for the share request to be deleted.</p>",
          "location": "uri",
          "locationName": "requestId",
          "shape": "UUID"
        },
        "requestType": {
          "documentation": "<p>Specifies whether the share request is a sent request or a received request.</p>",
          "location": "querystring",
          "locationName": "requestType",
          "shape": "ShareRequestType"
        }
      },
      "required": [
        "requestId",
        "requestType"
      ],
      "type": "structure"
    },
    "DeleteAssessmentFrameworkShareResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAssessmentReportRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "assessmentReportId": {
          "documentation": "<p> The unique identifier for the assessment report. </p>",
          "location": "uri",
          "locationName": "assessmentReportId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId",
        "assessmentReportId"
      ],
      "type": "structure"
    },
    "DeleteAssessmentReportResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "DeleteAssessmentResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteControlRequest": {
      "members": {
        "controlId": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        }
      },
      "required": [
        "controlId"
      ],
      "type": "structure"
    },
    "DeleteControlResponse": {
      "members": {},
      "type": "structure"
    },
    "DeregisterAccountRequest": {
      "members": {},
      "type": "structure"
    },
    "DeregisterAccountResponse": {
      "members": {
        "status": {
          "documentation": "<p> The registration status of the account. </p>",
          "shape": "AccountStatus"
        }
      },
      "type": "structure"
    },
    "DeregisterOrganizationAdminAccountRequest": {
      "members": {
        "adminAccountId": {
          "documentation": "<p> The identifier for the administrator account. </p>",
          "shape": "AccountId"
        }
      },
      "type": "structure"
    },
    "DeregisterOrganizationAdminAccountResponse": {
      "members": {},
      "type": "structure"
    },
    "DisassociateAssessmentReportEvidenceFolderRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "evidenceFolderId": {
          "documentation": "<p> The unique identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId",
        "evidenceFolderId"
      ],
      "type": "structure"
    },
    "DisassociateAssessmentReportEvidenceFolderResponse": {
      "members": {},
      "type": "structure"
    },
    "EmailAddress": {
      "max": 320,
      "min": 1,
      "pattern": "^.*@.*$",
      "type": "string"
    },
    "ErrorCode": {
      "max": 3,
      "min": 3,
      "pattern": "[0-9]{3}",
      "type": "string"
    },
    "ErrorMessage": {
      "max": 300,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EventName": {
      "max": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "Evidence": {
      "documentation": "<p> A record that contains the information needed to demonstrate compliance with the requirements specified by a control. Examples of evidence include change activity triggered by a user, or a system configuration snapshot. </p>",
      "members": {
        "assessmentReportSelection": {
          "documentation": "<p> Specifies whether the evidence is included in the assessment report. </p>",
          "shape": "String"
        },
        "attributes": {
          "documentation": "<p> The names and values that are used by the evidence event. This includes an attribute name (such as <code>allowUsersToChangePassword</code>) and value (such as <code>true</code> or <code>false</code>). </p>",
          "shape": "EvidenceAttributes"
        },
        "awsAccountId": {
          "documentation": "<p> The identifier for the Amazon Web Services account. </p>",
          "shape": "AccountId"
        },
        "awsOrganization": {
          "documentation": "<p> The Amazon Web Services account that the evidence is collected from, and its organization path. </p>",
          "shape": "String"
        },
        "complianceCheck": {
          "documentation": "<p> The evaluation status for evidence that falls under the compliance check category. For evidence collected from Security Hub, a <i>Pass</i> or <i>Fail</i> result is shown. For evidence collected from Config, a <i>Compliant</i> or <i>Noncompliant</i> result is shown. </p>",
          "shape": "String"
        },
        "dataSource": {
          "documentation": "<p> The data source where the evidence was collected from. </p>",
          "shape": "String"
        },
        "eventName": {
          "documentation": "<p> The name of the evidence event. </p>",
          "shape": "EventName"
        },
        "eventSource": {
          "documentation": "<p> The Amazon Web Service that the evidence is collected from. </p>",
          "shape": "AWSServiceName"
        },
        "evidenceAwsAccountId": {
          "documentation": "<p> The identifier for the Amazon Web Services account. </p>",
          "shape": "AccountId"
        },
        "evidenceByType": {
          "documentation": "<p> The type of automated evidence. </p>",
          "shape": "String"
        },
        "evidenceFolderId": {
          "documentation": "<p> The identifier for the folder that the evidence is stored in. </p>",
          "shape": "UUID"
        },
        "iamId": {
          "documentation": "<p> The unique identifier for the IAM user or role that's associated with the evidence. </p>",
          "shape": "IamArn"
        },
        "id": {
          "documentation": "<p> The identifier for the evidence. </p>",
          "shape": "UUID"
        },
        "resourcesIncluded": {
          "documentation": "<p> The list of resources that are assessed to generate the evidence. </p>",
          "shape": "Resources"
        },
        "time": {
          "documentation": "<p> The timestamp that represents when the evidence was collected. </p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "EvidenceAttributeKey": {
      "max": 100,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EvidenceAttributeValue": {
      "max": 200,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "EvidenceAttributes": {
      "key": {
        "shape": "EvidenceAttributeKey"
      },
      "type": "map",
      "value": {
        "shape": "EvidenceAttributeValue"
      }
    },
    "EvidenceIds": {
      "max": 50,
      "member": {
        "shape": "UUID"
      },
      "min": 0,
      "type": "list"
    },
    "EvidenceInsights": {
      "documentation": "<p>A breakdown of the latest compliance check status for the evidence in your Audit Manager assessments. </p>",
      "members": {
        "compliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as compliant. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        },
        "inconclusiveEvidenceCount": {
          "documentation": "<p>The number of evidence that a compliance check ruling isn't available for. Evidence is inconclusive when the associated control uses Security Hub or Config as a data source but you didn't enable those services. This is also the case when a control uses a data source that doesn\u2019t support compliance checks (for example, manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i> in the console, it's classified as <i>inconclusive</i> in <code>EvidenceInsights</code> data.</p> </note>",
          "shape": "NullableInteger"
        },
        "noncompliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as non-compliant. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        }
      },
      "type": "structure"
    },
    "EvidenceList": {
      "member": {
        "shape": "Evidence"
      },
      "type": "list"
    },
    "EvidenceSources": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "Filename": {
      "max": 255,
      "min": 1,
      "pattern": "^[\\w,\\s-]+\\.[A-Za-z]+$",
      "type": "string"
    },
    "Framework": {
      "documentation": "<p> The file that's used to structure and automate Audit Manager assessments for a given compliance standard. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the framework. </p>",
          "shape": "AuditManagerArn"
        },
        "complianceType": {
          "documentation": "<p> The compliance type that the new custom framework supports, such as CIS or HIPAA. </p>",
          "shape": "ComplianceType"
        },
        "controlSets": {
          "documentation": "<p> The control sets that are associated with the framework. </p>",
          "shape": "ControlSets"
        },
        "controlSources": {
          "documentation": "<p> The sources that Audit Manager collects evidence from for the control. </p>",
          "shape": "ControlSources"
        },
        "createdAt": {
          "documentation": "<p> Specifies when the framework was created. </p>",
          "shape": "Timestamp"
        },
        "createdBy": {
          "documentation": "<p> The IAM user or role that created the framework. </p>",
          "shape": "CreatedBy"
        },
        "description": {
          "documentation": "<p> The description of the framework. </p>",
          "shape": "FrameworkDescription"
        },
        "id": {
          "documentation": "<p> The unique identifier for the framework. </p>",
          "shape": "UUID"
        },
        "lastUpdatedAt": {
          "documentation": "<p> Specifies when the framework was most recently updated. </p>",
          "shape": "Timestamp"
        },
        "lastUpdatedBy": {
          "documentation": "<p> The IAM user or role that most recently updated the framework. </p>",
          "shape": "LastUpdatedBy"
        },
        "logo": {
          "documentation": "<p> The logo that's associated with the framework. </p>",
          "shape": "Filename"
        },
        "name": {
          "documentation": "<p> The name of the framework. </p>",
          "shape": "FrameworkName"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the framework. </p>",
          "shape": "TagMap"
        },
        "type": {
          "documentation": "<p> The framework type, such as a custom framework or a standard framework. </p>",
          "shape": "FrameworkType"
        }
      },
      "type": "structure"
    },
    "FrameworkDescription": {
      "max": 1000,
      "min": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "FrameworkMetadata": {
      "documentation": "<p> The metadata of a framework, such as the name, ID, or description. </p>",
      "members": {
        "complianceType": {
          "documentation": "<p> The compliance standard that's associated with the framework. For example, this could be PCI DSS or HIPAA. </p>",
          "shape": "ComplianceType"
        },
        "description": {
          "documentation": "<p> The description of the framework. </p>",
          "shape": "AssessmentFrameworkDescription"
        },
        "logo": {
          "documentation": "<p> The logo that's associated with the framework. </p>",
          "shape": "Filename"
        },
        "name": {
          "documentation": "<p> The name of the framework. </p>",
          "shape": "AssessmentName"
        }
      },
      "type": "structure"
    },
    "FrameworkMetadataList": {
      "member": {
        "shape": "AssessmentFrameworkMetadata"
      },
      "type": "list"
    },
    "FrameworkName": {
      "max": 300,
      "min": 1,
      "pattern": "^[^\\\\]*$",
      "type": "string"
    },
    "FrameworkType": {
      "enum": [
        "Standard",
        "Custom"
      ],
      "type": "string"
    },
    "GenericArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:.*",
      "type": "string"
    },
    "GetAccountStatusRequest": {
      "members": {},
      "type": "structure"
    },
    "GetAccountStatusResponse": {
      "members": {
        "status": {
          "documentation": "<p> The status of the Amazon Web Services account. </p>",
          "shape": "AccountStatus"
        }
      },
      "type": "structure"
    },
    "GetAssessmentFrameworkRequest": {
      "members": {
        "frameworkId": {
          "documentation": "<p> The identifier for the framework. </p>",
          "location": "uri",
          "locationName": "frameworkId",
          "shape": "UUID"
        }
      },
      "required": [
        "frameworkId"
      ],
      "type": "structure"
    },
    "GetAssessmentFrameworkResponse": {
      "members": {
        "framework": {
          "documentation": "<p> The framework that the <code>GetAssessmentFramework</code> API returned. </p>",
          "shape": "Framework"
        }
      },
      "type": "structure"
    },
    "GetAssessmentReportUrlRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "assessmentReportId": {
          "documentation": "<p> The unique identifier for the assessment report. </p>",
          "location": "uri",
          "locationName": "assessmentReportId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentReportId",
        "assessmentId"
      ],
      "type": "structure"
    },
    "GetAssessmentReportUrlResponse": {
      "members": {
        "preSignedUrl": {
          "shape": "URL"
        }
      },
      "type": "structure"
    },
    "GetAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p>The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "GetAssessmentResponse": {
      "members": {
        "assessment": {
          "shape": "Assessment"
        },
        "userRole": {
          "shape": "Role"
        }
      },
      "type": "structure"
    },
    "GetChangeLogsRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p>The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlId": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "location": "querystring",
          "locationName": "controlId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "location": "querystring",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "maxResults": {
          "documentation": "<p>Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "GetChangeLogsResponse": {
      "members": {
        "changeLogs": {
          "documentation": "<p>The list of user activity for the control. </p>",
          "shape": "ChangeLogs"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetControlRequest": {
      "members": {
        "controlId": {
          "documentation": "<p> The identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        }
      },
      "required": [
        "controlId"
      ],
      "type": "structure"
    },
    "GetControlResponse": {
      "members": {
        "control": {
          "documentation": "<p> The name of the control that the <code>GetControl</code> API returned. </p>",
          "shape": "Control"
        }
      },
      "type": "structure"
    },
    "GetDelegationsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetDelegationsResponse": {
      "members": {
        "delegations": {
          "documentation": "<p> The list of delegations that the <code>GetDelegations</code> API returned. </p>",
          "shape": "DelegationMetadataList"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetEvidenceByEvidenceFolderRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "evidenceFolderId": {
          "documentation": "<p> The unique identifier for the folder that the evidence is stored in. </p>",
          "location": "uri",
          "locationName": "evidenceFolderId",
          "shape": "UUID"
        },
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "evidenceFolderId"
      ],
      "type": "structure"
    },
    "GetEvidenceByEvidenceFolderResponse": {
      "members": {
        "evidence": {
          "documentation": "<p> The list of evidence that the <code>GetEvidenceByEvidenceFolder</code> API returned. </p>",
          "shape": "EvidenceList"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetEvidenceFolderRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "evidenceFolderId": {
          "documentation": "<p> The unique identifier for the folder that the evidence is stored in. </p>",
          "location": "uri",
          "locationName": "evidenceFolderId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "evidenceFolderId"
      ],
      "type": "structure"
    },
    "GetEvidenceFolderResponse": {
      "members": {
        "evidenceFolder": {
          "documentation": "<p> The folder that the evidence is stored in. </p>",
          "shape": "AssessmentEvidenceFolder"
        }
      },
      "type": "structure"
    },
    "GetEvidenceFoldersByAssessmentControlRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlId": {
          "documentation": "<p> The identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "controlId"
      ],
      "type": "structure"
    },
    "GetEvidenceFoldersByAssessmentControlResponse": {
      "members": {
        "evidenceFolders": {
          "documentation": "<p> The list of evidence folders that the <code>GetEvidenceFoldersByAssessmentControl</code> API returned. </p>",
          "shape": "AssessmentEvidenceFolders"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetEvidenceFoldersByAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "GetEvidenceFoldersByAssessmentResponse": {
      "members": {
        "evidenceFolders": {
          "documentation": "<p> The list of evidence folders that the <code>GetEvidenceFoldersByAssessment</code> API returned. </p>",
          "shape": "AssessmentEvidenceFolders"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "GetEvidenceRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "evidenceFolderId": {
          "documentation": "<p> The unique identifier for the folder that the evidence is stored in. </p>",
          "location": "uri",
          "locationName": "evidenceFolderId",
          "shape": "UUID"
        },
        "evidenceId": {
          "documentation": "<p> The unique identifier for the evidence. </p>",
          "location": "uri",
          "locationName": "evidenceId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "evidenceFolderId",
        "evidenceId"
      ],
      "type": "structure"
    },
    "GetEvidenceResponse": {
      "members": {
        "evidence": {
          "documentation": "<p> The evidence that the <code>GetEvidenceResponse</code> API returned. </p>",
          "shape": "Evidence"
        }
      },
      "type": "structure"
    },
    "GetInsightsByAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p>The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "GetInsightsByAssessmentResponse": {
      "members": {
        "insights": {
          "documentation": "<p> The assessment analytics data that the <code>GetInsightsByAssessment</code> API returned. </p>",
          "shape": "InsightsByAssessment"
        }
      },
      "type": "structure"
    },
    "GetInsightsRequest": {
      "members": {},
      "type": "structure"
    },
    "GetInsightsResponse": {
      "members": {
        "insights": {
          "documentation": "<p>The analytics data that the <code>GetInsights</code> API returned. </p>",
          "shape": "Insights"
        }
      },
      "type": "structure"
    },
    "GetOrganizationAdminAccountRequest": {
      "members": {},
      "type": "structure"
    },
    "GetOrganizationAdminAccountResponse": {
      "members": {
        "adminAccountId": {
          "documentation": "<p> The identifier for the administrator account. </p>",
          "shape": "AccountId"
        },
        "organizationId": {
          "documentation": "<p> The identifier for the organization. </p>",
          "shape": "organizationId"
        }
      },
      "type": "structure"
    },
    "GetServicesInScopeRequest": {
      "members": {},
      "type": "structure"
    },
    "GetServicesInScopeResponse": {
      "members": {
        "serviceMetadata": {
          "documentation": "<p> The metadata that's associated with the Amazon Web Service. </p>",
          "shape": "ServiceMetadataList"
        }
      },
      "type": "structure"
    },
    "GetSettingsRequest": {
      "members": {
        "attribute": {
          "documentation": "<p> The list of <code>SettingAttribute</code> enum values. </p>",
          "location": "uri",
          "locationName": "attribute",
          "shape": "SettingAttribute"
        }
      },
      "required": [
        "attribute"
      ],
      "type": "structure"
    },
    "GetSettingsResponse": {
      "members": {
        "settings": {
          "documentation": "<p> The settings object that holds all supported Audit Manager settings. </p>",
          "shape": "Settings"
        }
      },
      "type": "structure"
    },
    "HyperlinkName": {
      "max": 200,
      "min": 1,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "IamArn": {
      "max": 2048,
      "min": 20,
      "pattern": "^arn:.*:iam:.*",
      "type": "string"
    },
    "Insights": {
      "documentation": "<p>A summary of the latest analytics data for all your active assessments. </p> <p>This summary is a snapshot of the data that your active assessments collected on the <code>lastUpdated</code> date. It\u2019s important to understand that the following totals are daily counts based on this date \u2014 they aren\u2019t a total sum to date. </p> <p>The <code>Insights</code> data is eventually consistent. This means that, when you read data from <code>Insights</code>, the response might not instantly reflect the results of a recently completed write or update operation. If you repeat your read request after a few hours, the response should return the latest data.</p> <note> <p>If you delete an assessment or change its status to inactive, <code>InsightsByAssessment</code> includes data for that assessment as follows.</p> <ul> <li> <p> <b>Inactive assessments</b> - If Audit Manager collected evidence for your assessment before you changed it inactive, that evidence is included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> <li> <p> <b>Deleted assessments</b> - If Audit Manager collected evidence for your assessment before you deleted it, that evidence isn't included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> </ul> </note>",
      "members": {
        "activeAssessmentsCount": {
          "documentation": "<p>The number of active assessments in Audit Manager. </p>",
          "shape": "NullableInteger"
        },
        "assessmentControlsCountByNoncompliantEvidence": {
          "documentation": "<p>The number of assessment controls that collected non-compliant evidence on the <code>lastUpdated</code> date. </p>",
          "shape": "NullableInteger"
        },
        "compliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as compliant on the <code>lastUpdated</code> date. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        },
        "inconclusiveEvidenceCount": {
          "documentation": "<p>The number of evidence without a compliance check ruling. Evidence is inconclusive when the associated control uses Security Hub or Config as a data source but you didn't enable those services. This is also the case when a control uses a data source that doesn\u2019t support compliance checks (for example: manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i>, it's classed as <i>inconclusive</i> in <code>Insights</code> data.</p> </note>",
          "shape": "NullableInteger"
        },
        "lastUpdated": {
          "documentation": "<p>The time when the cross-assessment insights were last updated. </p>",
          "shape": "Timestamp"
        },
        "noncompliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as non-compliant on the <code>lastUpdated</code> date. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        },
        "totalAssessmentControlsCount": {
          "documentation": "<p>The total number of controls across all active assessments. </p>",
          "shape": "NullableInteger"
        }
      },
      "type": "structure"
    },
    "InsightsByAssessment": {
      "documentation": "<p>A summary of the latest analytics data for a specific active assessment.</p> <p>This summary is a snapshot of the data that was collected on the <code>lastUpdated</code> date. It\u2019s important to understand that the totals in <code>InsightsByAssessment</code> are daily counts based on this date \u2014 they aren\u2019t a total sum to date. </p> <p>The <code>InsightsByAssessment</code> data is eventually consistent. This means that when you read data from <code>InsightsByAssessment</code>, the response might not instantly reflect the results of a recently completed write or update operation. If you repeat your read request after a few hours, the response returns the latest data.</p> <note> <p>If you delete an assessment or change its status to inactive, <code>InsightsByAssessment</code> includes data for that assessment as follows.</p> <ul> <li> <p> <b>Inactive assessments</b> - If Audit Manager collected evidence for your assessment before you changed it inactive, that evidence is included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> <li> <p> <b>Deleted assessments</b> - If Audit Manager collected evidence for your assessment before you deleted it, that evidence isn't included in the <code>InsightsByAssessment</code> counts for that day.</p> </li> </ul> </note>",
      "members": {
        "assessmentControlsCountByNoncompliantEvidence": {
          "documentation": "<p>The number of assessment controls that collected non-compliant evidence on the <code>lastUpdated</code> date. </p>",
          "shape": "NullableInteger"
        },
        "compliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as compliant. This includes evidence that was collected from Security Hub with a <i>Pass</i> ruling, or collected from Config with a <i>Compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        },
        "inconclusiveEvidenceCount": {
          "documentation": "<p>The amount of evidence without a compliance check ruling. Evidence is inconclusive if the associated control uses Security Hub or Config as a data source and you didn't enable those services. This is also the case if a control uses a data source that doesn\u2019t support compliance checks (for example, manual evidence, API calls, or CloudTrail). </p> <note> <p>If evidence has a compliance check status of <i>not applicable</i>, it's classified as <i>inconclusive</i> in <code>InsightsByAssessment</code> data.</p> </note>",
          "shape": "NullableInteger"
        },
        "lastUpdated": {
          "documentation": "<p>The time when the assessment insights were last updated.</p>",
          "shape": "Timestamp"
        },
        "noncompliantEvidenceCount": {
          "documentation": "<p>The number of compliance check evidence that Audit Manager classified as non-compliant. This includes evidence that was collected from Security Hub with a <i>Fail</i> ruling, or collected from Config with a <i>Non-compliant</i> ruling. </p>",
          "shape": "NullableInteger"
        },
        "totalAssessmentControlsCount": {
          "documentation": "<p>The total number of controls in the assessment. </p>",
          "shape": "NullableInteger"
        }
      },
      "type": "structure"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServerException": {
      "documentation": "<p> An internal service error occurred during the processing of your request. Try again later. </p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "KeywordInputType": {
      "enum": [
        "SELECT_FROM_LIST"
      ],
      "type": "string"
    },
    "KeywordValue": {
      "max": 100,
      "min": 1,
      "pattern": "^[a-zA-Z_0-9-\\s().]+$",
      "type": "string"
    },
    "Keywords": {
      "member": {
        "shape": "KeywordValue"
      },
      "type": "list"
    },
    "KmsKey": {
      "max": 2048,
      "min": 7,
      "pattern": "^arn:.*:kms:.*|DEFAULT",
      "type": "string"
    },
    "LastUpdatedBy": {
      "max": 100,
      "min": 1,
      "pattern": "^[a-zA-Z0-9\\s-_()\\[\\]]+$",
      "type": "string"
    },
    "ListAssessmentControlInsightsByControlDomainRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p>The unique identifier for the active assessment. </p>",
          "location": "querystring",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "controlDomainId": {
          "documentation": "<p>The unique identifier for the control domain. </p>",
          "location": "querystring",
          "locationName": "controlDomainId",
          "shape": "UUID"
        },
        "maxResults": {
          "documentation": "<p>Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "controlDomainId",
        "assessmentId"
      ],
      "type": "structure"
    },
    "ListAssessmentControlInsightsByControlDomainResponse": {
      "members": {
        "controlInsightsByAssessment": {
          "documentation": "<p>The assessment control analytics data that the <code>ListAssessmentControlInsightsByControlDomain</code> API returned. </p>",
          "shape": "ControlInsightsMetadataByAssessment"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAssessmentFrameworkShareRequestsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        },
        "requestType": {
          "documentation": "<p> Specifies whether the share request is a sent request or a received request.</p>",
          "location": "querystring",
          "locationName": "requestType",
          "shape": "ShareRequestType"
        }
      },
      "required": [
        "requestType"
      ],
      "type": "structure"
    },
    "ListAssessmentFrameworkShareRequestsResponse": {
      "members": {
        "assessmentFrameworkShareRequests": {
          "documentation": "<p> The list of share requests that the <code>ListAssessmentFrameworkShareRequests</code> API returned. </p>",
          "shape": "AssessmentFrameworkShareRequestList"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAssessmentFrameworksRequest": {
      "members": {
        "frameworkType": {
          "documentation": "<p> The type of framework, such as a standard framework or a custom framework. </p>",
          "location": "querystring",
          "locationName": "frameworkType",
          "shape": "FrameworkType"
        },
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "frameworkType"
      ],
      "type": "structure"
    },
    "ListAssessmentFrameworksResponse": {
      "members": {
        "frameworkMetadataList": {
          "documentation": "<p> The list of metadata objects for the framework. </p>",
          "shape": "FrameworkMetadataList"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAssessmentMetadata": {
      "member": {
        "shape": "AssessmentMetadataItem"
      },
      "type": "list"
    },
    "ListAssessmentReportsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAssessmentReportsResponse": {
      "members": {
        "assessmentReports": {
          "documentation": "<p> The list of assessment reports that the <code>ListAssessmentReports</code> API returned. </p>",
          "shape": "AssessmentReportsMetadata"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListAssessmentsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        },
        "status": {
          "documentation": "<p> The current status of the assessment.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "AssessmentStatus"
        }
      },
      "type": "structure"
    },
    "ListAssessmentsResponse": {
      "members": {
        "assessmentMetadata": {
          "documentation": "<p> The metadata that's associated with the assessment. </p>",
          "shape": "ListAssessmentMetadata"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListControlDomainInsightsByAssessmentRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p>The unique identifier for the active assessment. </p>",
          "location": "querystring",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "maxResults": {
          "documentation": "<p>Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "assessmentId"
      ],
      "type": "structure"
    },
    "ListControlDomainInsightsByAssessmentResponse": {
      "members": {
        "controlDomainInsights": {
          "documentation": "<p>The control domain analytics data that the <code>ListControlDomainInsightsByAssessment</code> API returned. </p>",
          "shape": "ControlDomainInsightsList"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListControlDomainInsightsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListControlDomainInsightsResponse": {
      "members": {
        "controlDomainInsights": {
          "documentation": "<p>The control domain analytics data that the <code>ListControlDomainInsights</code> API returned. </p>",
          "shape": "ControlDomainInsightsList"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListControlInsightsByControlDomainRequest": {
      "members": {
        "controlDomainId": {
          "documentation": "<p>The unique identifier for the control domain. </p>",
          "location": "querystring",
          "locationName": "controlDomainId",
          "shape": "UUID"
        },
        "maxResults": {
          "documentation": "<p>Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "controlDomainId"
      ],
      "type": "structure"
    },
    "ListControlInsightsByControlDomainResponse": {
      "members": {
        "controlInsightsMetadata": {
          "documentation": "<p>The control analytics data that the <code>ListControlInsightsByControlDomain</code> API returned. </p>",
          "shape": "ControlInsightsMetadata"
        },
        "nextToken": {
          "documentation": "<p>The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListControlsRequest": {
      "members": {
        "controlType": {
          "documentation": "<p> The type of control, such as a standard control or a custom control. </p>",
          "location": "querystring",
          "locationName": "controlType",
          "shape": "ControlType"
        },
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "required": [
        "controlType"
      ],
      "type": "structure"
    },
    "ListControlsResponse": {
      "members": {
        "controlMetadataList": {
          "documentation": "<p> The list of control metadata objects that the <code>ListControls</code> API returned. </p>",
          "shape": "ControlMetadataList"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListKeywordsForDataSourceRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        },
        "source": {
          "documentation": "<p> The control mapping data source that the keywords apply to. </p>",
          "location": "querystring",
          "locationName": "source",
          "shape": "SourceType"
        }
      },
      "required": [
        "source"
      ],
      "type": "structure"
    },
    "ListKeywordsForDataSourceResponse": {
      "members": {
        "keywords": {
          "documentation": "<p> The list of keywords for the event mapping source. </p>",
          "shape": "Keywords"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListNotificationsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> Represents the maximum number of results on a page or for an API request call. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "Token"
        }
      },
      "type": "structure"
    },
    "ListNotificationsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p> The pagination token that's used to fetch the next set of results. </p>",
          "shape": "Token"
        },
        "notifications": {
          "documentation": "<p> The returned list of notifications. </p>",
          "shape": "Notifications"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the resource. </p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "AuditManagerArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p> The list of tags that the <code>ListTagsForResource</code> API returned. </p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ManualEvidence": {
      "documentation": "<p> Evidence that's uploaded to Audit Manager manually. </p>",
      "members": {
        "s3ResourcePath": {
          "documentation": "<p> The Amazon S3 URL that points to a manual evidence object. </p>",
          "shape": "S3Url"
        }
      },
      "type": "structure"
    },
    "ManualEvidenceList": {
      "max": 50,
      "member": {
        "shape": "ManualEvidence"
      },
      "min": 1,
      "type": "list"
    },
    "MaxResults": {
      "documentation": "Max results in the page.",
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "NonEmptyString": {
      "max": 2048,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "Notification": {
      "documentation": "<p> The notification that informs a user of an update in Audit Manager. For example, this includes the notification that's sent when a control set is delegated for review. </p>",
      "members": {
        "assessmentId": {
          "documentation": "<p> The identifier for the assessment. </p>",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p> The name of the related assessment. </p>",
          "shape": "AssessmentName"
        },
        "controlSetId": {
          "documentation": "<p> The identifier for the control set. </p>",
          "shape": "ControlSetId"
        },
        "controlSetName": {
          "documentation": "<p> Specifies the name of the control set that the notification is about. </p>",
          "shape": "NonEmptyString"
        },
        "description": {
          "documentation": "<p> The description of the notification. </p>",
          "shape": "NonEmptyString"
        },
        "eventTime": {
          "documentation": "<p> The time when the notification was sent. </p>",
          "shape": "Timestamp"
        },
        "id": {
          "documentation": "<p> The unique identifier for the notification. </p>",
          "shape": "TimestampUUID"
        },
        "source": {
          "documentation": "<p> The sender of the notification. </p>",
          "shape": "NonEmptyString"
        }
      },
      "type": "structure"
    },
    "Notifications": {
      "member": {
        "shape": "Notification"
      },
      "type": "list"
    },
    "NullableInteger": {
      "type": "integer"
    },
    "ObjectTypeEnum": {
      "enum": [
        "ASSESSMENT",
        "CONTROL_SET",
        "CONTROL",
        "DELEGATION",
        "ASSESSMENT_REPORT"
      ],
      "type": "string"
    },
    "Region": {
      "pattern": "^[a-z]{2}-[a-z]+-[0-9]{1}$",
      "type": "string"
    },
    "RegisterAccountRequest": {
      "members": {
        "delegatedAdminAccount": {
          "documentation": "<p> The delegated administrator account for Audit Manager. </p>",
          "shape": "AccountId"
        },
        "kmsKey": {
          "documentation": "<p> The KMS key details. </p>",
          "shape": "KmsKey"
        }
      },
      "type": "structure"
    },
    "RegisterAccountResponse": {
      "members": {
        "status": {
          "documentation": "<p> The status of the account registration request. </p>",
          "shape": "AccountStatus"
        }
      },
      "type": "structure"
    },
    "RegisterOrganizationAdminAccountRequest": {
      "members": {
        "adminAccountId": {
          "documentation": "<p> The identifier for the delegated administrator account. </p>",
          "shape": "AccountId"
        }
      },
      "required": [
        "adminAccountId"
      ],
      "type": "structure"
    },
    "RegisterOrganizationAdminAccountResponse": {
      "members": {
        "adminAccountId": {
          "documentation": "<p> The identifier for the delegated administrator account. </p>",
          "shape": "AccountId"
        },
        "organizationId": {
          "documentation": "<p> The identifier for the organization. </p>",
          "shape": "organizationId"
        }
      },
      "type": "structure"
    },
    "Resource": {
      "documentation": "<p> A system asset that's evaluated in an Audit Manager assessment. </p>",
      "members": {
        "arn": {
          "documentation": "<p> The Amazon Resource Name (ARN) for the resource. </p>",
          "shape": "GenericArn"
        },
        "value": {
          "documentation": "<p> The value of the resource. </p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p> The resource that's specified in the request can't be found. </p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "resourceId": {
          "documentation": "<p> The unique identifier for the resource. </p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p> The type of resource that's affected by the error. </p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "resourceId",
        "resourceType"
      ],
      "type": "structure"
    },
    "Resources": {
      "member": {
        "shape": "Resource"
      },
      "type": "list"
    },
    "Role": {
      "documentation": "<p> The wrapper that contains the Audit Manager role information of the current user. This includes the role type and IAM Amazon Resource Name (ARN). </p>",
      "members": {
        "roleArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the IAM role. </p>",
          "shape": "IamArn"
        },
        "roleType": {
          "documentation": "<p> The type of customer persona. </p> <note> <p>In <code>CreateAssessment</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>. </p> <p>In <code>UpdateSettings</code>, <code>roleType</code> can only be <code>PROCESS_OWNER</code>.</p> <p>In <code>BatchCreateDelegationByAssessment</code>, <code>roleType</code> can only be <code>RESOURCE_OWNER</code>.</p> </note>",
          "shape": "RoleType"
        }
      },
      "required": [
        "roleType",
        "roleArn"
      ],
      "type": "structure"
    },
    "RoleType": {
      "enum": [
        "PROCESS_OWNER",
        "RESOURCE_OWNER"
      ],
      "type": "string"
    },
    "Roles": {
      "member": {
        "shape": "Role"
      },
      "type": "list"
    },
    "S3Url": {
      "max": 1024,
      "min": 1,
      "pattern": "^(S|s)3:\\/\\/[a-zA-Z0-9\\-\\.\\(\\)\\'\\*\\_\\!\\/]+$",
      "type": "string"
    },
    "SNSTopic": {
      "max": 255,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_\\(\\)\\[\\]]+$",
      "type": "string"
    },
    "Scope": {
      "documentation": "<p> The wrapper that contains the Amazon Web Services accounts and services that are in scope for the assessment. </p>",
      "members": {
        "awsAccounts": {
          "documentation": "<p> The Amazon Web Services accounts that are included in the scope of the assessment. </p>",
          "shape": "AWSAccounts"
        },
        "awsServices": {
          "documentation": "<p> The Amazon Web Services services that are included in the scope of the assessment. </p>",
          "shape": "AWSServices"
        }
      },
      "type": "structure"
    },
    "ServiceMetadata": {
      "documentation": "<p> The metadata that's associated with the Amazon Web Service. </p>",
      "members": {
        "category": {
          "documentation": "<p> The category that the Amazon Web Service belongs to, such as compute, storage, or database. </p>",
          "shape": "NonEmptyString"
        },
        "description": {
          "documentation": "<p> The description of the Amazon Web Service. </p>",
          "shape": "NonEmptyString"
        },
        "displayName": {
          "documentation": "<p> The display name of the Amazon Web Service. </p>",
          "shape": "NonEmptyString"
        },
        "name": {
          "documentation": "<p> The name of the Amazon Web Service. </p>",
          "shape": "AWSServiceName"
        }
      },
      "type": "structure"
    },
    "ServiceMetadataList": {
      "member": {
        "shape": "ServiceMetadata"
      },
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>You've reached your account quota for this resource type. To perform the requested action, delete some existing resources or <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html\">request a quota increase</a> from the Service Quotas console. For a list of Audit Manager service quotas, see <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/service-quotas.html\">Quotas and restrictions for Audit Manager</a>.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "SettingAttribute": {
      "enum": [
        "ALL",
        "IS_AWS_ORG_ENABLED",
        "SNS_TOPIC",
        "DEFAULT_ASSESSMENT_REPORTS_DESTINATION",
        "DEFAULT_PROCESS_OWNERS"
      ],
      "type": "string"
    },
    "Settings": {
      "documentation": "<p> The settings object that holds all supported Audit Manager settings. </p>",
      "members": {
        "defaultAssessmentReportsDestination": {
          "documentation": "<p> The default storage destination for assessment reports. </p>",
          "shape": "AssessmentReportsDestination"
        },
        "defaultProcessOwners": {
          "documentation": "<p> The designated default audit owners. </p>",
          "shape": "Roles"
        },
        "isAwsOrgEnabled": {
          "documentation": "<p> Specifies whether Organizations is enabled. </p>",
          "shape": "Boolean"
        },
        "kmsKey": {
          "documentation": "<p> The KMS key details. </p>",
          "shape": "KmsKey"
        },
        "snsTopic": {
          "documentation": "<p> The designated Amazon Simple Notification Service (Amazon SNS) topic. </p>",
          "shape": "SNSTopic"
        }
      },
      "type": "structure"
    },
    "ShareRequestAction": {
      "enum": [
        "ACCEPT",
        "DECLINE",
        "REVOKE"
      ],
      "type": "string"
    },
    "ShareRequestComment": {
      "max": 500,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ShareRequestStatus": {
      "enum": [
        "ACTIVE",
        "REPLICATING",
        "SHARED",
        "EXPIRING",
        "FAILED",
        "EXPIRED",
        "DECLINED",
        "REVOKED"
      ],
      "type": "string"
    },
    "ShareRequestType": {
      "enum": [
        "SENT",
        "RECEIVED"
      ],
      "type": "string"
    },
    "SnsArn": {
      "max": 2048,
      "min": 4,
      "pattern": "^arn:.*:sns:.*|NONE",
      "type": "string"
    },
    "SourceDescription": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "SourceFrequency": {
      "enum": [
        "DAILY",
        "WEEKLY",
        "MONTHLY"
      ],
      "type": "string"
    },
    "SourceKeyword": {
      "documentation": "<p> The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. </p> <p> To learn more about the supported keywords that you can use when mapping a control data source, see the following pages in the <i>Audit Manager User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html\">Config rules supported by Audit Manager</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html\">Security Hub controls supported by Audit Manager</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html\">API calls supported by Audit Manager</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-cloudtrail.html\">CloudTrail event names supported by Audit Manager</a> </p> </li> </ul>",
      "members": {
        "keywordInputType": {
          "documentation": "<p> The input method for the keyword. </p>",
          "shape": "KeywordInputType"
        },
        "keywordValue": {
          "documentation": "<p> The value of the keyword that's used when mapping a control data source. For example, this can be a CloudTrail event name, a rule name for Config, a Security Hub control, or the name of an Amazon Web Services API call. </p> <p>If you\u2019re mapping a data source to a rule in Config, the <code>keywordValue</code> that you specify depends on the type of rule:</p> <ul> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html\">managed rules</a>, you can use the rule identifier as the <code>keywordValue</code>. You can find the rule identifier from the <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html\">list of Config managed rules</a>.</p> <ul> <li> <p>Managed rule name: <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/s3-bucket-acl-prohibited.html\">s3-bucket-acl-prohibited</a> </p> <p> <code>keywordValue</code>: <code>S3_BUCKET_ACL_PROHIBITED</code> </p> </li> </ul> </li> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html\">custom rules</a>, you form the <code>keywordValue</code> by adding the <code>Custom_</code> prefix to the rule name. This prefix distinguishes the rule from a managed rule.</p> <ul> <li> <p>Custom rule name: my-custom-config-rule</p> <p> <code>keywordValue</code>: <code>Custom_my-custom-config-rule</code> </p> </li> </ul> </li> <li> <p>For <a href=\"https://docs.aws.amazon.com/config/latest/developerguide/service-linked-awsconfig-rules.html\">service-linked rules</a>, you form the <code>keywordValue</code> by adding the <code>Custom_</code> prefix to the rule name. In addition, you remove the suffix ID that appears at the end of the rule name.</p> <ul> <li> <p>Service-linked rule name: CustomRuleForAccount-conformance-pack-szsm1uv0w</p> <p> <code>keywordValue</code>: <code>Custom_CustomRuleForAccount-conformance-pack</code> </p> </li> <li> <p>Service-linked rule name: securityhub-api-gw-cache-encrypted-101104e1</p> <p> <code>keywordValue</code>: <code>Custom_securityhub-api-gw-cache-encrypted</code> </p> </li> <li> <p>Service-linked rule name: OrgConfigRule-s3-bucket-versioning-enabled-dbgzf8ba</p> <p> <code>keywordValue</code>: <code>Custom_OrgConfigRule-s3-bucket-versioning-enabled</code> </p> </li> </ul> </li> </ul>",
          "shape": "KeywordValue"
        }
      },
      "type": "structure"
    },
    "SourceName": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "SourceSetUpOption": {
      "enum": [
        "System_Controls_Mapping",
        "Procedural_Controls_Mapping"
      ],
      "type": "string"
    },
    "SourceType": {
      "enum": [
        "AWS_Cloudtrail",
        "AWS_Config",
        "AWS_Security_Hub",
        "AWS_API_Call",
        "MANUAL"
      ],
      "type": "string"
    },
    "StartAssessmentFrameworkShareRequest": {
      "members": {
        "comment": {
          "documentation": "<p> An optional comment from the sender about the share request. </p>",
          "shape": "ShareRequestComment"
        },
        "destinationAccount": {
          "documentation": "<p> The Amazon Web Services account of the recipient. </p>",
          "shape": "AccountId"
        },
        "destinationRegion": {
          "documentation": "<p> The Amazon Web Services Region of the recipient. </p>",
          "shape": "Region"
        },
        "frameworkId": {
          "documentation": "<p> The unique identifier for the custom framework to be shared. </p>",
          "location": "uri",
          "locationName": "frameworkId",
          "shape": "UUID"
        }
      },
      "required": [
        "frameworkId",
        "destinationAccount",
        "destinationRegion"
      ],
      "type": "structure"
    },
    "StartAssessmentFrameworkShareResponse": {
      "members": {
        "assessmentFrameworkShareRequest": {
          "documentation": "<p> The share request that's created by the <code>StartAssessmentFrameworkShare</code> API. </p>",
          "shape": "AssessmentFrameworkShareRequest"
        }
      },
      "type": "structure"
    },
    "String": {
      "max": 2048,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the resource. </p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "AuditManagerArn"
        },
        "tags": {
          "documentation": "<p> The tags that are associated with the resource. </p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": ".{0,255}",
      "type": "string"
    },
    "TestingInformation": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TimestampUUID": {
      "max": 50,
      "min": 47,
      "pattern": "^[0-9]{10,13}_[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "type": "string"
    },
    "Token": {
      "max": 1000,
      "min": 1,
      "pattern": "^[A-Za-z0-9+\\/=]*$",
      "type": "string"
    },
    "TroubleshootingText": {
      "max": 1000,
      "pattern": "^[\\w\\W\\s\\S]*$",
      "type": "string"
    },
    "URL": {
      "documentation": "<p> Short for uniform resource locator. A URL is used as a unique identifier to locate a resource on the internet. </p>",
      "members": {
        "hyperlinkName": {
          "documentation": "<p> The name or word that's used as a hyperlink to the URL. </p>",
          "shape": "HyperlinkName"
        },
        "link": {
          "documentation": "<p> The unique identifier for the internet resource. </p>",
          "shape": "UrlLink"
        }
      },
      "type": "structure"
    },
    "UUID": {
      "max": 36,
      "min": 36,
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p> The Amazon Resource Name (ARN) of the specified resource. </p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "AuditManagerArn"
        },
        "tagKeys": {
          "documentation": "<p> The name or key of the tag. </p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAssessmentControlRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "commentBody": {
          "documentation": "<p> The comment body text for the control. </p>",
          "shape": "ControlCommentBody"
        },
        "controlId": {
          "documentation": "<p> The unique identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "ControlSetId"
        },
        "controlStatus": {
          "documentation": "<p> The status of the control. </p>",
          "shape": "ControlStatus"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "controlId"
      ],
      "type": "structure"
    },
    "UpdateAssessmentControlResponse": {
      "members": {
        "control": {
          "documentation": "<p> The name of the updated control set that the <code>UpdateAssessmentControl</code> API returned. </p>",
          "shape": "AssessmentControl"
        }
      },
      "type": "structure"
    },
    "UpdateAssessmentControlSetStatusRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "comment": {
          "documentation": "<p> The comment that's related to the status update. </p>",
          "shape": "DelegationComment"
        },
        "controlSetId": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "location": "uri",
          "locationName": "controlSetId",
          "shape": "String"
        },
        "status": {
          "documentation": "<p> The status of the control set that's being updated. </p>",
          "shape": "ControlSetStatus"
        }
      },
      "required": [
        "assessmentId",
        "controlSetId",
        "status",
        "comment"
      ],
      "type": "structure"
    },
    "UpdateAssessmentControlSetStatusResponse": {
      "members": {
        "controlSet": {
          "documentation": "<p> The name of the updated control set that the <code>UpdateAssessmentControlSetStatus</code> API returned. </p>",
          "shape": "AssessmentControlSet"
        }
      },
      "type": "structure"
    },
    "UpdateAssessmentFrameworkControlSet": {
      "documentation": "<p> A <code>controlSet</code> entity that represents a collection of controls in Audit Manager. This doesn't contain the control set ID. </p>",
      "members": {
        "controls": {
          "documentation": "<p> The list of controls that are contained within the control set. </p>",
          "shape": "CreateAssessmentFrameworkControls"
        },
        "id": {
          "documentation": "<p> The unique identifier for the control set. </p>",
          "shape": "ControlSetName"
        },
        "name": {
          "documentation": "<p> The name of the control set. </p>",
          "shape": "ControlSetName"
        }
      },
      "required": [
        "name",
        "controls"
      ],
      "type": "structure"
    },
    "UpdateAssessmentFrameworkControlSets": {
      "member": {
        "shape": "UpdateAssessmentFrameworkControlSet"
      },
      "min": 1,
      "type": "list"
    },
    "UpdateAssessmentFrameworkRequest": {
      "members": {
        "complianceType": {
          "documentation": "<p> The compliance type that the new custom framework supports, such as CIS or HIPAA. </p>",
          "shape": "ComplianceType"
        },
        "controlSets": {
          "documentation": "<p> The control sets that are associated with the framework. </p>",
          "shape": "UpdateAssessmentFrameworkControlSets"
        },
        "description": {
          "documentation": "<p> The description of the updated framework. </p>",
          "shape": "FrameworkDescription"
        },
        "frameworkId": {
          "documentation": "<p> The unique identifier for the framework. </p>",
          "location": "uri",
          "locationName": "frameworkId",
          "shape": "UUID"
        },
        "name": {
          "documentation": "<p> The name of the framework to be updated. </p>",
          "shape": "FrameworkName"
        }
      },
      "required": [
        "frameworkId",
        "name",
        "controlSets"
      ],
      "type": "structure"
    },
    "UpdateAssessmentFrameworkResponse": {
      "members": {
        "framework": {
          "documentation": "<p> The name of the framework. </p>",
          "shape": "Framework"
        }
      },
      "type": "structure"
    },
    "UpdateAssessmentFrameworkShareRequest": {
      "members": {
        "action": {
          "documentation": "<p>Specifies the update action for the share request.</p>",
          "shape": "ShareRequestAction"
        },
        "requestId": {
          "documentation": "<p> The unique identifier for the share request. </p>",
          "location": "uri",
          "locationName": "requestId",
          "shape": "UUID"
        },
        "requestType": {
          "documentation": "<p>Specifies whether the share request is a sent request or a received request.</p>",
          "shape": "ShareRequestType"
        }
      },
      "required": [
        "requestId",
        "requestType",
        "action"
      ],
      "type": "structure"
    },
    "UpdateAssessmentFrameworkShareResponse": {
      "members": {
        "assessmentFrameworkShareRequest": {
          "documentation": "<p> The updated share request that's returned by the <code>UpdateAssessmentFrameworkShare</code> operation. </p>",
          "shape": "AssessmentFrameworkShareRequest"
        }
      },
      "type": "structure"
    },
    "UpdateAssessmentRequest": {
      "members": {
        "assessmentDescription": {
          "documentation": "<p> The description of the assessment. </p>",
          "shape": "AssessmentDescription"
        },
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "assessmentName": {
          "documentation": "<p> The name of the assessment to be updated. </p>",
          "shape": "AssessmentName"
        },
        "assessmentReportsDestination": {
          "documentation": "<p> The assessment report storage destination for the assessment that's being updated. </p>",
          "shape": "AssessmentReportsDestination"
        },
        "roles": {
          "documentation": "<p> The list of roles for the assessment. </p>",
          "shape": "Roles"
        },
        "scope": {
          "documentation": "<p> The scope of the assessment. </p>",
          "shape": "Scope"
        }
      },
      "required": [
        "assessmentId",
        "scope"
      ],
      "type": "structure"
    },
    "UpdateAssessmentResponse": {
      "members": {
        "assessment": {
          "documentation": "<p> The response object for the <code>UpdateAssessmentRequest</code> API. This is the name of the updated assessment.</p>",
          "shape": "Assessment"
        }
      },
      "type": "structure"
    },
    "UpdateAssessmentStatusRequest": {
      "members": {
        "assessmentId": {
          "documentation": "<p> The unique identifier for the assessment. </p>",
          "location": "uri",
          "locationName": "assessmentId",
          "shape": "UUID"
        },
        "status": {
          "documentation": "<p> The current status of the assessment. </p>",
          "shape": "AssessmentStatus"
        }
      },
      "required": [
        "assessmentId",
        "status"
      ],
      "type": "structure"
    },
    "UpdateAssessmentStatusResponse": {
      "members": {
        "assessment": {
          "documentation": "<p> The name of the updated assessment that the <code>UpdateAssessmentStatus</code> API returned. </p>",
          "shape": "Assessment"
        }
      },
      "type": "structure"
    },
    "UpdateControlRequest": {
      "members": {
        "actionPlanInstructions": {
          "documentation": "<p> The recommended actions to carry out if the control isn't fulfilled. </p>",
          "shape": "ActionPlanInstructions"
        },
        "actionPlanTitle": {
          "documentation": "<p> The title of the action plan for remediating the control. </p>",
          "shape": "ActionPlanTitle"
        },
        "controlId": {
          "documentation": "<p> The identifier for the control. </p>",
          "location": "uri",
          "locationName": "controlId",
          "shape": "UUID"
        },
        "controlMappingSources": {
          "documentation": "<p> The data mapping sources for the control. </p>",
          "shape": "ControlMappingSources"
        },
        "description": {
          "documentation": "<p> The optional description of the control. </p>",
          "shape": "ControlDescription"
        },
        "name": {
          "documentation": "<p> The name of the updated control. </p>",
          "shape": "ControlName"
        },
        "testingInformation": {
          "documentation": "<p> The steps that you should follow to determine if the control is met. </p>",
          "shape": "TestingInformation"
        }
      },
      "required": [
        "controlId",
        "name",
        "controlMappingSources"
      ],
      "type": "structure"
    },
    "UpdateControlResponse": {
      "members": {
        "control": {
          "documentation": "<p> The name of the updated control set that the <code>UpdateControl</code> API returned. </p>",
          "shape": "Control"
        }
      },
      "type": "structure"
    },
    "UpdateSettingsRequest": {
      "members": {
        "defaultAssessmentReportsDestination": {
          "documentation": "<p> The default storage destination for assessment reports. </p>",
          "shape": "AssessmentReportsDestination"
        },
        "defaultProcessOwners": {
          "documentation": "<p> A list of the default audit owners. </p>",
          "shape": "Roles"
        },
        "kmsKey": {
          "documentation": "<p> The KMS key details. </p>",
          "shape": "KmsKey"
        },
        "snsTopic": {
          "documentation": "<p> The Amazon Simple Notification Service (Amazon SNS) topic that Audit Manager sends notifications to. </p>",
          "shape": "SnsArn"
        }
      },
      "type": "structure"
    },
    "UpdateSettingsResponse": {
      "members": {
        "settings": {
          "documentation": "<p> The current list of settings. </p>",
          "shape": "Settings"
        }
      },
      "type": "structure"
    },
    "UrlLink": {
      "max": 8192,
      "min": 1,
      "pattern": "^(https?:\\/\\/)?(www\\.)?[a-zA-Z0-9-_]+([\\.]+[a-zA-Z]+)+[\\/\\w]*$",
      "type": "string"
    },
    "Username": {
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_()\\s\\+=,.@]+$",
      "type": "string"
    },
    "ValidateAssessmentReportIntegrityRequest": {
      "members": {
        "s3RelativePath": {
          "documentation": "<p> The relative path of the Amazon S3 bucket that the assessment report is stored in. </p>",
          "shape": "S3Url"
        }
      },
      "required": [
        "s3RelativePath"
      ],
      "type": "structure"
    },
    "ValidateAssessmentReportIntegrityResponse": {
      "members": {
        "signatureAlgorithm": {
          "documentation": "<p> The signature algorithm that's used to code sign the assessment report file. </p>",
          "shape": "String"
        },
        "signatureDateTime": {
          "documentation": "<p> The date and time signature that specifies when the assessment report was created. </p>",
          "shape": "String"
        },
        "signatureKeyId": {
          "documentation": "<p> The unique identifier for the validation signature key. </p>",
          "shape": "String"
        },
        "signatureValid": {
          "documentation": "<p> Specifies whether the signature key is valid. </p>",
          "shape": "Boolean"
        },
        "validationErrors": {
          "documentation": "<p> Represents any errors that occurred when validating the assessment report. </p>",
          "shape": "ValidationErrors"
        }
      },
      "type": "structure"
    },
    "ValidationErrors": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "ValidationException": {
      "documentation": "<p> The request has invalid or missing parameters. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "fields": {
          "documentation": "<p> The fields that caused the error, if applicable. </p>",
          "shape": "ValidationExceptionFieldList"
        },
        "message": {
          "shape": "String"
        },
        "reason": {
          "documentation": "<p> The reason the request failed validation. </p>",
          "shape": "ValidationExceptionReason"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ValidationExceptionField": {
      "documentation": "<p> Indicates that the request has invalid or missing parameters for the field. </p>",
      "members": {
        "message": {
          "documentation": "<p> The body of the error message. </p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p> The name of the validation error. </p>",
          "shape": "String"
        }
      },
      "required": [
        "name",
        "message"
      ],
      "type": "structure"
    },
    "ValidationExceptionFieldList": {
      "member": {
        "shape": "ValidationExceptionField"
      },
      "type": "list"
    },
    "ValidationExceptionReason": {
      "enum": [
        "unknownOperation",
        "cannotParse",
        "fieldValidationFailed",
        "other"
      ],
      "type": "string"
    },
    "organizationId": {
      "max": 34,
      "min": 12,
      "pattern": "o-[a-z0-9]{10,32}",
      "type": "string"
    }
  },
  "version": "2.0"
}
