{
  "documentation": "<p>AWS Signer is a fully managed code signing service to help you ensure the trust and integrity of your code. </p> <p>AWS Signer supports the following applications:</p> <p>With <i>code signing for AWS Lambda</i>, you can sign AWS Lambda deployment packages. Integrated support is provided for Amazon S3, Amazon CloudWatch, and AWS CloudTrail. In order to sign code, you create a signing profile and then use Signer to sign Lambda zip files in S3. </p> <p>With <i>code signing for IoT</i>, you can sign code for any IoT device that is supported by AWS. IoT code signing is available for <a href=\"http://docs.aws.amazon.com/freertos/latest/userguide/\">Amazon FreeRTOS</a> and <a href=\"http://docs.aws.amazon.com/iot/latest/developerguide/\">AWS IoT Device Management</a>, and is integrated with <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">AWS Certificate Manager (ACM)</a>. In order to sign code, you import a third-party code signing certificate using ACM, and use that to sign updates in Amazon FreeRTOS and AWS IoT Device Management. </p> <p>For more information about AWS Signer, see the <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/Welcome.html\">AWS Signer Developer Guide</a>.</p> <p/>",
  "metadata": {
    "apiVersion": "2017-08-25",
    "endpointPrefix": "signer",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "signer",
    "serviceFullName": "AWS Signer",
    "serviceId": "signer",
    "signatureVersion": "v4",
    "signingName": "signer",
    "uid": "signer-2017-08-25"
  },
  "operations": {
    "AddProfilePermission": {
      "documentation": "<p>Adds cross-account permissions to a signing profile.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ServiceLimitExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/signing-profiles/{profileName}/permissions"
      },
      "input": {
        "shape": "AddProfilePermissionRequest"
      },
      "name": "AddProfilePermission",
      "output": {
        "shape": "AddProfilePermissionResponse"
      }
    },
    "CancelSigningProfile": {
      "documentation": "<p>Changes the state of an <code>ACTIVE</code> signing profile to <code>CANCELED</code>. A canceled profile is still viewable with the <code>ListSigningProfiles</code> operation, but it cannot perform new signing jobs, and is deleted two years after cancelation.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/signing-profiles/{profileName}"
      },
      "input": {
        "shape": "CancelSigningProfileRequest"
      },
      "name": "CancelSigningProfile"
    },
    "DescribeSigningJob": {
      "documentation": "<p>Returns information about a specific code signing job. You specify the job by using the <code>jobId</code> value that is returned by the <a>StartSigningJob</a> operation. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-jobs/{jobId}"
      },
      "input": {
        "shape": "DescribeSigningJobRequest"
      },
      "name": "DescribeSigningJob",
      "output": {
        "shape": "DescribeSigningJobResponse"
      }
    },
    "GetSigningPlatform": {
      "documentation": "<p>Returns information on a specific signing platform.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-platforms/{platformId}"
      },
      "input": {
        "shape": "GetSigningPlatformRequest"
      },
      "name": "GetSigningPlatform",
      "output": {
        "shape": "GetSigningPlatformResponse"
      }
    },
    "GetSigningProfile": {
      "documentation": "<p>Returns information on a specific signing profile.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-profiles/{profileName}"
      },
      "input": {
        "shape": "GetSigningProfileRequest"
      },
      "name": "GetSigningProfile",
      "output": {
        "shape": "GetSigningProfileResponse"
      }
    },
    "ListProfilePermissions": {
      "documentation": "<p>Lists the cross-account permissions associated with a signing profile.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-profiles/{profileName}/permissions"
      },
      "input": {
        "shape": "ListProfilePermissionsRequest"
      },
      "name": "ListProfilePermissions",
      "output": {
        "shape": "ListProfilePermissionsResponse"
      }
    },
    "ListSigningJobs": {
      "documentation": "<p>Lists all your signing jobs. You can use the <code>maxResults</code> parameter to limit the number of signing jobs that are returned in the response. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-jobs"
      },
      "input": {
        "shape": "ListSigningJobsRequest"
      },
      "name": "ListSigningJobs",
      "output": {
        "shape": "ListSigningJobsResponse"
      }
    },
    "ListSigningPlatforms": {
      "documentation": "<p>Lists all signing platforms available in code signing that match the request parameters. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-platforms"
      },
      "input": {
        "shape": "ListSigningPlatformsRequest"
      },
      "name": "ListSigningPlatforms",
      "output": {
        "shape": "ListSigningPlatformsResponse"
      }
    },
    "ListSigningProfiles": {
      "documentation": "<p>Lists all available signing profiles in your AWS account. Returns only profiles with an <code>ACTIVE</code> status unless the <code>includeCanceled</code> request field is set to <code>true</code>. If additional jobs remain to be listed, code signing returns a <code>nextToken</code> value. Use this value in subsequent calls to <code>ListSigningJobs</code> to fetch the remaining values. You can continue calling <code>ListSigningJobs</code> with your <code>maxResults</code> parameter and with new values that code signing returns in the <code>nextToken</code> parameter until all of your signing jobs have been returned.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/signing-profiles"
      },
      "input": {
        "shape": "ListSigningProfilesRequest"
      },
      "name": "ListSigningProfiles",
      "output": {
        "shape": "ListSigningProfilesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Returns a list of the tags associated with a signing profile resource.</p>",
      "errors": [
        {
          "shape": "InternalServiceErrorException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "PutSigningProfile": {
      "documentation": "<p>Creates a signing profile. A signing profile is a code signing template that can be used to carry out a pre-defined signing job. For more information, see <a href=\"http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html\">http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html</a> </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/signing-profiles/{profileName}"
      },
      "input": {
        "shape": "PutSigningProfileRequest"
      },
      "name": "PutSigningProfile",
      "output": {
        "shape": "PutSigningProfileResponse"
      }
    },
    "RemoveProfilePermission": {
      "documentation": "<p>Removes cross-account permissions from a signing profile.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/signing-profiles/{profileName}/permissions/{statementId}"
      },
      "input": {
        "shape": "RemoveProfilePermissionRequest"
      },
      "name": "RemoveProfilePermission",
      "output": {
        "shape": "RemoveProfilePermissionResponse"
      }
    },
    "RevokeSignature": {
      "documentation": "<p>Changes the state of a signing job to REVOKED. This indicates that the signature is no longer valid.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/signing-jobs/{jobId}/revoke"
      },
      "input": {
        "shape": "RevokeSignatureRequest"
      },
      "name": "RevokeSignature"
    },
    "RevokeSigningProfile": {
      "documentation": "<p>Changes the state of a signing profile to REVOKED. This indicates that signatures generated using the signing profile after an effective start date are no longer valid.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/signing-profiles/{profileName}/revoke"
      },
      "input": {
        "shape": "RevokeSigningProfileRequest"
      },
      "name": "RevokeSigningProfile"
    },
    "StartSigningJob": {
      "documentation": "<p>Initiates a signing job to be performed on the code provided. Signing jobs are viewable by the <code>ListSigningJobs</code> operation for two years after they are performed. Note the following requirements: </p> <ul> <li> <p> You must create an Amazon S3 source bucket. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/gsg/CreatingABucket.html\">Create a Bucket</a> in the <i>Amazon S3 Getting Started Guide</i>. </p> </li> <li> <p>Your S3 source bucket must be version enabled.</p> </li> <li> <p>You must create an S3 destination bucket. Code signing uses your S3 destination bucket to write your signed code.</p> </li> <li> <p>You specify the name of the source and destination buckets when calling the <code>StartSigningJob</code> operation.</p> </li> <li> <p>You must also specify a request token that identifies your request to code signing.</p> </li> </ul> <p>You can call the <a>DescribeSigningJob</a> and the <a>ListSigningJobs</a> actions after you call <code>StartSigningJob</code>.</p> <p>For a Java example that shows how to use this action, see <a href=\"http://docs.aws.amazon.com/acm/latest/userguide/\">http://docs.aws.amazon.com/acm/latest/userguide/</a> </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServiceErrorException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/signing-jobs"
      },
      "input": {
        "shape": "StartSigningJobRequest"
      },
      "name": "StartSigningJob",
      "output": {
        "shape": "StartSigningJobResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds one or more tags to a signing profile. Tags are labels that you can use to identify and organize your AWS resources. Each tag consists of a key and an optional value. To specify the signing profile, use its Amazon Resource Name (ARN). To specify the tag, use a key-value pair.</p>",
      "errors": [
        {
          "shape": "InternalServiceErrorException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes one or more tags from a signing profile. To remove the tags, specify a list of tag keys.</p>",
      "errors": [
        {
          "shape": "InternalServiceErrorException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "AccountId": {
      "max": 12,
      "min": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AddProfilePermissionRequest": {
      "members": {
        "action": {
          "documentation": "<p>The AWS Signer action permitted as part of cross-account permissions.</p>",
          "shape": "String"
        },
        "principal": {
          "documentation": "<p>The AWS principal receiving cross-account permissions. This may be an IAM role or another AWS account ID.</p>",
          "shape": "String"
        },
        "profileName": {
          "documentation": "<p>The human-readable name of the signing profile.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The version of the signing profile.</p>",
          "shape": "ProfileVersion"
        },
        "revisionId": {
          "documentation": "<p>A unique identifier for the current profile revision.</p>",
          "shape": "String"
        },
        "statementId": {
          "documentation": "<p>A unique identifier for the cross-account permission statement.</p>",
          "shape": "String"
        }
      },
      "required": [
        "action",
        "principal",
        "statementId",
        "profileName"
      ],
      "type": "structure"
    },
    "AddProfilePermissionResponse": {
      "members": {
        "revisionId": {
          "documentation": "<p>A unique identifier for the current profile revision.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Arn": {
      "max": 2048,
      "min": 20,
      "type": "string"
    },
    "BadRequestException": {
      "documentation": "<p>The request contains invalid parameters for the ARN or tags. This exception also occurs when you call a tagging API on a cancelled signing profile.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "BucketName": {
      "type": "string"
    },
    "CancelSigningProfileRequest": {
      "members": {
        "profileName": {
          "documentation": "<p>The name of the signing profile to be canceled.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        }
      },
      "required": [
        "profileName"
      ],
      "type": "structure"
    },
    "Category": {
      "enum": [
        "AWSIoT"
      ],
      "type": "string"
    },
    "CertificateArn": {
      "type": "string"
    },
    "ClientRequestToken": {
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>The resource encountered a conflicting state.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "DescribeSigningJobRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>The ID of the signing job on input.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "DescribeSigningJobResponse": {
      "members": {
        "completedAt": {
          "documentation": "<p>Date and time that the signing job was completed.</p>",
          "shape": "Timestamp"
        },
        "createdAt": {
          "documentation": "<p>Date and time that the signing job was created.</p>",
          "shape": "Timestamp"
        },
        "jobId": {
          "documentation": "<p>The ID of the signing job on output.</p>",
          "shape": "JobId"
        },
        "jobInvoker": {
          "documentation": "<p>The IAM entity that initiated the signing job.</p>",
          "shape": "AccountId"
        },
        "jobOwner": {
          "documentation": "<p>The AWS account ID of the job owner.</p>",
          "shape": "AccountId"
        },
        "overrides": {
          "documentation": "<p>A list of any overrides that were applied to the signing operation.</p>",
          "shape": "SigningPlatformOverrides"
        },
        "platformDisplayName": {
          "documentation": "<p>A human-readable name for the signing platform associated with the signing job.</p>",
          "shape": "DisplayName"
        },
        "platformId": {
          "documentation": "<p>The microcontroller platform to which your signed code image will be distributed.</p>",
          "shape": "PlatformId"
        },
        "profileName": {
          "documentation": "<p>The name of the profile that initiated the signing operation.</p>",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The version of the signing profile used to initiate the signing job.</p>",
          "shape": "ProfileVersion"
        },
        "requestedBy": {
          "documentation": "<p>The IAM principal that requested the signing job.</p>",
          "shape": "RequestedBy"
        },
        "revocationRecord": {
          "documentation": "<p>A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.</p>",
          "shape": "SigningJobRevocationRecord"
        },
        "signatureExpiresAt": {
          "documentation": "<p>Thr expiration timestamp for the signature generated by the signing job.</p>",
          "shape": "Timestamp"
        },
        "signedObject": {
          "documentation": "<p>Name of the S3 bucket where the signed code image is saved by code signing.</p>",
          "shape": "SignedObject"
        },
        "signingMaterial": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your code signing certificate.</p>",
          "shape": "SigningMaterial"
        },
        "signingParameters": {
          "documentation": "<p>Map of user-assigned key-value pairs used during signing. These values contain any information that you specified for use in your signing job. </p>",
          "shape": "SigningParameters"
        },
        "source": {
          "documentation": "<p>The object that contains the name of your S3 bucket or your raw code.</p>",
          "shape": "Source"
        },
        "status": {
          "documentation": "<p>Status of the signing job.</p>",
          "shape": "SigningStatus"
        },
        "statusReason": {
          "documentation": "<p>String value that contains the status reason.</p>",
          "shape": "StatusReason"
        }
      },
      "type": "structure"
    },
    "Destination": {
      "documentation": "<p>Points to an <code>S3Destination</code> object that contains information about your S3 bucket.</p>",
      "members": {
        "s3": {
          "documentation": "<p>The <code>S3Destination</code> object.</p>",
          "shape": "S3Destination"
        }
      },
      "type": "structure"
    },
    "DisplayName": {
      "type": "string"
    },
    "EncryptionAlgorithm": {
      "enum": [
        "RSA",
        "ECDSA"
      ],
      "type": "string"
    },
    "EncryptionAlgorithmOptions": {
      "documentation": "<p>The encryption algorithm options that are available to a code signing job.</p>",
      "members": {
        "allowedValues": {
          "documentation": "<p>The set of accepted encryption algorithms that are allowed in a code signing job.</p>",
          "shape": "EncryptionAlgorithms"
        },
        "defaultValue": {
          "documentation": "<p>The default encryption algorithm that is used by a code signing job.</p>",
          "shape": "EncryptionAlgorithm"
        }
      },
      "required": [
        "allowedValues",
        "defaultValue"
      ],
      "type": "structure"
    },
    "EncryptionAlgorithms": {
      "member": {
        "shape": "EncryptionAlgorithm"
      },
      "type": "list"
    },
    "ErrorCode": {
      "type": "string"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "GetSigningPlatformRequest": {
      "members": {
        "platformId": {
          "documentation": "<p>The ID of the target signing platform.</p>",
          "location": "uri",
          "locationName": "platformId",
          "shape": "PlatformId"
        }
      },
      "required": [
        "platformId"
      ],
      "type": "structure"
    },
    "GetSigningPlatformResponse": {
      "members": {
        "category": {
          "documentation": "<p>The category type of the target signing platform.</p>",
          "shape": "Category"
        },
        "displayName": {
          "documentation": "<p>The display name of the target signing platform.</p>",
          "shape": "DisplayName"
        },
        "maxSizeInMB": {
          "documentation": "<p>The maximum size (in MB) of the payload that can be signed by the target platform.</p>",
          "shape": "MaxSizeInMB"
        },
        "partner": {
          "documentation": "<p>A list of partner entities that use the target signing platform.</p>",
          "shape": "String"
        },
        "platformId": {
          "documentation": "<p>The ID of the target signing platform.</p>",
          "shape": "PlatformId"
        },
        "revocationSupported": {
          "documentation": "<p>A flag indicating whether signatures generated for the signing platform can be revoked.</p>",
          "shape": "bool"
        },
        "signingConfiguration": {
          "documentation": "<p>A list of configurations applied to the target platform at signing.</p>",
          "shape": "SigningConfiguration"
        },
        "signingImageFormat": {
          "documentation": "<p>The format of the target platform's signing image.</p>",
          "shape": "SigningImageFormat"
        },
        "target": {
          "documentation": "<p>The validation template that is used by the target signing platform.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetSigningProfileRequest": {
      "members": {
        "profileName": {
          "documentation": "<p>The name of the target signing profile.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        },
        "profileOwner": {
          "documentation": "<p>The AWS account ID of the profile owner.</p>",
          "location": "querystring",
          "locationName": "profileOwner",
          "shape": "AccountId"
        }
      },
      "required": [
        "profileName"
      ],
      "type": "structure"
    },
    "GetSigningProfileResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the signing profile.</p>",
          "shape": "string"
        },
        "overrides": {
          "documentation": "<p>A list of overrides applied by the target signing profile for signing operations.</p>",
          "shape": "SigningPlatformOverrides"
        },
        "platformDisplayName": {
          "documentation": "<p>A human-readable name for the signing platform associated with the signing profile.</p>",
          "shape": "DisplayName"
        },
        "platformId": {
          "documentation": "<p>The ID of the platform that is used by the target signing profile.</p>",
          "shape": "PlatformId"
        },
        "profileName": {
          "documentation": "<p>The name of the target signing profile.</p>",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The current version of the signing profile.</p>",
          "shape": "ProfileVersion"
        },
        "profileVersionArn": {
          "documentation": "<p>The signing profile ARN, including the profile version.</p>",
          "shape": "Arn"
        },
        "revocationRecord": {
          "shape": "SigningProfileRevocationRecord"
        },
        "signatureValidityPeriod": {
          "shape": "SignatureValidityPeriod"
        },
        "signingMaterial": {
          "documentation": "<p>The ARN of the certificate that the target profile uses for signing operations.</p>",
          "shape": "SigningMaterial"
        },
        "signingParameters": {
          "documentation": "<p>A map of key-value pairs for signing operations that is attached to the target signing profile.</p>",
          "shape": "SigningParameters"
        },
        "status": {
          "documentation": "<p>The status of the target signing profile.</p>",
          "shape": "SigningProfileStatus"
        },
        "statusReason": {
          "documentation": "<p>Reason for the status of the target signing profile.</p>",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>A list of tags associated with the signing profile.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "HashAlgorithm": {
      "enum": [
        "SHA1",
        "SHA256"
      ],
      "type": "string"
    },
    "HashAlgorithmOptions": {
      "documentation": "<p>The hash algorithms that are available to a code signing job.</p>",
      "members": {
        "allowedValues": {
          "documentation": "<p>The set of accepted hash algorithms allowed in a code signing job.</p>",
          "shape": "HashAlgorithms"
        },
        "defaultValue": {
          "documentation": "<p>The default hash algorithm that is used in a code signing job.</p>",
          "shape": "HashAlgorithm"
        }
      },
      "required": [
        "allowedValues",
        "defaultValue"
      ],
      "type": "structure"
    },
    "HashAlgorithms": {
      "member": {
        "shape": "HashAlgorithm"
      },
      "type": "list"
    },
    "ImageFormat": {
      "enum": [
        "JSON",
        "JSONEmbedded",
        "JSONDetached"
      ],
      "type": "string"
    },
    "ImageFormats": {
      "member": {
        "shape": "ImageFormat"
      },
      "type": "list"
    },
    "Integer": {
      "type": "integer"
    },
    "InternalServiceErrorException": {
      "documentation": "<p>An internal error occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "JobId": {
      "type": "string"
    },
    "Key": {
      "type": "string"
    },
    "ListProfilePermissionsRequest": {
      "members": {
        "nextToken": {
          "documentation": "<p>String for specifying the next set of paginated results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        },
        "profileName": {
          "documentation": "<p>Name of the signing profile containing the cross-account permissions.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        }
      },
      "required": [
        "profileName"
      ],
      "type": "structure"
    },
    "ListProfilePermissionsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>String for specifying the next set of paginated results.</p>",
          "shape": "String"
        },
        "permissions": {
          "documentation": "<p>List of permissions associated with the Signing Profile.</p>",
          "shape": "Permissions"
        },
        "policySizeBytes": {
          "documentation": "<p>Total size of the policy associated with the Signing Profile in bytes.</p>",
          "shape": "PolicySizeBytes"
        },
        "revisionId": {
          "documentation": "<p>The identifier for the current revision of profile permissions.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListSigningJobsRequest": {
      "members": {
        "isRevoked": {
          "documentation": "<p>Filters results to return only signing jobs with revoked signatures.</p>",
          "location": "querystring",
          "locationName": "isRevoked",
          "shape": "bool"
        },
        "jobInvoker": {
          "documentation": "<p>Filters results to return only signing jobs initiated by a specified IAM entity.</p>",
          "location": "querystring",
          "locationName": "jobInvoker",
          "shape": "AccountId"
        },
        "maxResults": {
          "documentation": "<p>Specifies the maximum number of items to return in the response. Use this parameter when paginating results. If additional items exist beyond the number you specify, the <code>nextToken</code> element is set in the response. Use the <code>nextToken</code> value in a subsequent request to retrieve additional items. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>String for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "platformId": {
          "documentation": "<p>The ID of microcontroller platform that you specified for the distribution of your code image.</p>",
          "location": "querystring",
          "locationName": "platformId",
          "shape": "PlatformId"
        },
        "requestedBy": {
          "documentation": "<p>The IAM principal that requested the signing job.</p>",
          "location": "querystring",
          "locationName": "requestedBy",
          "shape": "RequestedBy"
        },
        "signatureExpiresAfter": {
          "documentation": "<p>Filters results to return only signing jobs with signatures expiring after a specified timestamp.</p>",
          "location": "querystring",
          "locationName": "signatureExpiresAfter",
          "shape": "Timestamp"
        },
        "signatureExpiresBefore": {
          "documentation": "<p>Filters results to return only signing jobs with signatures expiring before a specified timestamp.</p>",
          "location": "querystring",
          "locationName": "signatureExpiresBefore",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>A status value with which to filter your results.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "SigningStatus"
        }
      },
      "type": "structure"
    },
    "ListSigningJobsResponse": {
      "members": {
        "jobs": {
          "documentation": "<p>A list of your signing jobs.</p>",
          "shape": "SigningJobs"
        },
        "nextToken": {
          "documentation": "<p>String for specifying the next set of paginated results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListSigningPlatformsRequest": {
      "members": {
        "category": {
          "documentation": "<p>The category type of a signing platform.</p>",
          "location": "querystring",
          "locationName": "category",
          "shape": "String"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to be returned by this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        },
        "partner": {
          "documentation": "<p>Any partner entities connected to a signing platform.</p>",
          "location": "querystring",
          "locationName": "partner",
          "shape": "String"
        },
        "target": {
          "documentation": "<p>The validation template that is used by the target signing platform.</p>",
          "location": "querystring",
          "locationName": "target",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListSigningPlatformsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>Value for specifying the next set of paginated results to return.</p>",
          "shape": "String"
        },
        "platforms": {
          "documentation": "<p>A list of all platforms that match the request parameters.</p>",
          "shape": "SigningPlatforms"
        }
      },
      "type": "structure"
    },
    "ListSigningProfilesRequest": {
      "members": {
        "includeCanceled": {
          "documentation": "<p>Designates whether to include profiles with the status of <code>CANCELED</code>.</p>",
          "location": "querystring",
          "locationName": "includeCanceled",
          "shape": "bool"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of profiles to be returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>Value for specifying the next set of paginated results to return. After you receive a response with truncated results, use this parameter in a subsequent request. Set it to the value of <code>nextToken</code> from the response that you just received.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "platformId": {
          "documentation": "<p>Filters results to return only signing jobs initiated for a specified signing platform.</p>",
          "location": "querystring",
          "locationName": "platformId",
          "shape": "PlatformId"
        },
        "statuses": {
          "documentation": "<p>Filters results to return only signing jobs with statuses in the specified list.</p>",
          "location": "querystring",
          "locationName": "statuses",
          "shape": "Statuses"
        }
      },
      "type": "structure"
    },
    "ListSigningProfilesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>Value for specifying the next set of paginated results to return.</p>",
          "shape": "NextToken"
        },
        "profiles": {
          "documentation": "<p>A list of profiles that are available in the AWS account. This includes profiles with the status of <code>CANCELED</code> if the <code>includeCanceled</code> parameter is set to <code>true</code>.</p>",
          "shape": "SigningProfiles"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the signing profile.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>A list of tags associated with the signing profile.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "box": true,
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "MaxSizeInMB": {
      "type": "integer"
    },
    "NextToken": {
      "type": "string"
    },
    "NotFoundException": {
      "documentation": "<p>The signing profile was not found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Permission": {
      "documentation": "<p>A cross-account permission for a signing profile.</p>",
      "members": {
        "action": {
          "documentation": "<p>An AWS Signer action permitted as part of cross-account permissions.</p>",
          "shape": "String"
        },
        "principal": {
          "documentation": "<p>The AWS principal that has been granted a cross-account permission.</p>",
          "shape": "String"
        },
        "profileVersion": {
          "documentation": "<p>The signing profile version that a permission applies to.</p>",
          "shape": "ProfileVersion"
        },
        "statementId": {
          "documentation": "<p>A unique identifier for a cross-account permission statement.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Permissions": {
      "member": {
        "shape": "Permission"
      },
      "type": "list"
    },
    "PlatformId": {
      "type": "string"
    },
    "PolicySizeBytes": {
      "type": "integer"
    },
    "Prefix": {
      "type": "string"
    },
    "ProfileName": {
      "max": 64,
      "min": 2,
      "pattern": "^[a-zA-Z0-9_]{2,}",
      "type": "string"
    },
    "ProfileVersion": {
      "max": 10,
      "min": 10,
      "pattern": "^[a-zA-Z0-9]{10}$",
      "type": "string"
    },
    "PutSigningProfileRequest": {
      "members": {
        "overrides": {
          "documentation": "<p>A subfield of <code>platform</code>. This specifies any different configuration options that you want to apply to the chosen platform (such as a different <code>hash-algorithm</code> or <code>signing-algorithm</code>).</p>",
          "shape": "SigningPlatformOverrides"
        },
        "platformId": {
          "documentation": "<p>The ID of the signing platform to be created.</p>",
          "shape": "PlatformId"
        },
        "profileName": {
          "documentation": "<p>The name of the signing profile to be created.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        },
        "signatureValidityPeriod": {
          "documentation": "<p>The default validity period override for any signature generated using this signing profile. If unspecified, the default is 135 months.</p>",
          "shape": "SignatureValidityPeriod"
        },
        "signingMaterial": {
          "documentation": "<p>The AWS Certificate Manager certificate that will be used to sign code with the new signing profile.</p>",
          "shape": "SigningMaterial"
        },
        "signingParameters": {
          "documentation": "<p>Map of key-value pairs for signing. These can include any information that you want to use during signing.</p>",
          "shape": "SigningParameters"
        },
        "tags": {
          "documentation": "<p>Tags to be associated with the signing profile that is being created.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "profileName",
        "platformId"
      ],
      "type": "structure"
    },
    "PutSigningProfileResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the signing profile created.</p>",
          "shape": "string"
        },
        "profileVersion": {
          "documentation": "<p>The version of the signing profile being created.</p>",
          "shape": "ProfileVersion"
        },
        "profileVersionArn": {
          "documentation": "<p>The signing profile ARN, including the profile version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "RemoveProfilePermissionRequest": {
      "members": {
        "profileName": {
          "documentation": "<p>A human-readable name for the signing profile with permissions to be removed.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        },
        "revisionId": {
          "documentation": "<p>An identifier for the current revision of the signing profile permissions.</p>",
          "location": "querystring",
          "locationName": "revisionId",
          "shape": "String"
        },
        "statementId": {
          "documentation": "<p>A unique identifier for the cross-account permissions statement.</p>",
          "location": "uri",
          "locationName": "statementId",
          "shape": "String"
        }
      },
      "required": [
        "revisionId",
        "profileName",
        "statementId"
      ],
      "type": "structure"
    },
    "RemoveProfilePermissionResponse": {
      "members": {
        "revisionId": {
          "documentation": "<p>An identifier for the current revision of the profile permissions.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RequestedBy": {
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>A specified resource could not be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "RevocationReasonString": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "RevokeSignatureRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>ID of the signing job to be revoked.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "jobOwner": {
          "documentation": "<p>AWS account ID of the job owner.</p>",
          "shape": "AccountId"
        },
        "reason": {
          "documentation": "<p>The reason for revoking the signing job.</p>",
          "shape": "RevocationReasonString"
        }
      },
      "required": [
        "reason",
        "jobId"
      ],
      "type": "structure"
    },
    "RevokeSigningProfileRequest": {
      "members": {
        "effectiveTime": {
          "documentation": "<p>A timestamp for when revocation of a Signing Profile should become effective. Signatures generated using the signing profile after this timestamp are not trusted.</p>",
          "shape": "Timestamp"
        },
        "profileName": {
          "documentation": "<p>The name of the signing profile to be revoked.</p>",
          "location": "uri",
          "locationName": "profileName",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The version of the signing profile to be revoked.</p>",
          "shape": "ProfileVersion"
        },
        "reason": {
          "documentation": "<p>The reason for revoking a signing profile.</p>",
          "shape": "RevocationReasonString"
        }
      },
      "required": [
        "profileVersion",
        "reason",
        "effectiveTime",
        "profileName"
      ],
      "type": "structure"
    },
    "S3Destination": {
      "documentation": "<p>The name and prefix of the S3 bucket where code signing saves your signed objects.</p>",
      "members": {
        "bucketName": {
          "documentation": "<p>Name of the S3 bucket.</p>",
          "shape": "BucketName"
        },
        "prefix": {
          "documentation": "<p>An Amazon S3 prefix that you can use to limit responses to those that begin with the specified prefix.</p>",
          "shape": "Prefix"
        }
      },
      "type": "structure"
    },
    "S3SignedObject": {
      "documentation": "<p>The S3 bucket name and key where code signing saved your signed code image.</p>",
      "members": {
        "bucketName": {
          "documentation": "<p>Name of the S3 bucket.</p>",
          "shape": "BucketName"
        },
        "key": {
          "documentation": "<p>Key name that uniquely identifies a signed code image in your bucket.</p>",
          "shape": "Key"
        }
      },
      "type": "structure"
    },
    "S3Source": {
      "documentation": "<p>Information about the S3 bucket where you saved your unsigned code.</p>",
      "members": {
        "bucketName": {
          "documentation": "<p>Name of the S3 bucket.</p>",
          "shape": "BucketName"
        },
        "key": {
          "documentation": "<p>Key name of the bucket object that contains your unsigned code.</p>",
          "shape": "Key"
        },
        "version": {
          "documentation": "<p>Version of your source image in your version enabled S3 bucket.</p>",
          "shape": "Version"
        }
      },
      "required": [
        "bucketName",
        "key",
        "version"
      ],
      "type": "structure"
    },
    "ServiceLimitExceededException": {
      "documentation": "<p>The client is making a request that exceeds service limits.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "SignatureValidityPeriod": {
      "documentation": "<p>The validity period for a signing job.</p>",
      "members": {
        "type": {
          "documentation": "<p>The time unit for signature validity.</p>",
          "shape": "ValidityType"
        },
        "value": {
          "documentation": "<p>The numerical value of the time unit for signature validity.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "SignedObject": {
      "documentation": "<p>Points to an <code>S3SignedObject</code> object that contains information about your signed code image.</p>",
      "members": {
        "s3": {
          "documentation": "<p>The <code>S3SignedObject</code>.</p>",
          "shape": "S3SignedObject"
        }
      },
      "type": "structure"
    },
    "SigningConfiguration": {
      "documentation": "<p>The configuration of a code signing operation.</p>",
      "members": {
        "encryptionAlgorithmOptions": {
          "documentation": "<p>The encryption algorithm options that are available for a code signing job.</p>",
          "shape": "EncryptionAlgorithmOptions"
        },
        "hashAlgorithmOptions": {
          "documentation": "<p>The hash algorithm options that are available for a code signing job.</p>",
          "shape": "HashAlgorithmOptions"
        }
      },
      "required": [
        "encryptionAlgorithmOptions",
        "hashAlgorithmOptions"
      ],
      "type": "structure"
    },
    "SigningConfigurationOverrides": {
      "documentation": "<p>A signing configuration that overrides the default encryption or hash algorithm of a signing job.</p>",
      "members": {
        "encryptionAlgorithm": {
          "documentation": "<p>A specified override of the default encryption algorithm that is used in a code signing job.</p>",
          "shape": "EncryptionAlgorithm"
        },
        "hashAlgorithm": {
          "documentation": "<p>A specified override of the default hash algorithm that is used in a code signing job.</p>",
          "shape": "HashAlgorithm"
        }
      },
      "type": "structure"
    },
    "SigningImageFormat": {
      "documentation": "<p>The image format of a code signing platform or profile.</p>",
      "members": {
        "defaultFormat": {
          "documentation": "<p>The default format of a code signing image.</p>",
          "shape": "ImageFormat"
        },
        "supportedFormats": {
          "documentation": "<p>The supported formats of a code signing image.</p>",
          "shape": "ImageFormats"
        }
      },
      "required": [
        "supportedFormats",
        "defaultFormat"
      ],
      "type": "structure"
    },
    "SigningJob": {
      "documentation": "<p>Contains information about a signing job.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The date and time that the signing job was created.</p>",
          "shape": "Timestamp"
        },
        "isRevoked": {
          "documentation": "<p>Indicates whether the signing job is revoked.</p>",
          "shape": "bool"
        },
        "jobId": {
          "documentation": "<p>The ID of the signing job.</p>",
          "shape": "JobId"
        },
        "jobInvoker": {
          "documentation": "<p>The AWS account ID of the job invoker.</p>",
          "shape": "AccountId"
        },
        "jobOwner": {
          "documentation": "<p>The AWS account ID of the job owner.</p>",
          "shape": "AccountId"
        },
        "platformDisplayName": {
          "documentation": "<p>The name of a signing platform.</p>",
          "shape": "DisplayName"
        },
        "platformId": {
          "documentation": "<p>The unique identifier for a signing platform.</p>",
          "shape": "PlatformId"
        },
        "profileName": {
          "documentation": "<p>The name of the signing profile that created a signing job.</p>",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The version of the signing profile that created a signing job.</p>",
          "shape": "ProfileVersion"
        },
        "signatureExpiresAt": {
          "documentation": "<p>The time when the signature of a signing job expires.</p>",
          "shape": "Timestamp"
        },
        "signedObject": {
          "documentation": "<p>A <code>SignedObject</code> structure that contains information about a signing job's signed code image.</p>",
          "shape": "SignedObject"
        },
        "signingMaterial": {
          "documentation": "<p>A <code>SigningMaterial</code> object that contains the Amazon Resource Name (ARN) of the certificate used for the signing job.</p>",
          "shape": "SigningMaterial"
        },
        "source": {
          "documentation": "<p>A <code>Source</code> that contains information about a signing job's code image source.</p>",
          "shape": "Source"
        },
        "status": {
          "documentation": "<p>The status of the signing job.</p>",
          "shape": "SigningStatus"
        }
      },
      "type": "structure"
    },
    "SigningJobRevocationRecord": {
      "documentation": "<p>Revocation information for a signing job.</p>",
      "members": {
        "reason": {
          "documentation": "<p>A caller-supplied reason for revocation.</p>",
          "shape": "String"
        },
        "revokedAt": {
          "documentation": "<p>The time of revocation.</p>",
          "shape": "Timestamp"
        },
        "revokedBy": {
          "documentation": "<p>The identity of the revoker.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SigningJobs": {
      "member": {
        "shape": "SigningJob"
      },
      "type": "list"
    },
    "SigningMaterial": {
      "documentation": "<p>The ACM certificate that is used to sign your code.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the certificates that is used to sign your code.</p>",
          "shape": "CertificateArn"
        }
      },
      "required": [
        "certificateArn"
      ],
      "type": "structure"
    },
    "SigningParameterKey": {
      "type": "string"
    },
    "SigningParameterValue": {
      "type": "string"
    },
    "SigningParameters": {
      "key": {
        "shape": "SigningParameterKey"
      },
      "type": "map",
      "value": {
        "shape": "SigningParameterValue"
      }
    },
    "SigningPlatform": {
      "documentation": "<p>Contains information about the signing configurations and parameters that are used to perform a code signing job.</p>",
      "members": {
        "category": {
          "documentation": "<p>The category of a code signing platform.</p>",
          "shape": "Category"
        },
        "displayName": {
          "documentation": "<p>The display name of a code signing platform.</p>",
          "shape": "String"
        },
        "maxSizeInMB": {
          "documentation": "<p>The maximum size (in MB) of code that can be signed by a code signing platform.</p>",
          "shape": "MaxSizeInMB"
        },
        "partner": {
          "documentation": "<p>Any partner entities linked to a code signing platform.</p>",
          "shape": "String"
        },
        "platformId": {
          "documentation": "<p>The ID of a code signing; platform.</p>",
          "shape": "String"
        },
        "revocationSupported": {
          "documentation": "<p>Indicates whether revocation is supported for the platform.</p>",
          "shape": "bool"
        },
        "signingConfiguration": {
          "documentation": "<p>The configuration of a code signing platform. This includes the designated hash algorithm and encryption algorithm of a signing platform.</p>",
          "shape": "SigningConfiguration"
        },
        "signingImageFormat": {
          "shape": "SigningImageFormat"
        },
        "target": {
          "documentation": "<p>The types of targets that can be signed by a code signing platform.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SigningPlatformOverrides": {
      "documentation": "<p>Any overrides that are applied to the signing configuration of a code signing platform.</p>",
      "members": {
        "signingConfiguration": {
          "documentation": "<p>A signing configuration that overrides the default encryption or hash algorithm of a signing job.</p>",
          "shape": "SigningConfigurationOverrides"
        },
        "signingImageFormat": {
          "documentation": "<p>A signed image is a JSON object. When overriding the default signing platform configuration, a customer can select either of two signing formats, <code>JSONEmbedded</code> or <code>JSONDetached</code>. (A third format value, <code>JSON</code>, is reserved for future use.) With <code>JSONEmbedded</code>, the signing image has the payload embedded in it. With <code>JSONDetached</code>, the payload is not be embedded in the signing image.</p>",
          "shape": "ImageFormat"
        }
      },
      "type": "structure"
    },
    "SigningPlatforms": {
      "member": {
        "shape": "SigningPlatform"
      },
      "type": "list"
    },
    "SigningProfile": {
      "documentation": "<p>Contains information about the ACM certificates and code signing configuration parameters that can be used by a given code signing user.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the signing profile.</p>",
          "shape": "string"
        },
        "platformDisplayName": {
          "documentation": "<p>The name of the signing platform.</p>",
          "shape": "DisplayName"
        },
        "platformId": {
          "documentation": "<p>The ID of a platform that is available for use by a signing profile.</p>",
          "shape": "PlatformId"
        },
        "profileName": {
          "documentation": "<p>The name of the signing profile.</p>",
          "shape": "ProfileName"
        },
        "profileVersion": {
          "documentation": "<p>The version of a signing profile.</p>",
          "shape": "ProfileVersion"
        },
        "profileVersionArn": {
          "documentation": "<p>The ARN of a signing profile, including the profile version.</p>",
          "shape": "Arn"
        },
        "signatureValidityPeriod": {
          "documentation": "<p>The validity period for a signing job created using this signing profile.</p>",
          "shape": "SignatureValidityPeriod"
        },
        "signingMaterial": {
          "documentation": "<p>The ACM certificate that is available for use by a signing profile.</p>",
          "shape": "SigningMaterial"
        },
        "signingParameters": {
          "documentation": "<p>The parameters that are available for use by a code signing user.</p>",
          "shape": "SigningParameters"
        },
        "status": {
          "documentation": "<p>The status of a code signing profile.</p>",
          "shape": "SigningProfileStatus"
        },
        "tags": {
          "documentation": "<p>A list of tags associated with the signing profile.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "SigningProfileRevocationRecord": {
      "documentation": "<p>Revocation information for a signing profile.</p>",
      "members": {
        "revocationEffectiveFrom": {
          "documentation": "<p>The time when revocation becomes effective.</p>",
          "shape": "Timestamp"
        },
        "revokedAt": {
          "documentation": "<p>The time when the signing profile was revoked.</p>",
          "shape": "Timestamp"
        },
        "revokedBy": {
          "documentation": "<p>The identity of the revoker.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SigningProfileStatus": {
      "enum": [
        "Active",
        "Canceled",
        "Revoked"
      ],
      "type": "string"
    },
    "SigningProfiles": {
      "member": {
        "shape": "SigningProfile"
      },
      "type": "list"
    },
    "SigningStatus": {
      "enum": [
        "InProgress",
        "Failed",
        "Succeeded"
      ],
      "type": "string"
    },
    "Source": {
      "documentation": "<p>An <code>S3Source</code> object that contains information about the S3 bucket where you saved your unsigned code.</p>",
      "members": {
        "s3": {
          "documentation": "<p>The <code>S3Source</code> object.</p>",
          "shape": "S3Source"
        }
      },
      "type": "structure"
    },
    "StartSigningJobRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>String that identifies the signing request. All calls after the first that use this token return the same response as the first call.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "destination": {
          "documentation": "<p>The S3 bucket in which to save your signed object. The destination contains the name of your bucket and an optional prefix.</p>",
          "shape": "Destination"
        },
        "profileName": {
          "documentation": "<p>The name of the signing profile.</p>",
          "shape": "ProfileName"
        },
        "profileOwner": {
          "documentation": "<p>The AWS account ID of the signing profile owner.</p>",
          "shape": "AccountId"
        },
        "source": {
          "documentation": "<p>The S3 bucket that contains the object to sign or a BLOB that contains your raw code.</p>",
          "shape": "Source"
        }
      },
      "required": [
        "source",
        "destination",
        "profileName",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "StartSigningJobResponse": {
      "members": {
        "jobId": {
          "documentation": "<p>The ID of your signing job.</p>",
          "shape": "JobId"
        },
        "jobOwner": {
          "documentation": "<p>The AWS account ID of the signing job owner.</p>",
          "shape": "AccountId"
        }
      },
      "type": "structure"
    },
    "StatusReason": {
      "type": "string"
    },
    "Statuses": {
      "member": {
        "shape": "SigningProfileStatus"
      },
      "type": "list"
    },
    "String": {
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 200,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 200,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the signing profile.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>One or more tags to be associated with the signing profile.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "ThrottlingException": {
      "deprecated": true,
      "deprecatedMessage": "Instead of this error, TooManyRequestsException should be used.",
      "documentation": "<p>The request was denied due to request throttling.</p> <p>Instead of this error, <code>TooManyRequestsException</code> should be used.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TooManyRequestsException": {
      "documentation": "<p>The allowed number of job-signing requests has been exceeded.</p> <p>This error supersedes the error <code>ThrottlingException</code>.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the signing profile.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tagKeys": {
          "documentation": "<p>A list of tag keys to be removed from the signing profile.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>You signing certificate could not be validated.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "code": {
          "shape": "ErrorCode"
        },
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ValidityType": {
      "enum": [
        "DAYS",
        "MONTHS",
        "YEARS"
      ],
      "type": "string"
    },
    "Version": {
      "type": "string"
    },
    "bool": {
      "type": "boolean"
    },
    "string": {
      "type": "string"
    }
  },
  "version": "2.0"
}
