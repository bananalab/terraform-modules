{
  "documentation": "<p>The Amazon Chime SDK media pipeline APIs in this section allow software developers to create Amazon Chime SDK media pipelines that capture, concatenate, or stream your Amazon Chime SDK meetings. For more information about media pipleines, see <a href=\"http://amazonaws.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Media_Pipelines.html\">Amazon Chime SDK media pipelines</a>. </p>",
  "metadata": {
    "apiVersion": "2021-07-15",
    "endpointPrefix": "media-pipelines-chime",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Chime SDK Media Pipelines",
    "serviceId": "Chime SDK Media Pipelines",
    "signatureVersion": "v4",
    "signingName": "chime",
    "uid": "chime-sdk-media-pipelines-2021-07-15"
  },
  "operations": {
    "CreateMediaCapturePipeline": {
      "documentation": "<p>Creates a media pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sdk-media-capture-pipelines",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateMediaCapturePipelineRequest"
      },
      "name": "CreateMediaCapturePipeline",
      "output": {
        "shape": "CreateMediaCapturePipelineResponse"
      }
    },
    "CreateMediaConcatenationPipeline": {
      "documentation": "<p>Creates a media concatenation pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sdk-media-concatenation-pipelines",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateMediaConcatenationPipelineRequest"
      },
      "name": "CreateMediaConcatenationPipeline",
      "output": {
        "shape": "CreateMediaConcatenationPipelineResponse"
      }
    },
    "CreateMediaLiveConnectorPipeline": {
      "documentation": "<p>Creates a streaming media pipeline in an Amazon Chime SDK meeting.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sdk-media-live-connector-pipelines",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateMediaLiveConnectorPipelineRequest"
      },
      "name": "CreateMediaLiveConnectorPipeline",
      "output": {
        "shape": "CreateMediaLiveConnectorPipelineResponse"
      }
    },
    "DeleteMediaCapturePipeline": {
      "documentation": "<p>Deletes the media pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sdk-media-capture-pipelines/{mediaPipelineId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteMediaCapturePipelineRequest"
      },
      "name": "DeleteMediaCapturePipeline"
    },
    "DeleteMediaPipeline": {
      "documentation": "<p>Deletes the media pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/sdk-media-pipelines/{mediaPipelineId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteMediaPipelineRequest"
      },
      "name": "DeleteMediaPipeline"
    },
    "GetMediaCapturePipeline": {
      "documentation": "<p>Gets an existing media pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-capture-pipelines/{mediaPipelineId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMediaCapturePipelineRequest"
      },
      "name": "GetMediaCapturePipeline",
      "output": {
        "shape": "GetMediaCapturePipelineResponse"
      }
    },
    "GetMediaPipeline": {
      "documentation": "<p>Gets an existing media pipeline.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-pipelines/{mediaPipelineId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMediaPipelineRequest"
      },
      "name": "GetMediaPipeline",
      "output": {
        "shape": "GetMediaPipelineResponse"
      }
    },
    "ListMediaCapturePipelines": {
      "documentation": "<p>Returns a list of media pipelines.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-capture-pipelines",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMediaCapturePipelinesRequest"
      },
      "name": "ListMediaCapturePipelines",
      "output": {
        "shape": "ListMediaCapturePipelinesResponse"
      }
    },
    "ListMediaPipelines": {
      "documentation": "<p>Returns a list of media pipelines.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/sdk-media-pipelines",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMediaPipelinesRequest"
      },
      "name": "ListMediaPipelines",
      "output": {
        "shape": "ListMediaPipelinesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags available for a media pipeline.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>The ARN of the media pipeline that you want to tag. Consists of he pipeline's endpoint region, resource ID, and pipeline ID.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=tag-resource",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes any tags from a media pipeline.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedClientException"
        },
        {
          "shape": "ThrottledClientException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=untag-resource",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    }
  },
  "shapes": {
    "AmazonResourceName": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "type": "string"
    },
    "Arn": {
      "max": 1024,
      "min": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "sensitive": true,
      "type": "string"
    },
    "ArtifactsConcatenationConfiguration": {
      "documentation": "<p>The configuration for the artifacts concatenation.</p>",
      "members": {
        "Audio": {
          "documentation": "<p>The configuration for the audio artifacts concatenation.</p>",
          "shape": "AudioConcatenationConfiguration"
        },
        "CompositedVideo": {
          "documentation": "<p>The configuration for the composited video artifacts concatenation.</p>",
          "shape": "CompositedVideoConcatenationConfiguration"
        },
        "Content": {
          "documentation": "<p>The configuration for the content artifacts concatenation.</p>",
          "shape": "ContentConcatenationConfiguration"
        },
        "DataChannel": {
          "documentation": "<p>The configuration for the data channel artifacts concatenation.</p>",
          "shape": "DataChannelConcatenationConfiguration"
        },
        "MeetingEvents": {
          "documentation": "<p>The configuration for the meeting events artifacts concatenation.</p>",
          "shape": "MeetingEventsConcatenationConfiguration"
        },
        "TranscriptionMessages": {
          "documentation": "<p>The configuration for the transcription messages artifacts concatenation.</p>",
          "shape": "TranscriptionMessagesConcatenationConfiguration"
        },
        "Video": {
          "documentation": "<p>The configuration for the video artifacts concatenation.</p>",
          "shape": "VideoConcatenationConfiguration"
        }
      },
      "required": [
        "Audio",
        "Video",
        "Content",
        "DataChannel",
        "TranscriptionMessages",
        "MeetingEvents",
        "CompositedVideo"
      ],
      "type": "structure"
    },
    "ArtifactsConcatenationState": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "ArtifactsConfiguration": {
      "documentation": "<p>The configuration for the artifacts.</p>",
      "members": {
        "Audio": {
          "documentation": "<p>The configuration for the audio artifacts.</p>",
          "shape": "AudioArtifactsConfiguration"
        },
        "CompositedVideo": {
          "documentation": "<p>Enables video compositing.</p>",
          "shape": "CompositedVideoArtifactsConfiguration"
        },
        "Content": {
          "documentation": "<p>The configuration for the content artifacts.</p>",
          "shape": "ContentArtifactsConfiguration"
        },
        "Video": {
          "documentation": "<p>The configuration for the video artifacts.</p>",
          "shape": "VideoArtifactsConfiguration"
        }
      },
      "required": [
        "Audio",
        "Video",
        "Content"
      ],
      "type": "structure"
    },
    "ArtifactsState": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "AttendeeIdList": {
      "member": {
        "shape": "GuidString"
      },
      "min": 1,
      "type": "list"
    },
    "AudioArtifactsConcatenationState": {
      "enum": [
        "Enabled"
      ],
      "type": "string"
    },
    "AudioArtifactsConfiguration": {
      "documentation": "<p>The audio artifact configuration object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the audio artifact configuration object.</p>",
          "shape": "AudioMuxType"
        }
      },
      "required": [
        "MuxType"
      ],
      "type": "structure"
    },
    "AudioChannelsOption": {
      "enum": [
        "Stereo",
        "Mono"
      ],
      "type": "string"
    },
    "AudioConcatenationConfiguration": {
      "documentation": "<p>The audio artifact concatenation configuration object.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables the <i>name</i> object, where <i>name</i> is the name of the configuration object, such as <code>AudioConcatenation</code>.</p>",
          "shape": "AudioArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "AudioMuxType": {
      "enum": [
        "AudioOnly",
        "AudioWithActiveSpeakerVideo",
        "AudioWithCompositedVideo"
      ],
      "type": "string"
    },
    "AudioSampleRateOption": {
      "pattern": "44100|48000",
      "type": "string"
    },
    "BadRequestException": {
      "documentation": "<p>The input parameters don't match the service's restrictions.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ChimeSdkMeetingConcatenationConfiguration": {
      "documentation": "<p>The configuration object of the Amazon Chime SDK meeting concatenation for a specified media pipeline.</p>",
      "members": {
        "ArtifactsConfiguration": {
          "documentation": "<p>The configuration for the artifacts in an Amazon Chime SDK meeting concatenation.</p>",
          "shape": "ArtifactsConcatenationConfiguration"
        }
      },
      "required": [
        "ArtifactsConfiguration"
      ],
      "type": "structure"
    },
    "ChimeSdkMeetingConfiguration": {
      "documentation": "<p>The configuration object of the Amazon Chime SDK meeting for a specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
      "members": {
        "ArtifactsConfiguration": {
          "documentation": "<p>The configuration for the artifacts in an Amazon Chime SDK meeting.</p>",
          "shape": "ArtifactsConfiguration"
        },
        "SourceConfiguration": {
          "documentation": "<p>The source configuration for a specified media pipline.</p>",
          "shape": "SourceConfiguration"
        }
      },
      "type": "structure"
    },
    "ChimeSdkMeetingLiveConnectorConfiguration": {
      "documentation": "<p>The media pipeline's configuration object.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The configuration object's Chime SDK meeting ARN.</p>",
          "shape": "Arn"
        },
        "CompositedVideo": {
          "documentation": "<p>The media pipeline's composited video.</p>",
          "shape": "CompositedVideoArtifactsConfiguration"
        },
        "MuxType": {
          "documentation": "<p>The configuration object's multiplex type.</p>",
          "shape": "LiveConnectorMuxType"
        },
        "SourceConfiguration": {
          "documentation": "<p>The source configuration settings of the media pipeline's configuration object.</p>",
          "shape": "SourceConfiguration"
        }
      },
      "required": [
        "Arn",
        "MuxType"
      ],
      "type": "structure"
    },
    "ClientRequestToken": {
      "max": 64,
      "min": 2,
      "pattern": "[-_a-zA-Z0-9]*",
      "sensitive": true,
      "type": "string"
    },
    "CompositedVideoArtifactsConfiguration": {
      "documentation": "<p>Describes the configuration for the composited video artifacts.</p>",
      "members": {
        "GridViewConfiguration": {
          "documentation": "<p>The <code>GridView</code> configuration setting.</p>",
          "shape": "GridViewConfiguration"
        },
        "Layout": {
          "documentation": "<p>The layout setting, such as <code>GridView</code> in the configuration object.</p>",
          "shape": "LayoutOption"
        },
        "Resolution": {
          "documentation": "<p>The video resolution setting in the configuration object. Default: HD at 1280 x 720. FHD resolution: 1920 x 1080.</p>",
          "shape": "ResolutionOption"
        }
      },
      "required": [
        "GridViewConfiguration"
      ],
      "type": "structure"
    },
    "CompositedVideoConcatenationConfiguration": {
      "documentation": "<p>The composited video configuration object for a specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "ConcatenationSink": {
      "documentation": "<p>The data sink of the configuration object.</p>",
      "members": {
        "S3BucketSinkConfiguration": {
          "documentation": "<p>The configuration settings for an Amazon S3 bucket sink.</p>",
          "shape": "S3BucketSinkConfiguration"
        },
        "Type": {
          "documentation": "<p>The type of data sink in the configuration object.</p>",
          "shape": "ConcatenationSinkType"
        }
      },
      "required": [
        "Type",
        "S3BucketSinkConfiguration"
      ],
      "type": "structure"
    },
    "ConcatenationSinkList": {
      "max": 1,
      "member": {
        "shape": "ConcatenationSink"
      },
      "min": 1,
      "type": "list"
    },
    "ConcatenationSinkType": {
      "enum": [
        "S3Bucket"
      ],
      "type": "string"
    },
    "ConcatenationSource": {
      "documentation": "<p>The source type and media pipeline configuration settings in a configuration object.</p>",
      "members": {
        "MediaCapturePipelineSourceConfiguration": {
          "documentation": "<p>The concatenation settings for the media pipeline in a configuration object.</p>",
          "shape": "MediaCapturePipelineSourceConfiguration"
        },
        "Type": {
          "documentation": "<p>The type of concatenation source in a configuration object.</p>",
          "shape": "ConcatenationSourceType"
        }
      },
      "required": [
        "Type",
        "MediaCapturePipelineSourceConfiguration"
      ],
      "type": "structure"
    },
    "ConcatenationSourceList": {
      "max": 1,
      "member": {
        "shape": "ConcatenationSource"
      },
      "min": 1,
      "type": "list"
    },
    "ConcatenationSourceType": {
      "enum": [
        "MediaCapturePipeline"
      ],
      "type": "string"
    },
    "ContentArtifactsConfiguration": {
      "documentation": "<p>The content artifact object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the artifact configuration.</p>",
          "shape": "ContentMuxType"
        },
        "State": {
          "documentation": "<p>Indicates whether the content artifact is enabled or disabled.</p>",
          "shape": "ArtifactsState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "ContentConcatenationConfiguration": {
      "documentation": "<p>The composited content configuration object for a specified media pipeline. </p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "ContentMuxType": {
      "enum": [
        "ContentOnly"
      ],
      "type": "string"
    },
    "ContentShareLayoutOption": {
      "enum": [
        "PresenterOnly",
        "Horizontal",
        "Vertical"
      ],
      "type": "string"
    },
    "CreateMediaCapturePipelineRequest": {
      "members": {
        "ChimeSdkMeetingConfiguration": {
          "documentation": "<p>The configuration for a specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
          "shape": "ChimeSdkMeetingConfiguration"
        },
        "ClientRequestToken": {
          "documentation": "<p>The unique identifier for the client request. The token makes the API request idempotent. Use a unique token for each media pipeline request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "SinkArn": {
          "documentation": "<p>The ARN of the sink type.</p>",
          "shape": "Arn"
        },
        "SinkType": {
          "documentation": "<p>Destination type to which the media artifacts are saved. You must use an S3 bucket.</p>",
          "shape": "MediaPipelineSinkType"
        },
        "SourceArn": {
          "documentation": "<p>ARN of the source from which the media artifacts are captured.</p>",
          "shape": "Arn"
        },
        "SourceType": {
          "documentation": "<p>Source type from which the media artifacts are captured. A Chime SDK Meeting is the only supported source.</p>",
          "shape": "MediaPipelineSourceType"
        },
        "Tags": {
          "documentation": "<p>The tag key-value pairs.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "SourceType",
        "SourceArn",
        "SinkType",
        "SinkArn"
      ],
      "type": "structure"
    },
    "CreateMediaCapturePipelineResponse": {
      "members": {
        "MediaCapturePipeline": {
          "documentation": "<p>A media pipeline object, the ID, source type, source ARN, sink type, and sink ARN of a media pipeline object.</p>",
          "shape": "MediaCapturePipeline"
        }
      },
      "type": "structure"
    },
    "CreateMediaConcatenationPipelineRequest": {
      "members": {
        "ClientRequestToken": {
          "documentation": "<p>The unique identifier for the client request. The token makes the API request idempotent. Use a unique token for each media concatenation pipeline request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "Sinks": {
          "documentation": "<p>An object that specifies the data sinks for the media concatenation pipeline.</p>",
          "shape": "ConcatenationSinkList"
        },
        "Sources": {
          "documentation": "<p>An object that specifies the sources for the media concatenation pipeline.</p>",
          "shape": "ConcatenationSourceList"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the media concatenation pipeline.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "Sources",
        "Sinks"
      ],
      "type": "structure"
    },
    "CreateMediaConcatenationPipelineResponse": {
      "members": {
        "MediaConcatenationPipeline": {
          "documentation": "<p>A media concatenation pipeline object, the ID, source type, <code>MediaPipelineARN</code>, and sink of a media concatenation pipeline object.</p>",
          "shape": "MediaConcatenationPipeline"
        }
      },
      "type": "structure"
    },
    "CreateMediaLiveConnectorPipelineRequest": {
      "members": {
        "ClientRequestToken": {
          "documentation": "<p>The token assigned to the client making the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "Sinks": {
          "documentation": "<p>The media pipeline's data sinks.</p>",
          "shape": "LiveConnectorSinkList"
        },
        "Sources": {
          "documentation": "<p>The media pipeline's data sources.</p>",
          "shape": "LiveConnectorSourceList"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the media pipeline.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "Sources",
        "Sinks"
      ],
      "type": "structure"
    },
    "CreateMediaLiveConnectorPipelineResponse": {
      "members": {
        "MediaLiveConnectorPipeline": {
          "documentation": "<p>The new media pipeline.</p>",
          "shape": "MediaLiveConnectorPipeline"
        }
      },
      "type": "structure"
    },
    "DataChannelConcatenationConfiguration": {
      "documentation": "<p>The content configuration object's data channel.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "DeleteMediaCapturePipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media pipeline being deleted. </p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MediaPipelineId"
      ],
      "type": "structure"
    },
    "DeleteMediaPipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media pipeline to delete.</p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MediaPipelineId"
      ],
      "type": "structure"
    },
    "ErrorCode": {
      "enum": [
        "BadRequest",
        "Forbidden",
        "NotFound",
        "ResourceLimitExceeded",
        "ServiceFailure",
        "ServiceUnavailable",
        "Throttling"
      ],
      "type": "string"
    },
    "ExternalUserIdList": {
      "member": {
        "shape": "ExternalUserIdType"
      },
      "min": 1,
      "type": "list"
    },
    "ExternalUserIdType": {
      "max": 64,
      "min": 2,
      "sensitive": true,
      "type": "string"
    },
    "ForbiddenException": {
      "documentation": "<p>The client is permanently forbidden from making the request.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetMediaCapturePipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the pipeline that you want to get.</p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MediaPipelineId"
      ],
      "type": "structure"
    },
    "GetMediaCapturePipelineResponse": {
      "members": {
        "MediaCapturePipeline": {
          "documentation": "<p>The media pipeline object.</p>",
          "shape": "MediaCapturePipeline"
        }
      },
      "type": "structure"
    },
    "GetMediaPipelineRequest": {
      "members": {
        "MediaPipelineId": {
          "documentation": "<p>The ID of the pipeline that you want to get.</p>",
          "location": "uri",
          "locationName": "mediaPipelineId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MediaPipelineId"
      ],
      "type": "structure"
    },
    "GetMediaPipelineResponse": {
      "members": {
        "MediaPipeline": {
          "documentation": "<p>The media pipeline object.</p>",
          "shape": "MediaPipeline"
        }
      },
      "type": "structure"
    },
    "GridViewConfiguration": {
      "documentation": "<p>Specifies the type of grid layout.</p>",
      "members": {
        "ContentShareLayout": {
          "documentation": "<p>Defines the layout of the video tiles when content sharing is enabled.</p>",
          "shape": "ContentShareLayoutOption"
        },
        "PresenterOnlyConfiguration": {
          "documentation": "<p>Defines the configuration options for a presenter only video tile.</p>",
          "shape": "PresenterOnlyConfiguration"
        }
      },
      "required": [
        "ContentShareLayout"
      ],
      "type": "structure"
    },
    "GuidString": {
      "max": 36,
      "min": 36,
      "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
      "type": "string"
    },
    "Iso8601Timestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "LayoutOption": {
      "enum": [
        "GridView"
      ],
      "type": "string"
    },
    "ListMediaCapturePipelinesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return in a single call. Valid Range: 1 - 99.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "ResultMax"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMediaCapturePipelinesResponse": {
      "members": {
        "MediaCapturePipelines": {
          "documentation": "<p>The media pipeline objects in the list.</p>",
          "shape": "MediaCapturePipelineSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results. </p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMediaPipelinesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return in a single call. Valid Range: 1 - 99.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "ResultMax"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMediaPipelinesResponse": {
      "members": {
        "MediaPipelines": {
          "documentation": "<p>The media pipeline objects in the list.</p>",
          "shape": "MediaPipelineList"
        },
        "NextToken": {
          "documentation": "<p>The token used to retrieve the next page of results. </p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the media pipeline associated with any tags. The ARN consists of the pipeline's region, resource ID, and pipeline ID.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "ResourceARN"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The tags associated with the specified media pipeline.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "LiveConnectorMuxType": {
      "enum": [
        "AudioWithCompositedVideo",
        "AudioWithActiveSpeakerVideo"
      ],
      "type": "string"
    },
    "LiveConnectorRTMPConfiguration": {
      "documentation": "<p>The media pipeline's RTMP configuration object.</p>",
      "members": {
        "AudioChannels": {
          "documentation": "<p>The audio channels set for the RTMP configuration</p>",
          "shape": "AudioChannelsOption"
        },
        "AudioSampleRate": {
          "documentation": "<p>The audio sample rate set for the RTMP configuration. Default: 48000.</p>",
          "shape": "AudioSampleRateOption"
        },
        "Url": {
          "documentation": "<p>The URL of the RTMP configuration.</p>",
          "shape": "SensitiveString"
        }
      },
      "required": [
        "Url"
      ],
      "type": "structure"
    },
    "LiveConnectorSinkConfiguration": {
      "documentation": "<p>The media pipeline's sink configuration settings.</p>",
      "members": {
        "RTMPConfiguration": {
          "documentation": "<p>The sink configuration's RTMP configuration setttings.</p>",
          "shape": "LiveConnectorRTMPConfiguration"
        },
        "SinkType": {
          "documentation": "<p>The sink configuration's sink type.</p>",
          "shape": "LiveConnectorSinkType"
        }
      },
      "required": [
        "SinkType",
        "RTMPConfiguration"
      ],
      "type": "structure"
    },
    "LiveConnectorSinkList": {
      "max": 1,
      "member": {
        "shape": "LiveConnectorSinkConfiguration"
      },
      "min": 1,
      "type": "list"
    },
    "LiveConnectorSinkType": {
      "enum": [
        "RTMP"
      ],
      "type": "string"
    },
    "LiveConnectorSourceConfiguration": {
      "documentation": "<p>The data source configuration object of a streaming media pipeline.</p>",
      "members": {
        "ChimeSdkMeetingLiveConnectorConfiguration": {
          "documentation": "<p>The configuration settings of the connector pipeline.</p>",
          "shape": "ChimeSdkMeetingLiveConnectorConfiguration"
        },
        "SourceType": {
          "documentation": "<p>The source configuration's media source type.</p>",
          "shape": "LiveConnectorSourceType"
        }
      },
      "required": [
        "SourceType",
        "ChimeSdkMeetingLiveConnectorConfiguration"
      ],
      "type": "structure"
    },
    "LiveConnectorSourceList": {
      "max": 1,
      "member": {
        "shape": "LiveConnectorSourceConfiguration"
      },
      "min": 1,
      "type": "list"
    },
    "LiveConnectorSourceType": {
      "enum": [
        "ChimeSdkMeeting"
      ],
      "type": "string"
    },
    "MediaCapturePipeline": {
      "documentation": "<p>A media pipeline object consisting of an ID, source type, source ARN, a sink type, a sink ARN, and a configuration object.</p>",
      "members": {
        "ChimeSdkMeetingConfiguration": {
          "documentation": "<p>The configuration for a specified media pipeline. <code>SourceType</code> must be <code>ChimeSdkMeeting</code>.</p>",
          "shape": "ChimeSdkMeetingConfiguration"
        },
        "CreatedTimestamp": {
          "documentation": "<p>The time at which the pipeline was created, in ISO 8601 format.</p>",
          "shape": "Iso8601Timestamp"
        },
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of the media capture pipeline</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of a media pipeline.</p>",
          "shape": "GuidString"
        },
        "SinkArn": {
          "documentation": "<p>ARN of the destination to which the media artifacts are saved.</p>",
          "shape": "Arn"
        },
        "SinkType": {
          "documentation": "<p>Destination type to which the media artifacts are saved. You must use an S3 Bucket.</p>",
          "shape": "MediaPipelineSinkType"
        },
        "SourceArn": {
          "documentation": "<p>ARN of the source from which the media artifacts are saved.</p>",
          "shape": "Arn"
        },
        "SourceType": {
          "documentation": "<p>Source type from which media artifacts are saved. You must use <code>ChimeMeeting</code>.</p>",
          "shape": "MediaPipelineSourceType"
        },
        "Status": {
          "documentation": "<p>The status of the media pipeline.</p>",
          "shape": "MediaPipelineStatus"
        },
        "UpdatedTimestamp": {
          "documentation": "<p>The time at which the pipeline was updated, in ISO 8601 format.</p>",
          "shape": "Iso8601Timestamp"
        }
      },
      "type": "structure"
    },
    "MediaCapturePipelineSourceConfiguration": {
      "documentation": "<p>The source configuration object of a media capture pipeline.</p>",
      "members": {
        "ChimeSdkMeetingConfiguration": {
          "documentation": "<p>The meeting configuration settings in a media capture pipeline configuration object. </p>",
          "shape": "ChimeSdkMeetingConcatenationConfiguration"
        },
        "MediaPipelineArn": {
          "documentation": "<p>The media pipeline ARN in the configuration object of a media capture pipeline.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "MediaPipelineArn",
        "ChimeSdkMeetingConfiguration"
      ],
      "type": "structure"
    },
    "MediaCapturePipelineSummary": {
      "documentation": "<p>The summary data of a media capture pipeline.</p>",
      "members": {
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of the media pipeline in the summary.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media pipeline in the summary.</p>",
          "shape": "GuidString"
        }
      },
      "type": "structure"
    },
    "MediaCapturePipelineSummaryList": {
      "member": {
        "shape": "MediaCapturePipelineSummary"
      },
      "type": "list"
    },
    "MediaConcatenationPipeline": {
      "documentation": "<p>Concatenates audio and video data from one or more data streams.</p>",
      "members": {
        "CreatedTimestamp": {
          "documentation": "<p>The time at which the concatenation pipeline was created.</p>",
          "shape": "Iso8601Timestamp"
        },
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of the media pipeline that you specify in the <code>SourceConfiguration</code> object.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media pipeline being concatenated.</p>",
          "shape": "GuidString"
        },
        "Sinks": {
          "documentation": "<p>The data sinks of the concatenation pipeline.</p>",
          "shape": "ConcatenationSinkList"
        },
        "Sources": {
          "documentation": "<p>The data sources being concatnated.</p>",
          "shape": "ConcatenationSourceList"
        },
        "Status": {
          "documentation": "<p>The status of the concatenation pipeline.</p>",
          "shape": "MediaPipelineStatus"
        },
        "UpdatedTimestamp": {
          "documentation": "<p>The time at which the concatenation pipeline was last updated.</p>",
          "shape": "Iso8601Timestamp"
        }
      },
      "type": "structure"
    },
    "MediaLiveConnectorPipeline": {
      "documentation": "<p>The connector pipeline.</p>",
      "members": {
        "CreatedTimestamp": {
          "documentation": "<p>Thetime at which the connector pipeline was created.</p>",
          "shape": "Iso8601Timestamp"
        },
        "MediaPipelineArn": {
          "documentation": "<p>The connector pipeline's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The connector pipeline's ID.</p>",
          "shape": "GuidString"
        },
        "Sinks": {
          "documentation": "<p>The connector pipeline's data sinks.</p>",
          "shape": "LiveConnectorSinkList"
        },
        "Sources": {
          "documentation": "<p>The connector pipeline's data sources.</p>",
          "shape": "LiveConnectorSourceList"
        },
        "Status": {
          "documentation": "<p>The connector pipeline's status.</p>",
          "shape": "MediaPipelineStatus"
        },
        "UpdatedTimestamp": {
          "documentation": "<p>The time at which the connector pipeline was last updated.</p>",
          "shape": "Iso8601Timestamp"
        }
      },
      "type": "structure"
    },
    "MediaPipeline": {
      "documentation": "<p>A pipeline consisting of a media capture, media concatenation, or live-streaming pipeline.</p>",
      "members": {
        "MediaCapturePipeline": {
          "documentation": "<p>A pipeline that enables users to capture audio and video.</p>",
          "shape": "MediaCapturePipeline"
        },
        "MediaConcatenationPipeline": {
          "documentation": "<p>The media concatenation pipeline in a media pipeline.</p>",
          "shape": "MediaConcatenationPipeline"
        },
        "MediaLiveConnectorPipeline": {
          "documentation": "<p>The connector pipeline of the media pipeline.</p>",
          "shape": "MediaLiveConnectorPipeline"
        }
      },
      "type": "structure"
    },
    "MediaPipelineList": {
      "member": {
        "shape": "MediaPipelineSummary"
      },
      "type": "list"
    },
    "MediaPipelineSinkType": {
      "enum": [
        "S3Bucket"
      ],
      "type": "string"
    },
    "MediaPipelineSourceType": {
      "enum": [
        "ChimeSdkMeeting"
      ],
      "type": "string"
    },
    "MediaPipelineStatus": {
      "enum": [
        "Initializing",
        "InProgress",
        "Failed",
        "Stopping",
        "Stopped"
      ],
      "type": "string"
    },
    "MediaPipelineSummary": {
      "documentation": "<p>The summary of the media pipeline.</p>",
      "members": {
        "MediaPipelineArn": {
          "documentation": "<p>The ARN of the media pipeline in the summary.</p>",
          "shape": "AmazonResourceName"
        },
        "MediaPipelineId": {
          "documentation": "<p>The ID of the media pipeline in the summary.</p>",
          "shape": "GuidString"
        }
      },
      "type": "structure"
    },
    "MeetingEventsConcatenationConfiguration": {
      "documentation": "<p>The configuration object for an event concatenation pipeline.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "NotFoundException": {
      "documentation": "<p>One or more of the resources in the request does not exist in the system.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "PresenterOnlyConfiguration": {
      "documentation": "<p>Defines the configuration for a presenter only video tile.</p>",
      "members": {
        "PresenterPosition": {
          "documentation": "<p>Defines the position of the presenter video tile. Default: <code>TopRight</code>.</p>",
          "shape": "PresenterPosition"
        }
      },
      "type": "structure"
    },
    "PresenterPosition": {
      "enum": [
        "TopLeft",
        "TopRight",
        "BottomLeft",
        "BottomRight"
      ],
      "type": "string"
    },
    "ResolutionOption": {
      "enum": [
        "HD",
        "FHD"
      ],
      "type": "string"
    },
    "ResourceLimitExceededException": {
      "documentation": "<p>The request exceeds the resource limit.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResultMax": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "S3BucketSinkConfiguration": {
      "documentation": "<p>The configuration settings for the S3 bucket.</p>",
      "members": {
        "Destination": {
          "documentation": "<p>The destination URL of the S3 bucket.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "Destination"
      ],
      "type": "structure"
    },
    "SelectedVideoStreams": {
      "documentation": "<p>The video streams for a specified media pipeline. The total number of video streams can't exceed 25.</p>",
      "members": {
        "AttendeeIds": {
          "documentation": "<p>The attendee IDs of the streams selected for a media pipeline. </p>",
          "shape": "AttendeeIdList"
        },
        "ExternalUserIds": {
          "documentation": "<p>The external user IDs of the streams selected for a media pipeline.</p>",
          "shape": "ExternalUserIdList"
        }
      },
      "type": "structure"
    },
    "SensitiveString": {
      "max": 1024,
      "min": 1,
      "sensitive": true,
      "type": "string"
    },
    "ServiceFailureException": {
      "documentation": "<p>The service encountered an unexpected error.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is currently unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "fault": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SourceConfiguration": {
      "documentation": "<p>Source configuration for a specified media pipeline.</p>",
      "members": {
        "SelectedVideoStreams": {
          "documentation": "<p>The selected video streams for a specified media pipeline. The number of video streams can't exceed 25.</p>",
          "shape": "SelectedVideoStreams"
        }
      },
      "type": "structure"
    },
    "String": {
      "max": 4096,
      "pattern": ".*",
      "type": "string"
    },
    "Tag": {
      "documentation": "<p>A key/value pair that grants users access to meeting resources.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The key half of a tag.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>The value half of a tag.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagList": {
      "max": 50,
      "member": {
        "shape": "Tag"
      },
      "min": 1,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the media pipeline associated with any tags. The ARN consists of the pipeline's endpoint region, resource ID, and pipeline ID.</p>",
          "shape": "AmazonResourceName"
        },
        "Tags": {
          "documentation": "<p>The tags associated with the specified media pipeline.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceARN",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "ThrottledClientException": {
      "documentation": "<p>The client exceeded its request rate limit.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TranscriptionMessagesConcatenationConfiguration": {
      "documentation": "<p>The configuration object for concatenating transcription messages.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "UnauthorizedClientException": {
      "documentation": "<p>The client is not currently authorized to make the request.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "ErrorCode"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the pipeline that you want to untag.</p>",
          "shape": "AmazonResourceName"
        },
        "TagKeys": {
          "documentation": "<p>The key/value pairs in the tag that you want to remove.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceARN",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "VideoArtifactsConfiguration": {
      "documentation": "<p>The video artifact configuration object.</p>",
      "members": {
        "MuxType": {
          "documentation": "<p>The MUX type of the video artifact configuration object.</p>",
          "shape": "VideoMuxType"
        },
        "State": {
          "documentation": "<p>Indicates whether the video artifact is enabled or disabled.</p>",
          "shape": "ArtifactsState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "VideoConcatenationConfiguration": {
      "documentation": "<p>The configuration object of a video contacatentation pipeline.</p>",
      "members": {
        "State": {
          "documentation": "<p>Enables or disables the configuration object.</p>",
          "shape": "ArtifactsConcatenationState"
        }
      },
      "required": [
        "State"
      ],
      "type": "structure"
    },
    "VideoMuxType": {
      "enum": [
        "VideoOnly"
      ],
      "type": "string"
    }
  },
  "version": "2.0"
}
