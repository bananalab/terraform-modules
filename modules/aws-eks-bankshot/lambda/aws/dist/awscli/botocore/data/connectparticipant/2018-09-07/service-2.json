{
  "documentation": "<p>Amazon Connect is a cloud-based contact center solution that makes it easy to set up and manage a customer contact center and provide reliable customer engagement at any scale.</p> <p>Amazon Connect enables customer contacts through voice or chat.</p> <p>The APIs described here are used by chat participants, such as agents and customers.</p>",
  "metadata": {
    "apiVersion": "2018-09-07",
    "endpointPrefix": "participant.connect",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "Amazon Connect Participant",
    "serviceFullName": "Amazon Connect Participant Service",
    "serviceId": "ConnectParticipant",
    "signatureVersion": "v4",
    "signingName": "execute-api",
    "uid": "connectparticipant-2018-09-07"
  },
  "operations": {
    "CompleteAttachmentUpload": {
      "documentation": "<p>Allows you to confirm that the attachment has been uploaded using the pre-signed URL provided in StartAttachmentUpload API. </p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/complete-attachment-upload"
      },
      "input": {
        "shape": "CompleteAttachmentUploadRequest"
      },
      "name": "CompleteAttachmentUpload",
      "output": {
        "shape": "CompleteAttachmentUploadResponse"
      }
    },
    "CreateParticipantConnection": {
      "documentation": "<p>Creates the participant's connection. Note that ParticipantToken is used for invoking this API instead of ConnectionToken.</p> <p>The participant token is valid for the lifetime of the participant \u2013 until they are part of a contact.</p> <p>The response URL for <code>WEBSOCKET</code> Type has a connect expiry timeout of 100s. Clients must manually connect to the returned websocket URL and subscribe to the desired topic. </p> <p>For chat, you need to publish the following on the established websocket connection:</p> <p> <code>{\"topic\":\"aws/subscribe\",\"content\":{\"topics\":[\"aws/chat\"]}}</code> </p> <p>Upon websocket URL expiry, as specified in the response ConnectionExpiry parameter, clients need to call this API again to obtain a new websocket URL and perform the same steps as before.</p> <p> <b>Message streaming support</b>: This API can also be used together with the <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_StartContactStreaming.html\">StartContactStreaming</a> API to create a participant connection for chat contacts that are not using a websocket. For more information about message streaming, <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/chat-message-streaming.html\">Enable real-time chat message streaming</a> in the <i>Amazon Connect Administrator Guide</i>.</p> <p> <b>Feature specifications</b>: For information about feature specifications, such as the allowed number of open websocket connections per participant, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>. </p> <note> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p> </note>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/connection"
      },
      "input": {
        "shape": "CreateParticipantConnectionRequest"
      },
      "name": "CreateParticipantConnection",
      "output": {
        "shape": "CreateParticipantConnectionResponse"
      }
    },
    "DisconnectParticipant": {
      "documentation": "<p>Disconnects a participant. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/disconnect"
      },
      "input": {
        "shape": "DisconnectParticipantRequest"
      },
      "name": "DisconnectParticipant",
      "output": {
        "shape": "DisconnectParticipantResponse"
      }
    },
    "GetAttachment": {
      "documentation": "<p>Provides a pre-signed URL for download of a completed attachment. This is an asynchronous API for use with active contacts.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/attachment"
      },
      "input": {
        "shape": "GetAttachmentRequest"
      },
      "name": "GetAttachment",
      "output": {
        "shape": "GetAttachmentResponse"
      }
    },
    "GetTranscript": {
      "documentation": "<p>Retrieves a transcript of the session, including details about any attachments. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/transcript"
      },
      "input": {
        "shape": "GetTranscriptRequest"
      },
      "name": "GetTranscript",
      "output": {
        "shape": "GetTranscriptResponse"
      }
    },
    "SendEvent": {
      "documentation": "<p>Sends an event. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/event"
      },
      "input": {
        "shape": "SendEventRequest"
      },
      "name": "SendEvent",
      "output": {
        "shape": "SendEventResponse"
      }
    },
    "SendMessage": {
      "documentation": "<p>Sends a message. Note that ConnectionToken is used for invoking this API instead of ParticipantToken.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/message"
      },
      "input": {
        "shape": "SendMessageRequest"
      },
      "name": "SendMessage",
      "output": {
        "shape": "SendMessageResponse"
      }
    },
    "StartAttachmentUpload": {
      "documentation": "<p>Provides a pre-signed Amazon S3 URL in response for uploading the file directly to S3.</p> <p>The Amazon Connect Participant Service APIs do not use <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 authentication</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/participant/start-attachment-upload"
      },
      "input": {
        "shape": "StartAttachmentUploadRequest"
      },
      "name": "StartAttachmentUpload",
      "output": {
        "shape": "StartAttachmentUploadResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ArtifactId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ArtifactStatus": {
      "enum": [
        "APPROVED",
        "REJECTED",
        "IN_PROGRESS"
      ],
      "type": "string"
    },
    "AttachmentIdList": {
      "max": 1,
      "member": {
        "shape": "ArtifactId"
      },
      "min": 1,
      "type": "list"
    },
    "AttachmentItem": {
      "documentation": "<p>The case-insensitive input to indicate standard MIME type that describes the format of the file that will be uploaded.</p>",
      "members": {
        "AttachmentId": {
          "documentation": "<p>A unique identifier for the attachment.</p>",
          "shape": "ArtifactId"
        },
        "AttachmentName": {
          "documentation": "<p>A case-sensitive name of the attachment being uploaded.</p>",
          "shape": "AttachmentName"
        },
        "ContentType": {
          "documentation": "<p>Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
          "shape": "ContentType"
        },
        "Status": {
          "documentation": "<p>Status of the attachment.</p>",
          "shape": "ArtifactStatus"
        }
      },
      "type": "structure"
    },
    "AttachmentName": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "AttachmentSizeInBytes": {
      "min": 1,
      "type": "long"
    },
    "Attachments": {
      "member": {
        "shape": "AttachmentItem"
      },
      "type": "list"
    },
    "Bool": {
      "type": "boolean"
    },
    "ChatContent": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "ChatContentType": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "ChatItemId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ChatItemType": {
      "enum": [
        "TYPING",
        "PARTICIPANT_JOINED",
        "PARTICIPANT_LEFT",
        "CHAT_ENDED",
        "TRANSFER_SUCCEEDED",
        "TRANSFER_FAILED",
        "MESSAGE",
        "EVENT",
        "ATTACHMENT",
        "CONNECTION_ACK"
      ],
      "type": "string"
    },
    "ClientToken": {
      "max": 500,
      "type": "string"
    },
    "CompleteAttachmentUploadRequest": {
      "members": {
        "AttachmentIds": {
          "documentation": "<p>A list of unique identifiers for the attachments.</p>",
          "shape": "AttachmentIdList"
        },
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "NonEmptyClientToken"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        }
      },
      "required": [
        "AttachmentIds",
        "ClientToken",
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "CompleteAttachmentUploadResponse": {
      "members": {},
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>An attachment with that identifier is already being uploaded.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Reason"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ConnectionCredentials": {
      "documentation": "<p>Connection credentials. </p>",
      "members": {
        "ConnectionToken": {
          "documentation": "<p>The connection token.</p>",
          "shape": "ParticipantToken"
        },
        "Expiry": {
          "documentation": "<p>The expiration of the token.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "ISO8601Datetime"
        }
      },
      "type": "structure"
    },
    "ConnectionType": {
      "enum": [
        "WEBSOCKET",
        "CONNECTION_CREDENTIALS"
      ],
      "type": "string"
    },
    "ConnectionTypeList": {
      "member": {
        "shape": "ConnectionType"
      },
      "min": 1,
      "type": "list"
    },
    "ContactId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ContentType": {
      "max": 255,
      "min": 1,
      "type": "string"
    },
    "CreateParticipantConnectionRequest": {
      "members": {
        "ConnectParticipant": {
          "documentation": "<p>Amazon Connect Participant is used to mark the participant as connected for message streaming.</p>",
          "shape": "Bool"
        },
        "ParticipantToken": {
          "documentation": "<p>This is a header parameter.</p> <p>The ParticipantToken as obtained from <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_StartChatContact.html\">StartChatContact</a> API response.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        },
        "Type": {
          "documentation": "<p>Type of connection information required.</p>",
          "shape": "ConnectionTypeList"
        }
      },
      "required": [
        "Type",
        "ParticipantToken"
      ],
      "type": "structure"
    },
    "CreateParticipantConnectionResponse": {
      "members": {
        "ConnectionCredentials": {
          "documentation": "<p>Creates the participant's connection credentials. The authentication token associated with the participant's connection.</p>",
          "shape": "ConnectionCredentials"
        },
        "Websocket": {
          "documentation": "<p>Creates the participant's websocket connection.</p>",
          "shape": "Websocket"
        }
      },
      "type": "structure"
    },
    "DisconnectParticipantRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        }
      },
      "required": [
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "DisconnectParticipantResponse": {
      "members": {},
      "type": "structure"
    },
    "DisplayName": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "GetAttachmentRequest": {
      "members": {
        "AttachmentId": {
          "documentation": "<p>A unique identifier for the attachment.</p>",
          "shape": "ArtifactId"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        }
      },
      "required": [
        "AttachmentId",
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "GetAttachmentResponse": {
      "members": {
        "Url": {
          "documentation": "<p>This is the pre-signed URL that can be used for uploading the file to Amazon S3 when used in response to <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_StartAttachmentUpload.html\">StartAttachmentUpload</a>.</p>",
          "shape": "PreSignedAttachmentUrl"
        },
        "UrlExpiry": {
          "documentation": "<p>The expiration time of the URL in ISO timestamp. It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "ISO8601Datetime"
        }
      },
      "type": "structure"
    },
    "GetTranscriptRequest": {
      "members": {
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        },
        "ContactId": {
          "documentation": "<p>The contactId from the current contact chain for which transcript is needed.</p>",
          "shape": "ContactId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return in the page. Default: 10. </p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "ScanDirection": {
          "documentation": "<p>The direction from StartPosition from which to retrieve message. Default: BACKWARD when no StartPosition is provided, FORWARD with StartPosition. </p>",
          "shape": "ScanDirection"
        },
        "SortOrder": {
          "documentation": "<p>The sort order for the records. Default: DESCENDING.</p>",
          "shape": "SortKey"
        },
        "StartPosition": {
          "documentation": "<p>A filtering option for where to start.</p>",
          "shape": "StartPosition"
        }
      },
      "required": [
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "GetTranscriptResponse": {
      "members": {
        "InitialContactId": {
          "documentation": "<p>The initial contact ID for the contact. </p>",
          "shape": "ContactId"
        },
        "NextToken": {
          "documentation": "<p>The pagination token. Use the value returned previously in the next subsequent request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "Transcript": {
          "documentation": "<p>The list of messages in the session.</p>",
          "shape": "Transcript"
        }
      },
      "type": "structure"
    },
    "ISO8601Datetime": {
      "type": "string"
    },
    "Instant": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "InternalServerException": {
      "documentation": "<p>This exception occurs when there is an internal failure in the Amazon Connect service.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "Item": {
      "documentation": "<p>An item - message or event - that has been sent. </p>",
      "members": {
        "AbsoluteTime": {
          "documentation": "<p>The time when the message or event was sent.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "Instant"
        },
        "Attachments": {
          "documentation": "<p>Provides information about the attachments.</p>",
          "shape": "Attachments"
        },
        "Content": {
          "documentation": "<p>The content of the message or event.</p>",
          "shape": "ChatContent"
        },
        "ContentType": {
          "documentation": "<p>The type of content of the item.</p>",
          "shape": "ChatContentType"
        },
        "DisplayName": {
          "documentation": "<p>The chat display name of the sender.</p>",
          "shape": "DisplayName"
        },
        "Id": {
          "documentation": "<p>The ID of the item.</p>",
          "shape": "ChatItemId"
        },
        "ParticipantId": {
          "documentation": "<p>The ID of the sender in the session.</p>",
          "shape": "ParticipantId"
        },
        "ParticipantRole": {
          "documentation": "<p>The role of the sender. For example, is it a customer, agent, or system.</p>",
          "shape": "ParticipantRole"
        },
        "Type": {
          "documentation": "<p>Type of the item: message or event. </p>",
          "shape": "ChatItemType"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "Message": {
      "type": "string"
    },
    "MostRecent": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "NextToken": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "NonEmptyClientToken": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "ParticipantId": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "ParticipantRole": {
      "enum": [
        "AGENT",
        "CUSTOMER",
        "SYSTEM"
      ],
      "type": "string"
    },
    "ParticipantToken": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "PreSignedAttachmentUrl": {
      "max": 2000,
      "min": 1,
      "type": "string"
    },
    "PreSignedConnectionUrl": {
      "max": 2000,
      "min": 1,
      "type": "string"
    },
    "Reason": {
      "max": 2000,
      "min": 1,
      "type": "string"
    },
    "ScanDirection": {
      "enum": [
        "FORWARD",
        "BACKWARD"
      ],
      "type": "string"
    },
    "SendEventRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        },
        "Content": {
          "documentation": "<p>The content of the event to be sent (for example, message text). This is not yet supported.</p>",
          "shape": "ChatContent"
        },
        "ContentType": {
          "documentation": "<p>The content type of the request. Supported types are:</p> <ul> <li> <p>application/vnd.amazonaws.connect.event.typing</p> </li> <li> <p>application/vnd.amazonaws.connect.event.connection.acknowledged</p> </li> </ul>",
          "shape": "ChatContentType"
        }
      },
      "required": [
        "ContentType",
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "SendEventResponse": {
      "members": {
        "AbsoluteTime": {
          "documentation": "<p>The time when the event was sent.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "Instant"
        },
        "Id": {
          "documentation": "<p>The ID of the response.</p>",
          "shape": "ChatItemId"
        }
      },
      "type": "structure"
    },
    "SendMessageRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        },
        "Content": {
          "documentation": "<p>The content of the message.</p>",
          "shape": "ChatContent"
        },
        "ContentType": {
          "documentation": "<p>The type of the content. Supported types are text/plain.</p>",
          "shape": "ChatContentType"
        }
      },
      "required": [
        "ContentType",
        "Content",
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "SendMessageResponse": {
      "members": {
        "AbsoluteTime": {
          "documentation": "<p>The time when the message was sent.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "Instant"
        },
        "Id": {
          "documentation": "<p>The ID of the message.</p>",
          "shape": "ChatItemId"
        }
      },
      "type": "structure"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The number of attachments per contact exceeds the quota.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "SortKey": {
      "enum": [
        "DESCENDING",
        "ASCENDING"
      ],
      "type": "string"
    },
    "StartAttachmentUploadRequest": {
      "members": {
        "AttachmentName": {
          "documentation": "<p>A case-sensitive name of the attachment being uploaded.</p>",
          "shape": "AttachmentName"
        },
        "AttachmentSizeInBytes": {
          "documentation": "<p>The size of the attachment in bytes.</p>",
          "shape": "AttachmentSizeInBytes"
        },
        "ClientToken": {
          "documentation": "<p>A unique case sensitive identifier to support idempotency of request.</p>",
          "idempotencyToken": true,
          "shape": "NonEmptyClientToken"
        },
        "ConnectionToken": {
          "documentation": "<p>The authentication token associated with the participant's connection.</p>",
          "location": "header",
          "locationName": "X-Amz-Bearer",
          "shape": "ParticipantToken"
        },
        "ContentType": {
          "documentation": "<p>Describes the MIME file type of the attachment. For a list of supported file types, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html#feature-limits\">Feature specifications</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
          "shape": "ContentType"
        }
      },
      "required": [
        "ContentType",
        "AttachmentSizeInBytes",
        "AttachmentName",
        "ClientToken",
        "ConnectionToken"
      ],
      "type": "structure"
    },
    "StartAttachmentUploadResponse": {
      "members": {
        "AttachmentId": {
          "documentation": "<p>A unique identifier for the attachment.</p>",
          "shape": "ArtifactId"
        },
        "UploadMetadata": {
          "documentation": "<p>Fields to be used while uploading the attachment.</p>",
          "shape": "UploadMetadata"
        }
      },
      "type": "structure"
    },
    "StartPosition": {
      "documentation": "<p>A filtering option for where to start. For example, if you sent 100 messages, start with message 50. </p>",
      "members": {
        "AbsoluteTime": {
          "documentation": "<p>The time in ISO format where to start.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "Instant"
        },
        "Id": {
          "documentation": "<p>The ID of the message or event where to start. </p>",
          "shape": "ChatItemId"
        },
        "MostRecent": {
          "documentation": "<p>The start position of the most recent message where you want to start. </p>",
          "shape": "MostRecent"
        }
      },
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "Transcript": {
      "member": {
        "shape": "Item"
      },
      "type": "list"
    },
    "UploadMetadata": {
      "documentation": "<p>Fields to be used while uploading the attachment.</p>",
      "members": {
        "HeadersToInclude": {
          "documentation": "<p>The headers to be provided while uploading the file to the URL.</p>",
          "shape": "UploadMetadataSignedHeaders"
        },
        "Url": {
          "documentation": "<p>This is the pre-signed URL that can be used for uploading the file to Amazon S3 when used in response to <a href=\"https://docs.aws.amazon.com/connect-participant/latest/APIReference/API_StartAttachmentUpload.html\">StartAttachmentUpload</a>.</p>",
          "shape": "UploadMetadataUrl"
        },
        "UrlExpiry": {
          "documentation": "<p>The expiration time of the URL in ISO timestamp. It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "ISO8601Datetime"
        }
      },
      "type": "structure"
    },
    "UploadMetadataSignedHeaders": {
      "key": {
        "shape": "UploadMetadataSignedHeadersKey"
      },
      "type": "map",
      "value": {
        "shape": "UploadMetadataSignedHeadersValue"
      }
    },
    "UploadMetadataSignedHeadersKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "UploadMetadataSignedHeadersValue": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "UploadMetadataUrl": {
      "max": 2000,
      "min": 1,
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by Amazon Connect.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Reason"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "Websocket": {
      "documentation": "<p>The websocket for the participant's connection.</p>",
      "members": {
        "ConnectionExpiry": {
          "documentation": "<p>The URL expiration timestamp in ISO date format.</p> <p>It's specified in ISO 8601 format: yyyy-MM-ddThh:mm:ss.SSSZ. For example, 2019-11-08T02:41:28.172Z.</p>",
          "shape": "ISO8601Datetime"
        },
        "Url": {
          "documentation": "<p>The URL of the websocket.</p>",
          "shape": "PreSignedConnectionUrl"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
