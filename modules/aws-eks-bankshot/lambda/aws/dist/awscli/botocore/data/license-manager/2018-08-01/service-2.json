{
  "documentation": "<p>License Manager makes it easier to manage licenses from software vendors across multiple Amazon Web Services accounts and on-premises servers.</p>",
  "metadata": {
    "apiVersion": "2018-08-01",
    "endpointPrefix": "license-manager",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "AWS License Manager",
    "serviceId": "License Manager",
    "signatureVersion": "v4",
    "targetPrefix": "AWSLicenseManager",
    "uid": "license-manager-2018-08-01"
  },
  "operations": {
    "AcceptGrant": {
      "documentation": "<p>Accepts the specified grant.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "AcceptGrantRequest"
      },
      "name": "AcceptGrant",
      "output": {
        "shape": "AcceptGrantResponse"
      }
    },
    "CheckInLicense": {
      "documentation": "<p>Checks in the specified license. Check in a license when it is no longer in use.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CheckInLicenseRequest"
      },
      "name": "CheckInLicense",
      "output": {
        "shape": "CheckInLicenseResponse"
      }
    },
    "CheckoutBorrowLicense": {
      "documentation": "<p>Checks out the specified license for offline use.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "NoEntitlementsAllowedException"
        },
        {
          "shape": "EntitlementNotAllowedException"
        },
        {
          "shape": "UnsupportedDigitalSignatureMethodException"
        },
        {
          "shape": "RedirectException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CheckoutBorrowLicenseRequest"
      },
      "name": "CheckoutBorrowLicense",
      "output": {
        "shape": "CheckoutBorrowLicenseResponse"
      }
    },
    "CheckoutLicense": {
      "documentation": "<p>Checks out the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "NoEntitlementsAllowedException"
        },
        {
          "shape": "UnsupportedDigitalSignatureMethodException"
        },
        {
          "shape": "RedirectException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CheckoutLicenseRequest"
      },
      "name": "CheckoutLicense",
      "output": {
        "shape": "CheckoutLicenseResponse"
      }
    },
    "CreateGrant": {
      "documentation": "<p>Creates a grant for the specified license. A grant shares the use of license entitlements with specific Amazon Web Services accounts.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateGrantRequest"
      },
      "name": "CreateGrant",
      "output": {
        "shape": "CreateGrantResponse"
      }
    },
    "CreateGrantVersion": {
      "documentation": "<p>Creates a new version of the specified grant.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateGrantVersionRequest"
      },
      "name": "CreateGrantVersion",
      "output": {
        "shape": "CreateGrantVersionResponse"
      }
    },
    "CreateLicense": {
      "documentation": "<p>Creates a license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "RedirectException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLicenseRequest"
      },
      "name": "CreateLicense",
      "output": {
        "shape": "CreateLicenseResponse"
      }
    },
    "CreateLicenseConfiguration": {
      "documentation": "<p>Creates a license configuration.</p> <p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), license affinity to host (how long a license must be associated with a host), and the number of licenses purchased and used.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLicenseConfigurationRequest"
      },
      "name": "CreateLicenseConfiguration",
      "output": {
        "shape": "CreateLicenseConfigurationResponse"
      }
    },
    "CreateLicenseConversionTaskForResource": {
      "documentation": "<p>Creates a new license conversion task.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLicenseConversionTaskForResourceRequest"
      },
      "name": "CreateLicenseConversionTaskForResource",
      "output": {
        "shape": "CreateLicenseConversionTaskForResourceResponse"
      }
    },
    "CreateLicenseManagerReportGenerator": {
      "documentation": "<p>Creates a report generator.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLicenseManagerReportGeneratorRequest"
      },
      "name": "CreateLicenseManagerReportGenerator",
      "output": {
        "shape": "CreateLicenseManagerReportGeneratorResponse"
      }
    },
    "CreateLicenseVersion": {
      "documentation": "<p>Creates a new version of the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "RedirectException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLicenseVersionRequest"
      },
      "name": "CreateLicenseVersion",
      "output": {
        "shape": "CreateLicenseVersionResponse"
      }
    },
    "CreateToken": {
      "documentation": "<p>Creates a long-lived token.</p> <p>A refresh token is a JWT token used to get an access token. With an access token, you can call AssumeRoleWithWebIdentity to get role credentials that you can use to call License Manager to manage the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "RedirectException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateTokenRequest"
      },
      "name": "CreateToken",
      "output": {
        "shape": "CreateTokenResponse"
      }
    },
    "DeleteGrant": {
      "documentation": "<p>Deletes the specified grant.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteGrantRequest"
      },
      "name": "DeleteGrant",
      "output": {
        "shape": "DeleteGrantResponse"
      }
    },
    "DeleteLicense": {
      "documentation": "<p>Deletes the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "RedirectException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteLicenseRequest"
      },
      "name": "DeleteLicense",
      "output": {
        "shape": "DeleteLicenseResponse"
      }
    },
    "DeleteLicenseConfiguration": {
      "documentation": "<p>Deletes the specified license configuration.</p> <p>You cannot delete a license configuration that is in use.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteLicenseConfigurationRequest"
      },
      "name": "DeleteLicenseConfiguration",
      "output": {
        "shape": "DeleteLicenseConfigurationResponse"
      }
    },
    "DeleteLicenseManagerReportGenerator": {
      "documentation": "<p>Deletes the specified report generator.</p> <p>This action deletes the report generator, which stops it from generating future reports. The action cannot be reversed. It has no effect on the previous reports from this generator.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteLicenseManagerReportGeneratorRequest"
      },
      "name": "DeleteLicenseManagerReportGenerator",
      "output": {
        "shape": "DeleteLicenseManagerReportGeneratorResponse"
      }
    },
    "DeleteToken": {
      "documentation": "<p>Deletes the specified token. Must be called in the license home Region.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "RedirectException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteTokenRequest"
      },
      "name": "DeleteToken",
      "output": {
        "shape": "DeleteTokenResponse"
      }
    },
    "ExtendLicenseConsumption": {
      "documentation": "<p>Extends the expiration date for license consumption.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ExtendLicenseConsumptionRequest"
      },
      "name": "ExtendLicenseConsumption",
      "output": {
        "shape": "ExtendLicenseConsumptionResponse"
      }
    },
    "GetAccessToken": {
      "documentation": "<p>Gets a temporary access token to use with AssumeRoleWithWebIdentity. Access tokens are valid for one hour.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAccessTokenRequest"
      },
      "name": "GetAccessToken",
      "output": {
        "shape": "GetAccessTokenResponse"
      }
    },
    "GetGrant": {
      "documentation": "<p>Gets detailed information about the specified grant.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetGrantRequest"
      },
      "name": "GetGrant",
      "output": {
        "shape": "GetGrantResponse"
      }
    },
    "GetLicense": {
      "documentation": "<p>Gets detailed information about the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLicenseRequest"
      },
      "name": "GetLicense",
      "output": {
        "shape": "GetLicenseResponse"
      }
    },
    "GetLicenseConfiguration": {
      "documentation": "<p>Gets detailed information about the specified license configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLicenseConfigurationRequest"
      },
      "name": "GetLicenseConfiguration",
      "output": {
        "shape": "GetLicenseConfigurationResponse"
      }
    },
    "GetLicenseConversionTask": {
      "documentation": "<p>Gets information about the specified license type conversion task.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLicenseConversionTaskRequest"
      },
      "name": "GetLicenseConversionTask",
      "output": {
        "shape": "GetLicenseConversionTaskResponse"
      }
    },
    "GetLicenseManagerReportGenerator": {
      "documentation": "<p>Gets information about the specified report generator.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLicenseManagerReportGeneratorRequest"
      },
      "name": "GetLicenseManagerReportGenerator",
      "output": {
        "shape": "GetLicenseManagerReportGeneratorResponse"
      }
    },
    "GetLicenseUsage": {
      "documentation": "<p>Gets detailed information about the usage of the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetLicenseUsageRequest"
      },
      "name": "GetLicenseUsage",
      "output": {
        "shape": "GetLicenseUsageResponse"
      }
    },
    "GetServiceSettings": {
      "documentation": "<p>Gets the License Manager settings for the current Region.</p>",
      "errors": [
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetServiceSettingsRequest"
      },
      "name": "GetServiceSettings",
      "output": {
        "shape": "GetServiceSettingsResponse"
      }
    },
    "ListAssociationsForLicenseConfiguration": {
      "documentation": "<p>Lists the resource associations for the specified license configuration.</p> <p>Resource associations need not consume licenses from a license configuration. For example, an AMI or a stopped instance might not consume a license (depending on the license rules).</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "FilterLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListAssociationsForLicenseConfigurationRequest"
      },
      "name": "ListAssociationsForLicenseConfiguration",
      "output": {
        "shape": "ListAssociationsForLicenseConfigurationResponse"
      }
    },
    "ListDistributedGrants": {
      "documentation": "<p>Lists the grants distributed for the specified license.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListDistributedGrantsRequest"
      },
      "name": "ListDistributedGrants",
      "output": {
        "shape": "ListDistributedGrantsResponse"
      }
    },
    "ListFailuresForLicenseConfigurationOperations": {
      "documentation": "<p>Lists the license configuration operations that failed.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListFailuresForLicenseConfigurationOperationsRequest"
      },
      "name": "ListFailuresForLicenseConfigurationOperations",
      "output": {
        "shape": "ListFailuresForLicenseConfigurationOperationsResponse"
      }
    },
    "ListLicenseConfigurations": {
      "documentation": "<p>Lists the license configurations for your account.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "FilterLimitExceededException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicenseConfigurationsRequest"
      },
      "name": "ListLicenseConfigurations",
      "output": {
        "shape": "ListLicenseConfigurationsResponse"
      }
    },
    "ListLicenseConversionTasks": {
      "documentation": "<p>Lists the license type conversion tasks for your account.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicenseConversionTasksRequest"
      },
      "name": "ListLicenseConversionTasks",
      "output": {
        "shape": "ListLicenseConversionTasksResponse"
      }
    },
    "ListLicenseManagerReportGenerators": {
      "documentation": "<p>Lists the report generators for your account.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicenseManagerReportGeneratorsRequest"
      },
      "name": "ListLicenseManagerReportGenerators",
      "output": {
        "shape": "ListLicenseManagerReportGeneratorsResponse"
      }
    },
    "ListLicenseSpecificationsForResource": {
      "documentation": "<p>Describes the license configurations for the specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicenseSpecificationsForResourceRequest"
      },
      "name": "ListLicenseSpecificationsForResource",
      "output": {
        "shape": "ListLicenseSpecificationsForResourceResponse"
      }
    },
    "ListLicenseVersions": {
      "documentation": "<p>Lists all versions of the specified license.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicenseVersionsRequest"
      },
      "name": "ListLicenseVersions",
      "output": {
        "shape": "ListLicenseVersionsResponse"
      }
    },
    "ListLicenses": {
      "documentation": "<p>Lists the licenses for your account.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLicensesRequest"
      },
      "name": "ListLicenses",
      "output": {
        "shape": "ListLicensesResponse"
      }
    },
    "ListReceivedGrants": {
      "documentation": "<p>Lists grants that are received but not accepted.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListReceivedGrantsRequest"
      },
      "name": "ListReceivedGrants",
      "output": {
        "shape": "ListReceivedGrantsResponse"
      }
    },
    "ListReceivedLicenses": {
      "documentation": "<p>Lists received licenses.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListReceivedLicensesRequest"
      },
      "name": "ListReceivedLicenses",
      "output": {
        "shape": "ListReceivedLicensesResponse"
      }
    },
    "ListResourceInventory": {
      "documentation": "<p>Lists resources managed using Systems Manager inventory.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "FilterLimitExceededException"
        },
        {
          "shape": "FailedDependencyException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListResourceInventoryRequest"
      },
      "name": "ListResourceInventory",
      "output": {
        "shape": "ListResourceInventoryResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags for the specified license configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTokens": {
      "documentation": "<p>Lists your tokens.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTokensRequest"
      },
      "name": "ListTokens",
      "output": {
        "shape": "ListTokensResponse"
      }
    },
    "ListUsageForLicenseConfiguration": {
      "documentation": "<p>Lists all license usage records for a license configuration, displaying license consumption details by resource at a selected point in time. Use this action to audit the current license consumption for any license inventory and configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "FilterLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListUsageForLicenseConfigurationRequest"
      },
      "name": "ListUsageForLicenseConfiguration",
      "output": {
        "shape": "ListUsageForLicenseConfigurationResponse"
      }
    },
    "RejectGrant": {
      "documentation": "<p>Rejects the specified grant.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RejectGrantRequest"
      },
      "name": "RejectGrant",
      "output": {
        "shape": "RejectGrantResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds the specified tags to the specified license configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified license configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateLicenseConfiguration": {
      "documentation": "<p>Modifies the attributes of an existing license configuration.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ResourceLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateLicenseConfigurationRequest"
      },
      "name": "UpdateLicenseConfiguration",
      "output": {
        "shape": "UpdateLicenseConfigurationResponse"
      }
    },
    "UpdateLicenseManagerReportGenerator": {
      "documentation": "<p>Updates a report generator.</p> <p>After you make changes to a report generator, it starts generating new reports within 60 minutes of being updated.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "RateLimitExceededException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateLicenseManagerReportGeneratorRequest"
      },
      "name": "UpdateLicenseManagerReportGenerator",
      "output": {
        "shape": "UpdateLicenseManagerReportGeneratorResponse"
      }
    },
    "UpdateLicenseSpecificationsForResource": {
      "documentation": "<p>Adds or removes the specified license configurations for the specified Amazon Web Services resource.</p> <p>You can update the license specifications of AMIs, instances, and hosts. You cannot update the license specifications for launch templates and CloudFormation templates, as they send license configurations to the operation that creates the resource.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "InvalidResourceStateException"
        },
        {
          "shape": "LicenseUsageException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateLicenseSpecificationsForResourceRequest"
      },
      "name": "UpdateLicenseSpecificationsForResource",
      "output": {
        "shape": "UpdateLicenseSpecificationsForResourceResponse"
      }
    },
    "UpdateServiceSettings": {
      "documentation": "<p>Updates License Manager settings for the current Region.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServerInternalException"
        },
        {
          "shape": "AuthorizationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "RateLimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateServiceSettingsRequest"
      },
      "name": "UpdateServiceSettings",
      "output": {
        "shape": "UpdateServiceSettingsResponse"
      }
    }
  },
  "shapes": {
    "AcceptGrantRequest": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "GrantArn"
      ],
      "type": "structure"
    },
    "AcceptGrantResponse": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Grant ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AccessDeniedException": {
      "documentation": "<p>Access to resource denied.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "AllowedOperation": {
      "enum": [
        "CreateGrant",
        "CheckoutLicense",
        "CheckoutBorrowLicense",
        "CheckInLicense",
        "ExtendConsumptionLicense",
        "ListPurchasedLicenses",
        "CreateToken"
      ],
      "type": "string"
    },
    "AllowedOperationList": {
      "max": 7,
      "member": {
        "shape": "AllowedOperation"
      },
      "min": 1,
      "type": "list"
    },
    "Arn": {
      "max": 2048,
      "pattern": "^arn:aws(-(cn|us-gov|iso-b|iso-c|iso-d))?:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$",
      "type": "string"
    },
    "ArnList": {
      "member": {
        "shape": "Arn"
      },
      "type": "list"
    },
    "AuthorizationException": {
      "documentation": "<p>The Amazon Web Services user account does not have permission to perform the action. Check the IAM policy associated with this account.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "AutomatedDiscoveryInformation": {
      "documentation": "<p>Describes automated discovery.</p>",
      "members": {
        "LastRunTime": {
          "documentation": "<p>Time that automated discovery last ran.</p>",
          "shape": "DateTime"
        }
      },
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BorrowConfiguration": {
      "documentation": "<p>Details about a borrow configuration.</p>",
      "members": {
        "AllowEarlyCheckIn": {
          "documentation": "<p>Indicates whether early check-ins are allowed.</p>",
          "shape": "BoxBoolean"
        },
        "MaxTimeToLiveInMinutes": {
          "documentation": "<p>Maximum time for the borrow configuration, in minutes.</p>",
          "shape": "BoxInteger"
        }
      },
      "required": [
        "AllowEarlyCheckIn",
        "MaxTimeToLiveInMinutes"
      ],
      "type": "structure"
    },
    "BoxBoolean": {
      "type": "boolean"
    },
    "BoxInteger": {
      "type": "integer"
    },
    "BoxLong": {
      "type": "long"
    },
    "CheckInLicenseRequest": {
      "members": {
        "Beneficiary": {
          "documentation": "<p>License beneficiary.</p>",
          "shape": "String"
        },
        "LicenseConsumptionToken": {
          "documentation": "<p>License consumption token.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConsumptionToken"
      ],
      "type": "structure"
    },
    "CheckInLicenseResponse": {
      "members": {},
      "type": "structure"
    },
    "CheckoutBorrowLicenseRequest": {
      "members": {
        "CheckoutMetadata": {
          "documentation": "<p>Information about constraints.</p>",
          "shape": "MetadataList"
        },
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "DigitalSignatureMethod": {
          "documentation": "<p>Digital signature method. The possible value is JSON Web Signature (JWS) algorithm PS384. For more information, see <a href=\"https://tools.ietf.org/html/rfc7518#section-3.5\">RFC 7518 Digital Signature with RSASSA-PSS</a>.</p>",
          "shape": "DigitalSignatureMethod"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements. Partial checkouts are not supported.</p>",
          "shape": "EntitlementDataList"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license. The license must use the borrow consumption configuration.</p>",
          "shape": "Arn"
        },
        "NodeId": {
          "documentation": "<p>Node ID.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseArn",
        "Entitlements",
        "DigitalSignatureMethod",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CheckoutBorrowLicenseResponse": {
      "members": {
        "CheckoutMetadata": {
          "documentation": "<p>Information about constraints.</p>",
          "shape": "MetadataList"
        },
        "EntitlementsAllowed": {
          "documentation": "<p>Allowed license entitlements.</p>",
          "shape": "EntitlementDataList"
        },
        "Expiration": {
          "documentation": "<p>Date and time at which the license checkout expires.</p>",
          "shape": "ISO8601DateTime"
        },
        "IssuedAt": {
          "documentation": "<p>Date and time at which the license checkout is issued.</p>",
          "shape": "ISO8601DateTime"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "LicenseConsumptionToken": {
          "documentation": "<p>License consumption token.</p>",
          "shape": "String"
        },
        "NodeId": {
          "documentation": "<p>Node ID.</p>",
          "shape": "String"
        },
        "SignedToken": {
          "documentation": "<p>Signed token.</p>",
          "shape": "SignedToken"
        }
      },
      "type": "structure"
    },
    "CheckoutLicenseRequest": {
      "members": {
        "Beneficiary": {
          "documentation": "<p>License beneficiary.</p>",
          "shape": "String"
        },
        "CheckoutType": {
          "documentation": "<p>Checkout type.</p>",
          "shape": "CheckoutType"
        },
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements.</p>",
          "shape": "EntitlementDataList"
        },
        "KeyFingerprint": {
          "documentation": "<p>Key fingerprint identifying the license.</p>",
          "shape": "String"
        },
        "NodeId": {
          "documentation": "<p>Node ID.</p>",
          "shape": "String"
        },
        "ProductSKU": {
          "documentation": "<p>Product SKU.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ProductSKU",
        "CheckoutType",
        "KeyFingerprint",
        "Entitlements",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CheckoutLicenseResponse": {
      "members": {
        "CheckoutType": {
          "documentation": "<p>Checkout type.</p>",
          "shape": "CheckoutType"
        },
        "EntitlementsAllowed": {
          "documentation": "<p>Allowed license entitlements.</p>",
          "shape": "EntitlementDataList"
        },
        "Expiration": {
          "documentation": "<p>Date and time at which the license checkout expires.</p>",
          "shape": "ISO8601DateTime"
        },
        "IssuedAt": {
          "documentation": "<p>Date and time at which the license checkout is issued.</p>",
          "shape": "ISO8601DateTime"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the checkout license.</p>",
          "shape": "String"
        },
        "LicenseConsumptionToken": {
          "documentation": "<p>License consumption token.</p>",
          "shape": "String"
        },
        "NodeId": {
          "documentation": "<p>Node ID.</p>",
          "shape": "String"
        },
        "SignedToken": {
          "documentation": "<p>Signed token.</p>",
          "shape": "SignedToken"
        }
      },
      "type": "structure"
    },
    "CheckoutType": {
      "enum": [
        "PROVISIONAL",
        "PERPETUAL"
      ],
      "type": "string"
    },
    "ClientRequestToken": {
      "max": 36,
      "min": 1,
      "type": "string"
    },
    "ClientToken": {
      "max": 2048,
      "pattern": "\\S+",
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>There was a conflict processing the request. Try your request again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ConsumedLicenseSummary": {
      "documentation": "<p>Details about license consumption.</p>",
      "members": {
        "ConsumedLicenses": {
          "documentation": "<p>Number of licenses consumed by the resource.</p>",
          "shape": "BoxLong"
        },
        "ResourceType": {
          "documentation": "<p>Resource type of the resource consuming a license.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "ConsumedLicenseSummaryList": {
      "member": {
        "shape": "ConsumedLicenseSummary"
      },
      "type": "list"
    },
    "ConsumptionConfiguration": {
      "documentation": "<p>Details about a consumption configuration.</p>",
      "members": {
        "BorrowConfiguration": {
          "documentation": "<p>Details about a borrow configuration.</p>",
          "shape": "BorrowConfiguration"
        },
        "ProvisionalConfiguration": {
          "documentation": "<p>Details about a provisional configuration.</p>",
          "shape": "ProvisionalConfiguration"
        },
        "RenewType": {
          "documentation": "<p>Renewal frequency.</p>",
          "shape": "RenewType"
        }
      },
      "type": "structure"
    },
    "CreateGrantRequest": {
      "members": {
        "AllowedOperations": {
          "documentation": "<p>Allowed operations for the grant.</p>",
          "shape": "AllowedOperationList"
        },
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "GrantName": {
          "documentation": "<p>Grant name.</p>",
          "shape": "String"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region of the grant.</p>",
          "shape": "String"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "Principals": {
          "documentation": "<p>The grant principals.</p>",
          "shape": "PrincipalArnList"
        }
      },
      "required": [
        "ClientToken",
        "GrantName",
        "LicenseArn",
        "Principals",
        "HomeRegion",
        "AllowedOperations"
      ],
      "type": "structure"
    },
    "CreateGrantResponse": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Grant ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateGrantVersionRequest": {
      "members": {
        "AllowedOperations": {
          "documentation": "<p>Allowed operations for the grant.</p>",
          "shape": "AllowedOperationList"
        },
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        },
        "GrantName": {
          "documentation": "<p>Grant name.</p>",
          "shape": "String"
        },
        "SourceVersion": {
          "documentation": "<p>Current version of the grant.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "StatusReason": {
          "documentation": "<p>Grant status reason.</p>",
          "shape": "StatusReasonMessage"
        }
      },
      "required": [
        "ClientToken",
        "GrantArn"
      ],
      "type": "structure"
    },
    "CreateGrantVersionResponse": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Grant ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "Version": {
          "documentation": "<p>New version of the grant.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateLicenseConfigurationRequest": {
      "members": {
        "Description": {
          "documentation": "<p>Description of the license configuration.</p>",
          "shape": "String"
        },
        "DisassociateWhenNotFound": {
          "documentation": "<p>When true, disassociates a resource when software is uninstalled.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseCount": {
          "documentation": "<p>Number of licenses managed by the license configuration.</p>",
          "shape": "BoxLong"
        },
        "LicenseCountHardLimit": {
          "documentation": "<p>Indicates whether hard or soft license enforcement is used. Exceeding a hard limit blocks the launch of new instances.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseCountingType": {
          "documentation": "<p>Dimension used to track the license inventory.</p>",
          "shape": "LicenseCountingType"
        },
        "LicenseRules": {
          "documentation": "<p>License rules. The syntax is #name=value (for example, #allowedTenancy=EC2-DedicatedHost). The available rules vary by dimension, as follows.</p> <ul> <li> <p> <code>Cores</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code> | <code>maximumCores</code> | <code>minimumCores</code> </p> </li> <li> <p> <code>Instances</code> dimension: <code>allowedTenancy</code> | <code>maximumCores</code> | <code>minimumCores</code> | <code>maximumSockets</code> | <code>minimumSockets</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> <li> <p> <code>Sockets</code> dimension: <code>allowedTenancy</code> | <code>licenseAffinityToHost</code> | <code>maximumSockets</code> | <code>minimumSockets</code> </p> </li> <li> <p> <code>vCPUs</code> dimension: <code>allowedTenancy</code> | <code>honorVcpuOptimization</code> | <code>maximumVcpus</code> | <code>minimumVcpus</code> </p> </li> </ul> <p>The unit for <code>licenseAffinityToHost</code> is days and the range is 1 to 180. The possible values for <code>allowedTenancy</code> are <code>EC2-Default</code>, <code>EC2-DedicatedHost</code>, and <code>EC2-DedicatedInstance</code>. The possible values for <code>honorVcpuOptimization</code> are <code>True</code> and <code>False</code>.</p>",
          "shape": "StringList"
        },
        "Name": {
          "documentation": "<p>Name of the license configuration.</p>",
          "shape": "String"
        },
        "ProductInformationList": {
          "documentation": "<p>Product information.</p>",
          "shape": "ProductInformationList"
        },
        "Tags": {
          "documentation": "<p>Tags to add to the license configuration.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "Name",
        "LicenseCountingType"
      ],
      "type": "structure"
    },
    "CreateLicenseConfigurationResponse": {
      "members": {
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateLicenseConversionTaskForResourceRequest": {
      "members": {
        "DestinationLicenseContext": {
          "documentation": "<p>Information that identifies the license type you are converting to. For the structure of the destination license, see <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli\">Convert a license type using the AWS CLI</a> in the <i>License Manager User Guide</i>.</p>",
          "shape": "LicenseConversionContext"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource you are converting the license type for.</p>",
          "shape": "Arn"
        },
        "SourceLicenseContext": {
          "documentation": "<p>Information that identifies the license type you are converting from. For the structure of the source license, see <a href=\"https://docs.aws.amazon.com/license-manager/latest/userguide/conversion-procedures.html#conversion-cli\">Convert a license type using the AWS CLI</a> in the <i>License Manager User Guide</i>.</p>",
          "shape": "LicenseConversionContext"
        }
      },
      "required": [
        "ResourceArn",
        "SourceLicenseContext",
        "DestinationLicenseContext"
      ],
      "type": "structure"
    },
    "CreateLicenseConversionTaskForResourceResponse": {
      "members": {
        "LicenseConversionTaskId": {
          "documentation": "<p>The ID of the created license type conversion task.</p>",
          "shape": "LicenseConversionTaskId"
        }
      },
      "type": "structure"
    },
    "CreateLicenseManagerReportGeneratorRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "Description": {
          "documentation": "<p>Description of the report generator.</p>",
          "shape": "String"
        },
        "ReportContext": {
          "documentation": "<p>Defines the type of license configuration the report generator tracks.</p>",
          "shape": "ReportContext"
        },
        "ReportFrequency": {
          "documentation": "<p>Frequency by which reports are generated. Reports can be generated daily, monthly, or weekly.</p>",
          "shape": "ReportFrequency"
        },
        "ReportGeneratorName": {
          "documentation": "<p>Name of the report generator.</p>",
          "shape": "ReportGeneratorName"
        },
        "Tags": {
          "documentation": "<p>Tags to add to the report generator.</p>",
          "shape": "TagList"
        },
        "Type": {
          "documentation": "<p>Type of reports to generate. The following report types an be generated:</p> <ul> <li> <p>License configuration report - Reports the number and details of consumed licenses for a license configuration.</p> </li> <li> <p>Resource report - Reports the tracked licenses and resource consumption for a license configuration.</p> </li> </ul>",
          "shape": "ReportTypeList"
        }
      },
      "required": [
        "ReportGeneratorName",
        "Type",
        "ReportContext",
        "ReportFrequency",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CreateLicenseManagerReportGeneratorResponse": {
      "members": {
        "LicenseManagerReportGeneratorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the new report generator.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateLicenseRequest": {
      "members": {
        "Beneficiary": {
          "documentation": "<p>License beneficiary.</p>",
          "shape": "String"
        },
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "ConsumptionConfiguration": {
          "documentation": "<p>Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.</p>",
          "shape": "ConsumptionConfiguration"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements.</p>",
          "shape": "EntitlementList"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region for the license.</p>",
          "shape": "String"
        },
        "Issuer": {
          "documentation": "<p>License issuer.</p>",
          "shape": "Issuer"
        },
        "LicenseMetadata": {
          "documentation": "<p>Information about the license.</p>",
          "shape": "MetadataList"
        },
        "LicenseName": {
          "documentation": "<p>License name.</p>",
          "shape": "String"
        },
        "ProductName": {
          "documentation": "<p>Product name.</p>",
          "shape": "String"
        },
        "ProductSKU": {
          "documentation": "<p>Product SKU.</p>",
          "shape": "String"
        },
        "Validity": {
          "documentation": "<p>Date and time range during which the license is valid, in ISO8601-UTC format.</p>",
          "shape": "DatetimeRange"
        }
      },
      "required": [
        "LicenseName",
        "ProductName",
        "ProductSKU",
        "Issuer",
        "HomeRegion",
        "Validity",
        "Entitlements",
        "Beneficiary",
        "ConsumptionConfiguration",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CreateLicenseResponse": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>License status.</p>",
          "shape": "LicenseStatus"
        },
        "Version": {
          "documentation": "<p>License version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateLicenseVersionRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientToken"
        },
        "ConsumptionConfiguration": {
          "documentation": "<p>Configuration for consumption of the license. Choose a provisional configuration for workloads running with continuous connectivity. Choose a borrow configuration for workloads with offline usage.</p>",
          "shape": "ConsumptionConfiguration"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements.</p>",
          "shape": "EntitlementList"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region of the license.</p>",
          "shape": "String"
        },
        "Issuer": {
          "documentation": "<p>License issuer.</p>",
          "shape": "Issuer"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "LicenseMetadata": {
          "documentation": "<p>Information about the license.</p>",
          "shape": "MetadataList"
        },
        "LicenseName": {
          "documentation": "<p>License name.</p>",
          "shape": "String"
        },
        "ProductName": {
          "documentation": "<p>Product name.</p>",
          "shape": "String"
        },
        "SourceVersion": {
          "documentation": "<p>Current version of the license.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>License status.</p>",
          "shape": "LicenseStatus"
        },
        "Validity": {
          "documentation": "<p>Date and time range during which the license is valid, in ISO8601-UTC format.</p>",
          "shape": "DatetimeRange"
        }
      },
      "required": [
        "LicenseArn",
        "LicenseName",
        "ProductName",
        "Issuer",
        "HomeRegion",
        "Validity",
        "Entitlements",
        "ConsumptionConfiguration",
        "Status",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CreateLicenseVersionResponse": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>License ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>License status.</p>",
          "shape": "LicenseStatus"
        },
        "Version": {
          "documentation": "<p>New version of the license.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateTokenRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Idempotency token, valid for 10 minutes.</p>",
          "shape": "ClientToken"
        },
        "ExpirationInDays": {
          "documentation": "<p>Token expiration, in days, counted from token creation. The default is 365 days.</p>",
          "shape": "Integer"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license. The ARN is mapped to the aud claim of the JWT token.</p>",
          "shape": "Arn"
        },
        "RoleArns": {
          "documentation": "<p>Amazon Resource Name (ARN) of the IAM roles to embed in the token. License Manager does not check whether the roles are in use.</p>",
          "shape": "ArnList"
        },
        "TokenProperties": {
          "documentation": "<p>Data specified by the caller to be included in the JWT token. The data is mapped to the amr claim of the JWT token.</p>",
          "shape": "MaxSize3StringList"
        }
      },
      "required": [
        "LicenseArn",
        "ClientToken"
      ],
      "type": "structure"
    },
    "CreateTokenResponse": {
      "members": {
        "Token": {
          "documentation": "<p>Refresh token, encoded as a JWT token.</p>",
          "shape": "TokenString"
        },
        "TokenId": {
          "documentation": "<p>Token ID.</p>",
          "shape": "String"
        },
        "TokenType": {
          "documentation": "<p>Token type.</p>",
          "shape": "TokenType"
        }
      },
      "type": "structure"
    },
    "DateTime": {
      "type": "timestamp"
    },
    "DatetimeRange": {
      "documentation": "<p>Describes a time range, in ISO8601-UTC format.</p>",
      "members": {
        "Begin": {
          "documentation": "<p>Start of the time range.</p>",
          "shape": "ISO8601DateTime"
        },
        "End": {
          "documentation": "<p>End of the time range.</p>",
          "shape": "ISO8601DateTime"
        }
      },
      "required": [
        "Begin"
      ],
      "type": "structure"
    },
    "DeleteGrantRequest": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        },
        "StatusReason": {
          "documentation": "<p>The Status reason for the delete request.</p>",
          "shape": "StatusReasonMessage"
        },
        "Version": {
          "documentation": "<p>Current version of the grant.</p>",
          "shape": "String"
        }
      },
      "required": [
        "GrantArn",
        "Version"
      ],
      "type": "structure"
    },
    "DeleteGrantResponse": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Grant ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DeleteLicenseConfigurationRequest": {
      "members": {
        "LicenseConfigurationArn": {
          "documentation": "<p>ID of the license configuration.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "DeleteLicenseConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteLicenseManagerReportGeneratorRequest": {
      "members": {
        "LicenseManagerReportGeneratorArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the report generator to be deleted.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseManagerReportGeneratorArn"
      ],
      "type": "structure"
    },
    "DeleteLicenseManagerReportGeneratorResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteLicenseRequest": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "SourceVersion": {
          "documentation": "<p>Current version of the license.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseArn",
        "SourceVersion"
      ],
      "type": "structure"
    },
    "DeleteLicenseResponse": {
      "members": {
        "DeletionDate": {
          "documentation": "<p>Date when the license is deleted.</p>",
          "shape": "ISO8601DateTime"
        },
        "Status": {
          "documentation": "<p>License status.</p>",
          "shape": "LicenseDeletionStatus"
        }
      },
      "type": "structure"
    },
    "DeleteTokenRequest": {
      "members": {
        "TokenId": {
          "documentation": "<p>Token ID.</p>",
          "shape": "String"
        }
      },
      "required": [
        "TokenId"
      ],
      "type": "structure"
    },
    "DeleteTokenResponse": {
      "members": {},
      "type": "structure"
    },
    "DigitalSignatureMethod": {
      "enum": [
        "JWT_PS384"
      ],
      "type": "string"
    },
    "Entitlement": {
      "documentation": "<p>Describes a resource entitled for use with a license.</p>",
      "members": {
        "AllowCheckIn": {
          "documentation": "<p>Indicates whether check-ins are allowed.</p>",
          "shape": "BoxBoolean"
        },
        "MaxCount": {
          "documentation": "<p>Maximum entitlement count. Use if the unit is not None.</p>",
          "shape": "Long"
        },
        "Name": {
          "documentation": "<p>Entitlement name.</p>",
          "shape": "String"
        },
        "Overage": {
          "documentation": "<p>Indicates whether overages are allowed.</p>",
          "shape": "BoxBoolean"
        },
        "Unit": {
          "documentation": "<p>Entitlement unit.</p>",
          "shape": "EntitlementUnit"
        },
        "Value": {
          "documentation": "<p>Entitlement resource. Use only if the unit is None.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Name",
        "Unit"
      ],
      "type": "structure"
    },
    "EntitlementData": {
      "documentation": "<p>Data associated with an entitlement resource.</p>",
      "members": {
        "Name": {
          "documentation": "<p>Entitlement data name.</p>",
          "shape": "String"
        },
        "Unit": {
          "documentation": "<p>Entitlement data unit.</p>",
          "shape": "EntitlementDataUnit"
        },
        "Value": {
          "documentation": "<p>Entitlement data value.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Name",
        "Unit"
      ],
      "type": "structure"
    },
    "EntitlementDataList": {
      "member": {
        "shape": "EntitlementData"
      },
      "type": "list"
    },
    "EntitlementDataUnit": {
      "enum": [
        "Count",
        "None",
        "Seconds",
        "Microseconds",
        "Milliseconds",
        "Bytes",
        "Kilobytes",
        "Megabytes",
        "Gigabytes",
        "Terabytes",
        "Bits",
        "Kilobits",
        "Megabits",
        "Gigabits",
        "Terabits",
        "Percent",
        "Bytes/Second",
        "Kilobytes/Second",
        "Megabytes/Second",
        "Gigabytes/Second",
        "Terabytes/Second",
        "Bits/Second",
        "Kilobits/Second",
        "Megabits/Second",
        "Gigabits/Second",
        "Terabits/Second",
        "Count/Second"
      ],
      "type": "string"
    },
    "EntitlementList": {
      "member": {
        "shape": "Entitlement"
      },
      "type": "list"
    },
    "EntitlementNotAllowedException": {
      "documentation": "<p>The entitlement is not allowed.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "EntitlementUnit": {
      "enum": [
        "Count",
        "None",
        "Seconds",
        "Microseconds",
        "Milliseconds",
        "Bytes",
        "Kilobytes",
        "Megabytes",
        "Gigabytes",
        "Terabytes",
        "Bits",
        "Kilobits",
        "Megabits",
        "Gigabits",
        "Terabits",
        "Percent",
        "Bytes/Second",
        "Kilobytes/Second",
        "Megabytes/Second",
        "Gigabytes/Second",
        "Terabytes/Second",
        "Bits/Second",
        "Kilobits/Second",
        "Megabits/Second",
        "Gigabits/Second",
        "Terabits/Second",
        "Count/Second"
      ],
      "type": "string"
    },
    "EntitlementUsage": {
      "documentation": "<p>Usage associated with an entitlement resource.</p>",
      "members": {
        "ConsumedValue": {
          "documentation": "<p>Resource usage consumed.</p>",
          "shape": "String"
        },
        "MaxCount": {
          "documentation": "<p>Maximum entitlement usage count.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>Entitlement usage name.</p>",
          "shape": "String"
        },
        "Unit": {
          "documentation": "<p>Entitlement usage unit.</p>",
          "shape": "EntitlementDataUnit"
        }
      },
      "required": [
        "Name",
        "ConsumedValue",
        "Unit"
      ],
      "type": "structure"
    },
    "EntitlementUsageList": {
      "member": {
        "shape": "EntitlementUsage"
      },
      "type": "list"
    },
    "ExtendLicenseConsumptionRequest": {
      "members": {
        "DryRun": {
          "documentation": "<p>Checks whether you have the required permissions for the action, without actually making the request. Provides an error response if you do not have the required permissions.</p>",
          "shape": "Boolean"
        },
        "LicenseConsumptionToken": {
          "documentation": "<p>License consumption token.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConsumptionToken"
      ],
      "type": "structure"
    },
    "ExtendLicenseConsumptionResponse": {
      "members": {
        "Expiration": {
          "documentation": "<p>Date and time at which the license consumption expires.</p>",
          "shape": "ISO8601DateTime"
        },
        "LicenseConsumptionToken": {
          "documentation": "<p>License consumption token.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "FailedDependencyException": {
      "documentation": "<p>A dependency required to run the API is missing.</p>",
      "exception": true,
      "members": {
        "ErrorCode": {
          "shape": "String"
        },
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Filter": {
      "documentation": "<p>A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p>",
      "members": {
        "Name": {
          "documentation": "<p>Name of the filter. Filter names are case-sensitive.</p>",
          "shape": "FilterName"
        },
        "Values": {
          "documentation": "<p>Filter values. Filter values are case-sensitive.</p>",
          "shape": "FilterValues"
        }
      },
      "type": "structure"
    },
    "FilterLimitExceededException": {
      "documentation": "<p>The request uses too many filters or too many filter values.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "FilterList": {
      "member": {
        "shape": "Filter"
      },
      "type": "list"
    },
    "FilterName": {
      "type": "string"
    },
    "FilterValue": {
      "type": "string"
    },
    "FilterValues": {
      "member": {
        "shape": "FilterValue"
      },
      "type": "list"
    },
    "Filters": {
      "member": {
        "shape": "Filter"
      },
      "type": "list"
    },
    "GetAccessTokenRequest": {
      "members": {
        "Token": {
          "documentation": "<p>Refresh token, encoded as a JWT token.</p>",
          "shape": "TokenString"
        },
        "TokenProperties": {
          "documentation": "<p>Token properties to validate against those present in the JWT token.</p>",
          "shape": "MaxSize3StringList"
        }
      },
      "required": [
        "Token"
      ],
      "type": "structure"
    },
    "GetAccessTokenResponse": {
      "members": {
        "AccessToken": {
          "documentation": "<p>Temporary access token.</p>",
          "shape": "TokenString"
        }
      },
      "type": "structure"
    },
    "GetGrantRequest": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "required": [
        "GrantArn"
      ],
      "type": "structure"
    },
    "GetGrantResponse": {
      "members": {
        "Grant": {
          "documentation": "<p>Grant details.</p>",
          "shape": "Grant"
        }
      },
      "type": "structure"
    },
    "GetLicenseConfigurationRequest": {
      "members": {
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "GetLicenseConfigurationResponse": {
      "members": {
        "AutomatedDiscoveryInformation": {
          "documentation": "<p>Automated discovery information.</p>",
          "shape": "AutomatedDiscoveryInformation"
        },
        "ConsumedLicenseSummaryList": {
          "documentation": "<p>Summaries of the licenses consumed by resources.</p>",
          "shape": "ConsumedLicenseSummaryList"
        },
        "ConsumedLicenses": {
          "documentation": "<p>Number of licenses assigned to resources.</p>",
          "shape": "BoxLong"
        },
        "Description": {
          "documentation": "<p>Description of the license configuration.</p>",
          "shape": "String"
        },
        "DisassociateWhenNotFound": {
          "documentation": "<p>When true, disassociates a resource when software is uninstalled.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "LicenseConfigurationId": {
          "documentation": "<p>Unique ID for the license configuration.</p>",
          "shape": "String"
        },
        "LicenseCount": {
          "documentation": "<p>Number of available licenses.</p>",
          "shape": "BoxLong"
        },
        "LicenseCountHardLimit": {
          "documentation": "<p>Sets the number of available licenses as a hard limit.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseCountingType": {
          "documentation": "<p>Dimension for which the licenses are counted.</p>",
          "shape": "LicenseCountingType"
        },
        "LicenseRules": {
          "documentation": "<p>License rules.</p>",
          "shape": "StringList"
        },
        "ManagedResourceSummaryList": {
          "documentation": "<p>Summaries of the managed resources.</p>",
          "shape": "ManagedResourceSummaryList"
        },
        "Name": {
          "documentation": "<p>Name of the license configuration.</p>",
          "shape": "String"
        },
        "OwnerAccountId": {
          "documentation": "<p>Account ID of the owner of the license configuration.</p>",
          "shape": "String"
        },
        "ProductInformationList": {
          "documentation": "<p>Product information.</p>",
          "shape": "ProductInformationList"
        },
        "Status": {
          "documentation": "<p>License configuration status.</p>",
          "shape": "String"
        },
        "Tags": {
          "documentation": "<p>Tags for the license configuration.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "GetLicenseConversionTaskRequest": {
      "members": {
        "LicenseConversionTaskId": {
          "documentation": "<p>ID of the license type conversion task to retrieve information on.</p>",
          "shape": "LicenseConversionTaskId"
        }
      },
      "required": [
        "LicenseConversionTaskId"
      ],
      "type": "structure"
    },
    "GetLicenseConversionTaskResponse": {
      "members": {
        "DestinationLicenseContext": {
          "documentation": "<p>Information about the license type converted to.</p>",
          "shape": "LicenseConversionContext"
        },
        "EndTime": {
          "documentation": "<p>Time at which the license type conversion task was completed.</p>",
          "shape": "DateTime"
        },
        "LicenseConversionTaskId": {
          "documentation": "<p>ID of the license type conversion task.</p>",
          "shape": "LicenseConversionTaskId"
        },
        "LicenseConversionTime": {
          "documentation": "<p>Amount of time to complete the license type conversion.</p>",
          "shape": "DateTime"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Names (ARN) of the resources the license conversion task is associated with.</p>",
          "shape": "String"
        },
        "SourceLicenseContext": {
          "documentation": "<p>Information about the license type converted from.</p>",
          "shape": "LicenseConversionContext"
        },
        "StartTime": {
          "documentation": "<p>Time at which the license type conversion task was started .</p>",
          "shape": "DateTime"
        },
        "Status": {
          "documentation": "<p>Status of the license type conversion task.</p>",
          "shape": "LicenseConversionTaskStatus"
        },
        "StatusMessage": {
          "documentation": "<p>The status message for the conversion task.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetLicenseManagerReportGeneratorRequest": {
      "members": {
        "LicenseManagerReportGeneratorArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the report generator.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseManagerReportGeneratorArn"
      ],
      "type": "structure"
    },
    "GetLicenseManagerReportGeneratorResponse": {
      "members": {
        "ReportGenerator": {
          "documentation": "<p>A report generator that creates periodic reports about your license configurations.</p>",
          "shape": "ReportGenerator"
        }
      },
      "type": "structure"
    },
    "GetLicenseRequest": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "Version": {
          "documentation": "<p>License version.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseArn"
      ],
      "type": "structure"
    },
    "GetLicenseResponse": {
      "members": {
        "License": {
          "documentation": "<p>License details.</p>",
          "shape": "License"
        }
      },
      "type": "structure"
    },
    "GetLicenseUsageRequest": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "LicenseArn"
      ],
      "type": "structure"
    },
    "GetLicenseUsageResponse": {
      "members": {
        "LicenseUsage": {
          "documentation": "<p>License usage details.</p>",
          "shape": "LicenseUsage"
        }
      },
      "type": "structure"
    },
    "GetServiceSettingsRequest": {
      "members": {},
      "type": "structure"
    },
    "GetServiceSettingsResponse": {
      "members": {
        "EnableCrossAccountsDiscovery": {
          "documentation": "<p>Indicates whether cross-account discovery is enabled.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseManagerResourceShareArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource share. The License Manager management account provides member accounts with access to this share.</p>",
          "shape": "String"
        },
        "OrganizationConfiguration": {
          "documentation": "<p>Indicates whether Organizations is integrated with License Manager for cross-account discovery.</p>",
          "shape": "OrganizationConfiguration"
        },
        "S3BucketArn": {
          "documentation": "<p>Regional S3 bucket path for storing reports, license trail event data, discovery data, and so on.</p>",
          "shape": "String"
        },
        "SnsTopicArn": {
          "documentation": "<p>SNS topic configured to receive notifications from License Manager.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Grant": {
      "documentation": "<p>Describes a grant.</p>",
      "members": {
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        },
        "GrantName": {
          "documentation": "<p>Grant name.</p>",
          "shape": "String"
        },
        "GrantStatus": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "GrantedOperations": {
          "documentation": "<p>Granted operations.</p>",
          "shape": "AllowedOperationList"
        },
        "GranteePrincipalArn": {
          "documentation": "<p>The grantee principal ARN.</p>",
          "shape": "Arn"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region of the grant.</p>",
          "shape": "String"
        },
        "LicenseArn": {
          "documentation": "<p>License ARN.</p>",
          "shape": "Arn"
        },
        "ParentArn": {
          "documentation": "<p>Parent ARN.</p>",
          "shape": "Arn"
        },
        "StatusReason": {
          "documentation": "<p>Grant status reason.</p>",
          "shape": "StatusReasonMessage"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "required": [
        "GrantArn",
        "GrantName",
        "ParentArn",
        "LicenseArn",
        "GranteePrincipalArn",
        "HomeRegion",
        "GrantStatus",
        "Version",
        "GrantedOperations"
      ],
      "type": "structure"
    },
    "GrantList": {
      "member": {
        "shape": "Grant"
      },
      "type": "list"
    },
    "GrantStatus": {
      "enum": [
        "PENDING_WORKFLOW",
        "PENDING_ACCEPT",
        "REJECTED",
        "ACTIVE",
        "FAILED_WORKFLOW",
        "DELETED",
        "PENDING_DELETE",
        "DISABLED",
        "WORKFLOW_COMPLETED"
      ],
      "type": "string"
    },
    "GrantedLicense": {
      "documentation": "<p>Describes a license that is granted to a grantee.</p>",
      "members": {
        "Beneficiary": {
          "documentation": "<p>Granted license beneficiary.</p>",
          "shape": "String"
        },
        "ConsumptionConfiguration": {
          "documentation": "<p>Configuration for consumption of the license.</p>",
          "shape": "ConsumptionConfiguration"
        },
        "CreateTime": {
          "documentation": "<p>Creation time of the granted license.</p>",
          "shape": "ISO8601DateTime"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements.</p>",
          "shape": "EntitlementList"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region of the granted license.</p>",
          "shape": "String"
        },
        "Issuer": {
          "documentation": "<p>Granted license issuer.</p>",
          "shape": "IssuerDetails"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "LicenseMetadata": {
          "documentation": "<p>Granted license metadata.</p>",
          "shape": "MetadataList"
        },
        "LicenseName": {
          "documentation": "<p>License name.</p>",
          "shape": "String"
        },
        "ProductName": {
          "documentation": "<p>Product name.</p>",
          "shape": "String"
        },
        "ProductSKU": {
          "documentation": "<p>Product SKU.</p>",
          "shape": "String"
        },
        "ReceivedMetadata": {
          "documentation": "<p>Granted license received metadata.</p>",
          "shape": "ReceivedMetadata"
        },
        "Status": {
          "documentation": "<p>Granted license status.</p>",
          "shape": "LicenseStatus"
        },
        "Validity": {
          "documentation": "<p>Date and time range during which the granted license is valid, in ISO8601-UTC format.</p>",
          "shape": "DatetimeRange"
        },
        "Version": {
          "documentation": "<p>Version of the granted license.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GrantedLicenseList": {
      "member": {
        "shape": "GrantedLicense"
      },
      "type": "list"
    },
    "ISO8601DateTime": {
      "max": 50,
      "pattern": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[0-1]|0[1-9]|[1-2][0-9])T(2[0-3]|[0-1][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[ 0-3]|[0-1][0-9]):[0-5][0-9])+$",
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>One or more parameter values are not valid.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "synthetic": true,
      "type": "structure"
    },
    "InvalidResourceStateException": {
      "documentation": "<p>License Manager cannot allocate a license to a resource because of its state. </p> <p>For example, you cannot allocate a license to an instance in the process of shutting down.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InventoryFilter": {
      "documentation": "<p>An inventory filter.</p>",
      "members": {
        "Condition": {
          "documentation": "<p>Condition of the filter.</p>",
          "shape": "InventoryFilterCondition"
        },
        "Name": {
          "documentation": "<p>Name of the filter.</p>",
          "shape": "String"
        },
        "Value": {
          "documentation": "<p>Value of the filter.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Name",
        "Condition"
      ],
      "type": "structure"
    },
    "InventoryFilterCondition": {
      "enum": [
        "EQUALS",
        "NOT_EQUALS",
        "BEGINS_WITH",
        "CONTAINS"
      ],
      "type": "string"
    },
    "InventoryFilterList": {
      "member": {
        "shape": "InventoryFilter"
      },
      "type": "list"
    },
    "Issuer": {
      "documentation": "<p>Details about the issuer of a license.</p>",
      "members": {
        "Name": {
          "documentation": "<p>Issuer name.</p>",
          "shape": "String"
        },
        "SignKey": {
          "documentation": "<p>Asymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "IssuerDetails": {
      "documentation": "<p>Details associated with the issuer of a license.</p>",
      "members": {
        "KeyFingerprint": {
          "documentation": "<p>Issuer key fingerprint.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>Issuer name.</p>",
          "shape": "String"
        },
        "SignKey": {
          "documentation": "<p>Asymmetric KMS key from Key Management Service. The KMS key must have a key usage of sign and verify, and support the RSASSA-PSS SHA-256 signing algorithm.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "License": {
      "documentation": "<p>Software license that is managed in License Manager.</p>",
      "members": {
        "Beneficiary": {
          "documentation": "<p>License beneficiary.</p>",
          "shape": "String"
        },
        "ConsumptionConfiguration": {
          "documentation": "<p>Configuration for consumption of the license.</p>",
          "shape": "ConsumptionConfiguration"
        },
        "CreateTime": {
          "documentation": "<p>License creation time.</p>",
          "shape": "ISO8601DateTime"
        },
        "Entitlements": {
          "documentation": "<p>License entitlements.</p>",
          "shape": "EntitlementList"
        },
        "HomeRegion": {
          "documentation": "<p>Home Region of the license.</p>",
          "shape": "String"
        },
        "Issuer": {
          "documentation": "<p>License issuer.</p>",
          "shape": "IssuerDetails"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "LicenseMetadata": {
          "documentation": "<p>License metadata.</p>",
          "shape": "MetadataList"
        },
        "LicenseName": {
          "documentation": "<p>License name.</p>",
          "shape": "String"
        },
        "ProductName": {
          "documentation": "<p>Product name.</p>",
          "shape": "String"
        },
        "ProductSKU": {
          "documentation": "<p>Product SKU.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>License status.</p>",
          "shape": "LicenseStatus"
        },
        "Validity": {
          "documentation": "<p>Date and time range during which the license is valid, in ISO8601-UTC format.</p>",
          "shape": "DatetimeRange"
        },
        "Version": {
          "documentation": "<p>License version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "LicenseConfiguration": {
      "documentation": "<p>A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.</p>",
      "members": {
        "AutomatedDiscoveryInformation": {
          "documentation": "<p>Automated discovery information.</p>",
          "shape": "AutomatedDiscoveryInformation"
        },
        "ConsumedLicenseSummaryList": {
          "documentation": "<p>Summaries for licenses consumed by various resources.</p>",
          "shape": "ConsumedLicenseSummaryList"
        },
        "ConsumedLicenses": {
          "documentation": "<p>Number of licenses consumed. </p>",
          "shape": "BoxLong"
        },
        "Description": {
          "documentation": "<p>Description of the license configuration.</p>",
          "shape": "String"
        },
        "DisassociateWhenNotFound": {
          "documentation": "<p>When true, disassociates a resource when software is uninstalled.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "LicenseConfigurationId": {
          "documentation": "<p>Unique ID of the license configuration.</p>",
          "shape": "String"
        },
        "LicenseCount": {
          "documentation": "<p>Number of licenses managed by the license configuration.</p>",
          "shape": "BoxLong"
        },
        "LicenseCountHardLimit": {
          "documentation": "<p>Number of available licenses as a hard limit.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseCountingType": {
          "documentation": "<p>Dimension to use to track the license inventory.</p>",
          "shape": "LicenseCountingType"
        },
        "LicenseRules": {
          "documentation": "<p>License rules.</p>",
          "shape": "StringList"
        },
        "ManagedResourceSummaryList": {
          "documentation": "<p>Summaries for managed resources.</p>",
          "shape": "ManagedResourceSummaryList"
        },
        "Name": {
          "documentation": "<p>Name of the license configuration.</p>",
          "shape": "String"
        },
        "OwnerAccountId": {
          "documentation": "<p>Account ID of the license configuration's owner.</p>",
          "shape": "String"
        },
        "ProductInformationList": {
          "documentation": "<p>Product information.</p>",
          "shape": "ProductInformationList"
        },
        "Status": {
          "documentation": "<p>Status of the license configuration.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "LicenseConfigurationAssociation": {
      "documentation": "<p>Describes an association with a license configuration.</p>",
      "members": {
        "AmiAssociationScope": {
          "documentation": "<p>Scope of AMI associations. The possible value is <code>cross-account</code>.</p>",
          "shape": "String"
        },
        "AssociationTime": {
          "documentation": "<p>Time when the license configuration was associated with the resource.</p>",
          "shape": "DateTime"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "String"
        },
        "ResourceOwnerId": {
          "documentation": "<p>ID of the Amazon Web Services account that owns the resource consuming licenses.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Type of server resource.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "LicenseConfigurationAssociations": {
      "member": {
        "shape": "LicenseConfigurationAssociation"
      },
      "type": "list"
    },
    "LicenseConfigurationStatus": {
      "enum": [
        "AVAILABLE",
        "DISABLED"
      ],
      "type": "string"
    },
    "LicenseConfigurationUsage": {
      "documentation": "<p>Details about the usage of a resource associated with a license configuration.</p>",
      "members": {
        "AssociationTime": {
          "documentation": "<p>Time when the license configuration was initially associated with the resource.</p>",
          "shape": "DateTime"
        },
        "ConsumedLicenses": {
          "documentation": "<p>Number of licenses consumed by the resource.</p>",
          "shape": "BoxLong"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "String"
        },
        "ResourceOwnerId": {
          "documentation": "<p>ID of the account that owns the resource.</p>",
          "shape": "String"
        },
        "ResourceStatus": {
          "documentation": "<p>Status of the resource.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Type of resource.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "LicenseConfigurationUsageList": {
      "member": {
        "shape": "LicenseConfigurationUsage"
      },
      "type": "list"
    },
    "LicenseConfigurations": {
      "member": {
        "shape": "LicenseConfiguration"
      },
      "type": "list"
    },
    "LicenseConversionContext": {
      "documentation": "<p>Information about a license type conversion task.</p>",
      "members": {
        "UsageOperation": {
          "documentation": "<p>The Usage operation value that corresponds to the license type you are converting your resource from. For more information about which platforms correspond to which usage operation values see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html#billing-info\">Sample data: usage operation by platform </a> </p>",
          "shape": "UsageOperation"
        }
      },
      "type": "structure"
    },
    "LicenseConversionTask": {
      "documentation": "<p>Information about a license type conversion task.</p>",
      "members": {
        "DestinationLicenseContext": {
          "documentation": "<p>Information about the license type this conversion task converted to.</p>",
          "shape": "LicenseConversionContext"
        },
        "EndTime": {
          "documentation": "<p>The time the conversion task was completed.</p>",
          "shape": "DateTime"
        },
        "LicenseConversionTaskId": {
          "documentation": "<p>The ID of the license type conversion task.</p>",
          "shape": "LicenseConversionTaskId"
        },
        "LicenseConversionTime": {
          "documentation": "<p>The time the usage operation value of the resource was changed.</p>",
          "shape": "DateTime"
        },
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource associated with the license type conversion task.</p>",
          "shape": "String"
        },
        "SourceLicenseContext": {
          "documentation": "<p>Information about the license type this conversion task converted from.</p>",
          "shape": "LicenseConversionContext"
        },
        "StartTime": {
          "documentation": "<p>The time the conversion task was started at.</p>",
          "shape": "DateTime"
        },
        "Status": {
          "documentation": "<p>The status of the conversion task.</p>",
          "shape": "LicenseConversionTaskStatus"
        },
        "StatusMessage": {
          "documentation": "<p>The status message for the conversion task.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "LicenseConversionTaskId": {
      "max": 50,
      "pattern": "^lct-[a-zA-Z0-9]*",
      "type": "string"
    },
    "LicenseConversionTaskStatus": {
      "enum": [
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string"
    },
    "LicenseConversionTasks": {
      "member": {
        "shape": "LicenseConversionTask"
      },
      "type": "list"
    },
    "LicenseCountingType": {
      "enum": [
        "vCPU",
        "Instance",
        "Core",
        "Socket"
      ],
      "type": "string"
    },
    "LicenseDeletionStatus": {
      "enum": [
        "PENDING_DELETE",
        "DELETED"
      ],
      "type": "string"
    },
    "LicenseList": {
      "member": {
        "shape": "License"
      },
      "type": "list"
    },
    "LicenseOperationFailure": {
      "documentation": "<p>Describes the failure of a license operation.</p>",
      "members": {
        "ErrorMessage": {
          "documentation": "<p>Error message.</p>",
          "shape": "String"
        },
        "FailureTime": {
          "documentation": "<p>Failure time.</p>",
          "shape": "DateTime"
        },
        "MetadataList": {
          "documentation": "<p>Reserved.</p>",
          "shape": "MetadataList"
        },
        "OperationName": {
          "documentation": "<p>Name of the operation.</p>",
          "shape": "String"
        },
        "OperationRequestedBy": {
          "documentation": "<p>The requester is \"License Manager Automated Discovery\".</p>",
          "shape": "String"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "String"
        },
        "ResourceOwnerId": {
          "documentation": "<p>ID of the Amazon Web Services account that owns the resource.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Resource type.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "LicenseOperationFailureList": {
      "member": {
        "shape": "LicenseOperationFailure"
      },
      "type": "list"
    },
    "LicenseSpecification": {
      "documentation": "<p>Details for associating a license configuration with a resource.</p>",
      "members": {
        "AmiAssociationScope": {
          "documentation": "<p>Scope of AMI associations. The possible value is <code>cross-account</code>.</p>",
          "shape": "String"
        },
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "LicenseSpecifications": {
      "member": {
        "shape": "LicenseSpecification"
      },
      "type": "list"
    },
    "LicenseStatus": {
      "enum": [
        "AVAILABLE",
        "PENDING_AVAILABLE",
        "DEACTIVATED",
        "SUSPENDED",
        "EXPIRED",
        "PENDING_DELETE",
        "DELETED"
      ],
      "type": "string"
    },
    "LicenseUsage": {
      "documentation": "<p>Describes the entitlement usage associated with a license.</p>",
      "members": {
        "EntitlementUsages": {
          "documentation": "<p>License entitlement usages.</p>",
          "shape": "EntitlementUsageList"
        }
      },
      "type": "structure"
    },
    "LicenseUsageException": {
      "documentation": "<p>You do not have enough licenses available to support a new resource launch.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ListAssociationsForLicenseConfigurationRequest": {
      "members": {
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of a license configuration.</p>",
          "shape": "String"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "ListAssociationsForLicenseConfigurationResponse": {
      "members": {
        "LicenseConfigurationAssociations": {
          "documentation": "<p>Information about the associations for the license configuration.</p>",
          "shape": "LicenseConfigurationAssociations"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListDistributedGrantsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>LicenseArn</code> </p> </li> <li> <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranteePrincipalARN</code> </p> </li> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>LicenseIssuerName</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "GrantArns": {
          "documentation": "<p>Amazon Resource Names (ARNs) of the grants.</p>",
          "shape": "ArnList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListDistributedGrantsResponse": {
      "members": {
        "Grants": {
          "documentation": "<p>Distributed grant details.</p>",
          "shape": "GrantList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListFailuresForLicenseConfigurationOperationsRequest": {
      "members": {
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name of the license configuration.</p>",
          "shape": "String"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "ListFailuresForLicenseConfigurationOperationsResponse": {
      "members": {
        "LicenseOperationFailureList": {
          "documentation": "<p>License configuration operations that failed.</p>",
          "shape": "LicenseOperationFailureList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseConfigurationsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>licenseCountingType</code> - The dimension for which licenses are counted. Possible values are <code>vCPU</code> | <code>Instance</code> | <code>Core</code> | <code>Socket</code>. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>enforceLicenseCount</code> - A Boolean value that indicates whether hard license enforcement is used. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>usagelimitExceeded</code> - A Boolean value that indicates whether the available licenses have been exceeded. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>",
          "shape": "Filters"
        },
        "LicenseConfigurationArns": {
          "documentation": "<p>Amazon Resource Names (ARN) of the license configurations.</p>",
          "shape": "StringList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseConfigurationsResponse": {
      "members": {
        "LicenseConfigurations": {
          "documentation": "<p>Information about the license configurations.</p>",
          "shape": "LicenseConfigurations"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseConversionTasksRequest": {
      "members": {
        "Filters": {
          "documentation": "<p> Filters to scope the results. Valid filters are <code>ResourceArns</code> and <code>Status</code>. </p>",
          "shape": "Filters"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseConversionTasksResponse": {
      "members": {
        "LicenseConversionTasks": {
          "documentation": "<p>Information about the license configuration tasks for your account.</p>",
          "shape": "LicenseConversionTasks"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseManagerReportGeneratorsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters are supported: </p> <ul> <li> <p> <code>LicenseConfigurationArn</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseManagerReportGeneratorsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "ReportGenerators": {
          "documentation": "<p>A report generator that creates periodic reports about your license configurations.</p>",
          "shape": "ReportGeneratorList"
        }
      },
      "type": "structure"
    },
    "ListLicenseSpecificationsForResourceRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of a resource that has an associated license configuration.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListLicenseSpecificationsForResourceResponse": {
      "members": {
        "LicenseSpecifications": {
          "documentation": "<p>License configurations associated with a resource.</p>",
          "shape": "LicenseSpecifications"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicenseVersionsRequest": {
      "members": {
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseArn"
      ],
      "type": "structure"
    },
    "ListLicenseVersionsResponse": {
      "members": {
        "Licenses": {
          "documentation": "<p>License details.</p>",
          "shape": "LicenseList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicensesRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>Beneficiary</code> </p> </li> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>Fingerprint</code> </p> </li> <li> <p> <code>Status</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "LicenseArns": {
          "documentation": "<p>Amazon Resource Names (ARNs) of the licenses.</p>",
          "shape": "ArnList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLicensesResponse": {
      "members": {
        "Licenses": {
          "documentation": "<p>License details.</p>",
          "shape": "LicenseList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListReceivedGrantsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>LicenseIssuerName</code> </p> </li> <li> <p> <code>LicenseArn</code> </p> </li> <li> <p> <code>GrantStatus</code> </p> </li> <li> <p> <code>GranterAccountId</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "GrantArns": {
          "documentation": "<p>Amazon Resource Names (ARNs) of the grants.</p>",
          "shape": "ArnList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListReceivedGrantsResponse": {
      "members": {
        "Grants": {
          "documentation": "<p>Received grant details.</p>",
          "shape": "GrantList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListReceivedLicensesRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters are supported:</p> <ul> <li> <p> <code>ProductSKU</code> </p> </li> <li> <p> <code>Status</code> </p> </li> <li> <p> <code>Fingerprint</code> </p> </li> <li> <p> <code>IssuerName</code> </p> </li> <li> <p> <code>Beneficiary</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "LicenseArns": {
          "documentation": "<p>Amazon Resource Names (ARNs) of the licenses.</p>",
          "shape": "ArnList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListReceivedLicensesResponse": {
      "members": {
        "Licenses": {
          "documentation": "<p>Received license details.</p>",
          "shape": "GrantedLicenseList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListResourceInventoryRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>account_id</code> - The ID of the Amazon Web Services account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>application_name</code> - The name of the application. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>license_included</code> - The type of license included. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>. Possible values are <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> <li> <p> <code>platform</code> - The platform of the resource. Logical operators are <code>EQUALS</code> | <code>BEGINS_WITH</code>.</p> </li> <li> <p> <code>resource_id</code> - The ID of the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>tag:&lt;key&gt;</code> - The key/value combination of a tag assigned to the resource. Logical operators are <code>EQUALS</code> (single account) or <code>EQUALS</code> | <code>NOT_EQUALS</code> (cross account).</p> </li> </ul>",
          "shape": "InventoryFilterList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListResourceInventoryResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "ResourceInventoryList": {
          "documentation": "<p>Information about the resources.</p>",
          "shape": "ResourceInventoryList"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>Information about the tags.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTokensRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filter is supported:</p> <ul> <li> <p> <code>LicenseArns</code> </p> </li> </ul>",
          "shape": "FilterList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "MaxSize100"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "TokenIds": {
          "documentation": "<p>Token IDs.</p>",
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "ListTokensResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "Tokens": {
          "documentation": "<p>Received token details.</p>",
          "shape": "TokenList"
        }
      },
      "type": "structure"
    },
    "ListUsageForLicenseConfigurationRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>Filters to scope the results. The following filters and logical operators are supported:</p> <ul> <li> <p> <code>resourceArn</code> - The ARN of the license configuration resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceType</code> - The resource type (<code>EC2_INSTANCE</code> | <code>EC2_HOST</code> | <code>EC2_AMI</code> | <code>SYSTEMS_MANAGER_MANAGED_INSTANCE</code>). Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>resourceAccount</code> - The ID of the account that owns the resource. Logical operators are <code>EQUALS</code> | <code>NOT_EQUALS</code>.</p> </li> </ul>",
          "shape": "Filters"
        },
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "ListUsageForLicenseConfigurationResponse": {
      "members": {
        "LicenseConfigurationUsageList": {
          "documentation": "<p>Information about the license configurations.</p>",
          "shape": "LicenseConfigurationUsageList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Location": {
      "type": "string"
    },
    "Long": {
      "type": "long"
    },
    "ManagedResourceSummary": {
      "documentation": "<p>Summary information about a managed resource.</p>",
      "members": {
        "AssociationCount": {
          "documentation": "<p>Number of resources associated with licenses.</p>",
          "shape": "BoxLong"
        },
        "ResourceType": {
          "documentation": "<p>Type of resource associated with a license.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "ManagedResourceSummaryList": {
      "member": {
        "shape": "ManagedResourceSummary"
      },
      "type": "list"
    },
    "MaxSize100": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "MaxSize3StringList": {
      "max": 3,
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "Message": {
      "type": "string"
    },
    "Metadata": {
      "documentation": "<p>Describes key/value pairs.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The key name.</p>",
          "shape": "String"
        },
        "Value": {
          "documentation": "<p>The value.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "MetadataList": {
      "member": {
        "shape": "Metadata"
      },
      "type": "list"
    },
    "NoEntitlementsAllowedException": {
      "documentation": "<p>There are no entitlements found for this license, or the entitlement maximum count is reached.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "OrganizationConfiguration": {
      "documentation": "<p>Configuration information for Organizations.</p>",
      "members": {
        "EnableIntegration": {
          "documentation": "<p>Enables Organizations integration.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "EnableIntegration"
      ],
      "type": "structure"
    },
    "PrincipalArnList": {
      "max": 1,
      "member": {
        "shape": "Arn"
      },
      "min": 1,
      "type": "list"
    },
    "ProductInformation": {
      "documentation": "<p>Describes product information for a license configuration.</p>",
      "members": {
        "ProductInformationFilterList": {
          "documentation": "<p>A Product information filter consists of a <code>ProductInformationFilterComparator</code> which is a logical operator, a <code>ProductInformationFilterName</code> which specifies the type of filter being declared, and a <code>ProductInformationFilterValue</code> that specifies the value to filter on. </p> <p>Accepted values for <code>ProductInformationFilterName</code> are listed here along with descriptions and valid options for <code>ProductInformationFilterComparator</code>. </p> <p>The following filters and are supported when the resource type is <code>SSM_MANAGED</code>:</p> <ul> <li> <p> <code>Application Name</code> - The name of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Publisher</code> - The publisher of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Application Version</code> - The version of the application. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Name</code> - The name of the platform. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Platform Type</code> - The platform type. Logical operator is <code>EQUALS</code>.</p> </li> <li> <p> <code>Tag:key</code> - The key of a tag attached to an Amazon Web Services resource you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>. The key for your tag must be appended to <code>Tag:</code> following the example: <code>Tag:name-of-your-key</code>. <code>ProductInformationFilterValue</code> is optional if you are not using values for the key. </p> </li> <li> <p> <code>AccountId</code> - The 12-digit ID of an Amazon Web Services account you wish to exclude from automated discovery. Logical operator is <code>NOT_EQUALS</code>.</p> </li> <li> <p> <code>License Included</code> - The type of license included. Logical operators are <code>EQUALS</code> and <code>NOT_EQUALS</code>. Possible values are: <code>sql-server-enterprise</code> | <code>sql-server-standard</code> | <code>sql-server-web</code> | <code>windows-server-datacenter</code>.</p> </li> </ul> <p>The following filters and logical operators are supported when the resource type is <code>RDS</code>:</p> <ul> <li> <p> <code>Engine Edition</code> - The edition of the database engine. Logical operator is <code>EQUALS</code>. Possible values are: <code>oracle-ee</code> | <code>oracle-se</code> | <code>oracle-se1</code> | <code>oracle-se2</code>.</p> </li> <li> <p> <code>License Pack</code> - The license pack. Logical operator is <code>EQUALS</code>. Possible values are: <code>data guard</code> | <code>diagnostic pack sqlt</code> | <code>tuning pack sqlt</code> | <code>ols</code> | <code>olap</code>.</p> </li> </ul>",
          "shape": "ProductInformationFilterList"
        },
        "ResourceType": {
          "documentation": "<p>Resource type. The possible values are <code>SSM_MANAGED</code> | <code>RDS</code>.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ResourceType",
        "ProductInformationFilterList"
      ],
      "type": "structure"
    },
    "ProductInformationFilter": {
      "documentation": "<p>Describes product information filters.</p>",
      "members": {
        "ProductInformationFilterComparator": {
          "documentation": "<p>Logical operator.</p>",
          "shape": "String"
        },
        "ProductInformationFilterName": {
          "documentation": "<p>Filter name.</p>",
          "shape": "String"
        },
        "ProductInformationFilterValue": {
          "documentation": "<p>Filter value.</p>",
          "shape": "StringList"
        }
      },
      "required": [
        "ProductInformationFilterName",
        "ProductInformationFilterComparator"
      ],
      "type": "structure"
    },
    "ProductInformationFilterList": {
      "member": {
        "shape": "ProductInformationFilter"
      },
      "type": "list"
    },
    "ProductInformationList": {
      "member": {
        "shape": "ProductInformation"
      },
      "type": "list"
    },
    "ProvisionalConfiguration": {
      "documentation": "<p>Details about a provisional configuration.</p>",
      "members": {
        "MaxTimeToLiveInMinutes": {
          "documentation": "<p>Maximum time for the provisional configuration, in minutes.</p>",
          "shape": "BoxInteger"
        }
      },
      "required": [
        "MaxTimeToLiveInMinutes"
      ],
      "type": "structure"
    },
    "RateLimitExceededException": {
      "documentation": "<p>Too many requests have been submitted. Try again after a brief wait.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ReceivedMetadata": {
      "documentation": "<p>Metadata associated with received licenses and grants.</p>",
      "members": {
        "AllowedOperations": {
          "documentation": "<p>Allowed operations.</p>",
          "shape": "AllowedOperationList"
        },
        "ReceivedStatus": {
          "documentation": "<p>Received status.</p>",
          "shape": "ReceivedStatus"
        },
        "ReceivedStatusReason": {
          "documentation": "<p>Received status reason.</p>",
          "shape": "StatusReasonMessage"
        }
      },
      "type": "structure"
    },
    "ReceivedStatus": {
      "enum": [
        "PENDING_WORKFLOW",
        "PENDING_ACCEPT",
        "REJECTED",
        "ACTIVE",
        "FAILED_WORKFLOW",
        "DELETED",
        "DISABLED",
        "WORKFLOW_COMPLETED"
      ],
      "type": "string"
    },
    "RedirectException": {
      "documentation": "<p>This is not the correct Region for the resource. Try again.</p>",
      "exception": true,
      "members": {
        "Location": {
          "shape": "Location"
        },
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "RejectGrantRequest": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the grant.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "GrantArn"
      ],
      "type": "structure"
    },
    "RejectGrantResponse": {
      "members": {
        "GrantArn": {
          "documentation": "<p>Grant ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>Grant status.</p>",
          "shape": "GrantStatus"
        },
        "Version": {
          "documentation": "<p>Grant version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RenewType": {
      "enum": [
        "None",
        "Weekly",
        "Monthly"
      ],
      "type": "string"
    },
    "ReportContext": {
      "documentation": "<p>Details of the license configuration that this generator reports on.</p>",
      "members": {
        "licenseConfigurationArns": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration that this generator reports on.</p>",
          "shape": "ArnList"
        }
      },
      "required": [
        "licenseConfigurationArns"
      ],
      "type": "structure"
    },
    "ReportFrequency": {
      "documentation": "<p>Details about how frequently reports are generated.</p>",
      "members": {
        "period": {
          "documentation": "<p>Time period between each report. The period can be daily, weekly, or monthly.</p>",
          "shape": "ReportFrequencyType"
        },
        "value": {
          "documentation": "<p>Number of times within the frequency period that a report is generated. The only supported value is <code>1</code>.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ReportFrequencyType": {
      "enum": [
        "DAY",
        "WEEK",
        "MONTH"
      ],
      "type": "string"
    },
    "ReportGenerator": {
      "documentation": "<p>Describe the details of a report generator.</p>",
      "members": {
        "CreateTime": {
          "documentation": "<p>Time the report was created.</p>",
          "shape": "String"
        },
        "Description": {
          "documentation": "<p>Description of the report generator.</p>",
          "shape": "String"
        },
        "LastReportGenerationTime": {
          "documentation": "<p>Time the last report was generated at.</p>",
          "shape": "String"
        },
        "LastRunFailureReason": {
          "documentation": "<p>Failure message for the last report generation attempt.</p>",
          "shape": "String"
        },
        "LastRunStatus": {
          "documentation": "<p>Status of the last report generation attempt.</p>",
          "shape": "String"
        },
        "LicenseManagerReportGeneratorArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the report generator.</p>",
          "shape": "String"
        },
        "ReportContext": {
          "documentation": "<p>License configuration type for this generator.</p>",
          "shape": "ReportContext"
        },
        "ReportCreatorAccount": {
          "documentation": "<p>The Amazon Web Services account ID used to create the report generator.</p>",
          "shape": "String"
        },
        "ReportFrequency": {
          "documentation": "<p>Details about how frequently reports are generated.</p>",
          "shape": "ReportFrequency"
        },
        "ReportGeneratorName": {
          "documentation": "<p>Name of the report generator.</p>",
          "shape": "String"
        },
        "ReportType": {
          "documentation": "<p>Type of reports that are generated.</p>",
          "shape": "ReportTypeList"
        },
        "S3Location": {
          "documentation": "<p>Details of the S3 bucket that report generator reports are published to.</p>",
          "shape": "S3Location"
        },
        "Tags": {
          "documentation": "<p>Tags associated with the report generator.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ReportGeneratorList": {
      "member": {
        "shape": "ReportGenerator"
      },
      "type": "list"
    },
    "ReportGeneratorName": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "ReportType": {
      "enum": [
        "LicenseConfigurationSummaryReport",
        "LicenseConfigurationUsageReport"
      ],
      "type": "string"
    },
    "ReportTypeList": {
      "member": {
        "shape": "ReportType"
      },
      "type": "list"
    },
    "ResourceInventory": {
      "documentation": "<p>Details about a resource.</p>",
      "members": {
        "Platform": {
          "documentation": "<p>Platform of the resource.</p>",
          "shape": "String"
        },
        "PlatformVersion": {
          "documentation": "<p>Platform version of the resource in the inventory.</p>",
          "shape": "String"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "String"
        },
        "ResourceId": {
          "documentation": "<p>ID of the resource.</p>",
          "shape": "String"
        },
        "ResourceOwningAccountId": {
          "documentation": "<p>ID of the account that owns the resource.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Type of resource.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "ResourceInventoryList": {
      "member": {
        "shape": "ResourceInventory"
      },
      "type": "list"
    },
    "ResourceLimitExceededException": {
      "documentation": "<p>Your resource limits have been exceeded.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The resource cannot be found.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ResourceType": {
      "enum": [
        "EC2_INSTANCE",
        "EC2_HOST",
        "EC2_AMI",
        "RDS",
        "SYSTEMS_MANAGER_MANAGED_INSTANCE"
      ],
      "type": "string"
    },
    "S3Location": {
      "documentation": "<p>Details of the S3 bucket that report generator reports are published to.</p>",
      "members": {
        "bucket": {
          "documentation": "<p>Name of the S3 bucket reports are published to.</p>",
          "shape": "String"
        },
        "keyPrefix": {
          "documentation": "<p>Prefix of the S3 bucket reports are published to.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ServerInternalException": {
      "documentation": "<p>The server experienced an internal error. Try again.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "SignedToken": {
      "min": 4096,
      "type": "string"
    },
    "StatusReasonMessage": {
      "max": 400,
      "pattern": "[\\s\\S]+",
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "Tag": {
      "documentation": "<p>Details about a tag for a license configuration.</p>",
      "members": {
        "Key": {
          "documentation": "<p>Tag key.</p>",
          "shape": "String"
        },
        "Value": {
          "documentation": "<p>Tag value.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TagKeyList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "TagList": {
      "member": {
        "shape": "Tag"
      },
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "Tags": {
          "documentation": "<p>One or more tags.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TokenData": {
      "documentation": "<p>Describes a token.</p>",
      "members": {
        "ExpirationTime": {
          "documentation": "<p>Token expiration time, in ISO8601-UTC format.</p>",
          "shape": "ISO8601DateTime"
        },
        "LicenseArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license.</p>",
          "shape": "String"
        },
        "RoleArns": {
          "documentation": "<p>Amazon Resource Names (ARN) of the roles included in the token.</p>",
          "shape": "ArnList"
        },
        "Status": {
          "documentation": "<p>Token status. The possible values are <code>AVAILABLE</code> and <code>DELETED</code>.</p>",
          "shape": "String"
        },
        "TokenId": {
          "documentation": "<p>Token ID.</p>",
          "shape": "String"
        },
        "TokenProperties": {
          "documentation": "<p>Data specified by the caller.</p>",
          "shape": "MaxSize3StringList"
        },
        "TokenType": {
          "documentation": "<p>Type of token generated. The supported value is <code>REFRESH_TOKEN</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TokenList": {
      "member": {
        "shape": "TokenData"
      },
      "type": "list"
    },
    "TokenString": {
      "max": 4096,
      "pattern": "\\S+",
      "type": "string"
    },
    "TokenType": {
      "enum": [
        "REFRESH_TOKEN"
      ],
      "type": "string"
    },
    "UnsupportedDigitalSignatureMethodException": {
      "documentation": "<p>The digital signature method is unsupported. Try your request again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "TagKeys": {
          "documentation": "<p>Keys identifying the tags to remove.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateLicenseConfigurationRequest": {
      "members": {
        "Description": {
          "documentation": "<p>New description of the license configuration.</p>",
          "shape": "String"
        },
        "DisassociateWhenNotFound": {
          "documentation": "<p>When true, disassociates a resource when software is uninstalled.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseConfigurationArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the license configuration.</p>",
          "shape": "String"
        },
        "LicenseConfigurationStatus": {
          "documentation": "<p>New status of the license configuration.</p>",
          "shape": "LicenseConfigurationStatus"
        },
        "LicenseCount": {
          "documentation": "<p>New number of licenses managed by the license configuration.</p>",
          "shape": "BoxLong"
        },
        "LicenseCountHardLimit": {
          "documentation": "<p>New hard limit of the number of available licenses.</p>",
          "shape": "BoxBoolean"
        },
        "LicenseRules": {
          "documentation": "<p>New license rule. The only rule that you can add after you create a license configuration is licenseAffinityToHost.</p>",
          "shape": "StringList"
        },
        "Name": {
          "documentation": "<p>New name of the license configuration.</p>",
          "shape": "String"
        },
        "ProductInformationList": {
          "documentation": "<p>New product information.</p>",
          "shape": "ProductInformationList"
        }
      },
      "required": [
        "LicenseConfigurationArn"
      ],
      "type": "structure"
    },
    "UpdateLicenseConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateLicenseManagerReportGeneratorRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "Description": {
          "documentation": "<p>Description of the report generator.</p>",
          "shape": "String"
        },
        "LicenseManagerReportGeneratorArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the report generator to update.</p>",
          "shape": "String"
        },
        "ReportContext": {
          "documentation": "<p>The report context.</p>",
          "shape": "ReportContext"
        },
        "ReportFrequency": {
          "documentation": "<p>Frequency by which reports are generated.</p>",
          "shape": "ReportFrequency"
        },
        "ReportGeneratorName": {
          "documentation": "<p>Name of the report generator.</p>",
          "shape": "ReportGeneratorName"
        },
        "Type": {
          "documentation": "<p>Type of reports to generate. The following report types are supported:</p> <ul> <li> <p>License configuration report - Reports the number and details of consumed licenses for a license configuration.</p> </li> <li> <p>Resource report - Reports the tracked licenses and resource consumption for a license configuration.</p> </li> </ul>",
          "shape": "ReportTypeList"
        }
      },
      "required": [
        "LicenseManagerReportGeneratorArn",
        "ReportGeneratorName",
        "Type",
        "ReportContext",
        "ReportFrequency",
        "ClientToken"
      ],
      "type": "structure"
    },
    "UpdateLicenseManagerReportGeneratorResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateLicenseSpecificationsForResourceRequest": {
      "members": {
        "AddLicenseSpecifications": {
          "documentation": "<p>ARNs of the license configurations to add.</p>",
          "shape": "LicenseSpecifications"
        },
        "RemoveLicenseSpecifications": {
          "documentation": "<p>ARNs of the license configurations to remove.</p>",
          "shape": "LicenseSpecifications"
        },
        "ResourceArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the Amazon Web Services resource.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "UpdateLicenseSpecificationsForResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateServiceSettingsRequest": {
      "members": {
        "EnableCrossAccountsDiscovery": {
          "documentation": "<p>Activates cross-account discovery.</p>",
          "shape": "BoxBoolean"
        },
        "OrganizationConfiguration": {
          "documentation": "<p>Enables integration with Organizations for cross-account discovery.</p>",
          "shape": "OrganizationConfiguration"
        },
        "S3BucketArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the Amazon S3 bucket where the License Manager information is stored.</p>",
          "shape": "String"
        },
        "SnsTopicArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the Amazon SNS topic used for License Manager alerts.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UpdateServiceSettingsResponse": {
      "members": {},
      "type": "structure"
    },
    "UsageOperation": {
      "max": 50,
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>The provided input is not valid. Try your request again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
