{
  "documentation": "<p>The Amazon Web Services Snow Family provides a petabyte-scale data transport solution that uses secure devices to transfer large amounts of data between your on-premises data centers and Amazon Simple Storage Service (Amazon S3). The Snow Family commands described here provide access to the same functionality that is available in the Amazon Web Services Snow Family Management Console, which enables you to create and manage jobs for a Snow Family device. To transfer data locally with a Snow Family device, you'll need to use the Snowball Edge client or the Amazon S3 API Interface for Snowball or OpsHub for Snow Family. For more information, see the <a href=\"https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html\">User Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2016-06-30",
    "endpointPrefix": "snowball",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceAbbreviation": "Amazon Snowball",
    "serviceFullName": "Amazon Import/Export Snowball",
    "serviceId": "Snowball",
    "signatureVersion": "v4",
    "targetPrefix": "AWSIESnowballJobManagementService",
    "uid": "snowball-2016-06-30"
  },
  "operations": {
    "CancelCluster": {
      "documentation": "<p>Cancels a cluster job. You can only cancel a cluster job while it's in the <code>AwaitingQuorum</code> status. You'll have at least an hour after creating a cluster job to cancel it.</p>",
      "errors": [
        {
          "shape": "KMSRequestFailedException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CancelClusterRequest"
      },
      "name": "CancelCluster",
      "output": {
        "shape": "CancelClusterResult"
      }
    },
    "CancelJob": {
      "documentation": "<p>Cancels the specified job. You can only cancel a job before its <code>JobState</code> value changes to <code>PreparingAppliance</code>. Requesting the <code>ListJobs</code> or <code>DescribeJob</code> action returns a job's <code>JobState</code> as part of the response element data returned.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "KMSRequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CancelJobRequest"
      },
      "name": "CancelJob",
      "output": {
        "shape": "CancelJobResult"
      }
    },
    "CreateAddress": {
      "documentation": "<p>Creates an address for a Snow device to be shipped to. In most regions, addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. If the address is invalid or unsupported, then an exception is thrown.</p>",
      "errors": [
        {
          "shape": "InvalidAddressException"
        },
        {
          "shape": "UnsupportedAddressException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateAddressRequest"
      },
      "name": "CreateAddress",
      "output": {
        "shape": "CreateAddressResult"
      }
    },
    "CreateCluster": {
      "documentation": "<p>Creates an empty cluster. Each cluster supports five nodes. You use the <a>CreateJob</a> action separately to create the jobs for each of these nodes. The cluster does not ship until these five node jobs have been created.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "KMSRequestFailedException"
        },
        {
          "shape": "InvalidInputCombinationException"
        },
        {
          "shape": "Ec2RequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateClusterRequest"
      },
      "name": "CreateCluster",
      "output": {
        "shape": "CreateClusterResult"
      }
    },
    "CreateJob": {
      "documentation": "<p>Creates a job to import or export data between Amazon S3 and your on-premises data center. Your Amazon Web Services account must have the right trust policies and permissions in place to create a job for a Snow device. If you're creating a job for a node in a cluster, you only need to provide the <code>clusterId</code> value; the other job attributes are inherited from the cluster. </p> <note> <p>Only the Snowball; Edge device type is supported when ordering clustered jobs.</p> <p>The device capacity is optional.</p> <p>Availability of device types differ by Amazon Web Services Region. For more information about Region availability, see <a href=\"https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/?p=ngi&amp;loc=4\">Amazon Web Services Regional Services</a>.</p> </note> <p/> <p class=\"title\"> <b>Snow Family devices and their capacities.</b> </p> <ul> <li> <p>Snow Family device type: <b>SNC1_SSD</b> </p> <ul> <li> <p>Capacity: T14</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Snow Family device type: <b>SNC1_HDD</b> </p> <ul> <li> <p>Capacity: T8</p> </li> <li> <p>Description: Snowcone </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_S</b> </p> <ul> <li> <p>Capacity: T98</p> </li> <li> <p>Description: Snowball Edge Storage Optimized for data transfer only </p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_CG</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized with GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE_C</b> </p> <ul> <li> <p>Capacity: T42</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>EDGE</b> </p> <ul> <li> <p>Capacity: T100</p> </li> <li> <p>Description: Snowball Edge Storage Optimized with EC2 Compute</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>V3_5C</b> </p> <ul> <li> <p>Capacity: T32</p> </li> <li> <p>Description: Snowball Edge Compute Optimized without GPU</p> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T50</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore Amazon Web Services Region </p> </note> </li> </ul> <p/> </li> <li> <p>Device type: <b>STANDARD</b> </p> <ul> <li> <p>Capacity: T80</p> </li> <li> <p>Description: Original Snowball device</p> <note> <p>This device is only available in the Ningxia, Beijing, and Singapore Amazon Web Services Region. </p> </note> </li> </ul> <p/> </li> </ul>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "KMSRequestFailedException"
        },
        {
          "shape": "InvalidInputCombinationException"
        },
        {
          "shape": "ClusterLimitExceededException"
        },
        {
          "shape": "Ec2RequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateJobRequest"
      },
      "name": "CreateJob",
      "output": {
        "shape": "CreateJobResult"
      }
    },
    "CreateLongTermPricing": {
      "documentation": "<p>Creates a job with the long-term usage option for a device. The long-term usage is a 1-year or 3-year long-term pricing type for the device. You are billed upfront, and Amazon Web Services provides discounts for long-term pricing. </p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateLongTermPricingRequest"
      },
      "name": "CreateLongTermPricing",
      "output": {
        "shape": "CreateLongTermPricingResult"
      }
    },
    "CreateReturnShippingLabel": {
      "documentation": "<p>Creates a shipping label that will be used to return the Snow device to Amazon Web Services.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "InvalidInputCombinationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ReturnShippingLabelAlreadyExistsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateReturnShippingLabelRequest"
      },
      "name": "CreateReturnShippingLabel",
      "output": {
        "shape": "CreateReturnShippingLabelResult"
      }
    },
    "DescribeAddress": {
      "documentation": "<p>Takes an <code>AddressId</code> and returns specific details about that address in the form of an <code>Address</code> object.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeAddressRequest"
      },
      "name": "DescribeAddress",
      "output": {
        "shape": "DescribeAddressResult"
      }
    },
    "DescribeAddresses": {
      "documentation": "<p>Returns a specified number of <code>ADDRESS</code> objects. Calling this API in one of the US regions will return addresses from the list of all addresses associated with this account in all US regions.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidNextTokenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeAddressesRequest"
      },
      "name": "DescribeAddresses",
      "output": {
        "shape": "DescribeAddressesResult"
      }
    },
    "DescribeCluster": {
      "documentation": "<p>Returns information about a specific cluster including shipping information, cluster status, and other important metadata.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeClusterRequest"
      },
      "name": "DescribeCluster",
      "output": {
        "shape": "DescribeClusterResult"
      }
    },
    "DescribeJob": {
      "documentation": "<p>Returns information about a specific job including shipping information, job status, and other important metadata. </p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeJobRequest"
      },
      "name": "DescribeJob",
      "output": {
        "shape": "DescribeJobResult"
      }
    },
    "DescribeReturnShippingLabel": {
      "documentation": "<p>Information on the shipping label of a Snow device that is being returned to Amazon Web Services.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeReturnShippingLabelRequest"
      },
      "name": "DescribeReturnShippingLabel",
      "output": {
        "shape": "DescribeReturnShippingLabelResult"
      }
    },
    "GetJobManifest": {
      "documentation": "<p>Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value. You can access the manifest file for up to 60 minutes after this request has been made. To access the manifest file after 60 minutes have passed, you'll have to make another call to the <code>GetJobManifest</code> action.</p> <p>The manifest is an encrypted file that you can download after your job enters the <code>WithCustomer</code> status. This is the only valid status for calling this API as the manifest and <code>UnlockCode</code> code value are used for securing your device and should only be used when you have the device. The manifest is decrypted by using the <code>UnlockCode</code> code value, when you pass both values to the Snow device through the Snowball client when the client is started for the first time. </p> <p>As a best practice, we recommend that you don't save a copy of an <code>UnlockCode</code> value in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p> <p>The credentials of a given job, including its manifest file and unlock code, expire 360 days after the job is created.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetJobManifestRequest"
      },
      "name": "GetJobManifest",
      "output": {
        "shape": "GetJobManifestResult"
      }
    },
    "GetJobUnlockCode": {
      "documentation": "<p>Returns the <code>UnlockCode</code> code value for the specified job. A particular <code>UnlockCode</code> value can be accessed for up to 360 days after the associated job has been created.</p> <p>The <code>UnlockCode</code> value is a 29-character code with 25 alphanumeric characters and 4 hyphens. This code is used to decrypt the manifest file when it is passed along with the manifest to the Snow device through the Snowball client when the client is started for the first time. The only valid status for calling this API is <code>WithCustomer</code> as the manifest and <code>Unlock</code> code values are used for securing your device and should only be used when you have the device.</p> <p>As a best practice, we recommend that you don't save a copy of the <code>UnlockCode</code> in the same location as the manifest file for that job. Saving these separately helps prevent unauthorized parties from gaining access to the Snow device associated with that job.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetJobUnlockCodeRequest"
      },
      "name": "GetJobUnlockCode",
      "output": {
        "shape": "GetJobUnlockCodeResult"
      }
    },
    "GetSnowballUsage": {
      "documentation": "<p>Returns information about the Snow Family service limit for your account, and also the number of Snow devices your account has in use.</p> <p>The default service limit for the number of Snow devices that you can have at one time is 1. If you want to increase your service limit, contact Amazon Web Services Support.</p>",
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetSnowballUsageRequest"
      },
      "name": "GetSnowballUsage",
      "output": {
        "shape": "GetSnowballUsageResult"
      }
    },
    "GetSoftwareUpdates": {
      "documentation": "<p>Returns an Amazon S3 presigned URL for an update file associated with a specified <code>JobId</code>.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetSoftwareUpdatesRequest"
      },
      "name": "GetSoftwareUpdates",
      "output": {
        "shape": "GetSoftwareUpdatesResult"
      }
    },
    "ListClusterJobs": {
      "documentation": "<p>Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object is for a job in the specified cluster and contains a job's state, a job's ID, and other information.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidNextTokenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListClusterJobsRequest"
      },
      "name": "ListClusterJobs",
      "output": {
        "shape": "ListClusterJobsResult"
      }
    },
    "ListClusters": {
      "documentation": "<p>Returns an array of <code>ClusterListEntry</code> objects of the specified length. Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListClustersRequest"
      },
      "name": "ListClusters",
      "output": {
        "shape": "ListClustersResult"
      }
    },
    "ListCompatibleImages": {
      "documentation": "<p>This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your Amazon Web Services accountthat would be supported for use on a Snow device. Currently, supported AMIs are based on the CentOS 7 (x86_64) - with Updates HVM, Ubuntu Server 14.04 LTS (HVM), and Ubuntu 16.04 LTS - Xenial (HVM) images, available on the Amazon Web Services Marketplace.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "Ec2RequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListCompatibleImagesRequest"
      },
      "name": "ListCompatibleImages",
      "output": {
        "shape": "ListCompatibleImagesResult"
      }
    },
    "ListJobs": {
      "documentation": "<p>Returns an array of <code>JobListEntry</code> objects of the specified length. Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. Calling this API action in one of the US regions will return jobs from the list of all jobs associated with this account in all US regions.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListJobsRequest"
      },
      "name": "ListJobs",
      "output": {
        "shape": "ListJobsResult"
      }
    },
    "ListLongTermPricing": {
      "documentation": "<p>Lists all long-term pricing types.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidNextTokenException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListLongTermPricingRequest"
      },
      "name": "ListLongTermPricing",
      "output": {
        "shape": "ListLongTermPricingResult"
      }
    },
    "UpdateCluster": {
      "documentation": "<p>While a cluster's <code>ClusterState</code> value is in the <code>AwaitingQuorum</code> state, you can update some of the information associated with a cluster. Once the cluster changes to a different job state, usually 60 minutes after the cluster being created, this action is no longer available.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "KMSRequestFailedException"
        },
        {
          "shape": "InvalidInputCombinationException"
        },
        {
          "shape": "Ec2RequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateClusterRequest"
      },
      "name": "UpdateCluster",
      "output": {
        "shape": "UpdateClusterResult"
      }
    },
    "UpdateJob": {
      "documentation": "<p>While a job's <code>JobState</code> value is <code>New</code>, you can update some of the information associated with a job. Once the job changes to a different job state, usually within 60 minutes of the job being created, this action is no longer available.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        },
        {
          "shape": "KMSRequestFailedException"
        },
        {
          "shape": "InvalidInputCombinationException"
        },
        {
          "shape": "ClusterLimitExceededException"
        },
        {
          "shape": "Ec2RequestFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateJobRequest"
      },
      "name": "UpdateJob",
      "output": {
        "shape": "UpdateJobResult"
      }
    },
    "UpdateJobShipmentState": {
      "documentation": "<p>Updates the state when a shipment state changes to a different state.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        },
        {
          "shape": "InvalidJobStateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateJobShipmentStateRequest"
      },
      "name": "UpdateJobShipmentState",
      "output": {
        "shape": "UpdateJobShipmentStateResult"
      }
    },
    "UpdateLongTermPricing": {
      "documentation": "<p>Updates the long-term pricing type.</p>",
      "errors": [
        {
          "shape": "InvalidResourceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateLongTermPricingRequest"
      },
      "name": "UpdateLongTermPricing",
      "output": {
        "shape": "UpdateLongTermPricingResult"
      }
    }
  },
  "shapes": {
    "Address": {
      "documentation": "<p>The address that you want the Snow device(s) associated with a specific job to be shipped to. Addresses are validated at the time of creation. The address you provide must be located within the serviceable area of your region. Although no individual elements of the <code>Address</code> are required, if the address is invalid or unsupported, then an exception is thrown.</p>",
      "members": {
        "AddressId": {
          "documentation": "<p>The unique ID for an address.</p>",
          "shape": "AddressId"
        },
        "City": {
          "documentation": "<p>The city in an address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "Company": {
          "documentation": "<p>The name of the company to receive a Snow device at an address.</p>",
          "shape": "String"
        },
        "Country": {
          "documentation": "<p>The country in an address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "IsRestricted": {
          "documentation": "<p>If the address you are creating is a primary address, then set this option to true. This field is not supported in most regions.</p>",
          "shape": "Boolean"
        },
        "Landmark": {
          "documentation": "<p>This field is no longer used and the value is ignored.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>The name of a person to receive a Snow device at an address.</p>",
          "shape": "String"
        },
        "PhoneNumber": {
          "documentation": "<p>The phone number associated with an address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "PostalCode": {
          "documentation": "<p>The postal code in an address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "PrefectureOrDistrict": {
          "documentation": "<p>This field is no longer used and the value is ignored.</p>",
          "shape": "String"
        },
        "StateOrProvince": {
          "documentation": "<p>The state or province in an address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "Street1": {
          "documentation": "<p>The first line in a street address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "Street2": {
          "documentation": "<p>The second line in a street address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        },
        "Street3": {
          "documentation": "<p>The third line in a street address that a Snow device is to be delivered to.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AddressId": {
      "max": 40,
      "min": 40,
      "pattern": "ADID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
      "type": "string"
    },
    "AddressList": {
      "member": {
        "shape": "Address"
      },
      "type": "list"
    },
    "AmiId": {
      "max": 21,
      "min": 12,
      "pattern": "(ami-[0-9a-f]{8})|(ami-[0-9a-f]{17})",
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CancelClusterRequest": {
      "members": {
        "ClusterId": {
          "documentation": "<p>The 39-character ID for the cluster that you want to cancel, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "ClusterId"
        }
      },
      "required": [
        "ClusterId"
      ],
      "type": "structure"
    },
    "CancelClusterResult": {
      "members": {},
      "type": "structure"
    },
    "CancelJobRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The 39-character job ID for the job that you want to cancel, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "CancelJobResult": {
      "members": {},
      "type": "structure"
    },
    "ClusterId": {
      "max": 39,
      "min": 39,
      "pattern": "CID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
      "type": "string"
    },
    "ClusterLimitExceededException": {
      "documentation": "<p>Job creation failed. Currently, clusters support five nodes. If you have fewer than five nodes for your cluster and you have more nodes to create for this cluster, try again and create jobs until your cluster has exactly five nodes.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ClusterListEntry": {
      "documentation": "<p>Contains a cluster's state, a cluster's ID, and other important information.</p>",
      "members": {
        "ClusterId": {
          "documentation": "<p>The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "String"
        },
        "ClusterState": {
          "documentation": "<p>The current state of this cluster. For information about the state of a specific node, see <a>JobListEntry$JobState</a>.</p>",
          "shape": "ClusterState"
        },
        "CreationDate": {
          "documentation": "<p>The creation date for this cluster.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>Defines an optional description of the cluster, for example <code>Environmental Data Cluster-01</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ClusterListEntryList": {
      "member": {
        "shape": "ClusterListEntry"
      },
      "type": "list"
    },
    "ClusterMetadata": {
      "documentation": "<p>Contains metadata about a specific cluster.</p>",
      "members": {
        "AddressId": {
          "documentation": "<p>The automatically generated ID for a specific address.</p>",
          "shape": "AddressId"
        },
        "ClusterId": {
          "documentation": "<p>The automatically generated ID for a cluster.</p>",
          "shape": "String"
        },
        "ClusterState": {
          "documentation": "<p>The current status of the cluster.</p>",
          "shape": "ClusterState"
        },
        "CreationDate": {
          "documentation": "<p>The creation date for this cluster.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The optional description of the cluster.</p>",
          "shape": "String"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The ID of the address that you want a cluster shipped to, after it will be shipped to its primary address. This field is not supported in most regions.</p>",
          "shape": "AddressId"
        },
        "JobType": {
          "documentation": "<p>The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.</p>",
          "shape": "JobType"
        },
        "KmsKeyARN": {
          "documentation": "<p>The <code>KmsKeyARN</code> Amazon Resource Name (ARN) associated with this cluster. This ARN was created using the <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html\">CreateKey</a> API action in Key Management Service (KMS.</p>",
          "shape": "KmsKeyARN"
        },
        "Notification": {
          "documentation": "<p>The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Represents metadata and configuration settings for services on an Amazon Web Services Snow Family device.</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "Resources": {
          "documentation": "<p>The arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.</p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The role ARN associated with this cluster. This ARN was created using the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> API action in Identity and Access Management (IAM).</p>",
          "shape": "RoleARN"
        },
        "ShippingOption": {
          "documentation": "<p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>",
          "shape": "ShippingOption"
        },
        "SnowballType": {
          "documentation": "<p>The type of Snowcone device to use for this cluster. </p> <note> <p>For cluster jobs, Amazon Web Services Snow Family currently supports only the <code>EDGE</code> device type.</p> </note>",
          "shape": "SnowballType"
        },
        "TaxDocuments": {
          "documentation": "<p>The tax documents required in your Amazon Web Services Region.</p>",
          "shape": "TaxDocuments"
        }
      },
      "type": "structure"
    },
    "ClusterState": {
      "enum": [
        "AwaitingQuorum",
        "Pending",
        "InUse",
        "Complete",
        "Cancelled"
      ],
      "type": "string"
    },
    "CompatibleImage": {
      "documentation": "<p>A JSON-formatted object that describes a compatible Amazon Machine Image (AMI), including the ID and name for a Snow device AMI. This AMI is compatible with the device's physical hardware requirements, and it should be able to be run in an SBE1 instance on the device.</p>",
      "members": {
        "AmiId": {
          "documentation": "<p>The unique identifier for an individual Snow device AMI.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>The optional name of a compatible image.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CompatibleImageList": {
      "member": {
        "shape": "CompatibleImage"
      },
      "type": "list"
    },
    "ConflictException": {
      "documentation": "<p>You get this exception when you call <code>CreateReturnShippingLabel</code> more than once when other requests are not completed.</p>",
      "exception": true,
      "members": {
        "ConflictResource": {
          "documentation": "<p>You get this resource when you call <code>CreateReturnShippingLabel</code> more than once when other requests are not completed. .</p>",
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateAddressRequest": {
      "members": {
        "Address": {
          "documentation": "<p>The address that you want the Snow device shipped to.</p>",
          "shape": "Address"
        }
      },
      "required": [
        "Address"
      ],
      "type": "structure"
    },
    "CreateAddressResult": {
      "members": {
        "AddressId": {
          "documentation": "<p>The automatically generated ID for a specific address. You'll use this ID when you create a job to specify which address you want the Snow device for that job shipped to.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateClusterRequest": {
      "members": {
        "AddressId": {
          "documentation": "<p>The ID for the address that you want the cluster shipped to.</p>",
          "shape": "AddressId"
        },
        "Description": {
          "documentation": "<p>An optional description of this specific cluster, for example <code>Environmental Data Cluster-01</code>.</p>",
          "shape": "String"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The forwarding address ID for a cluster. This field is not supported in most regions.</p>",
          "shape": "AddressId"
        },
        "JobType": {
          "documentation": "<p>The type of job for this cluster. Currently, the only job type supported for clusters is <code>LOCAL_USE</code>.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "JobType"
        },
        "KmsKeyARN": {
          "documentation": "<p>The <code>KmsKeyARN</code> value that you want to associate with this cluster. <code>KmsKeyARN</code> values are created by using the <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html\">CreateKey</a> API action in Key Management Service (KMS). </p>",
          "shape": "KmsKeyARN"
        },
        "Notification": {
          "documentation": "<p>The Amazon Simple Notification Service (Amazon SNS) notification settings for this cluster.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System).</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "RemoteManagement": {
          "documentation": "<p>Allows you to securely operate and manage Snow devices in a cluster remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.</p>",
          "shape": "RemoteManagement"
        },
        "Resources": {
          "documentation": "<p>The resources associated with the cluster job. These resources include Amazon S3 buckets and optional Lambda functions written in the Python language. </p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The <code>RoleARN</code> that you want to associate with this cluster. <code>RoleArn</code> values are created by using the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> API action in Identity and Access Management (IAM).</p>",
          "shape": "RoleARN"
        },
        "ShippingOption": {
          "documentation": "<p>The shipping speed for each node in this cluster. This speed doesn't dictate how soon you'll get each Snowball Edge device, rather it represents how quickly each device moves to its destination while in transit. Regional shipping speeds are as follows: </p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li> </ul> <ul> <li> <p>In Australia, you have access to express shipping. Typically, devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>",
          "shape": "ShippingOption"
        },
        "SnowballType": {
          "documentation": "<p>The type of Snow Family devices to use for this cluster. </p> <note> <p>For cluster jobs, Amazon Web Services Snow Family currently supports only the <code>EDGE</code> device type.</p> </note> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "SnowballType"
        },
        "TaxDocuments": {
          "documentation": "<p>The tax documents required in your Amazon Web Services Region.</p>",
          "shape": "TaxDocuments"
        }
      },
      "required": [
        "JobType",
        "Resources",
        "AddressId",
        "RoleARN",
        "SnowballType",
        "ShippingOption"
      ],
      "type": "structure"
    },
    "CreateClusterResult": {
      "members": {
        "ClusterId": {
          "documentation": "<p>The automatically generated ID for a cluster.</p>",
          "shape": "ClusterId"
        }
      },
      "type": "structure"
    },
    "CreateJobRequest": {
      "members": {
        "AddressId": {
          "documentation": "<p>The ID for the address that you want the Snow device shipped to.</p>",
          "shape": "AddressId"
        },
        "ClusterId": {
          "documentation": "<p>The ID of a cluster. If you're creating a job for a node in a cluster, you need to provide only this <code>clusterId</code> value. The other job attributes are inherited from the cluster.</p>",
          "shape": "ClusterId"
        },
        "Description": {
          "documentation": "<p>Defines an optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.</p>",
          "shape": "String"
        },
        "DeviceConfiguration": {
          "documentation": "<p>Defines the device configuration for an Snowcone job.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "DeviceConfiguration"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The forwarding address ID for a job. This field is not supported in most Regions.</p>",
          "shape": "AddressId"
        },
        "JobType": {
          "documentation": "<p>Defines the type of job that you're creating. </p>",
          "shape": "JobType"
        },
        "KmsKeyARN": {
          "documentation": "<p>The <code>KmsKeyARN</code> that you want to associate with this job. <code>KmsKeyARN</code>s are created using the <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html\">CreateKey</a> Key Management Service (KMS) API action.</p>",
          "shape": "KmsKeyARN"
        },
        "LongTermPricingId": {
          "documentation": "<p>The ID of the long-term pricing type for the device.</p>",
          "shape": "LongTermPricingId"
        },
        "Notification": {
          "documentation": "<p>Defines the Amazon Simple Notification Service (Amazon SNS) notification settings for this job.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System) and the Amazon Web Services Storage Gateway service Tape Gateway type.</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "RemoteManagement": {
          "documentation": "<p>Allows you to securely operate and manage Snowcone devices remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.</p>",
          "shape": "RemoteManagement"
        },
        "Resources": {
          "documentation": "<p>Defines the Amazon S3 buckets associated with this job.</p> <p>With <code>IMPORT</code> jobs, you specify the bucket or buckets that your transferred data will be imported into.</p> <p>With <code>EXPORT</code> jobs, you specify the bucket or buckets that your transferred data will be exported from. Optionally, you can also specify a <code>KeyRange</code> value. If you choose to export a range, you define the length of the range by providing either an inclusive <code>BeginMarker</code> value, an inclusive <code>EndMarker</code> value, or both. Ranges are UTF-8 binary sorted.</p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The <code>RoleARN</code> that you want to associate with this job. <code>RoleArn</code>s are created using the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> Identity and Access Management (IAM) API action.</p>",
          "shape": "RoleARN"
        },
        "ShippingOption": {
          "documentation": "<p>The shipping speed for this job. This speed doesn't dictate how soon you'll get the Snow device, rather it represents how quickly the Snow device moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the US, you have access to one-day shipping and two-day shipping.</p> </li> </ul>",
          "shape": "ShippingOption"
        },
        "SnowballCapacityPreference": {
          "documentation": "<p>If your job is being created in one of the US regions, you have the option of specifying what size Snow device you'd like for this job. In all other regions, Snowballs come with 80 TB in storage capacity.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "SnowballCapacity"
        },
        "SnowballType": {
          "documentation": "<p>The type of Snow Family devices to use for this job. </p> <note> <p>For cluster jobs, Amazon Web Services Snow Family currently supports only the <code>EDGE</code> device type.</p> </note> <p>The type of Amazon Web Services Snow device to use for this job. Currently, the only supported device type for cluster jobs is <code>EDGE</code>.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/snowball/latest/developer-guide/device-differences.html\">Snowball Edge Device Options</a> in the Snowball Edge Developer Guide.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "SnowballType"
        },
        "TaxDocuments": {
          "documentation": "<p>The tax documents required in your Amazon Web Services Region.</p>",
          "shape": "TaxDocuments"
        }
      },
      "type": "structure"
    },
    "CreateJobResult": {
      "members": {
        "JobId": {
          "documentation": "<p>The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "type": "structure"
    },
    "CreateLongTermPricingRequest": {
      "members": {
        "IsLongTermPricingAutoRenew": {
          "documentation": "<p>snowballty</p> <p>Specifies whether the current long-term pricing type for the device should be renewed.</p>",
          "shape": "JavaBoolean"
        },
        "LongTermPricingType": {
          "documentation": "<p>The type of long-term pricing option you want for the device, either 1-year or 3-year long-term pricing.</p>",
          "shape": "LongTermPricingType"
        },
        "SnowballType": {
          "documentation": "<p>The type of Snow Family devices to use for the long-term pricing job.</p>",
          "shape": "SnowballType"
        }
      },
      "required": [
        "LongTermPricingType"
      ],
      "type": "structure"
    },
    "CreateLongTermPricingResult": {
      "members": {
        "LongTermPricingId": {
          "documentation": "<p>The ID of the long-term pricing type for the device.</p>",
          "shape": "LongTermPricingId"
        }
      },
      "type": "structure"
    },
    "CreateReturnShippingLabelRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The ID for a job that you want to create the return shipping label for; for example, <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        },
        "ShippingOption": {
          "documentation": "<p>The shipping speed for a particular job. This speed doesn't dictate how soon the device is returned to Amazon Web Services. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p>",
          "shape": "ShippingOption"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "CreateReturnShippingLabelResult": {
      "members": {
        "Status": {
          "documentation": "<p>The status information of the task on a Snow device that is being returned to Amazon Web Services.</p>",
          "shape": "ShippingLabelStatus"
        }
      },
      "type": "structure"
    },
    "DataTransfer": {
      "documentation": "<p>Defines the real-time status of a Snow device's data transfer while the device is at Amazon Web Services. This data is only available while a job has a <code>JobState</code> value of <code>InProgress</code>, for both import and export jobs.</p>",
      "members": {
        "BytesTransferred": {
          "documentation": "<p>The number of bytes transferred between a Snow device and Amazon S3.</p>",
          "shape": "Long"
        },
        "ObjectsTransferred": {
          "documentation": "<p>The number of objects transferred between a Snow device and Amazon S3.</p>",
          "shape": "Long"
        },
        "TotalBytes": {
          "documentation": "<p>The total bytes of data for a transfer between a Snow device and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.</p>",
          "shape": "Long"
        },
        "TotalObjects": {
          "documentation": "<p>The total number of objects for a transfer between a Snow device and Amazon S3. This value is set to 0 (zero) until all the keys that will be transferred have been listed.</p>",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "DescribeAddressRequest": {
      "members": {
        "AddressId": {
          "documentation": "<p>The automatically generated ID for a specific address.</p>",
          "shape": "AddressId"
        }
      },
      "required": [
        "AddressId"
      ],
      "type": "structure"
    },
    "DescribeAddressResult": {
      "members": {
        "Address": {
          "documentation": "<p>The address that you want the Snow device(s) associated with a specific job to be shipped to.</p>",
          "shape": "Address"
        }
      },
      "type": "structure"
    },
    "DescribeAddressesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of <code>ADDRESS</code> objects to return.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. To identify what object comes \"next\" in the list of <code>ADDRESS</code> objects, you have the option of specifying a value for <code>NextToken</code> as the starting point for your list of returned addresses.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DescribeAddressesResult": {
      "members": {
        "Addresses": {
          "documentation": "<p>The Snow device shipping addresses that were created for this account.</p>",
          "shape": "AddressList"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>DescribeAddresses</code> call, your list of returned addresses will start from this point in the array.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DescribeClusterRequest": {
      "members": {
        "ClusterId": {
          "documentation": "<p>The automatically generated ID for a cluster.</p>",
          "shape": "ClusterId"
        }
      },
      "required": [
        "ClusterId"
      ],
      "type": "structure"
    },
    "DescribeClusterResult": {
      "members": {
        "ClusterMetadata": {
          "documentation": "<p>Information about a specific cluster, including shipping information, cluster status, and other important metadata.</p>",
          "shape": "ClusterMetadata"
        }
      },
      "type": "structure"
    },
    "DescribeJobRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "DescribeJobResult": {
      "members": {
        "JobMetadata": {
          "documentation": "<p>Information about a specific job, including shipping information, job status, and other important metadata.</p>",
          "shape": "JobMetadata"
        },
        "SubJobMetadata": {
          "documentation": "<p>Information about a specific job part (in the case of an export job), including shipping information, job status, and other important metadata.</p>",
          "shape": "JobMetadataList"
        }
      },
      "type": "structure"
    },
    "DescribeReturnShippingLabelRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "DescribeReturnShippingLabelResult": {
      "members": {
        "ExpirationDate": {
          "documentation": "<p>The expiration date of the current return shipping label.</p>",
          "shape": "Timestamp"
        },
        "ReturnShippingLabelURI": {
          "documentation": "<p>The pre-signed Amazon S3 URI used to download the return shipping label.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The status information of the task on a Snow device that is being returned to Amazon Web Services.</p>",
          "shape": "ShippingLabelStatus"
        }
      },
      "type": "structure"
    },
    "DeviceConfiguration": {
      "documentation": "<p>The container for <code>SnowconeDeviceConfiguration</code>. </p>",
      "members": {
        "SnowconeDeviceConfiguration": {
          "documentation": "<p>Returns information about the device configuration for an Snowcone job.</p>",
          "shape": "SnowconeDeviceConfiguration"
        }
      },
      "type": "structure"
    },
    "DeviceServiceName": {
      "enum": [
        "NFS_ON_DEVICE_SERVICE",
        "S3_ON_DEVICE_SERVICE"
      ],
      "type": "string"
    },
    "Ec2AmiResource": {
      "documentation": "<p>A JSON-formatted object that contains the IDs for an Amazon Machine Image (AMI), including the Amazon EC2 AMI ID and the Snow device AMI ID. Each AMI has these two IDs to simplify identifying the AMI in both the Amazon Web Services Cloud and on the device.</p>",
      "members": {
        "AmiId": {
          "documentation": "<p>The ID of the AMI in Amazon EC2.</p>",
          "shape": "AmiId"
        },
        "SnowballAmiId": {
          "documentation": "<p>The ID of the AMI on the Snow device.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AmiId"
      ],
      "type": "structure"
    },
    "Ec2AmiResourceList": {
      "member": {
        "shape": "Ec2AmiResource"
      },
      "type": "list"
    },
    "Ec2RequestFailedException": {
      "documentation": "<p>Your IAM user lacks the necessary Amazon EC2 permissions to perform the attempted action.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EventTriggerDefinition": {
      "documentation": "<p>The container for the <a>EventTriggerDefinition$EventResourceARN</a>.</p>",
      "members": {
        "EventResourceARN": {
          "documentation": "<p>The Amazon Resource Name (ARN) for any local Amazon S3 resource that is an Lambda function's event trigger associated with this job.</p>",
          "shape": "ResourceARN"
        }
      },
      "type": "structure"
    },
    "EventTriggerDefinitionList": {
      "member": {
        "shape": "EventTriggerDefinition"
      },
      "type": "list"
    },
    "GSTIN": {
      "max": 15,
      "min": 15,
      "pattern": "\\d{2}[A-Z]{5}\\d{4}[A-Z]{1}[A-Z\\d]{1}[Z]{1}[A-Z\\d]{1}",
      "type": "string"
    },
    "GetJobManifestRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The ID for a job that you want to get the manifest file for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "GetJobManifestResult": {
      "members": {
        "ManifestURI": {
          "documentation": "<p>The Amazon S3 presigned URL for the manifest file associated with the specified <code>JobId</code> value.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetJobUnlockCodeRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The ID for the job that you want to get the <code>UnlockCode</code> value for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "GetJobUnlockCodeResult": {
      "members": {
        "UnlockCode": {
          "documentation": "<p>The <code>UnlockCode</code> value for the specified job. The <code>UnlockCode</code> value can be accessed for up to 360 days after the job has been created.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetSnowballUsageRequest": {
      "members": {},
      "type": "structure"
    },
    "GetSnowballUsageResult": {
      "members": {
        "SnowballLimit": {
          "documentation": "<p>The service limit for number of Snow devices this account can have at once. The default service limit is 1 (one).</p>",
          "shape": "Integer"
        },
        "SnowballsInUse": {
          "documentation": "<p>The number of Snow devices that this account is currently using.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "GetSoftwareUpdatesRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The ID for a job that you want to get the software update file for, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "GetSoftwareUpdatesResult": {
      "members": {
        "UpdatesURI": {
          "documentation": "<p>The Amazon S3 presigned URL for the update file associated with the specified <code>JobId</code> value. The software update will be available for 2 days after this request is made. To access an update after the 2 days have passed, you'll have to make another call to <code>GetSoftwareUpdates</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "INDTaxDocuments": {
      "documentation": "<p>The tax documents required in Amazon Web Services Region in India.</p>",
      "members": {
        "GSTIN": {
          "documentation": "<p>The Goods and Services Tax (GST) documents required in Amazon Web Services Region in India.</p>",
          "shape": "GSTIN"
        }
      },
      "type": "structure"
    },
    "Integer": {
      "type": "integer"
    },
    "InvalidAddressException": {
      "documentation": "<p>The address provided was invalid. Check the address with your region's carrier, and try again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidInputCombinationException": {
      "documentation": "<p>Job or cluster creation failed. One or more inputs were invalid. Confirm that the <a>CreateClusterRequest$SnowballType</a> value supports your <a>CreateJobRequest$JobType</a>, and try again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidJobStateException": {
      "documentation": "<p>The action can't be performed because the job's current state doesn't allow that action to be performed.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidNextTokenException": {
      "documentation": "<p>The <code>NextToken</code> string was altered unexpectedly, and the operation has stopped. Run the operation without changing the <code>NextToken</code> string, and try again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidResourceException": {
      "documentation": "<p>The specified resource can't be found. Check the information you provided in your last request, and try again.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The provided resource value is invalid.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JavaBoolean": {
      "type": "boolean"
    },
    "JobId": {
      "max": 39,
      "min": 39,
      "pattern": "(M|J)ID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
      "type": "string"
    },
    "JobListEntry": {
      "documentation": "<p>Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of an export job.</p>",
      "members": {
        "CreationDate": {
          "documentation": "<p>The creation date for this job.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The optional description of this specific job, for example <code>Important Photos 2016-08-11</code>.</p>",
          "shape": "String"
        },
        "IsMaster": {
          "documentation": "<p>A value that indicates that this job is a main job. A main job represents a successful request to create an export job. Main jobs aren't associated with any Snowballs. Instead, each main job will have at least one job part, and each job part is associated with a Snowball. It might take some time before the job parts associated with a particular main job are listed, because they are created after the main job is created.</p>",
          "shape": "Boolean"
        },
        "JobId": {
          "documentation": "<p>The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "String"
        },
        "JobState": {
          "documentation": "<p>The current state of this job.</p>",
          "shape": "JobState"
        },
        "JobType": {
          "documentation": "<p>The type of job.</p>",
          "shape": "JobType"
        },
        "SnowballType": {
          "documentation": "<p>The type of device used with this job.</p>",
          "shape": "SnowballType"
        }
      },
      "type": "structure"
    },
    "JobListEntryList": {
      "member": {
        "shape": "JobListEntry"
      },
      "type": "list"
    },
    "JobLogs": {
      "documentation": "<p>Contains job logs. Whenever a Snow device is used to import data into or export data out of Amazon S3, you'll have the option of downloading a PDF job report. Job logs are returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type. The job logs can be accessed for up to 60 minutes after this request has been made. To access any of the job logs after 60 minutes have passed, you'll have to make another call to the <code>DescribeJob</code> action.</p> <p>For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.</p> <p>The job report provides you insight into the state of your Amazon S3 data transfer. The report includes details about your job or job part for your records.</p> <p>For deeper visibility into the status of your transferred objects, you can look at the two associated logs: a success log and a failure log. The logs are saved in comma-separated value (CSV) format, and the name of each log includes the ID of the job or job part that the log describes.</p>",
      "members": {
        "JobCompletionReportURI": {
          "documentation": "<p>A link to an Amazon S3 presigned URL where the job completion report is located.</p>",
          "shape": "String"
        },
        "JobFailureLogURI": {
          "documentation": "<p>A link to an Amazon S3 presigned URL where the job failure log is located.</p>",
          "shape": "String"
        },
        "JobSuccessLogURI": {
          "documentation": "<p>A link to an Amazon S3 presigned URL where the job success log is located.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JobMetadata": {
      "documentation": "<p>Contains information about a specific job including shipping information, job status, and other important metadata. This information is returned as a part of the response syntax of the <code>DescribeJob</code> action.</p>",
      "members": {
        "AddressId": {
          "documentation": "<p>The ID for the address that you want the Snow device shipped to.</p>",
          "shape": "AddressId"
        },
        "ClusterId": {
          "documentation": "<p>The 39-character ID for the cluster, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "String"
        },
        "CreationDate": {
          "documentation": "<p>The creation date for this job.</p>",
          "shape": "Timestamp"
        },
        "DataTransferProgress": {
          "documentation": "<p>A value that defines the real-time status of a Snow device's data transfer while the device is at Amazon Web Services. This data is only available while a job has a <code>JobState</code> value of <code>InProgress</code>, for both import and export jobs.</p>",
          "shape": "DataTransfer"
        },
        "Description": {
          "documentation": "<p>The description of the job, provided at job creation.</p>",
          "shape": "String"
        },
        "DeviceConfiguration": {
          "shape": "DeviceConfiguration"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The ID of the address that you want a job shipped to, after it will be shipped to its primary address. This field is not supported in most regions.</p>",
          "shape": "AddressId"
        },
        "JobId": {
          "documentation": "<p>The automatically generated ID for a job, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "String"
        },
        "JobLogInfo": {
          "documentation": "<p>Links to Amazon S3 presigned URLs for the job report and logs. For import jobs, the PDF job report becomes available at the end of the import process. For export jobs, your job report typically becomes available while the Snow device for your job part is being delivered to you.</p>",
          "shape": "JobLogs"
        },
        "JobState": {
          "documentation": "<p>The current status of the jobs.</p>",
          "shape": "JobState"
        },
        "JobType": {
          "documentation": "<p>The type of job.</p>",
          "shape": "JobType"
        },
        "KmsKeyARN": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the Key Management Service (KMS) key associated with this job. This ARN was created using the <a href=\"https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html\">CreateKey</a> API action in KMS.</p>",
          "shape": "KmsKeyARN"
        },
        "LongTermPricingId": {
          "documentation": "<p>The ID of the long-term pricing type for the device.</p>",
          "shape": "LongTermPricingId"
        },
        "Notification": {
          "documentation": "<p>The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Represents metadata and configuration settings for services on an Amazon Web Services Snow Family device.</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "RemoteManagement": {
          "documentation": "<p>Allows you to securely operate and manage Snowcone devices remotely from outside of your internal network. When set to <code>INSTALLED_AUTOSTART</code>, remote management will automatically be available when the device arrives at your location. Otherwise, you need to use the Snowball Client to manage the device.</p>",
          "shape": "RemoteManagement"
        },
        "Resources": {
          "documentation": "<p>An array of <code>S3Resource</code> objects. Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into.</p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The role ARN associated with this job. This ARN was created using the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> API action in Identity and Access Management.</p>",
          "shape": "RoleARN"
        },
        "ShippingDetails": {
          "documentation": "<p>A job's shipping information, including inbound and outbound tracking numbers and shipping speed options.</p>",
          "shape": "ShippingDetails"
        },
        "SnowballCapacityPreference": {
          "documentation": "<p>The Snow device capacity preference for this job, specified at job creation. In US regions, you can choose between 50 TB and 80 TB Snowballs. All other regions use 80 TB capacity Snowballs.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "SnowballCapacity"
        },
        "SnowballType": {
          "documentation": "<p>The type of device used with this job.</p>",
          "shape": "SnowballType"
        },
        "TaxDocuments": {
          "documentation": "<p>The metadata associated with the tax documents required in your Amazon Web Services Region.</p>",
          "shape": "TaxDocuments"
        }
      },
      "type": "structure"
    },
    "JobMetadataList": {
      "member": {
        "shape": "JobMetadata"
      },
      "type": "list"
    },
    "JobResource": {
      "documentation": "<p>Contains an array of Amazon Web Services resource objects. Each object represents an Amazon S3 bucket, an Lambda function, or an Amazon Machine Image (AMI) based on Amazon EC2 that is associated with a particular job.</p>",
      "members": {
        "Ec2AmiResources": {
          "documentation": "<p>The Amazon Machine Images (AMIs) associated with this job.</p>",
          "shape": "Ec2AmiResourceList"
        },
        "LambdaResources": {
          "documentation": "<p>The Python-language Lambda functions for this job.</p>",
          "shape": "LambdaResourceList"
        },
        "S3Resources": {
          "documentation": "<p>An array of <code>S3Resource</code> objects.</p>",
          "shape": "S3ResourceList"
        }
      },
      "type": "structure"
    },
    "JobState": {
      "enum": [
        "New",
        "PreparingAppliance",
        "PreparingShipment",
        "InTransitToCustomer",
        "WithCustomer",
        "InTransitToAWS",
        "WithAWSSortingFacility",
        "WithAWS",
        "InProgress",
        "Complete",
        "Cancelled",
        "Listing",
        "Pending"
      ],
      "type": "string"
    },
    "JobStateList": {
      "member": {
        "shape": "JobState"
      },
      "type": "list"
    },
    "JobType": {
      "enum": [
        "IMPORT",
        "EXPORT",
        "LOCAL_USE"
      ],
      "type": "string"
    },
    "KMSRequestFailedException": {
      "documentation": "<p>The provided Key Management Service key lacks the permissions to perform the specified <a>CreateJob</a> or <a>UpdateJob</a> action.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "KeyRange": {
      "documentation": "<p>Contains a key range. For export jobs, a <code>S3Resource</code> object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.</p>",
      "members": {
        "BeginMarker": {
          "documentation": "<p>The key that starts an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.</p>",
          "shape": "String"
        },
        "EndMarker": {
          "documentation": "<p>The key that ends an optional key range for an export job. Ranges are inclusive and UTF-8 binary sorted.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "KmsKeyARN": {
      "max": 255,
      "pattern": "arn:aws.*:kms:.*:[0-9]{12}:key/.*",
      "type": "string"
    },
    "LambdaResource": {
      "documentation": "<p>Identifies </p>",
      "members": {
        "EventTriggers": {
          "documentation": "<p>The array of ARNs for <a>S3Resource</a> objects to trigger the <a>LambdaResource</a> objects associated with this job.</p>",
          "shape": "EventTriggerDefinitionList"
        },
        "LambdaArn": {
          "documentation": "<p>An Amazon Resource Name (ARN) that represents an Lambda function to be triggered by PUT object actions on the associated local Amazon S3 resource.</p>",
          "shape": "ResourceARN"
        }
      },
      "type": "structure"
    },
    "LambdaResourceList": {
      "member": {
        "shape": "LambdaResource"
      },
      "type": "list"
    },
    "ListClusterJobsRequest": {
      "members": {
        "ClusterId": {
          "documentation": "<p>The 39-character ID for the cluster that you want to list, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "ClusterId"
        },
        "MaxResults": {
          "documentation": "<p>The number of <code>JobListEntry</code> objects to return.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. To identify what object comes \"next\" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.</p>",
          "shape": "String"
        }
      },
      "required": [
        "ClusterId"
      ],
      "type": "structure"
    },
    "ListClusterJobsResult": {
      "members": {
        "JobListEntries": {
          "documentation": "<p>Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. </p>",
          "shape": "JobListEntryList"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ListClusterJobsResult</code> call, your list of returned jobs will start from this point in the array.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListClustersRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of <code>ClusterListEntry</code> objects to return.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. To identify what object comes \"next\" in the list of <code>ClusterListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListClustersResult": {
      "members": {
        "ClusterListEntries": {
          "documentation": "<p>Each <code>ClusterListEntry</code> object contains a cluster's state, a cluster's ID, and other important status information.</p>",
          "shape": "ClusterListEntryList"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. If you use the automatically generated <code>NextToken</code> value in your next <code>ClusterListEntry</code> call, your list of returned clusters will start from this point in the array.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListCompatibleImagesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results for the list of compatible images. Currently, a Snowball Edge device can store 10 AMIs.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. To identify what object comes \"next\" in the list of compatible images, you can specify a value for <code>NextToken</code> as the starting point for your list of returned images.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListCompatibleImagesResult": {
      "members": {
        "CompatibleImages": {
          "documentation": "<p>A JSON-formatted object that describes a compatible AMI, including the ID and name for a Snow device AMI.</p>",
          "shape": "CompatibleImageList"
        },
        "NextToken": {
          "documentation": "<p>Because HTTP requests are stateless, this is the starting point for your next list of returned images.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListJobsRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The number of <code>JobListEntry</code> objects to return.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. To identify what object comes \"next\" in the list of <code>JobListEntry</code> objects, you have the option of specifying <code>NextToken</code> as the starting point for your returned list.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListJobsResult": {
      "members": {
        "JobListEntries": {
          "documentation": "<p>Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of export jobs. </p>",
          "shape": "JobListEntryList"
        },
        "NextToken": {
          "documentation": "<p>HTTP requests are stateless. If you use this automatically generated <code>NextToken</code> value in your next <code>ListJobs</code> call, your returned <code>JobListEntry</code> objects will start from this point in the array.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLimit": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "ListLongTermPricingRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of <code>ListLongTermPricing</code> objects to return.</p>",
          "shape": "ListLimit"
        },
        "NextToken": {
          "documentation": "<p>Because HTTP requests are stateless, this is the starting point for your next list of <code>ListLongTermPricing</code> to return.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLongTermPricingResult": {
      "members": {
        "LongTermPricingEntries": {
          "documentation": "<p>Each <code>LongTermPricingEntry</code> object contains a status, ID, and other information about the <code>LongTermPricing</code> type. </p>",
          "shape": "LongTermPricingEntryList"
        },
        "NextToken": {
          "documentation": "<p>Because HTTP requests are stateless, this is the starting point for your next list of returned <code>ListLongTermPricing</code> list.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Long": {
      "type": "long"
    },
    "LongTermPricingAssociatedJobIdList": {
      "member": {
        "shape": "JobId"
      },
      "type": "list"
    },
    "LongTermPricingEntryList": {
      "member": {
        "shape": "LongTermPricingListEntry"
      },
      "type": "list"
    },
    "LongTermPricingId": {
      "max": 41,
      "min": 41,
      "pattern": "LTPID[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}",
      "type": "string"
    },
    "LongTermPricingListEntry": {
      "documentation": "<p>Each <code>LongTermPricingListEntry</code> object contains information about a long-term pricing type.</p>",
      "members": {
        "CurrentActiveJob": {
          "documentation": "<p>The current active jobs on the device the long-term pricing type.</p>",
          "shape": "JobId"
        },
        "IsLongTermPricingAutoRenew": {
          "documentation": "<p>If set to <code>true</code>, specifies that the current long-term pricing type for the device should be automatically renewed before the long-term pricing contract expires.</p>",
          "shape": "JavaBoolean"
        },
        "JobIds": {
          "documentation": "<p>The IDs of the jobs that are associated with a long-term pricing type.</p>",
          "shape": "LongTermPricingAssociatedJobIdList"
        },
        "LongTermPricingEndDate": {
          "documentation": "<p>The end date the long-term pricing contract.</p>",
          "shape": "Timestamp"
        },
        "LongTermPricingId": {
          "documentation": "<p>The ID of the long-term pricing type for the device.</p>",
          "shape": "LongTermPricingId"
        },
        "LongTermPricingStartDate": {
          "documentation": "<p>The start date of the long-term pricing contract.</p>",
          "shape": "Timestamp"
        },
        "LongTermPricingStatus": {
          "documentation": "<p>The status of the long-term pricing type.</p>",
          "shape": "String"
        },
        "LongTermPricingType": {
          "documentation": "<p>The type of long-term pricing that was selected for the device.</p>",
          "shape": "LongTermPricingType"
        },
        "ReplacementJob": {
          "documentation": "<p>A new device that replaces a device that is ordered with long-term pricing.</p>",
          "shape": "JobId"
        },
        "SnowballType": {
          "documentation": "<p>The type of Snow Family devices associated with this long-term pricing job.</p>",
          "shape": "SnowballType"
        }
      },
      "type": "structure"
    },
    "LongTermPricingType": {
      "enum": [
        "OneYear",
        "ThreeYear"
      ],
      "type": "string"
    },
    "NFSOnDeviceServiceConfiguration": {
      "documentation": "<p>An object that represents the metadata and configuration settings for the NFS (Network File System) service on an Amazon Web Services Snow Family device.</p>",
      "members": {
        "StorageLimit": {
          "documentation": "<p>The maximum NFS storage for one Snow Family device.</p>",
          "shape": "StorageLimit"
        },
        "StorageUnit": {
          "documentation": "<p>The scale unit of the NFS storage on the device.</p> <p>Valid values: TB.</p>",
          "shape": "StorageUnit"
        }
      },
      "type": "structure"
    },
    "Notification": {
      "documentation": "<p>The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The <code>Notification</code> object is returned as a part of the response syntax of the <code>DescribeJob</code> action in the <code>JobMetadata</code> data type.</p> <p>When the notification settings are defined during job creation, you can choose to notify based on a specific set of job states using the <code>JobStatesToNotify</code> array of strings, or you can specify that you want to have Amazon SNS notifications sent out for all job states with <code>NotifyAll</code> set to true.</p>",
      "members": {
        "JobStatesToNotify": {
          "documentation": "<p>The list of job states that will trigger a notification for this job.</p>",
          "shape": "JobStateList"
        },
        "NotifyAll": {
          "documentation": "<p>Any change in job state will trigger a notification for this job.</p>",
          "shape": "Boolean"
        },
        "SnsTopicARN": {
          "documentation": "<p>The new SNS <code>TopicArn</code> that you want to associate with this job. You can create Amazon Resource Names (ARNs) for topics by using the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_CreateTopic.html\">CreateTopic</a> Amazon SNS API action.</p> <p>You can subscribe email addresses to an Amazon SNS topic through the Amazon Web Services Management Console, or by using the <a href=\"https://docs.aws.amazon.com/sns/latest/api/API_Subscribe.html\">Subscribe</a> Amazon Simple Notification Service (Amazon SNS) API action.</p>",
          "shape": "SnsTopicARN"
        }
      },
      "type": "structure"
    },
    "OnDeviceServiceConfiguration": {
      "documentation": "<p>An object that represents the metadata and configuration settings for services on an Amazon Web Services Snow Family device.</p>",
      "members": {
        "NFSOnDeviceService": {
          "documentation": "<p>Represents the NFS (Network File System) service on a Snow Family device.</p>",
          "shape": "NFSOnDeviceServiceConfiguration"
        },
        "TGWOnDeviceService": {
          "documentation": "<p>Represents the Storage Gateway service Tape Gateway type on a Snow Family device.</p>",
          "shape": "TGWOnDeviceServiceConfiguration"
        }
      },
      "type": "structure"
    },
    "RemoteManagement": {
      "enum": [
        "INSTALLED_ONLY",
        "INSTALLED_AUTOSTART"
      ],
      "type": "string"
    },
    "ResourceARN": {
      "max": 255,
      "pattern": "arn:aws.*:*",
      "type": "string"
    },
    "ReturnShippingLabelAlreadyExistsException": {
      "documentation": "<p>You get this exception if you call <code>CreateReturnShippingLabel</code> and a valid return shipping label already exists. In this case, use <code>DescribeReturnShippingLabel</code> to get the URL.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RoleARN": {
      "max": 255,
      "pattern": "arn:aws.*:iam::[0-9]{12}:role/.*",
      "type": "string"
    },
    "S3Resource": {
      "documentation": "<p>Each <code>S3Resource</code> object represents an Amazon S3 bucket that your transferred data will be exported from or imported into. For export jobs, this object can have an optional <code>KeyRange</code> value. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.</p>",
      "members": {
        "BucketArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an Amazon S3 bucket.</p>",
          "shape": "ResourceARN"
        },
        "KeyRange": {
          "documentation": "<p>For export jobs, you can provide an optional <code>KeyRange</code> within a specific Amazon S3 bucket. The length of the range is defined at job creation, and has either an inclusive <code>BeginMarker</code>, an inclusive <code>EndMarker</code>, or both. Ranges are UTF-8 binary sorted.</p>",
          "shape": "KeyRange"
        },
        "TargetOnDeviceServices": {
          "documentation": "<p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System).</p>",
          "shape": "TargetOnDeviceServiceList"
        }
      },
      "type": "structure"
    },
    "S3ResourceList": {
      "member": {
        "shape": "S3Resource"
      },
      "type": "list"
    },
    "Shipment": {
      "documentation": "<p>The <code>Status</code> and <code>TrackingNumber</code> information for an inbound or outbound shipment.</p>",
      "members": {
        "Status": {
          "documentation": "<p>Status information for a shipment.</p>",
          "shape": "String"
        },
        "TrackingNumber": {
          "documentation": "<p>The tracking number for this job. Using this tracking number with your region's carrier's website, you can track a Snow device as the carrier transports it.</p> <p>For India, the carrier is Amazon Logistics. For all other regions, UPS is the carrier.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ShipmentState": {
      "enum": [
        "RECEIVED",
        "RETURNED"
      ],
      "type": "string"
    },
    "ShippingDetails": {
      "documentation": "<p>A job's shipping information, including inbound and outbound tracking numbers and shipping speed options.</p>",
      "members": {
        "InboundShipment": {
          "documentation": "<p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being returned to Amazon Web Services for a particular job.</p>",
          "shape": "Shipment"
        },
        "OutboundShipment": {
          "documentation": "<p>The <code>Status</code> and <code>TrackingNumber</code> values for a Snow device being delivered to the address that you specified for a particular job.</p>",
          "shape": "Shipment"
        },
        "ShippingOption": {
          "documentation": "<p>The shipping speed for a particular job. This speed doesn't dictate how soon you'll get the Snow device from the job's creation date. This speed represents how quickly it moves to its destination while in transit. Regional shipping speeds are as follows:</p> <ul> <li> <p>In Australia, you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day.</p> </li> <li> <p>In the European Union (EU), you have access to express shipping. Typically, Snow devices shipped express are delivered in about a day. In addition, most countries in the EU have access to standard shipping, which typically takes less than a week, one way.</p> </li> <li> <p>In India, Snow devices are delivered in one to seven days.</p> </li> <li> <p>In the United States of America (US), you have access to one-day shipping and two-day shipping.</p> </li> </ul>",
          "shape": "ShippingOption"
        }
      },
      "type": "structure"
    },
    "ShippingLabelStatus": {
      "enum": [
        "InProgress",
        "TimedOut",
        "Succeeded",
        "Failed"
      ],
      "type": "string"
    },
    "ShippingOption": {
      "enum": [
        "SECOND_DAY",
        "NEXT_DAY",
        "EXPRESS",
        "STANDARD"
      ],
      "type": "string"
    },
    "SnowballCapacity": {
      "enum": [
        "T50",
        "T80",
        "T100",
        "T42",
        "T98",
        "T8",
        "T14",
        "NoPreference",
        "T32"
      ],
      "type": "string"
    },
    "SnowballType": {
      "enum": [
        "STANDARD",
        "EDGE",
        "EDGE_C",
        "EDGE_CG",
        "EDGE_S",
        "SNC1_HDD",
        "SNC1_SSD",
        "V3_5C"
      ],
      "type": "string"
    },
    "SnowconeDeviceConfiguration": {
      "documentation": "<p>Specifies the device configuration for an Snowcone job.</p>",
      "members": {
        "WirelessConnection": {
          "documentation": "<p>Configures the wireless connection for the Snowcone device.</p>",
          "shape": "WirelessConnection"
        }
      },
      "type": "structure"
    },
    "SnsTopicARN": {
      "max": 255,
      "pattern": "arn:aws.*:sns:.*:[0-9]{12}:.*",
      "type": "string"
    },
    "StorageLimit": {
      "min": 0,
      "type": "integer"
    },
    "StorageUnit": {
      "enum": [
        "TB"
      ],
      "type": "string"
    },
    "String": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "TGWOnDeviceServiceConfiguration": {
      "documentation": "<p>An object that represents the metadata and configuration settings for the Storage Gateway service Tape Gateway type on an Amazon Web Services Snow Family device.</p>",
      "members": {
        "StorageLimit": {
          "documentation": "<p>The maximum number of virtual tapes to store on one Snow Family device. Due to physical resource limitations, this value must be set to 80 for Snowball Edge.</p>",
          "shape": "StorageLimit"
        },
        "StorageUnit": {
          "documentation": "<p>The scale unit of the virtual tapes on the device.</p>",
          "shape": "StorageUnit"
        }
      },
      "type": "structure"
    },
    "TargetOnDeviceService": {
      "documentation": "<p>An object that represents the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System).</p>",
      "members": {
        "ServiceName": {
          "documentation": "<p>Specifies the name of the service on the Snow Family device that your transferred data will be exported from or imported into.</p>",
          "shape": "DeviceServiceName"
        },
        "TransferOption": {
          "documentation": "<p>Specifies whether the data is being imported or exported. You can import or export the data, or use it locally on the device.</p>",
          "shape": "TransferOption"
        }
      },
      "type": "structure"
    },
    "TargetOnDeviceServiceList": {
      "member": {
        "shape": "TargetOnDeviceService"
      },
      "type": "list"
    },
    "TaxDocuments": {
      "documentation": "<p>The tax documents required in your Amazon Web Services Region.</p>",
      "members": {
        "IND": {
          "shape": "INDTaxDocuments"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TransferOption": {
      "enum": [
        "IMPORT",
        "EXPORT",
        "LOCAL_USE"
      ],
      "type": "string"
    },
    "UnsupportedAddressException": {
      "documentation": "<p>The address is either outside the serviceable area for your region, or an error occurred. Check the address with your region's carrier and try again. If the issue persists, contact Amazon Web Services Support.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UpdateClusterRequest": {
      "members": {
        "AddressId": {
          "documentation": "<p>The ID of the updated <a>Address</a> object.</p>",
          "shape": "AddressId"
        },
        "ClusterId": {
          "documentation": "<p>The cluster ID of the cluster that you want to update, for example <code>CID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "ClusterId"
        },
        "Description": {
          "documentation": "<p>The updated description of this cluster.</p>",
          "shape": "String"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The updated ID for the forwarding address for a cluster. This field is not supported in most regions.</p>",
          "shape": "AddressId"
        },
        "Notification": {
          "documentation": "<p>The new or updated <a>Notification</a> object.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family device clusters support Amazon S3 and NFS (Network File System).</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "Resources": {
          "documentation": "<p>The updated arrays of <a>JobResource</a> objects that can include updated <a>S3Resource</a> objects or <a>LambdaResource</a> objects.</p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The new role Amazon Resource Name (ARN) that you want to associate with this cluster. To create a role ARN, use the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a> API action in Identity and Access Management (IAM).</p>",
          "shape": "RoleARN"
        },
        "ShippingOption": {
          "documentation": "<p>The updated shipping option value of this cluster's <a>ShippingDetails</a> object.</p>",
          "shape": "ShippingOption"
        }
      },
      "required": [
        "ClusterId"
      ],
      "type": "structure"
    },
    "UpdateClusterResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateJobRequest": {
      "members": {
        "AddressId": {
          "documentation": "<p>The ID of the updated <a>Address</a> object.</p>",
          "shape": "AddressId"
        },
        "Description": {
          "documentation": "<p>The updated description of this job's <a>JobMetadata</a> object.</p>",
          "shape": "String"
        },
        "ForwardingAddressId": {
          "documentation": "<p>The updated ID for the forwarding address for a job. This field is not supported in most regions.</p>",
          "shape": "AddressId"
        },
        "JobId": {
          "documentation": "<p>The job ID of the job that you want to update, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        },
        "Notification": {
          "documentation": "<p>The new or updated <a>Notification</a> object.</p>",
          "shape": "Notification"
        },
        "OnDeviceServiceConfiguration": {
          "documentation": "<p>Specifies the service or services on the Snow Family device that your transferred data will be exported from or imported into. Amazon Web Services Snow Family supports Amazon S3 and NFS (Network File System) and the Amazon Web Services Storage Gateway service Tape Gateway type.</p>",
          "shape": "OnDeviceServiceConfiguration"
        },
        "Resources": {
          "documentation": "<p>The updated <code>JobResource</code> object, or the updated <a>JobResource</a> object. </p>",
          "shape": "JobResource"
        },
        "RoleARN": {
          "documentation": "<p>The new role Amazon Resource Name (ARN) that you want to associate with this job. To create a role ARN, use the <a href=\"https://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html\">CreateRole</a>Identity and Access Management (IAM) API action.</p>",
          "shape": "RoleARN"
        },
        "ShippingOption": {
          "documentation": "<p>The updated shipping option value of this job's <a>ShippingDetails</a> object.</p>",
          "shape": "ShippingOption"
        },
        "SnowballCapacityPreference": {
          "documentation": "<p>The updated <code>SnowballCapacityPreference</code> of this job's <a>JobMetadata</a> object. The 50 TB Snowballs are only available in the US regions.</p> <p>For more information, see \"https://docs.aws.amazon.com/snowball/latest/snowcone-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i> or \"https://docs.aws.amazon.com/snowball/latest/developer-guide/snow-device-types.html\" (Snow Family Devices and Capacity) in the <i>Snowcone User Guide</i>.</p>",
          "shape": "SnowballCapacity"
        }
      },
      "required": [
        "JobId"
      ],
      "type": "structure"
    },
    "UpdateJobResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateJobShipmentStateRequest": {
      "members": {
        "JobId": {
          "documentation": "<p>The job ID of the job whose shipment date you want to update, for example <code>JID123e4567-e89b-12d3-a456-426655440000</code>.</p>",
          "shape": "JobId"
        },
        "ShipmentState": {
          "documentation": "<p>The state of a device when it is being shipped. </p> <p>Set to <code>RECEIVED</code> when the device arrives at your location.</p> <p>Set to <code>RETURNED</code> when you have returned the device to Amazon Web Services.</p>",
          "shape": "ShipmentState"
        }
      },
      "required": [
        "JobId",
        "ShipmentState"
      ],
      "type": "structure"
    },
    "UpdateJobShipmentStateResult": {
      "members": {},
      "type": "structure"
    },
    "UpdateLongTermPricingRequest": {
      "members": {
        "IsLongTermPricingAutoRenew": {
          "documentation": "<p>If set to <code>true</code>, specifies that the current long-term pricing type for the device should be automatically renewed before the long-term pricing contract expires.</p>",
          "shape": "JavaBoolean"
        },
        "LongTermPricingId": {
          "documentation": "<p>The ID of the long-term pricing type for the device.</p>",
          "shape": "LongTermPricingId"
        },
        "ReplacementJob": {
          "documentation": "<p>Specifies that a device that is ordered with long-term pricing should be replaced with a new device.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "LongTermPricingId"
      ],
      "type": "structure"
    },
    "UpdateLongTermPricingResult": {
      "members": {},
      "type": "structure"
    },
    "WirelessConnection": {
      "documentation": "<p>Configures the wireless connection on an Snowcone device.</p>",
      "members": {
        "IsWifiEnabled": {
          "documentation": "<p>Enables the Wi-Fi adapter on an Snowcone device.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
