{
  "documentation": "<fullname>Lambda</fullname> <p> <b>Overview</b> </p> <p>Lambda is a compute service that lets you run code without provisioning or managing servers. Lambda runs your code on a high-availability compute infrastructure and performs all of the administration of the compute resources, including server and operating system maintenance, capacity provisioning and automatic scaling, code monitoring and logging. With Lambda, you can run code for virtually any type of application or backend service. For more information about the Lambda service, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">What is Lambda</a> in the <b>Lambda Developer Guide</b>.</p> <p>The <i>Lambda API Reference</i> provides information about each of the API methods, including details about the parameters in each API request and response. </p> <p/> <p>You can use Software Development Kits (SDKs), Integrated Development Environment (IDE) Toolkits, and command line tools to access the API. For installation instructions, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>. </p> <p>For a list of Region-specific endpoints that Lambda supports, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/lambda-service.html/\">Lambda endpoints and quotas </a> in the <i>Amazon Web Services General Reference.</i>. </p> <p>When making the API calls, you will need to authenticate your request by providing a signature. Lambda supports signature version 4. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 signing process</a> in the <i>Amazon Web Services General Reference.</i>. </p> <p> <b>CA certificates</b> </p> <p>Because Amazon Web Services SDKs use the CA certificates from your computer, changes to the certificates on the Amazon Web Services servers can cause connection failures when you attempt to use an SDK. You can prevent these failures by keeping your computer's CA certificates and operating system up-to-date. If you encounter this issue in a corporate environment and do not manage your own computer, you might need to ask an administrator to assist with the update process. The following list shows minimum operating system and Java versions:</p> <ul> <li> <p>Microsoft Windows versions that have updates from January 2005 or later installed contain at least one of the required CAs in their trust list. </p> </li> <li> <p>Mac OS X 10.4 with Java for Mac OS X 10.4 Release 5 (February 2007), Mac OS X 10.5 (October 2007), and later versions contain at least one of the required CAs in their trust list. </p> </li> <li> <p>Red Hat Enterprise Linux 5 (March 2007), 6, and 7 and CentOS 5, 6, and 7 all contain at least one of the required CAs in their default trusted CA list. </p> </li> <li> <p>Java 1.4.2_12 (May 2006), 5 Update 2 (March 2005), and all later versions, including Java 6 (December 2006), 7, and 8, contain at least one of the required CAs in their default trusted CA list. </p> </li> </ul> <p>When accessing the Lambda management console or Lambda API endpoints, whether through browsers or programmatically, you will need to ensure your client machines support any of the following CAs: </p> <ul> <li> <p>Amazon Root CA 1</p> </li> <li> <p>Starfield Services Root Certificate Authority - G2</p> </li> <li> <p>Starfield Class 2 Certification Authority</p> </li> </ul> <p>Root certificates from the first two authorities are available from <a href=\"https://www.amazontrust.com/repository/\">Amazon trust services</a>, but keeping your computer up-to-date is the more straightforward solution. To learn more about ACM-provided certificates, see <a href=\"http://aws.amazon.com/certificate-manager/faqs/#certificates\">Amazon Web Services Certificate Manager FAQs.</a> </p>",
  "metadata": {
    "apiVersion": "2015-03-31",
    "endpointPrefix": "lambda",
    "protocol": "rest-json",
    "serviceFullName": "AWS Lambda",
    "serviceId": "Lambda",
    "signatureVersion": "v4",
    "uid": "lambda-2015-03-31"
  },
  "operations": {
    "AddLayerVersionPermission": {
      "documentation": "<p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Use this action to grant layer usage permission to other accounts. You can grant permission to a single account, all accounts in an organization, or all Amazon Web Services accounts. </p> <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you specified when you added it.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "PolicyLengthExceededException"
        },
        {
          "shape": "PreconditionFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy",
        "responseCode": 201
      },
      "input": {
        "shape": "AddLayerVersionPermissionRequest"
      },
      "name": "AddLayerVersionPermission",
      "output": {
        "shape": "AddLayerVersionPermissionResponse"
      }
    },
    "AddPermission": {
      "documentation": "<p>Grants an Amazon Web Services service, account, or organization permission to use a function. You can apply the policy at the function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier, the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function. Note: Lambda does not support adding policies to version $LATEST.</p> <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. To grant permission to an organization defined in Organizations, specify the organization ID as the <code>PrincipalOrgID</code>. For Amazon Web Services services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or <code>sns.amazonaws.com</code>. For Amazon Web Services services, you can also specify the ARN of the associated resource as the <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other accounts could potentially configure resources in their account to invoke your Lambda function.</p> <p>This action adds a statement to a resource-based permissions policy for the function. For more information about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "PolicyLengthExceededException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "PreconditionFailedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/functions/{FunctionName}/policy",
        "responseCode": 201
      },
      "input": {
        "shape": "AddPermissionRequest"
      },
      "name": "AddPermission",
      "output": {
        "shape": "AddPermissionResponse"
      }
    },
    "CreateAlias": {
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a different version.</p> <p>You can also map an alias to split invocation requests between two versions. Use the <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that it receives.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/functions/{FunctionName}/aliases",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateAliasRequest"
      },
      "name": "CreateAlias",
      "output": {
        "shape": "AliasConfiguration"
      }
    },
    "CreateCodeSigningConfig": {
      "documentation": "<p>Creates a code signing configuration. A <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">code signing configuration</a> defines a list of allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment validation checks fail). </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2020-04-22/code-signing-configs/",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateCodeSigningConfigRequest"
      },
      "name": "CreateCodeSigningConfig",
      "output": {
        "shape": "CreateCodeSigningConfigResponse"
      }
    },
    "CreateEventSourceMapping": {
      "documentation": "<p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source and invokes the function.</p> <p>For details about how to configure different event sources, see the following topics. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\"> Amazon Kinesis</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\"> Amazon SQS</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\"> Amazon MSK</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\"> Apache Kafka</a> </p> </li> </ul> <p>The following error handling options are available only for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul> <p>For information about which configuration parameters apply to each event source, see the following topics.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-params\"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-params\"> Amazon Kinesis</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#services-sqs-params\"> Amazon SQS</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-params\"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-parms\"> Amazon MSK</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kafka.html#services-kafka-parms\"> Apache Kafka</a> </p> </li> </ul>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/event-source-mappings/",
        "responseCode": 202
      },
      "input": {
        "shape": "CreateEventSourceMappingRequest"
      },
      "name": "CreateEventSourceMapping",
      "output": {
        "shape": "EventSourceMappingConfiguration"
      }
    },
    "CreateFunction": {
      "documentation": "<p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The deployment package is a .zip file archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p> <p>You set the package type to <code>Image</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>. For a container image, the code property must include the URI of a container image in the Amazon ECR registry. You do not need to specify the handler and runtime properties. </p> <p>You set the package type to <code>Zip</code> if the deployment package is a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>. For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and runtime properties. The code in the deployment package must be compatible with the target instruction set architecture of the function (<code>x86-64</code> or <code>arm64</code>). If you do not specify the architecture, the default value is <code>x86-64</code>.</p> <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version changes when you update your function's code and configuration. A published version is a snapshot of your function code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of your function from its initial configuration.</p> <p>The other parameters let you configure version-specific and function-level settings. You can modify version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>) and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p> <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function, specify the ARN of a code-signing configuration. When a user attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code package has a valid signature from a trusted publisher. The code-signing configuration includes set set of signing profiles, which define the trusted publishers for this function.</p> <p>If another account or an Amazon Web Services service invokes your function, use <a>AddPermission</a> to grant permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version, or on an alias.</p> <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events in other Amazon Web Services services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "CodeStorageExceededException"
        },
        {
          "shape": "CodeVerificationFailedException"
        },
        {
          "shape": "InvalidCodeSignatureException"
        },
        {
          "shape": "CodeSigningConfigNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/functions",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateFunctionRequest"
      },
      "name": "CreateFunction",
      "output": {
        "shape": "FunctionConfiguration"
      }
    },
    "CreateFunctionUrlConfig": {
      "documentation": "<p>Creates a Lambda function URL with the specified configuration parameters. A function URL is a dedicated HTTP(S) endpoint that you can use to invoke your function.</p>",
      "errors": [
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2021-10-31/functions/{FunctionName}/url",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateFunctionUrlConfigRequest"
      },
      "name": "CreateFunctionUrlConfig",
      "output": {
        "shape": "CreateFunctionUrlConfigResponse"
      }
    },
    "DeleteAlias": {
      "documentation": "<p>Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteAliasRequest"
      },
      "name": "DeleteAlias"
    },
    "DeleteCodeSigningConfig": {
      "documentation": "<p>Deletes the code signing configuration. You can delete the code signing configuration only if no function is using it. </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2020-04-22/code-signing-configs/{CodeSigningConfigArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteCodeSigningConfigRequest"
      },
      "name": "DeleteCodeSigningConfig",
      "output": {
        "shape": "DeleteCodeSigningConfigResponse"
      }
    },
    "DeleteEventSourceMapping": {
      "documentation": "<p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p> <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2015-03-31/event-source-mappings/{UUID}",
        "responseCode": 202
      },
      "input": {
        "shape": "DeleteEventSourceMappingRequest"
      },
      "name": "DeleteEventSourceMapping",
      "output": {
        "shape": "EventSourceMappingConfiguration"
      }
    },
    "DeleteFunction": {
      "documentation": "<p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter. Otherwise, all versions and aliases are deleted.</p> <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>. For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you originally configured it.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2015-03-31/functions/{FunctionName}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteFunctionRequest"
      },
      "name": "DeleteFunction"
    },
    "DeleteFunctionCodeSigningConfig": {
      "documentation": "<p>Removes the code signing configuration from the function.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "CodeSigningConfigNotFoundException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2020-06-30/functions/{FunctionName}/code-signing-config",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteFunctionCodeSigningConfigRequest"
      },
      "name": "DeleteFunctionCodeSigningConfig"
    },
    "DeleteFunctionConcurrency": {
      "documentation": "<p>Removes a concurrent execution limit from a function.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2017-10-31/functions/{FunctionName}/concurrency",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteFunctionConcurrencyRequest"
      },
      "name": "DeleteFunctionConcurrency"
    },
    "DeleteFunctionEventInvokeConfig": {
      "documentation": "<p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteFunctionEventInvokeConfigRequest"
      },
      "name": "DeleteFunctionEventInvokeConfig"
    },
    "DeleteFunctionUrlConfig": {
      "documentation": "<p>Deletes a Lambda function URL. When you delete a function URL, you can't recover it. Creating a new function URL results in a different URL address.</p>",
      "errors": [
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2021-10-31/functions/{FunctionName}/url",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteFunctionUrlConfigRequest"
      },
      "name": "DeleteFunctionUrlConfig"
    },
    "DeleteLayerVersion": {
      "documentation": "<p>Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid breaking functions, a copy of the version remains in Lambda until no functions refer to it.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteLayerVersionRequest"
      },
      "name": "DeleteLayerVersion"
    },
    "DeleteProvisionedConcurrencyConfig": {
      "documentation": "<p>Deletes the provisioned concurrency configuration for a function.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteProvisionedConcurrencyConfigRequest"
      },
      "name": "DeleteProvisionedConcurrencyConfig"
    },
    "GetAccountSettings": {
      "documentation": "<p>Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an Amazon Web Services Region.</p>",
      "errors": [
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2016-08-19/account-settings/",
        "responseCode": 200
      },
      "input": {
        "shape": "GetAccountSettingsRequest"
      },
      "name": "GetAccountSettings",
      "output": {
        "shape": "GetAccountSettingsResponse"
      }
    },
    "GetAlias": {
      "documentation": "<p>Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetAliasRequest"
      },
      "name": "GetAlias",
      "output": {
        "shape": "AliasConfiguration"
      }
    },
    "GetCodeSigningConfig": {
      "documentation": "<p>Returns information about the specified code signing configuration.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2020-04-22/code-signing-configs/{CodeSigningConfigArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCodeSigningConfigRequest"
      },
      "name": "GetCodeSigningConfig",
      "output": {
        "shape": "GetCodeSigningConfigResponse"
      }
    },
    "GetEventSourceMapping": {
      "documentation": "<p>Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/event-source-mappings/{UUID}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetEventSourceMappingRequest"
      },
      "name": "GetEventSourceMapping",
      "output": {
        "shape": "EventSourceMappingConfiguration"
      }
    },
    "GetFunction": {
      "documentation": "<p>Returns information about the function or function version, with a link to download the deployment package that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are returned.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionRequest"
      },
      "name": "GetFunction",
      "output": {
        "shape": "GetFunctionResponse"
      }
    },
    "GetFunctionCodeSigningConfig": {
      "documentation": "<p>Returns the code signing configuration for the specified function.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2020-06-30/functions/{FunctionName}/code-signing-config",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionCodeSigningConfigRequest"
      },
      "name": "GetFunctionCodeSigningConfig",
      "output": {
        "shape": "GetFunctionCodeSigningConfigResponse"
      }
    },
    "GetFunctionConcurrency": {
      "documentation": "<p>Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a function, use <a>PutFunctionConcurrency</a>.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2019-09-30/functions/{FunctionName}/concurrency",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionConcurrencyRequest"
      },
      "name": "GetFunctionConcurrency",
      "output": {
        "shape": "GetFunctionConcurrencyResponse"
      }
    },
    "GetFunctionConfiguration": {
      "documentation": "<p>Returns the version-specific settings of a Lambda function or version. The output includes only options that can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p> <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}/configuration",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionConfigurationRequest"
      },
      "name": "GetFunctionConfiguration",
      "output": {
        "shape": "FunctionConfiguration"
      }
    },
    "GetFunctionEventInvokeConfig": {
      "documentation": "<p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionEventInvokeConfigRequest"
      },
      "name": "GetFunctionEventInvokeConfig",
      "output": {
        "shape": "FunctionEventInvokeConfig"
      }
    },
    "GetFunctionUrlConfig": {
      "documentation": "<p>Returns details about a Lambda function URL.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2021-10-31/functions/{FunctionName}/url",
        "responseCode": 200
      },
      "input": {
        "shape": "GetFunctionUrlConfigRequest"
      },
      "name": "GetFunctionUrlConfig",
      "output": {
        "shape": "GetFunctionUrlConfigResponse"
      }
    },
    "GetLayerVersion": {
      "documentation": "<p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetLayerVersionRequest"
      },
      "name": "GetLayerVersion",
      "output": {
        "shape": "GetLayerVersionResponse"
      }
    },
    "GetLayerVersionByArn": {
      "documentation": "<p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>, with a link to download the layer archive that's valid for 10 minutes.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2018-10-31/layers?find=LayerVersion",
        "responseCode": 200
      },
      "input": {
        "shape": "GetLayerVersionByArnRequest"
      },
      "name": "GetLayerVersionByArn",
      "output": {
        "shape": "GetLayerVersionResponse"
      }
    },
    "GetLayerVersionPolicy": {
      "documentation": "<p>Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy",
        "responseCode": 200
      },
      "input": {
        "shape": "GetLayerVersionPolicyRequest"
      },
      "name": "GetLayerVersionPolicy",
      "output": {
        "shape": "GetLayerVersionPolicyResponse"
      }
    },
    "GetPolicy": {
      "documentation": "<p>Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}/policy",
        "responseCode": 200
      },
      "input": {
        "shape": "GetPolicyRequest"
      },
      "name": "GetPolicy",
      "output": {
        "shape": "GetPolicyResponse"
      }
    },
    "GetProvisionedConcurrencyConfig": {
      "documentation": "<p>Retrieves the provisioned concurrency configuration for a function's alias or version.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ProvisionedConcurrencyConfigNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
        "responseCode": 200
      },
      "input": {
        "shape": "GetProvisionedConcurrencyConfigRequest"
      },
      "name": "GetProvisionedConcurrencyConfig",
      "output": {
        "shape": "GetProvisionedConcurrencyConfigResponse"
      }
    },
    "Invoke": {
      "documentation": "<p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>, details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p> <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p> <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>, Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p> <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration. For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p> <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.</p> <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action. For details on how to set up permissions for cross-account invocations, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html#permissions-resource-xaccountinvoke\">Granting function access to other accounts</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestContentException"
        },
        {
          "shape": "RequestTooLargeException"
        },
        {
          "shape": "UnsupportedMediaTypeException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "EC2UnexpectedException"
        },
        {
          "shape": "SubnetIPAddressLimitReachedException"
        },
        {
          "shape": "ENILimitReachedException"
        },
        {
          "shape": "EFSMountConnectivityException"
        },
        {
          "shape": "EFSMountFailureException"
        },
        {
          "shape": "EFSMountTimeoutException"
        },
        {
          "shape": "EFSIOException"
        },
        {
          "shape": "EC2ThrottledException"
        },
        {
          "shape": "EC2AccessDeniedException"
        },
        {
          "shape": "InvalidSubnetIDException"
        },
        {
          "shape": "InvalidSecurityGroupIDException"
        },
        {
          "shape": "InvalidZipFileException"
        },
        {
          "shape": "KMSDisabledException"
        },
        {
          "shape": "KMSInvalidStateException"
        },
        {
          "shape": "KMSAccessDeniedException"
        },
        {
          "shape": "KMSNotFoundException"
        },
        {
          "shape": "InvalidRuntimeException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/functions/{FunctionName}/invocations"
      },
      "input": {
        "shape": "InvocationRequest"
      },
      "name": "Invoke",
      "output": {
        "shape": "InvocationResponse"
      }
    },
    "InvokeAsync": {
      "deprecated": true,
      "documentation": "<important> <p>For asynchronous function invocation, use <a>Invoke</a>.</p> </important> <p>Invokes a function asynchronously.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestContentException"
        },
        {
          "shape": "InvalidRuntimeException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2014-11-13/functions/{FunctionName}/invoke-async/",
        "responseCode": 202
      },
      "input": {
        "shape": "InvokeAsyncRequest"
      },
      "name": "InvokeAsync",
      "output": {
        "shape": "InvokeAsyncResponse"
      }
    },
    "ListAliases": {
      "documentation": "<p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a> for a Lambda function.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}/aliases",
        "responseCode": 200
      },
      "input": {
        "shape": "ListAliasesRequest"
      },
      "name": "ListAliases",
      "output": {
        "shape": "ListAliasesResponse"
      }
    },
    "ListCodeSigningConfigs": {
      "documentation": "<p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html\">code signing configurations</a>. A request returns up to 10,000 configurations per call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call. </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2020-04-22/code-signing-configs/",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCodeSigningConfigsRequest"
      },
      "name": "ListCodeSigningConfigs",
      "output": {
        "shape": "ListCodeSigningConfigsResponse"
      }
    },
    "ListEventSourceMappings": {
      "documentation": "<p>Lists event source mappings. Specify an <code>EventSourceArn</code> to show only event source mappings for a single event source.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/event-source-mappings/",
        "responseCode": 200
      },
      "input": {
        "shape": "ListEventSourceMappingsRequest"
      },
      "name": "ListEventSourceMappings",
      "output": {
        "shape": "ListEventSourceMappingsResponse"
      }
    },
    "ListFunctionEventInvokeConfigs": {
      "documentation": "<p>Retrieves a list of configurations for asynchronous invocation for a function.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2019-09-25/functions/{FunctionName}/event-invoke-config/list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFunctionEventInvokeConfigsRequest"
      },
      "name": "ListFunctionEventInvokeConfigs",
      "output": {
        "shape": "ListFunctionEventInvokeConfigsResponse"
      }
    },
    "ListFunctionUrlConfigs": {
      "documentation": "<p>Returns a list of Lambda function URLs for the specified function.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2021-10-31/functions/{FunctionName}/urls",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFunctionUrlConfigsRequest"
      },
      "name": "ListFunctionUrlConfigs",
      "output": {
        "shape": "ListFunctionUrlConfigsResponse"
      }
    },
    "ListFunctions": {
      "documentation": "<p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50 functions per call.</p> <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in addition to the unpublished version. </p> <note> <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields. To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode) for a function or version, use <a>GetFunction</a>.</p> </note>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFunctionsRequest"
      },
      "name": "ListFunctions",
      "output": {
        "shape": "ListFunctionsResponse"
      }
    },
    "ListFunctionsByCodeSigningConfig": {
      "documentation": "<p>List the functions that use the specified code signing configuration. You can use this method prior to deleting a code signing configuration, to verify that no functions are using it.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2020-04-22/code-signing-configs/{CodeSigningConfigArn}/functions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFunctionsByCodeSigningConfigRequest"
      },
      "name": "ListFunctionsByCodeSigningConfig",
      "output": {
        "shape": "ListFunctionsByCodeSigningConfigResponse"
      }
    },
    "ListLayerVersions": {
      "documentation": "<p>Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only versions that indicate that they're compatible with that runtime. Specify a compatible architecture to include only layer versions that are compatible with that architecture.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListLayerVersionsRequest"
      },
      "name": "ListLayerVersions",
      "output": {
        "shape": "ListLayerVersionsResponse"
      }
    },
    "ListLayers": {
      "documentation": "<p>Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-layers.html\">Lambda layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers that indicate that they're compatible with that runtime. Specify a compatible architecture to include only layers that are compatible with that <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architecture</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2018-10-31/layers",
        "responseCode": 200
      },
      "input": {
        "shape": "ListLayersRequest"
      },
      "name": "ListLayers",
      "output": {
        "shape": "ListLayersResponse"
      }
    },
    "ListProvisionedConcurrencyConfigs": {
      "documentation": "<p>Retrieves a list of provisioned concurrency configurations for a function.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency?List=ALL",
        "responseCode": 200
      },
      "input": {
        "shape": "ListProvisionedConcurrencyConfigsRequest"
      },
      "name": "ListProvisionedConcurrencyConfigs",
      "output": {
        "shape": "ListProvisionedConcurrencyConfigsResponse"
      }
    },
    "ListTags": {
      "documentation": "<p>Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can also view tags with <a>GetFunction</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2017-03-31/tags/{ARN}"
      },
      "input": {
        "shape": "ListTagsRequest"
      },
      "name": "ListTags",
      "output": {
        "shape": "ListTagsResponse"
      }
    },
    "ListVersionsByFunction": {
      "documentation": "<p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>, with the version-specific configuration of each. Lambda returns up to 50 versions per call.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/2015-03-31/functions/{FunctionName}/versions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListVersionsByFunctionRequest"
      },
      "name": "ListVersionsByFunction",
      "output": {
        "shape": "ListVersionsByFunctionResponse"
      }
    },
    "PublishLayerVersion": {
      "documentation": "<p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same layer name, a new version is created.</p> <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "CodeStorageExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions",
        "responseCode": 201
      },
      "input": {
        "shape": "PublishLayerVersionRequest"
      },
      "name": "PublishLayerVersion",
      "output": {
        "shape": "PublishLayerVersionResponse"
      }
    },
    "PublishVersion": {
      "documentation": "<p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the current code and configuration of a function. Use versions to create a snapshot of your function code and configuration that doesn't change.</p> <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the function before publishing a version.</p> <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "CodeStorageExceededException"
        },
        {
          "shape": "PreconditionFailedException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2015-03-31/functions/{FunctionName}/versions",
        "responseCode": 201
      },
      "input": {
        "shape": "PublishVersionRequest"
      },
      "name": "PublishVersion",
      "output": {
        "shape": "FunctionConfiguration"
      }
    },
    "PutFunctionCodeSigningConfig": {
      "documentation": "<p>Update the code signing configuration for the function. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "CodeSigningConfigNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2020-06-30/functions/{FunctionName}/code-signing-config",
        "responseCode": 200
      },
      "input": {
        "shape": "PutFunctionCodeSigningConfigRequest"
      },
      "name": "PutFunctionCodeSigningConfig",
      "output": {
        "shape": "PutFunctionCodeSigningConfigResponse"
      }
    },
    "PutFunctionConcurrency": {
      "documentation": "<p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency level.</p> <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished version. Reserving concurrency both ensures that your function has capacity to process the specified number of events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see the current setting for a function.</p> <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2017-10-31/functions/{FunctionName}/concurrency",
        "responseCode": 200
      },
      "input": {
        "shape": "PutFunctionConcurrencyRequest"
      },
      "name": "PutFunctionConcurrency",
      "output": {
        "shape": "Concurrency"
      }
    },
    "PutFunctionEventInvokeConfig": {
      "documentation": "<p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a> on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p> <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with <a>UpdateFunctionConfiguration</a>.</p> <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
        "responseCode": 200
      },
      "input": {
        "shape": "PutFunctionEventInvokeConfigRequest"
      },
      "name": "PutFunctionEventInvokeConfig",
      "output": {
        "shape": "FunctionEventInvokeConfig"
      }
    },
    "PutProvisionedConcurrencyConfig": {
      "documentation": "<p>Adds a provisioned concurrency configuration to a function's alias or version.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2019-09-30/functions/{FunctionName}/provisioned-concurrency",
        "responseCode": 202
      },
      "input": {
        "shape": "PutProvisionedConcurrencyConfigRequest"
      },
      "name": "PutProvisionedConcurrencyConfig",
      "output": {
        "shape": "PutProvisionedConcurrencyConfigResponse"
      }
    },
    "RemoveLayerVersionPermission": {
      "documentation": "<p>Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. For more information, see <a>AddLayerVersionPermission</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "PreconditionFailedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}",
        "responseCode": 204
      },
      "input": {
        "shape": "RemoveLayerVersionPermissionRequest"
      },
      "name": "RemoveLayerVersionPermission"
    },
    "RemovePermission": {
      "documentation": "<p>Revokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement from the output of <a>GetPolicy</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "PreconditionFailedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2015-03-31/functions/{FunctionName}/policy/{StatementId}",
        "responseCode": 204
      },
      "input": {
        "shape": "RemovePermissionRequest"
      },
      "name": "RemovePermission"
    },
    "TagResource": {
      "documentation": "<p>Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2017-03-31/tags/{ARN}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UntagResource": {
      "documentation": "<p>Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/2017-03-31/tags/{ARN}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateAlias": {
      "documentation": "<p>Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "PreconditionFailedException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2015-03-31/functions/{FunctionName}/aliases/{Name}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateAliasRequest"
      },
      "name": "UpdateAlias",
      "output": {
        "shape": "AliasConfiguration"
      }
    },
    "UpdateCodeSigningConfig": {
      "documentation": "<p>Update the code signing configuration. Changes to the code signing configuration take effect the next time a user tries to deploy a code package to the function. </p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2020-04-22/code-signing-configs/{CodeSigningConfigArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateCodeSigningConfigRequest"
      },
      "name": "UpdateCodeSigningConfig",
      "output": {
        "shape": "UpdateCodeSigningConfigResponse"
      }
    },
    "UpdateEventSourceMapping": {
      "documentation": "<p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p> <p>For details about how to configure different event sources, see the following topics. </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\"> Amazon Kinesis</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\"> Amazon SQS</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\"> Amazon MSK</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\"> Apache Kafka</a> </p> </li> </ul> <p>The following error handling options are available only for stream sources (DynamoDB and Kinesis):</p> <ul> <li> <p> <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p> </li> <li> <p> <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p> </li> <li> <p> <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p> </li> <li> <p> <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p> </li> <li> <p> <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p> </li> </ul> <p>For information about which configuration parameters apply to each event source, see the following topics.</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-ddb-params\"> Amazon DynamoDB Streams</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-params\"> Amazon Kinesis</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#services-sqs-params\"> Amazon SQS</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-params\"> Amazon MQ and RabbitMQ</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html#services-msk-parms\"> Amazon MSK</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kafka.html#services-kafka-parms\"> Apache Kafka</a> </p> </li> </ul>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceInUseException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2015-03-31/event-source-mappings/{UUID}",
        "responseCode": 202
      },
      "input": {
        "shape": "UpdateEventSourceMappingRequest"
      },
      "name": "UpdateEventSourceMapping",
      "output": {
        "shape": "EventSourceMappingConfiguration"
      }
    },
    "UpdateFunctionCode": {
      "documentation": "<p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed by a trusted publisher. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">Configuring code signing</a>.</p> <p>If the function's package type is <code>Image</code>, you must specify the code package in <code>ImageUri</code> as the URI of a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a> in the Amazon ECR registry. </p> <p>If the function's package type is <code>Zip</code>, you must specify the deployment package as a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>. Enter the Amazon S3 bucket and key of the code .zip file location. You can also provide the function code inline using the <code>ZipFile</code> field. </p> <p>The code in the deployment package must be compatible with the target instruction set architecture of the function (<code>x86-64</code> or <code>arm64</code>). </p> <p>The function's code is locked when you publish a version. You can't modify the code of a published version, only the unpublished version.</p> <note> <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if you update the image tag to a new image, Lambda does not automatically update the function.</p> </note>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "CodeStorageExceededException"
        },
        {
          "shape": "PreconditionFailedException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "CodeVerificationFailedException"
        },
        {
          "shape": "InvalidCodeSignatureException"
        },
        {
          "shape": "CodeSigningConfigNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2015-03-31/functions/{FunctionName}/code",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateFunctionCodeRequest"
      },
      "name": "UpdateFunctionCode",
      "output": {
        "shape": "FunctionConfiguration"
      }
    },
    "UpdateFunctionConfiguration": {
      "documentation": "<p>Modify the version-specific settings of a Lambda function.</p> <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If your function connects to a VPC, this process can take a minute. During this time, you can't modify the function, but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a> indicate when the update is complete and the function is processing events with the new configuration. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function States</a>.</p> <p>These settings can vary between versions of a function and are locked when you publish a version. You can't modify the configuration of a published version, only the unpublished version.</p> <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions to an account or Amazon Web Services service, use <a>AddPermission</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "PreconditionFailedException"
        },
        {
          "shape": "CodeVerificationFailedException"
        },
        {
          "shape": "InvalidCodeSignatureException"
        },
        {
          "shape": "CodeSigningConfigNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2015-03-31/functions/{FunctionName}/configuration",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateFunctionConfigurationRequest"
      },
      "name": "UpdateFunctionConfiguration",
      "output": {
        "shape": "FunctionConfiguration"
      }
    },
    "UpdateFunctionEventInvokeConfig": {
      "documentation": "<p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p> <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>",
      "errors": [
        {
          "shape": "ServiceException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/2019-09-25/functions/{FunctionName}/event-invoke-config",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateFunctionEventInvokeConfigRequest"
      },
      "name": "UpdateFunctionEventInvokeConfig",
      "output": {
        "shape": "FunctionEventInvokeConfig"
      }
    },
    "UpdateFunctionUrlConfig": {
      "documentation": "<p>Updates the configuration for a Lambda function URL.</p>",
      "errors": [
        {
          "shape": "ResourceConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ServiceException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/2021-10-31/functions/{FunctionName}/url",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateFunctionUrlConfigRequest"
      },
      "name": "UpdateFunctionUrlConfig",
      "output": {
        "shape": "UpdateFunctionUrlConfigResponse"
      }
    }
  },
  "shapes": {
    "AccountLimit": {
      "documentation": "<p>Limits that are related to concurrency and storage. All file and storage sizes are in bytes.</p>",
      "members": {
        "CodeSizeUnzipped": {
          "documentation": "<p>The maximum size of a function's deployment package and layers when they're extracted.</p>",
          "shape": "Long"
        },
        "CodeSizeZipped": {
          "documentation": "<p>The maximum size of a deployment package when it's uploaded directly to Lambda. Use Amazon S3 for larger files.</p>",
          "shape": "Long"
        },
        "ConcurrentExecutions": {
          "documentation": "<p>The maximum number of simultaneous function executions.</p>",
          "shape": "Integer"
        },
        "TotalCodeSize": {
          "documentation": "<p>The amount of storage space that you can use for all deployment packages and layer archives.</p>",
          "shape": "Long"
        },
        "UnreservedConcurrentExecutions": {
          "documentation": "<p>The maximum number of simultaneous function executions, minus the capacity that's reserved for individual functions with <a>PutFunctionConcurrency</a>.</p>",
          "shape": "UnreservedConcurrentExecutions"
        }
      },
      "type": "structure"
    },
    "AccountUsage": {
      "documentation": "<p>The number of functions and amount of storage in use.</p>",
      "members": {
        "FunctionCount": {
          "documentation": "<p>The number of Lambda functions.</p>",
          "shape": "Long"
        },
        "TotalCodeSize": {
          "documentation": "<p>The amount of storage space, in bytes, that's being used by deployment packages and layer archives.</p>",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "Action": {
      "pattern": "(lambda:[*]|lambda:[a-zA-Z]+|[*])",
      "type": "string"
    },
    "AddLayerVersionPermissionRequest": {
      "members": {
        "Action": {
          "documentation": "<p>The API action that grants access to the layer. For example, <code>lambda:GetLayerVersion</code>.</p>",
          "shape": "LayerPermissionAllowedAction"
        },
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "OrganizationId": {
          "documentation": "<p>With the principal set to <code>*</code>, grant permission to all accounts in the specified organization.</p>",
          "shape": "OrganizationId"
        },
        "Principal": {
          "documentation": "<p>An account ID, or <code>*</code> to grant layer usage permission to all accounts in an organization, or all Amazon Web Services accounts (if <code>organizationId</code> is not specified). For the last case, make sure that you really do want all Amazon Web Services accounts to have usage permission to this layer. </p>",
          "shape": "LayerPermissionAllowedPrincipal"
        },
        "RevisionId": {
          "documentation": "<p>Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.</p>",
          "location": "querystring",
          "locationName": "RevisionId",
          "shape": "String"
        },
        "StatementId": {
          "documentation": "<p>An identifier that distinguishes the policy from others on the same layer version.</p>",
          "shape": "StatementId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "LayerVersionNumber"
        }
      },
      "required": [
        "LayerName",
        "VersionNumber",
        "StatementId",
        "Action",
        "Principal"
      ],
      "type": "structure"
    },
    "AddLayerVersionPermissionResponse": {
      "members": {
        "RevisionId": {
          "documentation": "<p>A unique identifier for the current revision of the policy.</p>",
          "shape": "String"
        },
        "Statement": {
          "documentation": "<p>The permission statement.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AddPermissionRequest": {
      "members": {
        "Action": {
          "documentation": "<p>The action that the principal can use on the function. For example, <code>lambda:InvokeFunction</code> or <code>lambda:GetFunction</code>.</p>",
          "shape": "Action"
        },
        "EventSourceToken": {
          "documentation": "<p>For Alexa Smart Home functions, a token that must be supplied by the invoker.</p>",
          "shape": "EventSourceToken"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "FunctionUrlAuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Principal": {
          "documentation": "<p>The Amazon Web Services service or account that invokes the function. If you specify a service, use <code>SourceArn</code> or <code>SourceAccount</code> to limit who can invoke the function through that service.</p>",
          "shape": "Principal"
        },
        "PrincipalOrgID": {
          "documentation": "<p>The identifier for your organization in Organizations. Use this to grant permissions to all the Amazon Web Services accounts under this organization.</p>",
          "shape": "PrincipalOrgID"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to add permissions to a published version of the function.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        },
        "RevisionId": {
          "documentation": "<p>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.</p>",
          "shape": "String"
        },
        "SourceAccount": {
          "documentation": "<p>For Amazon S3, the ID of the account that owns the resource. Use this together with <code>SourceArn</code> to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.</p>",
          "shape": "SourceOwner"
        },
        "SourceArn": {
          "documentation": "<p>For Amazon Web Services services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.</p> <p>Note that Lambda configures the comparison using the <code>StringLike</code> operator.</p>",
          "shape": "Arn"
        },
        "StatementId": {
          "documentation": "<p>A statement identifier that differentiates the statement from others in the same policy.</p>",
          "shape": "StatementId"
        }
      },
      "required": [
        "FunctionName",
        "StatementId",
        "Action",
        "Principal"
      ],
      "type": "structure"
    },
    "AddPermissionResponse": {
      "members": {
        "Statement": {
          "documentation": "<p>The permission statement that's added to the function policy.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AdditionalVersion": {
      "max": 1024,
      "min": 1,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "AdditionalVersionWeights": {
      "key": {
        "shape": "AdditionalVersion"
      },
      "type": "map",
      "value": {
        "shape": "Weight"
      }
    },
    "Alias": {
      "max": 128,
      "min": 1,
      "pattern": "(?!^[0-9]+$)([a-zA-Z0-9-_]+)",
      "type": "string"
    },
    "AliasConfiguration": {
      "documentation": "<p>Provides configuration information about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>",
      "members": {
        "AliasArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the alias.</p>",
          "shape": "FunctionArn"
        },
        "Description": {
          "documentation": "<p>A description of the alias.</p>",
          "shape": "Description"
        },
        "FunctionVersion": {
          "documentation": "<p>The function version that the alias invokes.</p>",
          "shape": "Version"
        },
        "Name": {
          "documentation": "<p>The name of the alias.</p>",
          "shape": "Alias"
        },
        "RevisionId": {
          "documentation": "<p>A unique identifier that changes when you update the alias.</p>",
          "shape": "String"
        },
        "RoutingConfig": {
          "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html\">routing configuration</a> of the alias.</p>",
          "shape": "AliasRoutingConfiguration"
        }
      },
      "type": "structure"
    },
    "AliasList": {
      "member": {
        "shape": "AliasConfiguration"
      },
      "type": "list"
    },
    "AliasRoutingConfiguration": {
      "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-traffic-shifting-using-aliases.html\">traffic-shifting</a> configuration of a Lambda function alias.</p>",
      "members": {
        "AdditionalVersionWeights": {
          "documentation": "<p>The second version, and the percentage of traffic that's routed to it.</p>",
          "shape": "AdditionalVersionWeights"
        }
      },
      "type": "structure"
    },
    "AllowCredentials": {
      "type": "boolean"
    },
    "AllowMethodsList": {
      "max": 6,
      "member": {
        "shape": "Method"
      },
      "type": "list"
    },
    "AllowOriginsList": {
      "max": 100,
      "member": {
        "shape": "Origin"
      },
      "type": "list"
    },
    "AllowedPublishers": {
      "documentation": "<p>List of signing profiles that can sign a code package. </p>",
      "members": {
        "SigningProfileVersionArns": {
          "documentation": "<p>The Amazon Resource Name (ARN) for each of the signing profiles. A signing profile defines a trusted user who can sign a code package. </p>",
          "shape": "SigningProfileVersionArns"
        }
      },
      "required": [
        "SigningProfileVersionArns"
      ],
      "type": "structure"
    },
    "AmazonManagedKafkaEventSourceConfig": {
      "documentation": "<p>Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.</p>",
      "members": {
        "ConsumerGroupId": {
          "documentation": "<p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a>services-msk-consumer-group-id</a>.</p>",
          "shape": "URI"
        }
      },
      "type": "structure"
    },
    "Architecture": {
      "enum": [
        "x86_64",
        "arm64"
      ],
      "type": "string"
    },
    "ArchitecturesList": {
      "max": 1,
      "member": {
        "shape": "Architecture"
      },
      "min": 1,
      "type": "list"
    },
    "Arn": {
      "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "type": "string"
    },
    "BatchSize": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "BisectBatchOnFunctionError": {
      "type": "boolean"
    },
    "Blob": {
      "sensitive": true,
      "type": "blob"
    },
    "BlobStream": {
      "streaming": true,
      "type": "blob"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CodeSigningConfig": {
      "documentation": "<p>Details about a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html\">Code signing configuration</a>. </p>",
      "members": {
        "AllowedPublishers": {
          "documentation": "<p>List of allowed publishers.</p>",
          "shape": "AllowedPublishers"
        },
        "CodeSigningConfigArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Code signing configuration.</p>",
          "shape": "CodeSigningConfigArn"
        },
        "CodeSigningConfigId": {
          "documentation": "<p>Unique identifer for the Code signing configuration.</p>",
          "shape": "CodeSigningConfigId"
        },
        "CodeSigningPolicies": {
          "documentation": "<p>The code signing policy controls the validation failure action for signature mismatch or expiry.</p>",
          "shape": "CodeSigningPolicies"
        },
        "Description": {
          "documentation": "<p>Code signing configuration description.</p>",
          "shape": "Description"
        },
        "LastModified": {
          "documentation": "<p>The date and time that the Code signing configuration was last modified, in ISO-8601 format (YYYY-MM-DDThh:mm:ss.sTZD). </p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "CodeSigningConfigId",
        "CodeSigningConfigArn",
        "AllowedPublishers",
        "CodeSigningPolicies",
        "LastModified"
      ],
      "type": "structure"
    },
    "CodeSigningConfigArn": {
      "max": 200,
      "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:code-signing-config:csc-[a-z0-9]{17}",
      "type": "string"
    },
    "CodeSigningConfigId": {
      "pattern": "csc-[a-zA-Z0-9-_\\.]{17}",
      "type": "string"
    },
    "CodeSigningConfigList": {
      "member": {
        "shape": "CodeSigningConfig"
      },
      "type": "list"
    },
    "CodeSigningConfigNotFoundException": {
      "documentation": "<p>The specified code signing configuration does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CodeSigningPolicies": {
      "documentation": "<p>Code signing configuration <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-codesigning.html#config-codesigning-policies\">policies</a> specify the validation failure action for signature mismatch or expiry.</p>",
      "members": {
        "UntrustedArtifactOnDeployment": {
          "documentation": "<p>Code signing configuration policy for deployment validation failure. If you set the policy to <code>Enforce</code>, Lambda blocks the deployment request if signature validation checks fail. If you set the policy to <code>Warn</code>, Lambda allows the deployment and creates a CloudWatch log. </p> <p>Default value: <code>Warn</code> </p>",
          "shape": "CodeSigningPolicy"
        }
      },
      "type": "structure"
    },
    "CodeSigningPolicy": {
      "enum": [
        "Warn",
        "Enforce"
      ],
      "type": "string"
    },
    "CodeStorageExceededException": {
      "documentation": "<p>You have exceeded your maximum total code size per account. <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Learn more</a> </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CodeVerificationFailedException": {
      "documentation": "<p>The code signature failed one or more of the validation checks for signature mismatch or expiry, and the code signing policy is set to ENFORCE. Lambda blocks the deployment. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CompatibleArchitectures": {
      "max": 2,
      "member": {
        "shape": "Architecture"
      },
      "type": "list"
    },
    "CompatibleRuntimes": {
      "max": 15,
      "member": {
        "shape": "Runtime"
      },
      "type": "list"
    },
    "Concurrency": {
      "members": {
        "ReservedConcurrentExecutions": {
          "documentation": "<p>The number of concurrent executions that are reserved for this function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-concurrency.html\">Managing Concurrency</a>.</p>",
          "shape": "ReservedConcurrentExecutions"
        }
      },
      "type": "structure"
    },
    "Cors": {
      "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.</p>",
      "members": {
        "AllowCredentials": {
          "documentation": "<p>Whether to allow cookies or other credentials in requests to your function URL. The default is <code>false</code>.</p>",
          "shape": "AllowCredentials"
        },
        "AllowHeaders": {
          "documentation": "<p>The HTTP headers that origins can include in requests to your function URL. For example: <code>Date</code>, <code>Keep-Alive</code>, <code>X-Custom-Header</code>.</p>",
          "shape": "HeadersList"
        },
        "AllowMethods": {
          "documentation": "<p>The HTTP methods that are allowed when calling your function URL. For example: <code>GET</code>, <code>POST</code>, <code>DELETE</code>, or the wildcard character (<code>*</code>).</p>",
          "shape": "AllowMethodsList"
        },
        "AllowOrigins": {
          "documentation": "<p>The origins that can access your function URL. You can list any number of specific origins, separated by a comma. For example: <code>https://www.example.com</code>, <code>http://localhost:60905</code>.</p> <p>Alternatively, you can grant access to all origins using the wildcard character (<code>*</code>).</p>",
          "shape": "AllowOriginsList"
        },
        "ExposeHeaders": {
          "documentation": "<p>The HTTP headers in your function response that you want to expose to origins that call your function URL. For example: <code>Date</code>, <code>Keep-Alive</code>, <code>X-Custom-Header</code>.</p>",
          "shape": "HeadersList"
        },
        "MaxAge": {
          "documentation": "<p>The maximum amount of time, in seconds, that web browsers can cache results of a preflight request. By default, this is set to <code>0</code>, which means that the browser doesn't cache results.</p>",
          "shape": "MaxAge"
        }
      },
      "type": "structure"
    },
    "CreateAliasRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the alias.</p>",
          "shape": "Description"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "FunctionVersion": {
          "documentation": "<p>The function version that the alias invokes.</p>",
          "shape": "Version"
        },
        "Name": {
          "documentation": "<p>The name of the alias.</p>",
          "shape": "Alias"
        },
        "RoutingConfig": {
          "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html#configuring-alias-routing\">routing configuration</a> of the alias.</p>",
          "shape": "AliasRoutingConfiguration"
        }
      },
      "required": [
        "FunctionName",
        "Name",
        "FunctionVersion"
      ],
      "type": "structure"
    },
    "CreateCodeSigningConfigRequest": {
      "members": {
        "AllowedPublishers": {
          "documentation": "<p>Signing profiles for this code signing configuration.</p>",
          "shape": "AllowedPublishers"
        },
        "CodeSigningPolicies": {
          "documentation": "<p>The code signing policies define the actions to take if the validation checks fail. </p>",
          "shape": "CodeSigningPolicies"
        },
        "Description": {
          "documentation": "<p>Descriptive name for this code signing configuration.</p>",
          "shape": "Description"
        }
      },
      "required": [
        "AllowedPublishers"
      ],
      "type": "structure"
    },
    "CreateCodeSigningConfigResponse": {
      "members": {
        "CodeSigningConfig": {
          "documentation": "<p>The code signing configuration.</p>",
          "shape": "CodeSigningConfig"
        }
      },
      "required": [
        "CodeSigningConfig"
      ],
      "type": "structure"
    },
    "CreateEventSourceMappingRequest": {
      "members": {
        "AmazonManagedKafkaEventSourceConfig": {
          "documentation": "<p>Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.</p>",
          "shape": "AmazonManagedKafkaEventSourceConfig"
        },
        "BatchSize": {
          "documentation": "<p>The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Self-managed Apache Kafka</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon MQ (ActiveMQ and RabbitMQ)</b> - Default 100. Max 10,000.</p> </li> </ul>",
          "shape": "BatchSize"
        },
        "BisectBatchOnFunctionError": {
          "documentation": "<p>(Streams only) If the function returns an error, split the batch in two and retry.</p>",
          "shape": "BisectBatchOnFunctionError"
        },
        "DestinationConfig": {
          "documentation": "<p>(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>",
          "shape": "DestinationConfig"
        },
        "Enabled": {
          "documentation": "<p>When true, the event source mapping is active. When false, Lambda pauses polling and invocation.</p> <p>Default: True</p>",
          "shape": "Enabled"
        },
        "EventSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the cluster.</p> </li> </ul>",
          "shape": "Arn"
        },
        "FilterCriteria": {
          "documentation": "<p>(Streams and Amazon SQS) An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html\">Lambda event filtering</a>.</p>",
          "shape": "FilterCriteria"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>",
          "shape": "FunctionName"
        },
        "FunctionResponseTypes": {
          "documentation": "<p>(Streams and Amazon SQS) A list of current response type enums applied to the event source mapping.</p>",
          "shape": "FunctionResponseTypeList"
        },
        "MaximumBatchingWindowInSeconds": {
          "documentation": "<p>(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.</p> <p>Default: 0</p> <p>Related setting: When you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>",
          "shape": "MaximumBatchingWindowInSeconds"
        },
        "MaximumRecordAgeInSeconds": {
          "documentation": "<p>(Streams only) Discard records older than the specified age. The default value is infinite (-1).</p>",
          "shape": "MaximumRecordAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>(Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p>",
          "shape": "MaximumRetryAttemptsEventSourceMapping"
        },
        "ParallelizationFactor": {
          "documentation": "<p>(Streams only) The number of batches to process from each shard concurrently.</p>",
          "shape": "ParallelizationFactor"
        },
        "Queues": {
          "documentation": "<p> (MQ) The name of the Amazon MQ broker destination queue to consume. </p>",
          "shape": "Queues"
        },
        "SelfManagedEventSource": {
          "documentation": "<p>The self-managed Apache Kafka cluster to receive records from.</p>",
          "shape": "SelfManagedEventSource"
        },
        "SelfManagedKafkaEventSourceConfig": {
          "documentation": "<p>Specific configuration settings for a self-managed Apache Kafka event source.</p>",
          "shape": "SelfManagedKafkaEventSourceConfig"
        },
        "SourceAccessConfigurations": {
          "documentation": "<p>An array of authentication protocols or VPC components required to secure your event source.</p>",
          "shape": "SourceAccessConfigurations"
        },
        "StartingPosition": {
          "documentation": "<p>The position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources. <code>AT_TIMESTAMP</code> is supported only for Amazon Kinesis streams.</p>",
          "shape": "EventSourcePosition"
        },
        "StartingPositionTimestamp": {
          "documentation": "<p>With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading.</p>",
          "shape": "Date"
        },
        "Topics": {
          "documentation": "<p>The name of the Kafka topic.</p>",
          "shape": "Topics"
        },
        "TumblingWindowInSeconds": {
          "documentation": "<p>(Streams only) The duration in seconds of a processing window. The range is between 1 second and 900 seconds.</p>",
          "shape": "TumblingWindowInSeconds"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "CreateFunctionRequest": {
      "members": {
        "Architectures": {
          "documentation": "<p>The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.</p>",
          "shape": "ArchitecturesList"
        },
        "Code": {
          "documentation": "<p>The code for the function.</p>",
          "shape": "FunctionCode"
        },
        "CodeSigningConfigArn": {
          "documentation": "<p>To enable code signing for this function, specify the ARN of a code-signing configuration. A code-signing configuration includes a set of signing profiles, which define the trusted publishers for this function.</p>",
          "shape": "CodeSigningConfigArn"
        },
        "DeadLetterConfig": {
          "documentation": "<p>A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">Dead Letter Queues</a>.</p>",
          "shape": "DeadLetterConfig"
        },
        "Description": {
          "documentation": "<p>A description of the function.</p>",
          "shape": "Description"
        },
        "Environment": {
          "documentation": "<p>Environment variables that are accessible from function code during execution.</p>",
          "shape": "Environment"
        },
        "EphemeralStorage": {
          "documentation": "<p>The size of the function\u2019s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.</p>",
          "shape": "EphemeralStorage"
        },
        "FileSystemConfigs": {
          "documentation": "<p>Connection settings for an Amazon EFS file system.</p>",
          "shape": "FileSystemConfigList"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "shape": "FunctionName"
        },
        "Handler": {
          "documentation": "<p>The name of the method within your code that Lambda calls to execute your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html\">Programming Model</a>.</p>",
          "shape": "Handler"
        },
        "ImageConfig": {
          "documentation": "<p>Container image <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-images.html#configuration-images-settings\">configuration values</a> that override the values in the container image Dockerfile.</p>",
          "shape": "ImageConfig"
        },
        "KMSKeyArn": {
          "documentation": "<p>The ARN of the Amazon Web Services Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.</p>",
          "shape": "KMSKeyArn"
        },
        "Layers": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.</p>",
          "shape": "LayerList"
        },
        "MemorySize": {
          "documentation": "<p>The amount of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-memory.html\">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.</p>",
          "shape": "MemorySize"
        },
        "PackageType": {
          "documentation": "<p>The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for ZIP archive.</p>",
          "shape": "PackageType"
        },
        "Publish": {
          "documentation": "<p>Set to true to publish the first version of the function during creation.</p>",
          "shape": "Boolean"
        },
        "Role": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the function's execution role.</p>",
          "shape": "RoleArn"
        },
        "Runtime": {
          "documentation": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>. Runtime is required if the deployment package is a .zip file archive. </p>",
          "shape": "Runtime"
        },
        "Tags": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to apply to the function.</p>",
          "shape": "Tags"
        },
        "Timeout": {
          "documentation": "<p>The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\">Lambda execution environment</a>.</p>",
          "shape": "Timeout"
        },
        "TracingConfig": {
          "documentation": "<p>Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\">X-Ray</a>.</p>",
          "shape": "TracingConfig"
        },
        "VpcConfig": {
          "documentation": "<p>For network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>",
          "shape": "VpcConfig"
        }
      },
      "required": [
        "FunctionName",
        "Role",
        "Code"
      ],
      "type": "structure"
    },
    "CreateFunctionUrlConfigRequest": {
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "FunctionUrlQualifier"
        }
      },
      "required": [
        "FunctionName",
        "AuthType"
      ],
      "type": "structure"
    },
    "CreateFunctionUrlConfigResponse": {
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "CreationTime": {
          "documentation": "<p>When the function URL was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your function.</p>",
          "shape": "FunctionArn"
        },
        "FunctionUrl": {
          "documentation": "<p>The HTTP URL endpoint for your function.</p>",
          "shape": "FunctionUrl"
        }
      },
      "required": [
        "FunctionUrl",
        "FunctionArn",
        "AuthType",
        "CreationTime"
      ],
      "type": "structure"
    },
    "Date": {
      "type": "timestamp"
    },
    "DeadLetterConfig": {
      "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a> for failed asynchronous invocations.</p>",
      "members": {
        "TargetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.</p>",
          "shape": "ResourceArn"
        }
      },
      "type": "structure"
    },
    "DeleteAliasRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Name": {
          "documentation": "<p>The name of the alias.</p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Alias"
        }
      },
      "required": [
        "FunctionName",
        "Name"
      ],
      "type": "structure"
    },
    "DeleteCodeSigningConfigRequest": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "location": "uri",
          "locationName": "CodeSigningConfigArn",
          "shape": "CodeSigningConfigArn"
        }
      },
      "required": [
        "CodeSigningConfigArn"
      ],
      "type": "structure"
    },
    "DeleteCodeSigningConfigResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteEventSourceMappingRequest": {
      "members": {
        "UUID": {
          "documentation": "<p>The identifier of the event source mapping.</p>",
          "location": "uri",
          "locationName": "UUID",
          "shape": "String"
        }
      },
      "required": [
        "UUID"
      ],
      "type": "structure"
    },
    "DeleteFunctionCodeSigningConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "DeleteFunctionConcurrencyRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "DeleteFunctionEventInvokeConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>A version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "DeleteFunctionRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function or version.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:1</code> (with version).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version to delete. You can't delete a version that's referenced by an alias.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "DeleteFunctionUrlConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "FunctionUrlQualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "DeleteLayerVersionRequest": {
      "members": {
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "VersionNumber": {
          "documentation": "<p>The version number.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "LayerVersionNumber"
        }
      },
      "required": [
        "LayerName",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "DeleteProvisionedConcurrencyConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName",
        "Qualifier"
      ],
      "type": "structure"
    },
    "Description": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "DestinationArn": {
      "max": 350,
      "min": 0,
      "pattern": "^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "type": "string"
    },
    "DestinationConfig": {
      "documentation": "<p>A configuration object that specifies the destination of an event after Lambda processes it.</p>",
      "members": {
        "OnFailure": {
          "documentation": "<p>The destination configuration for failed invocations.</p>",
          "shape": "OnFailure"
        },
        "OnSuccess": {
          "documentation": "<p>The destination configuration for successful invocations.</p>",
          "shape": "OnSuccess"
        }
      },
      "type": "structure"
    },
    "EC2AccessDeniedException": {
      "documentation": "<p>Need additional permissions to configure VPC settings.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EC2ThrottledException": {
      "documentation": "<p>Lambda was throttled by Amazon EC2 during Lambda function initialization using the execution role provided for the Lambda function.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EC2UnexpectedException": {
      "documentation": "<p>Lambda received an unexpected EC2 client exception while setting up for the Lambda function.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "EC2ErrorCode": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EFSIOException": {
      "documentation": "<p>An error occurred when reading from or writing to a connected file system.</p>",
      "error": {
        "httpStatusCode": 410
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EFSMountConnectivityException": {
      "documentation": "<p>The function couldn't make a network connection to the configured file system.</p>",
      "error": {
        "httpStatusCode": 408
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EFSMountFailureException": {
      "documentation": "<p>The function couldn't mount the configured file system due to a permission or configuration issue.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EFSMountTimeoutException": {
      "documentation": "<p>The function was able to make a network connection to the configured file system, but the mount operation timed out.</p>",
      "error": {
        "httpStatusCode": 408
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ENILimitReachedException": {
      "documentation": "<p>Lambda was not able to create an elastic network interface in the VPC, specified as part of Lambda function configuration, because the limit for network interfaces has been reached.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Enabled": {
      "type": "boolean"
    },
    "EndPointType": {
      "enum": [
        "KAFKA_BOOTSTRAP_SERVERS"
      ],
      "type": "string"
    },
    "Endpoint": {
      "max": 300,
      "min": 1,
      "pattern": "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]{1,5}",
      "type": "string"
    },
    "EndpointLists": {
      "max": 10,
      "member": {
        "shape": "Endpoint"
      },
      "min": 1,
      "type": "list"
    },
    "Endpoints": {
      "key": {
        "shape": "EndPointType"
      },
      "max": 2,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "EndpointLists"
      }
    },
    "Environment": {
      "documentation": "<p>A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration. </p>",
      "members": {
        "Variables": {
          "documentation": "<p>Environment variable key-value pairs. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\">Using Lambda environment variables</a>.</p>",
          "shape": "EnvironmentVariables"
        }
      },
      "type": "structure"
    },
    "EnvironmentError": {
      "documentation": "<p>Error messages for environment variables that couldn't be applied.</p>",
      "members": {
        "ErrorCode": {
          "documentation": "<p>The error code.</p>",
          "shape": "String"
        },
        "Message": {
          "documentation": "<p>The error message.</p>",
          "shape": "SensitiveString"
        }
      },
      "type": "structure"
    },
    "EnvironmentResponse": {
      "documentation": "<p>The results of an operation to update or read environment variables. If the operation is successful, the response contains the environment variables. If it failed, the response contains details about the error.</p>",
      "members": {
        "Error": {
          "documentation": "<p>Error messages for environment variables that couldn't be applied.</p>",
          "shape": "EnvironmentError"
        },
        "Variables": {
          "documentation": "<p>Environment variable key-value pairs.</p>",
          "shape": "EnvironmentVariables"
        }
      },
      "type": "structure"
    },
    "EnvironmentVariableName": {
      "pattern": "[a-zA-Z]([a-zA-Z0-9_])+",
      "sensitive": true,
      "type": "string"
    },
    "EnvironmentVariableValue": {
      "sensitive": true,
      "type": "string"
    },
    "EnvironmentVariables": {
      "key": {
        "shape": "EnvironmentVariableName"
      },
      "sensitive": true,
      "type": "map",
      "value": {
        "shape": "EnvironmentVariableValue"
      }
    },
    "EphemeralStorage": {
      "documentation": "<p>The size of the function\u2019s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.</p>",
      "members": {
        "Size": {
          "documentation": "<p>The size of the function\u2019s /tmp directory.</p>",
          "shape": "EphemeralStorageSize"
        }
      },
      "required": [
        "Size"
      ],
      "type": "structure"
    },
    "EphemeralStorageSize": {
      "max": 10240,
      "min": 512,
      "type": "integer"
    },
    "EventSourceMappingConfiguration": {
      "documentation": "<p>A mapping between an Amazon Web Services resource and a Lambda function. For details, see <a>CreateEventSourceMapping</a>.</p>",
      "members": {
        "AmazonManagedKafkaEventSourceConfig": {
          "documentation": "<p>Specific configuration settings for an Amazon Managed Streaming for Apache Kafka (Amazon MSK) event source.</p>",
          "shape": "AmazonManagedKafkaEventSourceConfig"
        },
        "BatchSize": {
          "documentation": "<p>The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).</p> <p>Default value: Varies by service. For Amazon SQS, the default is 10. For all other services, the default is 100.</p> <p>Related setting: When you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>",
          "shape": "BatchSize"
        },
        "BisectBatchOnFunctionError": {
          "documentation": "<p>(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.</p>",
          "shape": "BisectBatchOnFunctionError"
        },
        "DestinationConfig": {
          "documentation": "<p>(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>",
          "shape": "DestinationConfig"
        },
        "EventSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p>",
          "shape": "Arn"
        },
        "FilterCriteria": {
          "documentation": "<p>(Streams and Amazon SQS) An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html\">Lambda event filtering</a>.</p>",
          "shape": "FilterCriteria"
        },
        "FunctionArn": {
          "documentation": "<p>The ARN of the Lambda function.</p>",
          "shape": "FunctionArn"
        },
        "FunctionResponseTypes": {
          "documentation": "<p>(Streams and Amazon SQS) A list of current response type enums applied to the event source mapping.</p>",
          "shape": "FunctionResponseTypeList"
        },
        "LastModified": {
          "documentation": "<p>The date that the event source mapping was last updated or that its state changed.</p>",
          "shape": "Date"
        },
        "LastProcessingResult": {
          "documentation": "<p>The result of the last Lambda invocation of your function.</p>",
          "shape": "String"
        },
        "MaximumBatchingWindowInSeconds": {
          "documentation": "<p>(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.</p> <p>Default: 0</p> <p>Related setting: When you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>",
          "shape": "MaximumBatchingWindowInSeconds"
        },
        "MaximumRecordAgeInSeconds": {
          "documentation": "<p>(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records. </p>",
          "shape": "MaximumRecordAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.</p>",
          "shape": "MaximumRetryAttemptsEventSourceMapping"
        },
        "ParallelizationFactor": {
          "documentation": "<p>(Streams only) The number of batches to process concurrently from each shard. The default value is 1.</p>",
          "shape": "ParallelizationFactor"
        },
        "Queues": {
          "documentation": "<p> (Amazon MQ) The name of the Amazon MQ broker destination queue to consume.</p>",
          "shape": "Queues"
        },
        "SelfManagedEventSource": {
          "documentation": "<p>The self-managed Apache Kafka cluster for your event source.</p>",
          "shape": "SelfManagedEventSource"
        },
        "SelfManagedKafkaEventSourceConfig": {
          "documentation": "<p>Specific configuration settings for a self-managed Apache Kafka event source.</p>",
          "shape": "SelfManagedKafkaEventSourceConfig"
        },
        "SourceAccessConfigurations": {
          "documentation": "<p>An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.</p>",
          "shape": "SourceAccessConfigurations"
        },
        "StartingPosition": {
          "documentation": "<p>The position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. <code>AT_TIMESTAMP</code> is supported only for Amazon Kinesis streams.</p>",
          "shape": "EventSourcePosition"
        },
        "StartingPositionTimestamp": {
          "documentation": "<p>With <code>StartingPosition</code> set to <code>AT_TIMESTAMP</code>, the time from which to start reading.</p>",
          "shape": "Date"
        },
        "State": {
          "documentation": "<p>The state of the event source mapping. It can be one of the following: <code>Creating</code>, <code>Enabling</code>, <code>Enabled</code>, <code>Disabling</code>, <code>Disabled</code>, <code>Updating</code>, or <code>Deleting</code>.</p>",
          "shape": "String"
        },
        "StateTransitionReason": {
          "documentation": "<p>Indicates whether a user or Lambda made the last change to the event source mapping.</p>",
          "shape": "String"
        },
        "Topics": {
          "documentation": "<p>The name of the Kafka topic.</p>",
          "shape": "Topics"
        },
        "TumblingWindowInSeconds": {
          "documentation": "<p>(Streams only) The duration in seconds of a processing window. The range is 1\u2013900 seconds.</p>",
          "shape": "TumblingWindowInSeconds"
        },
        "UUID": {
          "documentation": "<p>The identifier of the event source mapping.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "EventSourceMappingsList": {
      "member": {
        "shape": "EventSourceMappingConfiguration"
      },
      "type": "list"
    },
    "EventSourcePosition": {
      "enum": [
        "TRIM_HORIZON",
        "LATEST",
        "AT_TIMESTAMP"
      ],
      "type": "string"
    },
    "EventSourceToken": {
      "max": 256,
      "min": 0,
      "pattern": "[a-zA-Z0-9._\\-]+",
      "type": "string"
    },
    "FileSystemArn": {
      "max": 200,
      "pattern": "arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}",
      "type": "string"
    },
    "FileSystemConfig": {
      "documentation": "<p>Details about the connection between a Lambda function and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html\">Amazon EFS file system</a>.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.</p>",
          "shape": "FileSystemArn"
        },
        "LocalMountPath": {
          "documentation": "<p>The path where the function can access the file system, starting with <code>/mnt/</code>.</p>",
          "shape": "LocalMountPath"
        }
      },
      "required": [
        "Arn",
        "LocalMountPath"
      ],
      "type": "structure"
    },
    "FileSystemConfigList": {
      "max": 1,
      "member": {
        "shape": "FileSystemConfig"
      },
      "type": "list"
    },
    "Filter": {
      "documentation": "<p> A structure within a <code>FilterCriteria</code> object that defines an event filtering pattern. </p>",
      "members": {
        "Pattern": {
          "documentation": "<p> A filter pattern. For more information on the syntax of a filter pattern, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html#filtering-syntax\"> Filter rule syntax</a>. </p>",
          "shape": "Pattern"
        }
      },
      "type": "structure"
    },
    "FilterCriteria": {
      "documentation": "<p> An object that contains the filters for an event source. </p>",
      "members": {
        "Filters": {
          "documentation": "<p> A list of filters. </p>",
          "shape": "FilterList"
        }
      },
      "type": "structure"
    },
    "FilterList": {
      "member": {
        "shape": "Filter"
      },
      "type": "list"
    },
    "FunctionArn": {
      "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "type": "string"
    },
    "FunctionArnList": {
      "member": {
        "shape": "FunctionArn"
      },
      "type": "list"
    },
    "FunctionCode": {
      "documentation": "<p>The code for the Lambda function. You can specify either an object in Amazon S3, upload a .zip file archive deployment package directly, or specify the URI of a container image.</p>",
      "members": {
        "ImageUri": {
          "documentation": "<p>URI of a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a> in the Amazon ECR registry.</p>",
          "shape": "String"
        },
        "S3Bucket": {
          "documentation": "<p>An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account.</p>",
          "shape": "S3Bucket"
        },
        "S3Key": {
          "documentation": "<p>The Amazon S3 key of the deployment package.</p>",
          "shape": "S3Key"
        },
        "S3ObjectVersion": {
          "documentation": "<p>For versioned objects, the version of the deployment package object to use.</p>",
          "shape": "S3ObjectVersion"
        },
        "ZipFile": {
          "documentation": "<p>The base64-encoded contents of the deployment package. Amazon Web Services SDK and Amazon Web Services CLI clients handle the encoding for you.</p>",
          "shape": "Blob"
        }
      },
      "type": "structure"
    },
    "FunctionCodeLocation": {
      "documentation": "<p>Details about a function's deployment package.</p>",
      "members": {
        "ImageUri": {
          "documentation": "<p>URI of a container image in the Amazon ECR registry.</p>",
          "shape": "String"
        },
        "Location": {
          "documentation": "<p>A presigned URL that you can use to download the deployment package.</p>",
          "shape": "String"
        },
        "RepositoryType": {
          "documentation": "<p>The service that's hosting the file.</p>",
          "shape": "String"
        },
        "ResolvedImageUri": {
          "documentation": "<p>The resolved URI for the image.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "FunctionConfiguration": {
      "documentation": "<p>Details about a function's configuration.</p>",
      "members": {
        "Architectures": {
          "documentation": "<p>The instruction set architecture that the function supports. Architecture is a string array with one of the valid values. The default architecture value is <code>x86_64</code>.</p>",
          "shape": "ArchitecturesList"
        },
        "CodeSha256": {
          "documentation": "<p>The SHA256 hash of the function's deployment package.</p>",
          "shape": "String"
        },
        "CodeSize": {
          "documentation": "<p>The size of the function's deployment package, in bytes.</p>",
          "shape": "Long"
        },
        "DeadLetterConfig": {
          "documentation": "<p>The function's dead letter queue.</p>",
          "shape": "DeadLetterConfig"
        },
        "Description": {
          "documentation": "<p>The function's description.</p>",
          "shape": "Description"
        },
        "Environment": {
          "documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html\">environment variables</a>.</p>",
          "shape": "EnvironmentResponse"
        },
        "EphemeralStorage": {
          "documentation": "<p>The size of the function\u2019s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.</p>",
          "shape": "EphemeralStorage"
        },
        "FileSystemConfigs": {
          "documentation": "<p>Connection settings for an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-filesystem.html\">Amazon EFS file system</a>.</p>",
          "shape": "FileSystemConfigList"
        },
        "FunctionArn": {
          "documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
          "shape": "NameSpacedFunctionArn"
        },
        "FunctionName": {
          "documentation": "<p>The name of the function.</p>",
          "shape": "NamespacedFunctionName"
        },
        "Handler": {
          "documentation": "<p>The function that Lambda calls to begin executing your function.</p>",
          "shape": "Handler"
        },
        "ImageConfigResponse": {
          "documentation": "<p>The function's image configuration values.</p>",
          "shape": "ImageConfigResponse"
        },
        "KMSKeyArn": {
          "documentation": "<p>The KMS key that's used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed key.</p>",
          "shape": "KMSKeyArn"
        },
        "LastModified": {
          "documentation": "<p>The date and time that the function was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "LastUpdateStatus": {
          "documentation": "<p>The status of the last update that was performed on the function. This is first set to <code>Successful</code> after function creation completes.</p>",
          "shape": "LastUpdateStatus"
        },
        "LastUpdateStatusReason": {
          "documentation": "<p>The reason for the last update that was performed on the function.</p>",
          "shape": "LastUpdateStatusReason"
        },
        "LastUpdateStatusReasonCode": {
          "documentation": "<p>The reason code for the last update that was performed on the function.</p>",
          "shape": "LastUpdateStatusReasonCode"
        },
        "Layers": {
          "documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\"> layers</a>.</p>",
          "shape": "LayersReferenceList"
        },
        "MasterArn": {
          "documentation": "<p>For Lambda@Edge functions, the ARN of the main function.</p>",
          "shape": "FunctionArn"
        },
        "MemorySize": {
          "documentation": "<p>The amount of memory available to the function at runtime. </p>",
          "shape": "MemorySize"
        },
        "PackageType": {
          "documentation": "<p>The type of deployment package. Set to <code>Image</code> for container image and set <code>Zip</code> for .zip file archive.</p>",
          "shape": "PackageType"
        },
        "RevisionId": {
          "documentation": "<p>The latest updated revision of the function or alias.</p>",
          "shape": "String"
        },
        "Role": {
          "documentation": "<p>The function's execution role.</p>",
          "shape": "RoleArn"
        },
        "Runtime": {
          "documentation": "<p>The runtime environment for the Lambda function.</p>",
          "shape": "Runtime"
        },
        "SigningJobArn": {
          "documentation": "<p>The ARN of the signing job.</p>",
          "shape": "Arn"
        },
        "SigningProfileVersionArn": {
          "documentation": "<p>The ARN of the signing profile version.</p>",
          "shape": "Arn"
        },
        "State": {
          "documentation": "<p>The current state of the function. When the state is <code>Inactive</code>, you can reactivate the function by invoking it.</p>",
          "shape": "State"
        },
        "StateReason": {
          "documentation": "<p>The reason for the function's current state.</p>",
          "shape": "StateReason"
        },
        "StateReasonCode": {
          "documentation": "<p>The reason code for the function's current state. When the code is <code>Creating</code>, you can't invoke or modify the function.</p>",
          "shape": "StateReasonCode"
        },
        "Timeout": {
          "documentation": "<p>The amount of time in seconds that Lambda allows a function to run before stopping it.</p>",
          "shape": "Timeout"
        },
        "TracingConfig": {
          "documentation": "<p>The function's X-Ray tracing configuration.</p>",
          "shape": "TracingConfigResponse"
        },
        "Version": {
          "documentation": "<p>The version of the Lambda function.</p>",
          "shape": "Version"
        },
        "VpcConfig": {
          "documentation": "<p>The function's networking configuration.</p>",
          "shape": "VpcConfigResponse"
        }
      },
      "type": "structure"
    },
    "FunctionEventInvokeConfig": {
      "members": {
        "DestinationConfig": {
          "documentation": "<p>A destination for events after they have been sent to a function for processing.</p> <p class=\"title\"> <b>Destinations</b> </p> <ul> <li> <p> <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p> </li> <li> <p> <b>Queue</b> - The ARN of an SQS queue.</p> </li> <li> <p> <b>Topic</b> - The ARN of an SNS topic.</p> </li> <li> <p> <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p> </li> </ul>",
          "shape": "DestinationConfig"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the function.</p>",
          "shape": "FunctionArn"
        },
        "LastModified": {
          "documentation": "<p>The date and time that the configuration was last updated.</p>",
          "shape": "Date"
        },
        "MaximumEventAgeInSeconds": {
          "documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>",
          "shape": "MaximumEventAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>The maximum number of times to retry when the function returns an error.</p>",
          "shape": "MaximumRetryAttempts"
        }
      },
      "type": "structure"
    },
    "FunctionEventInvokeConfigList": {
      "member": {
        "shape": "FunctionEventInvokeConfig"
      },
      "type": "list"
    },
    "FunctionList": {
      "member": {
        "shape": "FunctionConfiguration"
      },
      "type": "list"
    },
    "FunctionName": {
      "max": 140,
      "min": 1,
      "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "type": "string"
    },
    "FunctionResponseType": {
      "enum": [
        "ReportBatchItemFailures"
      ],
      "type": "string"
    },
    "FunctionResponseTypeList": {
      "max": 1,
      "member": {
        "shape": "FunctionResponseType"
      },
      "min": 0,
      "type": "list"
    },
    "FunctionUrl": {
      "max": 100,
      "min": 40,
      "type": "string"
    },
    "FunctionUrlAuthType": {
      "enum": [
        "NONE",
        "AWS_IAM"
      ],
      "type": "string"
    },
    "FunctionUrlConfig": {
      "documentation": "<p>Details about a Lambda function URL.</p>",
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "CreationTime": {
          "documentation": "<p>When the function URL was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your function.</p>",
          "shape": "FunctionArn"
        },
        "FunctionUrl": {
          "documentation": "<p>The HTTP URL endpoint for your function.</p>",
          "shape": "FunctionUrl"
        },
        "LastModifiedTime": {
          "documentation": "<p>When the function URL configuration was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "FunctionUrl",
        "FunctionArn",
        "CreationTime",
        "LastModifiedTime",
        "AuthType"
      ],
      "type": "structure"
    },
    "FunctionUrlConfigList": {
      "member": {
        "shape": "FunctionUrlConfig"
      },
      "type": "list"
    },
    "FunctionUrlQualifier": {
      "max": 128,
      "min": 1,
      "pattern": "(^\\$LATEST$)|((?!^[0-9]+$)([a-zA-Z0-9-_]+))",
      "type": "string"
    },
    "FunctionVersion": {
      "enum": [
        "ALL"
      ],
      "type": "string"
    },
    "GetAccountSettingsRequest": {
      "members": {},
      "type": "structure"
    },
    "GetAccountSettingsResponse": {
      "members": {
        "AccountLimit": {
          "documentation": "<p>Limits that are related to concurrency and code storage.</p>",
          "shape": "AccountLimit"
        },
        "AccountUsage": {
          "documentation": "<p>The number of functions and amount of storage in use.</p>",
          "shape": "AccountUsage"
        }
      },
      "type": "structure"
    },
    "GetAliasRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Name": {
          "documentation": "<p>The name of the alias.</p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Alias"
        }
      },
      "required": [
        "FunctionName",
        "Name"
      ],
      "type": "structure"
    },
    "GetCodeSigningConfigRequest": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration. </p>",
          "location": "uri",
          "locationName": "CodeSigningConfigArn",
          "shape": "CodeSigningConfigArn"
        }
      },
      "required": [
        "CodeSigningConfigArn"
      ],
      "type": "structure"
    },
    "GetCodeSigningConfigResponse": {
      "members": {
        "CodeSigningConfig": {
          "documentation": "<p>The code signing configuration</p>",
          "shape": "CodeSigningConfig"
        }
      },
      "required": [
        "CodeSigningConfig"
      ],
      "type": "structure"
    },
    "GetEventSourceMappingRequest": {
      "members": {
        "UUID": {
          "documentation": "<p>The identifier of the event source mapping.</p>",
          "location": "uri",
          "locationName": "UUID",
          "shape": "String"
        }
      },
      "required": [
        "UUID"
      ],
      "type": "structure"
    },
    "GetFunctionCodeSigningConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionCodeSigningConfigResponse": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "shape": "CodeSigningConfigArn"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "shape": "FunctionName"
        }
      },
      "required": [
        "CodeSigningConfigArn",
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionConcurrencyRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionConcurrencyResponse": {
      "members": {
        "ReservedConcurrentExecutions": {
          "documentation": "<p>The number of simultaneous executions that are reserved for the function.</p>",
          "shape": "ReservedConcurrentExecutions"
        }
      },
      "type": "structure"
    },
    "GetFunctionConfigurationRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to get details about a published version of the function.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionEventInvokeConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>A version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to get details about a published version of the function.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionResponse": {
      "members": {
        "Code": {
          "documentation": "<p>The deployment package of the function or version.</p>",
          "shape": "FunctionCodeLocation"
        },
        "Concurrency": {
          "documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">reserved concurrency</a>.</p>",
          "shape": "Concurrency"
        },
        "Configuration": {
          "documentation": "<p>The configuration of the function or version.</p>",
          "shape": "FunctionConfiguration"
        },
        "Tags": {
          "documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "GetFunctionUrlConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "FunctionUrlQualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetFunctionUrlConfigResponse": {
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "CreationTime": {
          "documentation": "<p>When the function URL was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your function.</p>",
          "shape": "FunctionArn"
        },
        "FunctionUrl": {
          "documentation": "<p>The HTTP URL endpoint for your function.</p>",
          "shape": "FunctionUrl"
        },
        "LastModifiedTime": {
          "documentation": "<p>When the function URL configuration was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "FunctionUrl",
        "FunctionArn",
        "AuthType",
        "CreationTime",
        "LastModifiedTime"
      ],
      "type": "structure"
    },
    "GetLayerVersionByArnRequest": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN of the layer version.</p>",
          "location": "querystring",
          "locationName": "Arn",
          "shape": "LayerVersionArn"
        }
      },
      "required": [
        "Arn"
      ],
      "type": "structure"
    },
    "GetLayerVersionPolicyRequest": {
      "members": {
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "VersionNumber": {
          "documentation": "<p>The version number.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "LayerVersionNumber"
        }
      },
      "required": [
        "LayerName",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "GetLayerVersionPolicyResponse": {
      "members": {
        "Policy": {
          "documentation": "<p>The policy document.</p>",
          "shape": "String"
        },
        "RevisionId": {
          "documentation": "<p>A unique identifier for the current revision of the policy.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetLayerVersionRequest": {
      "members": {
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "VersionNumber": {
          "documentation": "<p>The version number.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "LayerVersionNumber"
        }
      },
      "required": [
        "LayerName",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "GetLayerVersionResponse": {
      "members": {
        "CompatibleArchitectures": {
          "documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architectures</a>.</p>",
          "shape": "CompatibleArchitectures"
        },
        "CompatibleRuntimes": {
          "documentation": "<p>The layer's compatible runtimes.</p>",
          "shape": "CompatibleRuntimes"
        },
        "Content": {
          "documentation": "<p>Details about the layer version.</p>",
          "shape": "LayerVersionContentOutput"
        },
        "CreatedDate": {
          "documentation": "<p>The date that the layer version was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the version.</p>",
          "shape": "Description"
        },
        "LayerArn": {
          "documentation": "<p>The ARN of the layer.</p>",
          "shape": "LayerArn"
        },
        "LayerVersionArn": {
          "documentation": "<p>The ARN of the layer version.</p>",
          "shape": "LayerVersionArn"
        },
        "LicenseInfo": {
          "documentation": "<p>The layer's software license.</p>",
          "shape": "LicenseInfo"
        },
        "Version": {
          "documentation": "<p>The version number.</p>",
          "shape": "LayerVersionNumber"
        }
      },
      "type": "structure"
    },
    "GetPolicyRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to get the policy for that resource.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "GetPolicyResponse": {
      "members": {
        "Policy": {
          "documentation": "<p>The resource-based policy.</p>",
          "shape": "String"
        },
        "RevisionId": {
          "documentation": "<p>A unique identifier for the current revision of the policy.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetProvisionedConcurrencyConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName",
        "Qualifier"
      ],
      "type": "structure"
    },
    "GetProvisionedConcurrencyConfigResponse": {
      "members": {
        "AllocatedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency allocated.</p>",
          "shape": "NonNegativeInteger"
        },
        "AvailableProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency available.</p>",
          "shape": "NonNegativeInteger"
        },
        "LastModified": {
          "documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>",
          "shape": "Timestamp"
        },
        "RequestedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency requested.</p>",
          "shape": "PositiveInteger"
        },
        "Status": {
          "documentation": "<p>The status of the allocation process.</p>",
          "shape": "ProvisionedConcurrencyStatusEnum"
        },
        "StatusReason": {
          "documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Handler": {
      "max": 128,
      "pattern": "[^\\s]+",
      "type": "string"
    },
    "Header": {
      "max": 1024,
      "pattern": ".*",
      "type": "string"
    },
    "HeadersList": {
      "max": 100,
      "member": {
        "shape": "Header"
      },
      "type": "list"
    },
    "HttpStatus": {
      "type": "integer"
    },
    "ImageConfig": {
      "documentation": "<p>Configuration values that override the container image Dockerfile settings. See <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms\">Container settings</a>. </p>",
      "members": {
        "Command": {
          "documentation": "<p>Specifies parameters that you want to pass in with ENTRYPOINT. </p>",
          "shape": "StringList"
        },
        "EntryPoint": {
          "documentation": "<p>Specifies the entry point to their application, which is typically the location of the runtime executable.</p>",
          "shape": "StringList"
        },
        "WorkingDirectory": {
          "documentation": "<p>Specifies the working directory.</p>",
          "shape": "WorkingDirectory"
        }
      },
      "type": "structure"
    },
    "ImageConfigError": {
      "documentation": "<p>Error response to GetFunctionConfiguration.</p>",
      "members": {
        "ErrorCode": {
          "documentation": "<p>Error code.</p>",
          "shape": "String"
        },
        "Message": {
          "documentation": "<p>Error message.</p>",
          "shape": "SensitiveString"
        }
      },
      "type": "structure"
    },
    "ImageConfigResponse": {
      "documentation": "<p>Response to GetFunctionConfiguration request.</p>",
      "members": {
        "Error": {
          "documentation": "<p>Error response to GetFunctionConfiguration.</p>",
          "shape": "ImageConfigError"
        },
        "ImageConfig": {
          "documentation": "<p>Configuration values that override the container image Dockerfile.</p>",
          "shape": "ImageConfig"
        }
      },
      "type": "structure"
    },
    "Integer": {
      "type": "integer"
    },
    "InvalidCodeSignatureException": {
      "documentation": "<p>The code signature failed the integrity check. Lambda always blocks deployment if the integrity check fails, even if code signing policy is set to WARN.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>One of the parameters in the request is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>The exception message.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidRequestContentException": {
      "documentation": "<p>The request body could not be parsed as JSON.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>The exception message.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidRuntimeException": {
      "documentation": "<p>The runtime or runtime version specified is not supported.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidSecurityGroupIDException": {
      "documentation": "<p>The Security Group ID provided in the Lambda function VPC configuration is invalid.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidSubnetIDException": {
      "documentation": "<p>The Subnet ID provided in the Lambda function VPC configuration is invalid.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidZipFileException": {
      "documentation": "<p>Lambda could not unzip the deployment package.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvocationRequest": {
      "members": {
        "ClientContext": {
          "documentation": "<p>Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.</p>",
          "location": "header",
          "locationName": "X-Amz-Client-Context",
          "shape": "String"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "InvocationType": {
          "documentation": "<p>Choose from the following options.</p> <ul> <li> <p> <code>RequestResponse</code> (default) - Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.</p> </li> <li> <p> <code>Event</code> - Invoke the function asynchronously. Send events that fail multiple times to the function's dead-letter queue (if it's configured). The API response only includes a status code.</p> </li> <li> <p> <code>DryRun</code> - Validate parameter values and verify that the user or role has permission to invoke the function.</p> </li> </ul>",
          "location": "header",
          "locationName": "X-Amz-Invocation-Type",
          "shape": "InvocationType"
        },
        "LogType": {
          "documentation": "<p>Set to <code>Tail</code> to include the execution log in the response. Applies to synchronously invoked functions only.</p>",
          "location": "header",
          "locationName": "X-Amz-Log-Type",
          "shape": "LogType"
        },
        "Payload": {
          "documentation": "<p>The JSON that you want to provide to your Lambda function as input.</p> <p>You can enter the JSON directly. For example, <code>--payload '{ \"key\": \"value\" }'</code>. You can also specify a file path. For example, <code>--payload file://payload.json</code>. </p>",
          "shape": "Blob"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to invoke a published version of the function.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "payload": "Payload",
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "InvocationResponse": {
      "members": {
        "ExecutedVersion": {
          "documentation": "<p>The version of the function that executed. When you invoke a function with an alias, this indicates which version the alias resolved to.</p>",
          "location": "header",
          "locationName": "X-Amz-Executed-Version",
          "shape": "Version"
        },
        "FunctionError": {
          "documentation": "<p>If present, indicates that an error occurred during function execution. Details about the error are included in the response payload.</p>",
          "location": "header",
          "locationName": "X-Amz-Function-Error",
          "shape": "String"
        },
        "LogResult": {
          "documentation": "<p>The last 4 KB of the execution log, which is base64 encoded.</p>",
          "location": "header",
          "locationName": "X-Amz-Log-Result",
          "shape": "String"
        },
        "Payload": {
          "documentation": "<p>The response from the function, or an error object.</p>",
          "shape": "Blob"
        },
        "StatusCode": {
          "documentation": "<p>The HTTP status code is in the 200 range for a successful request. For the <code>RequestResponse</code> invocation type, this status code is 200. For the <code>Event</code> invocation type, this status code is 202. For the <code>DryRun</code> invocation type, the status code is 204.</p>",
          "location": "statusCode",
          "shape": "Integer"
        }
      },
      "payload": "Payload",
      "type": "structure"
    },
    "InvocationType": {
      "enum": [
        "Event",
        "RequestResponse",
        "DryRun"
      ],
      "type": "string"
    },
    "InvokeAsyncRequest": {
      "deprecated": true,
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "InvokeArgs": {
          "documentation": "<p>The JSON that you want to provide to your Lambda function as input.</p>",
          "shape": "BlobStream"
        }
      },
      "payload": "InvokeArgs",
      "required": [
        "FunctionName",
        "InvokeArgs"
      ],
      "type": "structure"
    },
    "InvokeAsyncResponse": {
      "deprecated": true,
      "documentation": "<p>A success response (<code>202 Accepted</code>) indicates that the request is queued for invocation. </p>",
      "members": {
        "Status": {
          "documentation": "<p>The status code.</p>",
          "location": "statusCode",
          "shape": "HttpStatus"
        }
      },
      "type": "structure"
    },
    "KMSAccessDeniedException": {
      "documentation": "<p>Lambda was unable to decrypt the environment variables because KMS access was denied. Check the Lambda function's KMS permissions.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "KMSDisabledException": {
      "documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key used is disabled. Check the Lambda function's KMS key settings.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "KMSInvalidStateException": {
      "documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key used is in an invalid state for Decrypt. Check the function's KMS key settings.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "KMSKeyArn": {
      "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
      "type": "string"
    },
    "KMSNotFoundException": {
      "documentation": "<p>Lambda was unable to decrypt the environment variables because the KMS key was not found. Check the function's KMS key settings. </p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "LastUpdateStatus": {
      "enum": [
        "Successful",
        "Failed",
        "InProgress"
      ],
      "type": "string"
    },
    "LastUpdateStatusReason": {
      "type": "string"
    },
    "LastUpdateStatusReasonCode": {
      "enum": [
        "EniLimitExceeded",
        "InsufficientRolePermissions",
        "InvalidConfiguration",
        "InternalError",
        "SubnetOutOfIPAddresses",
        "InvalidSubnet",
        "InvalidSecurityGroup",
        "ImageDeleted",
        "ImageAccessDenied",
        "InvalidImage"
      ],
      "type": "string"
    },
    "Layer": {
      "documentation": "<p>An <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the function layer.</p>",
          "shape": "LayerVersionArn"
        },
        "CodeSize": {
          "documentation": "<p>The size of the layer archive in bytes.</p>",
          "shape": "Long"
        },
        "SigningJobArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of a signing job.</p>",
          "shape": "Arn"
        },
        "SigningProfileVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a signing profile version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "LayerArn": {
      "max": 140,
      "min": 1,
      "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+",
      "type": "string"
    },
    "LayerList": {
      "member": {
        "shape": "LayerVersionArn"
      },
      "type": "list"
    },
    "LayerName": {
      "max": 140,
      "min": 1,
      "pattern": "(arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+)|[a-zA-Z0-9-_]+",
      "type": "string"
    },
    "LayerPermissionAllowedAction": {
      "max": 22,
      "pattern": "lambda:GetLayerVersion",
      "type": "string"
    },
    "LayerPermissionAllowedPrincipal": {
      "pattern": "\\d{12}|\\*|arn:(aws[a-zA-Z-]*):iam::\\d{12}:root",
      "type": "string"
    },
    "LayerVersionArn": {
      "max": 140,
      "min": 1,
      "pattern": "arn:[a-zA-Z0-9-]+:lambda:[a-zA-Z0-9-]+:\\d{12}:layer:[a-zA-Z0-9-_]+:[0-9]+",
      "type": "string"
    },
    "LayerVersionContentInput": {
      "documentation": "<p>A ZIP archive that contains the contents of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>. You can specify either an Amazon S3 location, or upload a layer archive directly.</p>",
      "members": {
        "S3Bucket": {
          "documentation": "<p>The Amazon S3 bucket of the layer archive.</p>",
          "shape": "S3Bucket"
        },
        "S3Key": {
          "documentation": "<p>The Amazon S3 key of the layer archive.</p>",
          "shape": "S3Key"
        },
        "S3ObjectVersion": {
          "documentation": "<p>For versioned objects, the version of the layer archive object to use.</p>",
          "shape": "S3ObjectVersion"
        },
        "ZipFile": {
          "documentation": "<p>The base64-encoded contents of the layer archive. Amazon Web Services SDK and Amazon Web Services CLI clients handle the encoding for you.</p>",
          "shape": "Blob"
        }
      },
      "type": "structure"
    },
    "LayerVersionContentOutput": {
      "documentation": "<p>Details about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>.</p>",
      "members": {
        "CodeSha256": {
          "documentation": "<p>The SHA-256 hash of the layer archive.</p>",
          "shape": "String"
        },
        "CodeSize": {
          "documentation": "<p>The size of the layer archive in bytes.</p>",
          "shape": "Long"
        },
        "Location": {
          "documentation": "<p>A link to the layer archive in Amazon S3 that is valid for 10 minutes.</p>",
          "shape": "String"
        },
        "SigningJobArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of a signing job.</p>",
          "shape": "String"
        },
        "SigningProfileVersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a signing profile version.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "LayerVersionNumber": {
      "type": "long"
    },
    "LayerVersionsList": {
      "member": {
        "shape": "LayerVersionsListItem"
      },
      "type": "list"
    },
    "LayerVersionsListItem": {
      "documentation": "<p>Details about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>.</p>",
      "members": {
        "CompatibleArchitectures": {
          "documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architectures</a>.</p>",
          "shape": "CompatibleArchitectures"
        },
        "CompatibleRuntimes": {
          "documentation": "<p>The layer's compatible runtimes.</p>",
          "shape": "CompatibleRuntimes"
        },
        "CreatedDate": {
          "documentation": "<p>The date that the version was created, in ISO 8601 format. For example, <code>2018-11-27T15:10:45.123+0000</code>.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the version.</p>",
          "shape": "Description"
        },
        "LayerVersionArn": {
          "documentation": "<p>The ARN of the layer version.</p>",
          "shape": "LayerVersionArn"
        },
        "LicenseInfo": {
          "documentation": "<p>The layer's open-source license.</p>",
          "shape": "LicenseInfo"
        },
        "Version": {
          "documentation": "<p>The version number.</p>",
          "shape": "LayerVersionNumber"
        }
      },
      "type": "structure"
    },
    "LayersList": {
      "member": {
        "shape": "LayersListItem"
      },
      "type": "list"
    },
    "LayersListItem": {
      "documentation": "<p>Details about an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda layer</a>.</p>",
      "members": {
        "LatestMatchingVersion": {
          "documentation": "<p>The newest version of the layer.</p>",
          "shape": "LayerVersionsListItem"
        },
        "LayerArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the function layer.</p>",
          "shape": "LayerArn"
        },
        "LayerName": {
          "documentation": "<p>The name of the layer.</p>",
          "shape": "LayerName"
        }
      },
      "type": "structure"
    },
    "LayersReferenceList": {
      "member": {
        "shape": "Layer"
      },
      "type": "list"
    },
    "LicenseInfo": {
      "max": 512,
      "type": "string"
    },
    "ListAliasesRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "FunctionVersion": {
          "documentation": "<p>Specify a function version to only list aliases that invoke that version.</p>",
          "location": "querystring",
          "locationName": "FunctionVersion",
          "shape": "Version"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>Limit the number of aliases returned.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "ListAliasesResponse": {
      "members": {
        "Aliases": {
          "documentation": "<p>A list of aliases.</p>",
          "shape": "AliasList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListCodeSigningConfigsRequest": {
      "members": {
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>Maximum number of items to return.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "type": "structure"
    },
    "ListCodeSigningConfigsResponse": {
      "members": {
        "CodeSigningConfigs": {
          "documentation": "<p>The code signing configurations</p>",
          "shape": "CodeSigningConfigList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListEventSourceMappingsRequest": {
      "members": {
        "EventSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the event source.</p> <ul> <li> <p> <b>Amazon Kinesis</b> - The ARN of the data stream or a stream consumer.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - The ARN of the stream.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - The ARN of the queue.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> - The ARN of the cluster.</p> </li> </ul>",
          "location": "querystring",
          "locationName": "EventSourceArn",
          "shape": "Arn"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>",
          "location": "querystring",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Marker": {
          "documentation": "<p>A pagination token returned by a previous call.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of event source mappings to return. Note that ListEventSourceMappings returns a maximum of 100 items in each response, even if you set the number higher.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "type": "structure"
    },
    "ListEventSourceMappingsResponse": {
      "members": {
        "EventSourceMappings": {
          "documentation": "<p>A list of event source mappings.</p>",
          "shape": "EventSourceMappingsList"
        },
        "NextMarker": {
          "documentation": "<p>A pagination token that's returned when the response doesn't contain all event source mappings.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListFunctionEventInvokeConfigsRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of configurations to return.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxFunctionEventInvokeConfigListItems"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "ListFunctionEventInvokeConfigsResponse": {
      "members": {
        "FunctionEventInvokeConfigs": {
          "documentation": "<p>A list of configurations.</p>",
          "shape": "FunctionEventInvokeConfigList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListFunctionUrlConfigsRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of function URLs to return in the response. Note that <code>ListFunctionUrlConfigs</code> returns a maximum of 50 items in each response, even if you set the number higher.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxItems"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "ListFunctionUrlConfigsResponse": {
      "members": {
        "FunctionUrlConfigs": {
          "documentation": "<p>A list of function URL configurations.</p>",
          "shape": "FunctionUrlConfigList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "required": [
        "FunctionUrlConfigs"
      ],
      "type": "structure"
    },
    "ListFunctionsByCodeSigningConfigRequest": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "location": "uri",
          "locationName": "CodeSigningConfigArn",
          "shape": "CodeSigningConfigArn"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>Maximum number of items to return.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "required": [
        "CodeSigningConfigArn"
      ],
      "type": "structure"
    },
    "ListFunctionsByCodeSigningConfigResponse": {
      "members": {
        "FunctionArns": {
          "documentation": "<p>The function ARNs. </p>",
          "shape": "FunctionArnList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListFunctionsRequest": {
      "members": {
        "FunctionVersion": {
          "documentation": "<p>Set to <code>ALL</code> to include entries for all published versions of each function.</p>",
          "location": "querystring",
          "locationName": "FunctionVersion",
          "shape": "FunctionVersion"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MasterRegion": {
          "documentation": "<p>For Lambda@Edge functions, the Amazon Web Services Region of the master function. For example, <code>us-east-1</code> filters the list of functions to only include Lambda@Edge functions replicated from a master function in US East (N. Virginia). If specified, you must set <code>FunctionVersion</code> to <code>ALL</code>.</p>",
          "location": "querystring",
          "locationName": "MasterRegion",
          "shape": "MasterRegion"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of functions to return in the response. Note that <code>ListFunctions</code> returns a maximum of 50 items in each response, even if you set the number higher.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "type": "structure"
    },
    "ListFunctionsResponse": {
      "documentation": "<p>A list of Lambda functions.</p>",
      "members": {
        "Functions": {
          "documentation": "<p>A list of Lambda functions.</p>",
          "shape": "FunctionList"
        },
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLayerVersionsRequest": {
      "members": {
        "CompatibleArchitecture": {
          "documentation": "<p>The compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architecture</a>.</p>",
          "location": "querystring",
          "locationName": "CompatibleArchitecture",
          "shape": "Architecture"
        },
        "CompatibleRuntime": {
          "documentation": "<p>A runtime identifier. For example, <code>go1.x</code>.</p>",
          "location": "querystring",
          "locationName": "CompatibleRuntime",
          "shape": "Runtime"
        },
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "Marker": {
          "documentation": "<p>A pagination token returned by a previous call.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of versions to return.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxLayerListItems"
        }
      },
      "required": [
        "LayerName"
      ],
      "type": "structure"
    },
    "ListLayerVersionsResponse": {
      "members": {
        "LayerVersions": {
          "documentation": "<p>A list of versions.</p>",
          "shape": "LayerVersionsList"
        },
        "NextMarker": {
          "documentation": "<p>A pagination token returned when the response doesn't contain all versions.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListLayersRequest": {
      "members": {
        "CompatibleArchitecture": {
          "documentation": "<p>The compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architecture</a>.</p>",
          "location": "querystring",
          "locationName": "CompatibleArchitecture",
          "shape": "Architecture"
        },
        "CompatibleRuntime": {
          "documentation": "<p>A runtime identifier. For example, <code>go1.x</code>.</p>",
          "location": "querystring",
          "locationName": "CompatibleRuntime",
          "shape": "Runtime"
        },
        "Marker": {
          "documentation": "<p>A pagination token returned by a previous call.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of layers to return.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxLayerListItems"
        }
      },
      "type": "structure"
    },
    "ListLayersResponse": {
      "members": {
        "Layers": {
          "documentation": "<p>A list of function layers.</p>",
          "shape": "LayersList"
        },
        "NextMarker": {
          "documentation": "<p>A pagination token returned when the response doesn't contain all layers.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListProvisionedConcurrencyConfigsRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>Specify a number to limit the number of configurations returned.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxProvisionedConcurrencyConfigListItems"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "ListProvisionedConcurrencyConfigsResponse": {
      "members": {
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        },
        "ProvisionedConcurrencyConfigs": {
          "documentation": "<p>A list of provisioned concurrency configurations.</p>",
          "shape": "ProvisionedConcurrencyConfigList"
        }
      },
      "type": "structure"
    },
    "ListTagsRequest": {
      "members": {
        "Resource": {
          "documentation": "<p>The function's Amazon Resource Name (ARN). Note: Lambda does not support adding tags to aliases or versions.</p>",
          "location": "uri",
          "locationName": "ARN",
          "shape": "FunctionArn"
        }
      },
      "required": [
        "Resource"
      ],
      "type": "structure"
    },
    "ListTagsResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The function's tags.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ListVersionsByFunctionRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "NamespacedFunctionName"
        },
        "Marker": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "Marker",
          "shape": "String"
        },
        "MaxItems": {
          "documentation": "<p>The maximum number of versions to return. Note that <code>ListVersionsByFunction</code> returns a maximum of 50 items in each response, even if you set the number higher.</p>",
          "location": "querystring",
          "locationName": "MaxItems",
          "shape": "MaxListItems"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "ListVersionsByFunctionResponse": {
      "members": {
        "NextMarker": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "String"
        },
        "Versions": {
          "documentation": "<p>A list of Lambda function versions.</p>",
          "shape": "FunctionList"
        }
      },
      "type": "structure"
    },
    "LocalMountPath": {
      "max": 160,
      "pattern": "^/mnt/[a-zA-Z0-9-_.]+$",
      "type": "string"
    },
    "LogType": {
      "enum": [
        "None",
        "Tail"
      ],
      "type": "string"
    },
    "Long": {
      "type": "long"
    },
    "MasterRegion": {
      "pattern": "ALL|[a-z]{2}(-gov)?-[a-z]+-\\d{1}",
      "type": "string"
    },
    "MaxAge": {
      "max": 86400,
      "min": 0,
      "type": "integer"
    },
    "MaxFunctionEventInvokeConfigListItems": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "MaxItems": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "MaxLayerListItems": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "MaxListItems": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "MaxProvisionedConcurrencyConfigListItems": {
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "MaximumBatchingWindowInSeconds": {
      "max": 300,
      "min": 0,
      "type": "integer"
    },
    "MaximumEventAgeInSeconds": {
      "max": 21600,
      "min": 60,
      "type": "integer"
    },
    "MaximumRecordAgeInSeconds": {
      "max": 604800,
      "min": -1,
      "type": "integer"
    },
    "MaximumRetryAttempts": {
      "max": 2,
      "min": 0,
      "type": "integer"
    },
    "MaximumRetryAttemptsEventSourceMapping": {
      "max": 10000,
      "min": -1,
      "type": "integer"
    },
    "MemorySize": {
      "max": 10240,
      "min": 128,
      "type": "integer"
    },
    "Method": {
      "max": 6,
      "pattern": ".*",
      "type": "string"
    },
    "NameSpacedFunctionArn": {
      "pattern": "arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}(-gov)?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_\\.]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "type": "string"
    },
    "NamespacedFunctionName": {
      "max": 170,
      "min": 1,
      "pattern": "(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_\\.]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?",
      "type": "string"
    },
    "NamespacedStatementId": {
      "max": 100,
      "min": 1,
      "pattern": "([a-zA-Z0-9-_.]+)",
      "type": "string"
    },
    "NonNegativeInteger": {
      "min": 0,
      "type": "integer"
    },
    "OnFailure": {
      "documentation": "<p>A destination for events that failed processing.</p>",
      "members": {
        "Destination": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the destination resource.</p>",
          "shape": "DestinationArn"
        }
      },
      "type": "structure"
    },
    "OnSuccess": {
      "documentation": "<p>A destination for events that were processed successfully.</p>",
      "members": {
        "Destination": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the destination resource.</p>",
          "shape": "DestinationArn"
        }
      },
      "type": "structure"
    },
    "OrganizationId": {
      "max": 34,
      "pattern": "o-[a-z0-9]{10,32}",
      "type": "string"
    },
    "Origin": {
      "max": 253,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "PackageType": {
      "enum": [
        "Zip",
        "Image"
      ],
      "type": "string"
    },
    "ParallelizationFactor": {
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "Pattern": {
      "max": 4096,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "PolicyLengthExceededException": {
      "documentation": "<p>The permissions policy for the resource is too large. <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Learn more</a> </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Type": {
          "shape": "String"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "PositiveInteger": {
      "min": 1,
      "type": "integer"
    },
    "PreconditionFailedException": {
      "documentation": "<p>The RevisionId provided does not match the latest RevisionId for the Lambda function or alias. Call the <code>GetFunction</code> or the <code>GetAlias</code> API to retrieve the latest RevisionId for your resource.</p>",
      "error": {
        "httpStatusCode": 412
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>The exception message.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Principal": {
      "pattern": "[^\\s]+",
      "type": "string"
    },
    "PrincipalOrgID": {
      "max": 34,
      "min": 12,
      "pattern": "^o-[a-z0-9]{10,32}$",
      "type": "string"
    },
    "ProvisionedConcurrencyConfigList": {
      "member": {
        "shape": "ProvisionedConcurrencyConfigListItem"
      },
      "type": "list"
    },
    "ProvisionedConcurrencyConfigListItem": {
      "documentation": "<p>Details about the provisioned concurrency configuration for a function alias or version.</p>",
      "members": {
        "AllocatedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency allocated.</p>",
          "shape": "NonNegativeInteger"
        },
        "AvailableProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency available.</p>",
          "shape": "NonNegativeInteger"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the alias or version.</p>",
          "shape": "FunctionArn"
        },
        "LastModified": {
          "documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>",
          "shape": "Timestamp"
        },
        "RequestedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency requested.</p>",
          "shape": "PositiveInteger"
        },
        "Status": {
          "documentation": "<p>The status of the allocation process.</p>",
          "shape": "ProvisionedConcurrencyStatusEnum"
        },
        "StatusReason": {
          "documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ProvisionedConcurrencyConfigNotFoundException": {
      "documentation": "<p>The specified configuration does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Type": {
          "shape": "String"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ProvisionedConcurrencyStatusEnum": {
      "enum": [
        "IN_PROGRESS",
        "READY",
        "FAILED"
      ],
      "type": "string"
    },
    "PublishLayerVersionRequest": {
      "members": {
        "CompatibleArchitectures": {
          "documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architectures</a>.</p>",
          "shape": "CompatibleArchitectures"
        },
        "CompatibleRuntimes": {
          "documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">function runtimes</a>. Used for filtering with <a>ListLayers</a> and <a>ListLayerVersions</a>.</p>",
          "shape": "CompatibleRuntimes"
        },
        "Content": {
          "documentation": "<p>The function layer archive.</p>",
          "shape": "LayerVersionContentInput"
        },
        "Description": {
          "documentation": "<p>The description of the version.</p>",
          "shape": "Description"
        },
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "LicenseInfo": {
          "documentation": "<p>The layer's software license. It can be any of the following:</p> <ul> <li> <p>An <a href=\"https://spdx.org/licenses/\">SPDX license identifier</a>. For example, <code>MIT</code>.</p> </li> <li> <p>The URL of a license hosted on the internet. For example, <code>https://opensource.org/licenses/MIT</code>.</p> </li> <li> <p>The full text of the license.</p> </li> </ul>",
          "shape": "LicenseInfo"
        }
      },
      "required": [
        "LayerName",
        "Content"
      ],
      "type": "structure"
    },
    "PublishLayerVersionResponse": {
      "members": {
        "CompatibleArchitectures": {
          "documentation": "<p>A list of compatible <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html\">instruction set architectures</a>.</p>",
          "shape": "CompatibleArchitectures"
        },
        "CompatibleRuntimes": {
          "documentation": "<p>The layer's compatible runtimes.</p>",
          "shape": "CompatibleRuntimes"
        },
        "Content": {
          "documentation": "<p>Details about the layer version.</p>",
          "shape": "LayerVersionContentOutput"
        },
        "CreatedDate": {
          "documentation": "<p>The date that the layer version was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the version.</p>",
          "shape": "Description"
        },
        "LayerArn": {
          "documentation": "<p>The ARN of the layer.</p>",
          "shape": "LayerArn"
        },
        "LayerVersionArn": {
          "documentation": "<p>The ARN of the layer version.</p>",
          "shape": "LayerVersionArn"
        },
        "LicenseInfo": {
          "documentation": "<p>The layer's software license.</p>",
          "shape": "LicenseInfo"
        },
        "Version": {
          "documentation": "<p>The version number.</p>",
          "shape": "LayerVersionNumber"
        }
      },
      "type": "structure"
    },
    "PublishVersionRequest": {
      "members": {
        "CodeSha256": {
          "documentation": "<p>Only publish a version if the hash value matches the value that's specified. Use this option to avoid publishing a version if the function code has changed since you last updated it. You can get the hash for the version that you uploaded from the output of <a>UpdateFunctionCode</a>.</p>",
          "shape": "String"
        },
        "Description": {
          "documentation": "<p>A description for the version to override the description in the function configuration.</p>",
          "shape": "Description"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "RevisionId": {
          "documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid publishing a version if the function configuration has changed since you last updated it.</p>",
          "shape": "String"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "PutFunctionCodeSigningConfigRequest": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "shape": "CodeSigningConfigArn"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        }
      },
      "required": [
        "CodeSigningConfigArn",
        "FunctionName"
      ],
      "type": "structure"
    },
    "PutFunctionCodeSigningConfigResponse": {
      "members": {
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "shape": "CodeSigningConfigArn"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "shape": "FunctionName"
        }
      },
      "required": [
        "CodeSigningConfigArn",
        "FunctionName"
      ],
      "type": "structure"
    },
    "PutFunctionConcurrencyRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "ReservedConcurrentExecutions": {
          "documentation": "<p>The number of simultaneous executions to reserve for the function.</p>",
          "shape": "ReservedConcurrentExecutions"
        }
      },
      "required": [
        "FunctionName",
        "ReservedConcurrentExecutions"
      ],
      "type": "structure"
    },
    "PutFunctionEventInvokeConfigRequest": {
      "members": {
        "DestinationConfig": {
          "documentation": "<p>A destination for events after they have been sent to a function for processing.</p> <p class=\"title\"> <b>Destinations</b> </p> <ul> <li> <p> <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p> </li> <li> <p> <b>Queue</b> - The ARN of an SQS queue.</p> </li> <li> <p> <b>Topic</b> - The ARN of an SNS topic.</p> </li> <li> <p> <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p> </li> </ul>",
          "shape": "DestinationConfig"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "MaximumEventAgeInSeconds": {
          "documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>",
          "shape": "MaximumEventAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>The maximum number of times to retry when the function returns an error.</p>",
          "shape": "MaximumRetryAttempts"
        },
        "Qualifier": {
          "documentation": "<p>A version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "PutProvisionedConcurrencyConfigRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "ProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency to allocate for the version or alias.</p>",
          "shape": "PositiveInteger"
        },
        "Qualifier": {
          "documentation": "<p>The version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName",
        "Qualifier",
        "ProvisionedConcurrentExecutions"
      ],
      "type": "structure"
    },
    "PutProvisionedConcurrencyConfigResponse": {
      "members": {
        "AllocatedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency allocated.</p>",
          "shape": "NonNegativeInteger"
        },
        "AvailableProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency available.</p>",
          "shape": "NonNegativeInteger"
        },
        "LastModified": {
          "documentation": "<p>The date and time that a user last updated the configuration, in <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\">ISO 8601 format</a>.</p>",
          "shape": "Timestamp"
        },
        "RequestedProvisionedConcurrentExecutions": {
          "documentation": "<p>The amount of provisioned concurrency requested.</p>",
          "shape": "PositiveInteger"
        },
        "Status": {
          "documentation": "<p>The status of the allocation process.</p>",
          "shape": "ProvisionedConcurrencyStatusEnum"
        },
        "StatusReason": {
          "documentation": "<p>For failed allocations, the reason that provisioned concurrency could not be allocated.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Qualifier": {
      "max": 128,
      "min": 1,
      "pattern": "(|[a-zA-Z0-9$_-]+)",
      "type": "string"
    },
    "Queue": {
      "max": 1000,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "Queues": {
      "max": 1,
      "member": {
        "shape": "Queue"
      },
      "min": 1,
      "type": "list"
    },
    "RemoveLayerVersionPermissionRequest": {
      "members": {
        "LayerName": {
          "documentation": "<p>The name or Amazon Resource Name (ARN) of the layer.</p>",
          "location": "uri",
          "locationName": "LayerName",
          "shape": "LayerName"
        },
        "RevisionId": {
          "documentation": "<p>Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.</p>",
          "location": "querystring",
          "locationName": "RevisionId",
          "shape": "String"
        },
        "StatementId": {
          "documentation": "<p>The identifier that was specified when the statement was added.</p>",
          "location": "uri",
          "locationName": "StatementId",
          "shape": "StatementId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "LayerVersionNumber"
        }
      },
      "required": [
        "LayerName",
        "VersionNumber",
        "StatementId"
      ],
      "type": "structure"
    },
    "RemovePermissionRequest": {
      "members": {
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>Specify a version or alias to remove permissions from a published version of the function.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        },
        "RevisionId": {
          "documentation": "<p>Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.</p>",
          "location": "querystring",
          "locationName": "RevisionId",
          "shape": "String"
        },
        "StatementId": {
          "documentation": "<p>Statement ID of the permission to remove.</p>",
          "location": "uri",
          "locationName": "StatementId",
          "shape": "NamespacedStatementId"
        }
      },
      "required": [
        "FunctionName",
        "StatementId"
      ],
      "type": "structure"
    },
    "RequestTooLargeException": {
      "documentation": "<p>The request payload exceeded the <code>Invoke</code> request body JSON input limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">Limits</a>. </p>",
      "error": {
        "httpStatusCode": 413
      },
      "exception": true,
      "members": {
        "Type": {
          "shape": "String"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ReservedConcurrentExecutions": {
      "min": 0,
      "type": "integer"
    },
    "ResourceArn": {
      "pattern": "(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()",
      "type": "string"
    },
    "ResourceConflictException": {
      "documentation": "<p>The resource already exists, or another operation is in progress.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>The exception message.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceInUseException": {
      "documentation": "<p>The operation conflicts with the resource's availability. For example, you attempted to update an EventSource Mapping in CREATING, or tried to delete a EventSource mapping currently in the UPDATING state.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The resource specified in the request does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceNotReadyException": {
      "documentation": "<p>The function is inactive and its VPC connection is no longer available. Wait for the VPC connection to reestablish and try again.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Type": {
          "documentation": "<p>The exception type.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>The exception message.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
      "type": "string"
    },
    "Runtime": {
      "enum": [
        "nodejs",
        "nodejs4.3",
        "nodejs6.10",
        "nodejs8.10",
        "nodejs10.x",
        "nodejs12.x",
        "nodejs14.x",
        "nodejs16.x",
        "java8",
        "java8.al2",
        "java11",
        "python2.7",
        "python3.6",
        "python3.7",
        "python3.8",
        "python3.9",
        "dotnetcore1.0",
        "dotnetcore2.0",
        "dotnetcore2.1",
        "dotnetcore3.1",
        "dotnet6",
        "nodejs4.3-edge",
        "go1.x",
        "ruby2.5",
        "ruby2.7",
        "provided",
        "provided.al2"
      ],
      "type": "string"
    },
    "S3Bucket": {
      "max": 63,
      "min": 3,
      "pattern": "^[0-9A-Za-z\\.\\-_]*(?<!\\.)$",
      "type": "string"
    },
    "S3Key": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "S3ObjectVersion": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "SecurityGroupId": {
      "type": "string"
    },
    "SecurityGroupIds": {
      "max": 5,
      "member": {
        "shape": "SecurityGroupId"
      },
      "type": "list"
    },
    "SelfManagedEventSource": {
      "documentation": "<p>The self-managed Apache Kafka cluster for your event source.</p>",
      "members": {
        "Endpoints": {
          "documentation": "<p>The list of bootstrap servers for your Kafka brokers in the following format: <code>\"KAFKA_BOOTSTRAP_SERVERS\": [\"abc.xyz.com:xxxx\",\"abc2.xyz.com:xxxx\"]</code>.</p>",
          "shape": "Endpoints"
        }
      },
      "type": "structure"
    },
    "SelfManagedKafkaEventSourceConfig": {
      "documentation": "<p>Specific configuration settings for a self-managed Apache Kafka event source.</p>",
      "members": {
        "ConsumerGroupId": {
          "documentation": "<p>The identifier for the Kafka consumer group to join. The consumer group ID must be unique among all your Kafka event sources. After creating a Kafka event source mapping with the consumer group ID specified, you cannot update this value. For more information, see <a>services-msk-consumer-group-id</a>.</p>",
          "shape": "URI"
        }
      },
      "type": "structure"
    },
    "SensitiveString": {
      "sensitive": true,
      "type": "string"
    },
    "ServiceException": {
      "documentation": "<p>The Lambda service encountered an internal error.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SigningProfileVersionArns": {
      "max": 20,
      "member": {
        "shape": "Arn"
      },
      "min": 1,
      "type": "list"
    },
    "SourceAccessConfiguration": {
      "documentation": "<p>To secure and define access to your event source, you can specify the authentication protocol, VPC components, or virtual host.</p>",
      "members": {
        "Type": {
          "documentation": "<p>The type of authentication protocol, VPC components, or virtual host for your event source. For example: <code>\"Type\":\"SASL_SCRAM_512_AUTH\"</code>.</p> <ul> <li> <p> <code>BASIC_AUTH</code> - (Amazon MQ) The Secrets Manager secret that stores your broker credentials.</p> </li> <li> <p> <code>BASIC_AUTH</code> - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key used for SASL/PLAIN authentication of your Apache Kafka brokers.</p> </li> <li> <p> <code>VPC_SUBNET</code> - The subnets associated with your VPC. Lambda connects to these subnets to fetch data from your self-managed Apache Kafka cluster.</p> </li> <li> <p> <code>VPC_SECURITY_GROUP</code> - The VPC security group used to manage access to your self-managed Apache Kafka brokers.</p> </li> <li> <p> <code>SASL_SCRAM_256_AUTH</code> - The Secrets Manager ARN of your secret key used for SASL SCRAM-256 authentication of your self-managed Apache Kafka brokers.</p> </li> <li> <p> <code>SASL_SCRAM_512_AUTH</code> - The Secrets Manager ARN of your secret key used for SASL SCRAM-512 authentication of your self-managed Apache Kafka brokers.</p> </li> <li> <p> <code>VIRTUAL_HOST</code> - (Amazon MQ) The name of the virtual host in your RabbitMQ broker. Lambda uses this RabbitMQ host as the event source. This property cannot be specified in an UpdateEventSourceMapping API call.</p> </li> <li> <p> <code>CLIENT_CERTIFICATE_TLS_AUTH</code> - (Amazon MSK, self-managed Apache Kafka) The Secrets Manager ARN of your secret key containing the certificate chain (X.509 PEM), private key (PKCS#8 PEM), and private key password (optional) used for mutual TLS authentication of your MSK/Apache Kafka brokers.</p> </li> <li> <p> <code>SERVER_ROOT_CA_CERTIFICATE</code> - (Self-managed Apache Kafka) The Secrets Manager ARN of your secret key containing the root CA certificate (X.509 PEM) used for TLS encryption of your Apache Kafka brokers. </p> </li> </ul>",
          "shape": "SourceAccessType"
        },
        "URI": {
          "documentation": "<p>The value for your chosen configuration in <code>Type</code>. For example: <code>\"URI\": \"arn:aws:secretsmanager:us-east-1:01234567890:secret:MyBrokerSecretName\"</code>.</p>",
          "shape": "URI"
        }
      },
      "type": "structure"
    },
    "SourceAccessConfigurations": {
      "max": 22,
      "member": {
        "shape": "SourceAccessConfiguration"
      },
      "min": 0,
      "type": "list"
    },
    "SourceAccessType": {
      "enum": [
        "BASIC_AUTH",
        "VPC_SUBNET",
        "VPC_SECURITY_GROUP",
        "SASL_SCRAM_512_AUTH",
        "SASL_SCRAM_256_AUTH",
        "VIRTUAL_HOST",
        "CLIENT_CERTIFICATE_TLS_AUTH",
        "SERVER_ROOT_CA_CERTIFICATE"
      ],
      "type": "string"
    },
    "SourceOwner": {
      "max": 12,
      "pattern": "\\d{12}",
      "type": "string"
    },
    "State": {
      "enum": [
        "Pending",
        "Active",
        "Inactive",
        "Failed"
      ],
      "type": "string"
    },
    "StateReason": {
      "type": "string"
    },
    "StateReasonCode": {
      "enum": [
        "Idle",
        "Creating",
        "Restoring",
        "EniLimitExceeded",
        "InsufficientRolePermissions",
        "InvalidConfiguration",
        "InternalError",
        "SubnetOutOfIPAddresses",
        "InvalidSubnet",
        "InvalidSecurityGroup",
        "ImageDeleted",
        "ImageAccessDenied",
        "InvalidImage"
      ],
      "type": "string"
    },
    "StatementId": {
      "max": 100,
      "min": 1,
      "pattern": "([a-zA-Z0-9-_]+)",
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "max": 1500,
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "SubnetIPAddressLimitReachedException": {
      "documentation": "<p>Lambda was not able to set up VPC access for the Lambda function because one or more configured subnets has no available IP addresses.</p>",
      "error": {
        "httpStatusCode": 502
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "Type": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SubnetId": {
      "type": "string"
    },
    "SubnetIds": {
      "max": 16,
      "member": {
        "shape": "SubnetId"
      },
      "type": "list"
    },
    "TagKey": {
      "type": "string"
    },
    "TagKeyList": {
      "member": {
        "shape": "TagKey"
      },
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "Resource": {
          "documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "ARN",
          "shape": "FunctionArn"
        },
        "Tags": {
          "documentation": "<p>A list of tags to apply to the function.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "Resource",
        "Tags"
      ],
      "type": "structure"
    },
    "TagValue": {
      "type": "string"
    },
    "Tags": {
      "key": {
        "shape": "TagKey"
      },
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "ThrottleReason": {
      "enum": [
        "ConcurrentInvocationLimitExceeded",
        "FunctionInvocationRateLimitExceeded",
        "ReservedFunctionConcurrentInvocationLimitExceeded",
        "ReservedFunctionInvocationRateLimitExceeded",
        "CallerRateLimitExceeded"
      ],
      "type": "string"
    },
    "Timeout": {
      "min": 1,
      "type": "integer"
    },
    "Timestamp": {
      "type": "string"
    },
    "TooManyRequestsException": {
      "documentation": "<p>The request throughput limit was exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Reason": {
          "shape": "ThrottleReason"
        },
        "Type": {
          "shape": "String"
        },
        "message": {
          "shape": "String"
        },
        "retryAfterSeconds": {
          "documentation": "<p>The number of seconds the caller should wait before retrying.</p>",
          "location": "header",
          "locationName": "Retry-After",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Topic": {
      "max": 249,
      "min": 1,
      "pattern": "^[^.]([a-zA-Z0-9\\-_.]+)",
      "type": "string"
    },
    "Topics": {
      "max": 1,
      "member": {
        "shape": "Topic"
      },
      "min": 1,
      "type": "list"
    },
    "TracingConfig": {
      "documentation": "<p>The function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.</p>",
      "members": {
        "Mode": {
          "documentation": "<p>The tracing mode.</p>",
          "shape": "TracingMode"
        }
      },
      "type": "structure"
    },
    "TracingConfigResponse": {
      "documentation": "<p>The function's X-Ray tracing configuration.</p>",
      "members": {
        "Mode": {
          "documentation": "<p>The tracing mode.</p>",
          "shape": "TracingMode"
        }
      },
      "type": "structure"
    },
    "TracingMode": {
      "enum": [
        "Active",
        "PassThrough"
      ],
      "type": "string"
    },
    "TumblingWindowInSeconds": {
      "max": 900,
      "min": 0,
      "type": "integer"
    },
    "URI": {
      "max": 200,
      "min": 1,
      "pattern": "[a-zA-Z0-9-\\/*:_+=.@-]*",
      "type": "string"
    },
    "UnreservedConcurrentExecutions": {
      "min": 0,
      "type": "integer"
    },
    "UnsupportedMediaTypeException": {
      "documentation": "<p>The content type of the <code>Invoke</code> request body is not JSON.</p>",
      "error": {
        "httpStatusCode": 415
      },
      "exception": true,
      "members": {
        "Type": {
          "shape": "String"
        },
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "Resource": {
          "documentation": "<p>The function's Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "ARN",
          "shape": "FunctionArn"
        },
        "TagKeys": {
          "documentation": "<p>A list of tag keys to remove from the function.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "Resource",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UpdateAliasRequest": {
      "members": {
        "Description": {
          "documentation": "<p>A description of the alias.</p>",
          "shape": "Description"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "FunctionVersion": {
          "documentation": "<p>The function version that the alias invokes.</p>",
          "shape": "Version"
        },
        "Name": {
          "documentation": "<p>The name of the alias.</p>",
          "location": "uri",
          "locationName": "Name",
          "shape": "Alias"
        },
        "RevisionId": {
          "documentation": "<p>Only update the alias if the revision ID matches the ID that's specified. Use this option to avoid modifying an alias that has changed since you last read it.</p>",
          "shape": "String"
        },
        "RoutingConfig": {
          "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-aliases.html#configuring-alias-routing\">routing configuration</a> of the alias.</p>",
          "shape": "AliasRoutingConfiguration"
        }
      },
      "required": [
        "FunctionName",
        "Name"
      ],
      "type": "structure"
    },
    "UpdateCodeSigningConfigRequest": {
      "members": {
        "AllowedPublishers": {
          "documentation": "<p>Signing profiles for this code signing configuration.</p>",
          "shape": "AllowedPublishers"
        },
        "CodeSigningConfigArn": {
          "documentation": "<p>The The Amazon Resource Name (ARN) of the code signing configuration.</p>",
          "location": "uri",
          "locationName": "CodeSigningConfigArn",
          "shape": "CodeSigningConfigArn"
        },
        "CodeSigningPolicies": {
          "documentation": "<p>The code signing policy.</p>",
          "shape": "CodeSigningPolicies"
        },
        "Description": {
          "documentation": "<p>Descriptive name for this code signing configuration.</p>",
          "shape": "Description"
        }
      },
      "required": [
        "CodeSigningConfigArn"
      ],
      "type": "structure"
    },
    "UpdateCodeSigningConfigResponse": {
      "members": {
        "CodeSigningConfig": {
          "documentation": "<p>The code signing configuration</p>",
          "shape": "CodeSigningConfig"
        }
      },
      "required": [
        "CodeSigningConfig"
      ],
      "type": "structure"
    },
    "UpdateEventSourceMappingRequest": {
      "members": {
        "BatchSize": {
          "documentation": "<p>The maximum number of records in each batch that Lambda pulls from your stream or queue and sends to your function. Lambda passes all of the records in the batch to the function in a single call, up to the payload limit for synchronous invocation (6 MB).</p> <ul> <li> <p> <b>Amazon Kinesis</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon DynamoDB Streams</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon Simple Queue Service</b> - Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.</p> </li> <li> <p> <b>Amazon Managed Streaming for Apache Kafka</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Self-managed Apache Kafka</b> - Default 100. Max 10,000.</p> </li> <li> <p> <b>Amazon MQ (ActiveMQ and RabbitMQ)</b> - Default 100. Max 10,000.</p> </li> </ul>",
          "shape": "BatchSize"
        },
        "BisectBatchOnFunctionError": {
          "documentation": "<p>(Streams only) If the function returns an error, split the batch in two and retry.</p>",
          "shape": "BisectBatchOnFunctionError"
        },
        "DestinationConfig": {
          "documentation": "<p>(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.</p>",
          "shape": "DestinationConfig"
        },
        "Enabled": {
          "documentation": "<p>When true, the event source mapping is active. When false, Lambda pauses polling and invocation.</p> <p>Default: True</p>",
          "shape": "Enabled"
        },
        "FilterCriteria": {
          "documentation": "<p>(Streams and Amazon SQS) An object that defines the filter criteria that determine whether Lambda should process an event. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html\">Lambda event filtering</a>.</p>",
          "shape": "FilterCriteria"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>MyFunction</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction</code>.</p> </li> <li> <p> <b>Version or Alias ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:MyFunction</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.</p>",
          "shape": "FunctionName"
        },
        "FunctionResponseTypes": {
          "documentation": "<p>(Streams and Amazon SQS) A list of current response type enums applied to the event source mapping.</p>",
          "shape": "FunctionResponseTypeList"
        },
        "MaximumBatchingWindowInSeconds": {
          "documentation": "<p>(Streams and Amazon SQS standard queues) The maximum amount of time, in seconds, that Lambda spends gathering records before invoking the function.</p> <p>Default: 0</p> <p>Related setting: When you set <code>BatchSize</code> to a value greater than 10, you must set <code>MaximumBatchingWindowInSeconds</code> to at least 1.</p>",
          "shape": "MaximumBatchingWindowInSeconds"
        },
        "MaximumRecordAgeInSeconds": {
          "documentation": "<p>(Streams only) Discard records older than the specified age. The default value is infinite (-1).</p>",
          "shape": "MaximumRecordAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>(Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p>",
          "shape": "MaximumRetryAttemptsEventSourceMapping"
        },
        "ParallelizationFactor": {
          "documentation": "<p>(Streams only) The number of batches to process from each shard concurrently.</p>",
          "shape": "ParallelizationFactor"
        },
        "SourceAccessConfigurations": {
          "documentation": "<p>An array of authentication protocols or VPC components required to secure your event source.</p>",
          "shape": "SourceAccessConfigurations"
        },
        "TumblingWindowInSeconds": {
          "documentation": "<p>(Streams only) The duration in seconds of a processing window. The range is between 1 second and 900 seconds.</p>",
          "shape": "TumblingWindowInSeconds"
        },
        "UUID": {
          "documentation": "<p>The identifier of the event source mapping.</p>",
          "location": "uri",
          "locationName": "UUID",
          "shape": "String"
        }
      },
      "required": [
        "UUID"
      ],
      "type": "structure"
    },
    "UpdateFunctionCodeRequest": {
      "members": {
        "Architectures": {
          "documentation": "<p>The instruction set architecture that the function supports. Enter a string array with one of the valid values (arm64 or x86_64). The default value is <code>x86_64</code>.</p>",
          "shape": "ArchitecturesList"
        },
        "DryRun": {
          "documentation": "<p>Set to true to validate the request parameters and access permissions without modifying the function code.</p>",
          "shape": "Boolean"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "ImageUri": {
          "documentation": "<p>URI of a container image in the Amazon ECR registry. Do not use for a function defined with a .zip file archive.</p>",
          "shape": "String"
        },
        "Publish": {
          "documentation": "<p>Set to true to publish a new version of the function after updating the code. This has the same effect as calling <a>PublishVersion</a> separately.</p>",
          "shape": "Boolean"
        },
        "RevisionId": {
          "documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.</p>",
          "shape": "String"
        },
        "S3Bucket": {
          "documentation": "<p>An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account. Use only with a function defined with a .zip file archive deployment package.</p>",
          "shape": "S3Bucket"
        },
        "S3Key": {
          "documentation": "<p>The Amazon S3 key of the deployment package. Use only with a function defined with a .zip file archive deployment package.</p>",
          "shape": "S3Key"
        },
        "S3ObjectVersion": {
          "documentation": "<p>For versioned objects, the version of the deployment package object to use.</p>",
          "shape": "S3ObjectVersion"
        },
        "ZipFile": {
          "documentation": "<p>The base64-encoded contents of the deployment package. Amazon Web Services SDK and Amazon Web Services CLI clients handle the encoding for you. Use only with a function defined with a .zip file archive deployment package.</p>",
          "shape": "Blob"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "UpdateFunctionConfigurationRequest": {
      "members": {
        "DeadLetterConfig": {
          "documentation": "<p>A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">Dead Letter Queues</a>.</p>",
          "shape": "DeadLetterConfig"
        },
        "Description": {
          "documentation": "<p>A description of the function.</p>",
          "shape": "Description"
        },
        "Environment": {
          "documentation": "<p>Environment variables that are accessible from function code during execution.</p>",
          "shape": "Environment"
        },
        "EphemeralStorage": {
          "documentation": "<p>The size of the function\u2019s /tmp directory in MB. The default value is 512, but can be any whole number between 512 and 10240 MB.</p>",
          "shape": "EphemeralStorage"
        },
        "FileSystemConfigs": {
          "documentation": "<p>Connection settings for an Amazon EFS file system.</p>",
          "shape": "FileSystemConfigList"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Handler": {
          "documentation": "<p>The name of the method within your code that Lambda calls to execute your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/programming-model-v2.html\">Programming Model</a>.</p>",
          "shape": "Handler"
        },
        "ImageConfig": {
          "documentation": "<p> <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/images-parms.html\">Container image configuration values</a> that override the values in the container image Docker file.</p>",
          "shape": "ImageConfig"
        },
        "KMSKeyArn": {
          "documentation": "<p>The ARN of the Amazon Web Services Key Management Service (KMS) key that's used to encrypt your function's environment variables. If it's not provided, Lambda uses a default service key.</p>",
          "shape": "KMSKeyArn"
        },
        "Layers": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.</p>",
          "shape": "LayerList"
        },
        "MemorySize": {
          "documentation": "<p>The amount of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-memory.html\">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.</p>",
          "shape": "MemorySize"
        },
        "RevisionId": {
          "documentation": "<p>Only update the function if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.</p>",
          "shape": "String"
        },
        "Role": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the function's execution role.</p>",
          "shape": "RoleArn"
        },
        "Runtime": {
          "documentation": "<p>The identifier of the function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime</a>. Runtime is required if the deployment package is a .zip file archive. </p>",
          "shape": "Runtime"
        },
        "Timeout": {
          "documentation": "<p>The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For additional information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html\">Lambda execution environment</a>.</p>",
          "shape": "Timeout"
        },
        "TracingConfig": {
          "documentation": "<p>Set <code>Mode</code> to <code>Active</code> to sample and trace a subset of incoming requests with <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html\">X-Ray</a>.</p>",
          "shape": "TracingConfig"
        },
        "VpcConfig": {
          "documentation": "<p>For network connectivity to Amazon Web Services resources in a VPC, specify a list of security groups and subnets in the VPC. When you connect a function to a VPC, it can only access resources and the internet through that VPC. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>",
          "shape": "VpcConfig"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "UpdateFunctionEventInvokeConfigRequest": {
      "members": {
        "DestinationConfig": {
          "documentation": "<p>A destination for events after they have been sent to a function for processing.</p> <p class=\"title\"> <b>Destinations</b> </p> <ul> <li> <p> <b>Function</b> - The Amazon Resource Name (ARN) of a Lambda function.</p> </li> <li> <p> <b>Queue</b> - The ARN of an SQS queue.</p> </li> <li> <p> <b>Topic</b> - The ARN of an SNS topic.</p> </li> <li> <p> <b>Event Bus</b> - The ARN of an Amazon EventBridge event bus.</p> </li> </ul>",
          "shape": "DestinationConfig"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function, version, or alias.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code> (name-only), <code>my-function:v1</code> (with alias).</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "MaximumEventAgeInSeconds": {
          "documentation": "<p>The maximum age of a request that Lambda sends to a function for processing.</p>",
          "shape": "MaximumEventAgeInSeconds"
        },
        "MaximumRetryAttempts": {
          "documentation": "<p>The maximum number of times to retry when the function returns an error.</p>",
          "shape": "MaximumRetryAttempts"
        },
        "Qualifier": {
          "documentation": "<p>A version number or alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "Qualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "UpdateFunctionUrlConfigRequest": {
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "FunctionName": {
          "documentation": "<p>The name of the Lambda function.</p> <p class=\"title\"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> - <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> - <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> - <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>",
          "location": "uri",
          "locationName": "FunctionName",
          "shape": "FunctionName"
        },
        "Qualifier": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "Qualifier",
          "shape": "FunctionUrlQualifier"
        }
      },
      "required": [
        "FunctionName"
      ],
      "type": "structure"
    },
    "UpdateFunctionUrlConfigResponse": {
      "members": {
        "AuthType": {
          "documentation": "<p>The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated <code>IAM</code> users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\"> Security and auth model for Lambda function URLs</a>.</p>",
          "shape": "FunctionUrlAuthType"
        },
        "Cors": {
          "documentation": "<p>The <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\">cross-origin resource sharing (CORS)</a> settings for your function URL.</p>",
          "shape": "Cors"
        },
        "CreationTime": {
          "documentation": "<p>When the function URL was created, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        },
        "FunctionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of your function.</p>",
          "shape": "FunctionArn"
        },
        "FunctionUrl": {
          "documentation": "<p>The HTTP URL endpoint for your function.</p>",
          "shape": "FunctionUrl"
        },
        "LastModifiedTime": {
          "documentation": "<p>When the function URL configuration was last updated, in <a href=\"https://www.w3.org/TR/NOTE-datetime\">ISO-8601 format</a> (YYYY-MM-DDThh:mm:ss.sTZD).</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "FunctionUrl",
        "FunctionArn",
        "AuthType",
        "CreationTime",
        "LastModifiedTime"
      ],
      "type": "structure"
    },
    "Version": {
      "max": 1024,
      "min": 1,
      "pattern": "(\\$LATEST|[0-9]+)",
      "type": "string"
    },
    "VpcConfig": {
      "documentation": "<p>The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html\">VPC Settings</a>.</p>",
      "members": {
        "SecurityGroupIds": {
          "documentation": "<p>A list of VPC security groups IDs.</p>",
          "shape": "SecurityGroupIds"
        },
        "SubnetIds": {
          "documentation": "<p>A list of VPC subnet IDs.</p>",
          "shape": "SubnetIds"
        }
      },
      "type": "structure"
    },
    "VpcConfigResponse": {
      "documentation": "<p>The VPC security groups and subnets that are attached to a Lambda function.</p>",
      "members": {
        "SecurityGroupIds": {
          "documentation": "<p>A list of VPC security groups IDs.</p>",
          "shape": "SecurityGroupIds"
        },
        "SubnetIds": {
          "documentation": "<p>A list of VPC subnet IDs.</p>",
          "shape": "SubnetIds"
        },
        "VpcId": {
          "documentation": "<p>The ID of the VPC.</p>",
          "shape": "VpcId"
        }
      },
      "type": "structure"
    },
    "VpcId": {
      "type": "string"
    },
    "Weight": {
      "max": 1.0,
      "min": 0.0,
      "type": "double"
    },
    "WorkingDirectory": {
      "max": 1000,
      "type": "string"
    }
  },
  "version": "2.0"
}
