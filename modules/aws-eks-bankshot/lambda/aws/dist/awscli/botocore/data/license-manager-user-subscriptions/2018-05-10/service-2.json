{
  "documentation": "<p>With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.</p>",
  "metadata": {
    "apiVersion": "2018-05-10",
    "endpointPrefix": "license-manager-user-subscriptions",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS License Manager User Subscriptions",
    "serviceId": "License Manager User Subscriptions",
    "signatureVersion": "v4",
    "signingName": "license-manager-user-subscriptions",
    "uid": "license-manager-user-subscriptions-2018-05-10"
  },
  "operations": {
    "AssociateUser": {
      "documentation": "<p>Associates the user to an EC2 instance to utilize user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/AssociateUser",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "AssociateUserRequest"
      },
      "name": "AssociateUser",
      "output": {
        "shape": "AssociateUserResponse"
      }
    },
    "DeregisterIdentityProvider": {
      "documentation": "<p>Deregisters the identity provider from providing user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/identity-provider/DeregisterIdentityProvider",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeregisterIdentityProviderRequest"
      },
      "name": "DeregisterIdentityProvider",
      "output": {
        "shape": "DeregisterIdentityProviderResponse"
      }
    },
    "DisassociateUser": {
      "documentation": "<p>Disassociates the user from an EC2 instance providing user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/DisassociateUser",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DisassociateUserRequest"
      },
      "name": "DisassociateUser",
      "output": {
        "shape": "DisassociateUserResponse"
      }
    },
    "ListIdentityProviders": {
      "documentation": "<p>Lists the identity providers for user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/identity-provider/ListIdentityProviders",
        "responseCode": 200
      },
      "input": {
        "shape": "ListIdentityProvidersRequest"
      },
      "name": "ListIdentityProviders",
      "output": {
        "shape": "ListIdentityProvidersResponse"
      }
    },
    "ListInstances": {
      "documentation": "<p>Lists the EC2 instances providing user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/instance/ListInstances",
        "responseCode": 200
      },
      "input": {
        "shape": "ListInstancesRequest"
      },
      "name": "ListInstances",
      "output": {
        "shape": "ListInstancesResponse"
      }
    },
    "ListProductSubscriptions": {
      "documentation": "<p>Lists the user-based subscription products available from an identity provider.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/ListProductSubscriptions",
        "responseCode": 200
      },
      "input": {
        "shape": "ListProductSubscriptionsRequest"
      },
      "name": "ListProductSubscriptions",
      "output": {
        "shape": "ListProductSubscriptionsResponse"
      }
    },
    "ListUserAssociations": {
      "documentation": "<p>Lists user associations for an identity provider.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/ListUserAssociations",
        "responseCode": 200
      },
      "input": {
        "shape": "ListUserAssociationsRequest"
      },
      "name": "ListUserAssociations",
      "output": {
        "shape": "ListUserAssociationsResponse"
      }
    },
    "RegisterIdentityProvider": {
      "documentation": "<p>Registers an identity provider for user-based subscriptions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/identity-provider/RegisterIdentityProvider",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "RegisterIdentityProviderRequest"
      },
      "name": "RegisterIdentityProvider",
      "output": {
        "shape": "RegisterIdentityProviderResponse"
      }
    },
    "StartProductSubscription": {
      "documentation": "<p>Starts a product subscription for a user with the specified identity provider.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/StartProductSubscription",
        "responseCode": 200
      },
      "input": {
        "shape": "StartProductSubscriptionRequest"
      },
      "name": "StartProductSubscription",
      "output": {
        "shape": "StartProductSubscriptionResponse"
      }
    },
    "StopProductSubscription": {
      "documentation": "<p>Stops a product subscription for a user with the specified identity provider.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/user/StopProductSubscription",
        "responseCode": 200
      },
      "input": {
        "shape": "StopProductSubscriptionRequest"
      },
      "name": "StopProductSubscription",
      "output": {
        "shape": "StopProductSubscriptionResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You don't have sufficient access to perform this action.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ActiveDirectoryIdentityProvider": {
      "documentation": "<p>Details about an Active Directory identity provider.</p>",
      "members": {
        "DirectoryId": {
          "documentation": "<p>The directory ID for an Active Directory identity provider.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AssociateUserRequest": {
      "members": {
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>The identity provider of the user.</p>",
          "shape": "IdentityProvider"
        },
        "InstanceId": {
          "documentation": "<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider for the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "InstanceId",
        "Username"
      ],
      "type": "structure"
    },
    "AssociateUserResponse": {
      "members": {
        "InstanceUserSummary": {
          "documentation": "<p>Metadata that describes the associate user operation.</p>",
          "shape": "InstanceUserSummary"
        }
      },
      "required": [
        "InstanceUserSummary"
      ],
      "type": "structure"
    },
    "BoxInteger": {
      "box": true,
      "type": "integer"
    },
    "ConflictException": {
      "documentation": "<p>The request couldn't be completed because it conflicted with the current state of the resource.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DeregisterIdentityProviderRequest": {
      "members": {
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product"
      ],
      "type": "structure"
    },
    "DeregisterIdentityProviderResponse": {
      "members": {
        "IdentityProviderSummary": {
          "documentation": "<p>Metadata that describes the results of an identity provider operation.</p>",
          "shape": "IdentityProviderSummary"
        }
      },
      "required": [
        "IdentityProviderSummary"
      ],
      "type": "structure"
    },
    "DisassociateUserRequest": {
      "members": {
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "InstanceId": {
          "documentation": "<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider for the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "InstanceId",
        "Username"
      ],
      "type": "structure"
    },
    "DisassociateUserResponse": {
      "members": {
        "InstanceUserSummary": {
          "documentation": "<p>Metadata that describes the associate user operation.</p>",
          "shape": "InstanceUserSummary"
        }
      },
      "required": [
        "InstanceUserSummary"
      ],
      "type": "structure"
    },
    "Filter": {
      "documentation": "<p>A filter name and value pair that is used to return more specific results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p>",
      "members": {
        "Attribute": {
          "documentation": "<p>The name of an attribute to use as a filter.</p>",
          "shape": "String"
        },
        "Operation": {
          "documentation": "<p>The type of search (For example, eq, geq, leq)</p>",
          "shape": "String"
        },
        "Value": {
          "documentation": "<p>Value of the filter.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "FilterList": {
      "member": {
        "shape": "Filter"
      },
      "type": "list"
    },
    "IdentityProvider": {
      "documentation": "<p>Details about an identity provider.</p>",
      "members": {
        "ActiveDirectoryIdentityProvider": {
          "documentation": "<p>An object that details an Active Directory identity provider.</p>",
          "shape": "ActiveDirectoryIdentityProvider"
        }
      },
      "type": "structure",
      "union": true
    },
    "IdentityProviderSummary": {
      "documentation": "<p>Describes an identity provider.</p>",
      "members": {
        "FailureMessage": {
          "documentation": "<p>The failure message associated with an identity provider.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The status of an identity provider.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product",
        "Status"
      ],
      "type": "structure"
    },
    "IdentityProviderSummaryList": {
      "member": {
        "shape": "IdentityProviderSummary"
      },
      "type": "list"
    },
    "InstanceSummary": {
      "documentation": "<p>Describes an EC2 instance providing user-based subscriptions.</p>",
      "members": {
        "InstanceId": {
          "documentation": "<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>",
          "shape": "String"
        },
        "LastStatusCheckDate": {
          "documentation": "<p>The date of the last status check.</p>",
          "shape": "String"
        },
        "Products": {
          "documentation": "<p>A list of provided user-based subscription products.</p>",
          "shape": "StringList"
        },
        "Status": {
          "documentation": "<p>The status of an EC2 instance resource.</p>",
          "shape": "String"
        },
        "StatusMessage": {
          "documentation": "<p>The status message for an EC2 instance.</p>",
          "shape": "String"
        }
      },
      "required": [
        "InstanceId",
        "Products",
        "Status"
      ],
      "type": "structure"
    },
    "InstanceSummaryList": {
      "member": {
        "shape": "InstanceSummary"
      },
      "type": "list"
    },
    "InstanceUserSummary": {
      "documentation": "<p>Describes users of an EC2 instance providing user-based subscriptions.</p>",
      "members": {
        "AssociationDate": {
          "documentation": "<p>The date a user was associated with an EC2 instance.</p>",
          "shape": "String"
        },
        "DisassociationDate": {
          "documentation": "<p>The date a user was disassociated from an EC2 instance.</p>",
          "shape": "String"
        },
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "InstanceId": {
          "documentation": "<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The status of a user associated with an EC2 instance.</p>",
          "shape": "String"
        },
        "StatusMessage": {
          "documentation": "<p>The status message for users of an EC2 instance.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider for the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "InstanceId",
        "Status",
        "Username"
      ],
      "type": "structure"
    },
    "InstanceUserSummaryList": {
      "member": {
        "shape": "InstanceUserSummary"
      },
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>An exception occurred with the service.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListIdentityProvidersRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListIdentityProvidersResponse": {
      "members": {
        "IdentityProviderSummaries": {
          "documentation": "<p>Metadata that describes the list identity providers operation.</p>",
          "shape": "IdentityProviderSummaryList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProviderSummaries"
      ],
      "type": "structure"
    },
    "ListInstancesRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>An array of structures that you can use to filter the results to those that match one or more sets of key-value pairs that you specify.</p>",
          "shape": "FilterList"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListInstancesResponse": {
      "members": {
        "InstanceSummaries": {
          "documentation": "<p>Metadata that describes the list instances operation.</p>",
          "shape": "InstanceSummaryList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListProductSubscriptionsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>An array of structures that you can use to filter the results to those that match one or more sets of key-value pairs that you specify.</p>",
          "shape": "FilterList"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product"
      ],
      "type": "structure"
    },
    "ListProductSubscriptionsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        },
        "ProductUserSummaries": {
          "documentation": "<p>Metadata that describes the list product subscriptions operation.</p>",
          "shape": "ProductUserSummaryList"
        }
      },
      "type": "structure"
    },
    "ListUserAssociationsRequest": {
      "members": {
        "Filters": {
          "documentation": "<p>An array of structures that you can use to filter the results to those that match one or more sets of key-value pairs that you specify.</p>",
          "shape": "FilterList"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "InstanceId": {
          "documentation": "<p>The ID of the EC2 instance, which provides user-based subscriptions.</p>",
          "shape": "String"
        },
        "MaxResults": {
          "documentation": "<p>Maximum number of results to return in a single call.</p>",
          "shape": "BoxInteger"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "InstanceId"
      ],
      "type": "structure"
    },
    "ListUserAssociationsResponse": {
      "members": {
        "InstanceUserSummaries": {
          "documentation": "<p>Metadata that describes the list user association operation.</p>",
          "shape": "InstanceUserSummaryList"
        },
        "NextToken": {
          "documentation": "<p>Token for the next set of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ProductUserSummary": {
      "documentation": "<p>The summary of the user-based subscription products for a user.</p>",
      "members": {
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The status of a product for a user.</p>",
          "shape": "String"
        },
        "StatusMessage": {
          "documentation": "<p>The status message for a product for a user.</p>",
          "shape": "String"
        },
        "SubscriptionEndDate": {
          "documentation": "<p>The end date of a subscription.</p>",
          "shape": "String"
        },
        "SubscriptionStartDate": {
          "documentation": "<p>The start date of a subscription.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider of the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product",
        "Status",
        "Username"
      ],
      "type": "structure"
    },
    "ProductUserSummaryList": {
      "member": {
        "shape": "ProductUserSummary"
      },
      "type": "list"
    },
    "RegisterIdentityProviderRequest": {
      "members": {
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product"
      ],
      "type": "structure"
    },
    "RegisterIdentityProviderResponse": {
      "members": {
        "IdentityProviderSummary": {
          "documentation": "<p>Metadata that describes the results of an identity provider operation.</p>",
          "shape": "IdentityProviderSummary"
        }
      },
      "required": [
        "IdentityProviderSummary"
      ],
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The resource couldn't be found.</p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The request failed because a service quota is exceeded.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StartProductSubscriptionRequest": {
      "members": {
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider of the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product",
        "Username"
      ],
      "type": "structure"
    },
    "StartProductSubscriptionResponse": {
      "members": {
        "ProductUserSummary": {
          "documentation": "<p>Metadata that describes the start product subscription operation.</p>",
          "shape": "ProductUserSummary"
        }
      },
      "required": [
        "ProductUserSummary"
      ],
      "type": "structure"
    },
    "StopProductSubscriptionRequest": {
      "members": {
        "Domain": {
          "documentation": "<p>The domain name of the user.</p>",
          "shape": "String"
        },
        "IdentityProvider": {
          "documentation": "<p>An object that specifies details for the identity provider.</p>",
          "shape": "IdentityProvider"
        },
        "Product": {
          "documentation": "<p>The name of the user-based subscription product.</p>",
          "shape": "String"
        },
        "Username": {
          "documentation": "<p>The user name from the identity provider for the user.</p>",
          "shape": "String"
        }
      },
      "required": [
        "IdentityProvider",
        "Product",
        "Username"
      ],
      "type": "structure"
    },
    "StopProductSubscriptionResponse": {
      "members": {
        "ProductUserSummary": {
          "documentation": "<p>Metadata that describes the start product subscription operation.</p>",
          "shape": "ProductUserSummary"
        }
      },
      "required": [
        "ProductUserSummary"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied because of request throttling. Retry the request.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>A parameter is not valid.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
