{
  "documentation": "<p>AWS Identity and Access Management Roles Anywhere provides a secure way for your workloads such as servers, containers, and applications running outside of AWS to obtain Temporary AWS credentials. Your workloads can use the same IAM policies and roles that you have configured with native AWS applications to access AWS resources. Using IAM Roles Anywhere will eliminate the need to manage long term credentials for workloads running outside of AWS.</p> <p>To use IAM Roles Anywhere customer workloads will need to use X.509 certificates issued by their Certificate Authority (CA) . The Certificate Authority (CA) needs to be registered with IAM Roles Anywhere as a trust anchor to establish trust between customer PKI and IAM Roles Anywhere. Customers who do not manage their own PKI system can use AWS Certificate Manager Private Certificate Authority (ACM PCA) to create a Certificate Authority and use that to establish trust with IAM Roles Anywhere</p> <p>This guide describes the IAM rolesanywhere operations that you can call programmatically. For general information about IAM Roles Anywhere see <a href=\"https://docs.aws.amazon.com/\">https://docs.aws.amazon.com/</a> </p>",
  "metadata": {
    "apiVersion": "2018-05-10",
    "endpointPrefix": "rolesanywhere",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "IAM Roles Anywhere",
    "serviceId": "RolesAnywhere",
    "signatureVersion": "v4",
    "signingName": "rolesanywhere",
    "uid": "rolesanywhere-2018-05-10"
  },
  "operations": {
    "CreateProfile": {
      "documentation": "<p>Creates a profile. A profile is configuration resource to list the roles that RolesAnywhere service is trusted to assume. In addition, by applying a profile you can intersect permissions with IAM managed policies.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:CreateProfile</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/profiles",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateProfileRequest"
      },
      "name": "CreateProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "CreateTrustAnchor": {
      "documentation": "<p>Creates a trust anchor. You establish trust between IAM Roles Anywhere and your certificate authority (CA) by configuring a trust anchor. A Trust Anchor is defined either as a reference to a AWS Certificate Manager Private Certificate Authority (ACM PCA), or by uploading a Certificate Authority (CA) certificate. Your AWS workloads can authenticate with the trust anchor using certificates issued by the trusted Certificate Authority (CA) in exchange for temporary AWS credentials.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:CreateTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/trustanchors",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateTrustAnchorRequest"
      },
      "name": "CreateTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    },
    "DeleteCrl": {
      "documentation": "<p>Deletes a certificate revocation list (CRL).</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DeleteCrl</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/crl/{crlId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ScalarCrlRequest"
      },
      "name": "DeleteCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "DeleteProfile": {
      "documentation": "<p>Deletes a profile.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DeleteProfile</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/profile/{profileId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ScalarProfileRequest"
      },
      "name": "DeleteProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "DeleteTrustAnchor": {
      "documentation": "<p>Deletes a trust anchor.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DeleteTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/trustanchor/{trustAnchorId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ScalarTrustAnchorRequest"
      },
      "name": "DeleteTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    },
    "DisableCrl": {
      "documentation": "<p>Disables a certificate revocation list (CRL).</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DisableCrl</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/crl/{crlId}/disable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarCrlRequest"
      },
      "name": "DisableCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "DisableProfile": {
      "documentation": "<p>Disables a profile. When disabled, <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> requests with this profile fail.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DisableProfile</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/profile/{profileId}/disable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarProfileRequest"
      },
      "name": "DisableProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "DisableTrustAnchor": {
      "documentation": "<p>Disables a trust anchor. When disabled, <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> requests specifying this trust anchor are unauthorized.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:DisableTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/trustanchor/{trustAnchorId}/disable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarTrustAnchorRequest"
      },
      "name": "DisableTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    },
    "EnableCrl": {
      "documentation": "<p>Enables a certificate revocation list (CRL). When enabled, certificates stored in the CRL are unauthorized to receive session credentials.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:EnableCrl</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/crl/{crlId}/enable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarCrlRequest"
      },
      "name": "EnableCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "EnableProfile": {
      "documentation": "<p>Enables the roles in a profile to receive session credentials in <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a>. </p> <p> <b>Required permissions: </b> <code>rolesanywhere:EnableProfile</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/profile/{profileId}/enable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarProfileRequest"
      },
      "name": "EnableProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "EnableTrustAnchor": {
      "documentation": "<p>Enables a trust anchor. When enabled, certificates in the trust anchor chain are authorized for trust validation. </p> <p> <b>Required permissions: </b> <code>rolesanywhere:EnableTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/trustanchor/{trustAnchorId}/enable",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarTrustAnchorRequest"
      },
      "name": "EnableTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    },
    "GetCrl": {
      "documentation": "<p>Gets a certificate revocation list (CRL).</p> <p> <b>Required permissions: </b> <code>rolesanywhere:GetCrl</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/crl/{crlId}",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarCrlRequest"
      },
      "name": "GetCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "GetProfile": {
      "documentation": "<p>Gets a profile.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:GetProfile</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/profile/{profileId}",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarProfileRequest"
      },
      "name": "GetProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "GetSubject": {
      "documentation": "<p>Gets a Subject. A Subject associates a certificate identity with authentication attempts by CreateSession. The Subject resources stores audit information such as status of the last authentication attempt, the certificate data used in the attempt, and the last time the associated identity attempted authentication. </p> <p> <b>Required permissions: </b> <code>rolesanywhere:GetSubject</code>. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/subject/{subjectId}",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarSubjectRequest"
      },
      "name": "GetSubject",
      "output": {
        "shape": "SubjectDetailResponse"
      }
    },
    "GetTrustAnchor": {
      "documentation": "<p>Gets a trust anchor.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:GetTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/trustanchor/{trustAnchorId}",
        "responseCode": 200
      },
      "input": {
        "shape": "ScalarTrustAnchorRequest"
      },
      "name": "GetTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    },
    "ImportCrl": {
      "documentation": "<p>Imports the certificate revocation list (CRL). CRl is a list of certificates that have been revoked by the issuing certificate Authority (CA). IAM Roles Anywhere validates against the crl list before issuing credentials. </p> <p> <b>Required permissions: </b> <code>rolesanywhere:ImportCrl</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/crls",
        "responseCode": 201
      },
      "input": {
        "shape": "ImportCrlRequest"
      },
      "name": "ImportCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "ListCrls": {
      "documentation": "<p>Lists all Crls in the authenticated account and Amazon Web Services Region.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:ListCrls</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/crls",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRequest"
      },
      "name": "ListCrls",
      "output": {
        "shape": "ListCrlsResponse"
      }
    },
    "ListProfiles": {
      "documentation": "<p>Lists all profiles in the authenticated account and Amazon Web Services Region.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:ListProfiles</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/profiles",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRequest"
      },
      "name": "ListProfiles",
      "output": {
        "shape": "ListProfilesResponse"
      }
    },
    "ListSubjects": {
      "documentation": "<p>Lists the subjects in the authenticated account and Amazon Web Services Region.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:ListSubjects</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/subjects",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRequest"
      },
      "name": "ListSubjects",
      "output": {
        "shape": "ListSubjectsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags attached to the resource.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:ListTagsForResource</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/ListTagsForResource",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTrustAnchors": {
      "documentation": "<p>Lists the trust anchors in the authenticated account and Amazon Web Services Region.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:ListTrustAnchors</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/trustanchors",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRequest"
      },
      "name": "ListTrustAnchors",
      "output": {
        "shape": "ListTrustAnchorsResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Attaches tags to a resource.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:TagResource</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyTagsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/TagResource",
        "responseCode": 201
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes tags from the resource.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:UntagResource</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/UntagResource",
        "responseCode": 200
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateCrl": {
      "documentation": "<p>Updates the certificate revocation list (CRL). CRl is a list of certificates that have been revoked by the issuing certificate Authority (CA). IAM Roles Anywhere validates against the crl list before issuing credentials.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:UpdateCrl</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/crl/{crlId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateCrlRequest"
      },
      "name": "UpdateCrl",
      "output": {
        "shape": "CrlDetailResponse"
      }
    },
    "UpdateProfile": {
      "documentation": "<p>Updates the profile. A profile is configuration resource to list the roles that RolesAnywhere service is trusted to assume. In addition, by applying a profile you can scope-down permissions with IAM managed policies.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:UpdateProfile</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/profile/{profileId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateProfileRequest"
      },
      "name": "UpdateProfile",
      "output": {
        "shape": "ProfileDetailResponse"
      }
    },
    "UpdateTrustAnchor": {
      "documentation": "<p>Updates the trust anchor.You establish trust between IAM Roles Anywhere and your certificate authority (CA) by configuring a trust anchor. A Trust Anchor is defined either as a reference to a AWS Certificate Manager Private Certificate Authority (ACM PCA), or by uploading a Certificate Authority (CA) certificate. Your AWS workloads can authenticate with the trust anchor using certificates issued by the trusted Certificate Authority (CA) in exchange for temporary AWS credentials.</p> <p> <b>Required permissions: </b> <code>rolesanywhere:UpdateTrustAnchor</code>. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/trustanchor/{trustAnchorId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateTrustAnchorRequest"
      },
      "name": "UpdateTrustAnchor",
      "output": {
        "shape": "TrustAnchorDetailResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AmazonResourceName": {
      "max": 1011,
      "min": 1,
      "type": "string"
    },
    "Blob": {
      "type": "blob"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "CreateProfileRequest": {
      "members": {
        "durationSeconds": {
          "documentation": "<p> The number of seconds the vended session credentials are valid for. </p>",
          "shape": "CreateProfileRequestDurationSecondsInteger"
        },
        "enabled": {
          "documentation": "<p>Specifies whether the profile is enabled.</p>",
          "shape": "Boolean"
        },
        "managedPolicyArns": {
          "documentation": "<p>A list of managed policy ARNs that apply to the vended session credentials. </p>",
          "shape": "ManagedPolicyList"
        },
        "name": {
          "documentation": "<p>The name of the profile.</p>",
          "shape": "ResourceName"
        },
        "requireInstanceProperties": {
          "documentation": "<p>Specifies whether instance properties are required in <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> requests with this profile. </p>",
          "shape": "Boolean"
        },
        "roleArns": {
          "documentation": "<p>A list of IAM roles that this profile can assume in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "RoleArnList"
        },
        "sessionPolicy": {
          "documentation": "<p>A session policy that applies to the trust boundary of the vended session credentials. </p>",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>The tags to attach to the profile.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "name",
        "roleArns"
      ],
      "type": "structure"
    },
    "CreateProfileRequestDurationSecondsInteger": {
      "box": true,
      "max": 43200,
      "min": 900,
      "type": "integer"
    },
    "CreateTrustAnchorRequest": {
      "members": {
        "enabled": {
          "documentation": "<p>Specifies whether the trust anchor is enabled.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p>The name of the trust anchor.</p>",
          "shape": "ResourceName"
        },
        "source": {
          "documentation": "<p>The trust anchor type and its related certificate data.</p>",
          "shape": "Source"
        },
        "tags": {
          "documentation": "<p>The tags to attach to the trust anchor.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "name",
        "source"
      ],
      "type": "structure"
    },
    "CredentialSummaries": {
      "member": {
        "shape": "CredentialSummary"
      },
      "type": "list"
    },
    "CredentialSummary": {
      "documentation": "<p>A record of a presented X509 credential to <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a>. </p>",
      "members": {
        "enabled": {
          "documentation": "<p>Indicates whether the credential is enabled.</p>",
          "shape": "Boolean"
        },
        "failed": {
          "documentation": "<p>Indicates whether the <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation was successful. </p>",
          "shape": "Boolean"
        },
        "issuer": {
          "documentation": "<p>The fully qualified domain name of the issuing certificate for the presented end-entity certificate.</p>",
          "shape": "String"
        },
        "seenAt": {
          "documentation": "<p>The ISO-8601 time stamp of when the certificate was last used in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "serialNumber": {
          "documentation": "<p>The serial number of the certificate.</p>",
          "shape": "String"
        },
        "x509CertificateData": {
          "documentation": "<p>The PEM-encoded data of the certificate.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CrlDetail": {
      "documentation": "<p>The state of the certificate revocation list (CRL) after a read or write operation.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The ISO-8601 timestamp when the certificate revocation list (CRL) was created. </p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "crlArn": {
          "documentation": "<p>The ARN of the certificate revocation list (CRL).</p>",
          "shape": "String"
        },
        "crlData": {
          "documentation": "<p>The state of the certificate revocation list (CRL) after a read or write operation.</p>",
          "shape": "Blob"
        },
        "crlId": {
          "documentation": "<p>The unique identifier of the certificate revocation list (CRL).</p>",
          "shape": "Uuid"
        },
        "enabled": {
          "documentation": "<p>Indicates whether the certificate revocation list (CRL) is enabled.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p>The name of the certificate revocation list (CRL).</p>",
          "shape": "String"
        },
        "trustAnchorArn": {
          "documentation": "<p>The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for. </p>",
          "shape": "String"
        },
        "updatedAt": {
          "documentation": "<p>The ISO-8601 timestamp when the certificate revocation list (CRL) was last updated. </p>",
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "type": "structure"
    },
    "CrlDetailResponse": {
      "members": {
        "crl": {
          "documentation": "<p>The state of the certificate revocation list (CRL) after a read or write operation.</p>",
          "shape": "CrlDetail"
        }
      },
      "required": [
        "crl"
      ],
      "type": "structure"
    },
    "CrlDetails": {
      "member": {
        "shape": "CrlDetail"
      },
      "type": "list"
    },
    "ImportCrlRequest": {
      "members": {
        "crlData": {
          "documentation": "<p>The x509 v3 specified certificate revocation list</p>",
          "shape": "ImportCrlRequestCrlDataBlob"
        },
        "enabled": {
          "documentation": "<p>Specifies whether the certificate revocation list (CRL) is enabled.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p>The name of the certificate revocation list (CRL).</p>",
          "shape": "ResourceName"
        },
        "tags": {
          "documentation": "<p>A list of tags to attach to the certificate revocation list (CRL).</p>",
          "shape": "TagList"
        },
        "trustAnchorArn": {
          "documentation": "<p>The ARN of the TrustAnchor the certificate revocation list (CRL) will provide revocation for.</p>",
          "shape": "TrustAnchorArn"
        }
      },
      "required": [
        "crlData",
        "name",
        "trustAnchorArn"
      ],
      "type": "structure"
    },
    "ImportCrlRequestCrlDataBlob": {
      "max": 300000,
      "min": 1,
      "type": "blob"
    },
    "InstanceProperties": {
      "member": {
        "shape": "InstanceProperty"
      },
      "type": "list"
    },
    "InstanceProperty": {
      "documentation": "<p>A key-value pair you set that identifies a property of the authenticating instance.</p>",
      "members": {
        "failed": {
          "documentation": "<p>Indicates whether the <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation was successful. </p>",
          "shape": "Boolean"
        },
        "properties": {
          "documentation": "<p>A list of instanceProperty objects. </p>",
          "shape": "InstancePropertyMap"
        },
        "seenAt": {
          "documentation": "<p>The ISO-8601 time stamp of when the certificate was last used in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "type": "structure"
    },
    "InstancePropertyMap": {
      "key": {
        "shape": "InstancePropertyMapKeyString"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "InstancePropertyMapValueString"
      }
    },
    "InstancePropertyMapKeyString": {
      "max": 200,
      "min": 1,
      "type": "string"
    },
    "InstancePropertyMapValueString": {
      "max": 200,
      "min": 1,
      "type": "string"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "ListCrlsResponse": {
      "members": {
        "crls": {
          "documentation": "<p>A list of certificate revocation lists (CRL). </p>",
          "shape": "CrlDetails"
        },
        "nextToken": {
          "documentation": "<p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListProfilesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>",
          "shape": "String"
        },
        "profiles": {
          "documentation": "<p>A list of profiles.</p>",
          "shape": "ProfileDetails"
        }
      },
      "type": "structure"
    },
    "ListRequest": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "ListRequestNextTokenString"
        },
        "pageSize": {
          "documentation": "<p>The number of resources in the paginated list. </p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ListRequestNextTokenString": {
      "max": 10000,
      "min": 1,
      "type": "string"
    },
    "ListSubjectsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>",
          "shape": "String"
        },
        "subjects": {
          "documentation": "<p>A list of subjects.</p>",
          "shape": "SubjectSummaries"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "querystring",
          "locationName": "resourceArn",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>A list of tags attached to the resource.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTrustAnchorsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that indicates where the output should continue from, if a previous operation did not show all results. To get the next results, call the operation again with this value.</p>",
          "shape": "String"
        },
        "trustAnchors": {
          "documentation": "<p>A list of trust anchors.</p>",
          "shape": "TrustAnchorDetails"
        }
      },
      "type": "structure"
    },
    "ManagedPolicyList": {
      "max": 50,
      "member": {
        "shape": "ManagedPolicyListMemberString"
      },
      "min": 0,
      "type": "list"
    },
    "ManagedPolicyListMemberString": {
      "max": 200,
      "min": 1,
      "type": "string"
    },
    "ProfileArn": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn:aws(-[^:]+)?:rolesanywhere(:.*){2}(:profile.*)$",
      "type": "string"
    },
    "ProfileDetail": {
      "documentation": "<p>The state of the profile after a read or write operation.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The ISO-8601 timestamp when the profile was created. </p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "createdBy": {
          "documentation": "<p>The Amazon Web Services account that created the profile.</p>",
          "shape": "String"
        },
        "durationSeconds": {
          "documentation": "<p> The number of seconds the vended session credentials are valid for. </p>",
          "shape": "Integer"
        },
        "enabled": {
          "documentation": "<p>Indicates whether the profile is enabled.</p>",
          "shape": "Boolean"
        },
        "managedPolicyArns": {
          "documentation": "<p>A list of managed policy ARNs that apply to the vended session credentials. </p>",
          "shape": "ManagedPolicyList"
        },
        "name": {
          "documentation": "<p>The name of the profile.</p>",
          "shape": "ResourceName"
        },
        "profileArn": {
          "documentation": "<p>The ARN of the profile.</p>",
          "shape": "ProfileArn"
        },
        "profileId": {
          "documentation": "<p>The unique identifier of the profile.</p>",
          "shape": "Uuid"
        },
        "requireInstanceProperties": {
          "documentation": "<p>Specifies whether instance properties are required in <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> requests with this profile. </p>",
          "shape": "Boolean"
        },
        "roleArns": {
          "documentation": "<p>A list of IAM roles that this profile can assume in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "RoleArnList"
        },
        "sessionPolicy": {
          "documentation": "<p>A session policy that applies to the trust boundary of the vended session credentials. </p>",
          "shape": "String"
        },
        "updatedAt": {
          "documentation": "<p>The ISO-8601 timestamp when the profile was last updated. </p>",
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "type": "structure"
    },
    "ProfileDetailResponse": {
      "members": {
        "profile": {
          "documentation": "<p>The state of the profile after a read or write operation.</p>",
          "shape": "ProfileDetail"
        }
      },
      "type": "structure"
    },
    "ProfileDetails": {
      "member": {
        "shape": "ProfileDetail"
      },
      "type": "list"
    },
    "ResourceName": {
      "max": 255,
      "min": 1,
      "pattern": "^[ a-zA-Z0-9-_]*$",
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The resource could not be found.</p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn:aws(-[^:]+)?:iam(:.*){2}(:role.*)$",
      "type": "string"
    },
    "RoleArnList": {
      "max": 50,
      "member": {
        "shape": "RoleArn"
      },
      "min": 0,
      "type": "list"
    },
    "ScalarCrlRequest": {
      "members": {
        "crlId": {
          "documentation": "<p>The unique identifier of the certificate revocation list (CRL).</p>",
          "location": "uri",
          "locationName": "crlId",
          "shape": "Uuid"
        }
      },
      "required": [
        "crlId"
      ],
      "type": "structure"
    },
    "ScalarProfileRequest": {
      "members": {
        "profileId": {
          "documentation": "<p>The unique identifier of the profile.</p>",
          "location": "uri",
          "locationName": "profileId",
          "shape": "Uuid"
        }
      },
      "required": [
        "profileId"
      ],
      "type": "structure"
    },
    "ScalarSubjectRequest": {
      "members": {
        "subjectId": {
          "documentation": "<p>The unique identifier of the subject. </p>",
          "location": "uri",
          "locationName": "subjectId",
          "shape": "Uuid"
        }
      },
      "required": [
        "subjectId"
      ],
      "type": "structure"
    },
    "ScalarTrustAnchorRequest": {
      "members": {
        "trustAnchorId": {
          "documentation": "<p>The unique identifier of the trust anchor.</p>",
          "location": "uri",
          "locationName": "trustAnchorId",
          "shape": "Uuid"
        }
      },
      "required": [
        "trustAnchorId"
      ],
      "type": "structure"
    },
    "Source": {
      "documentation": "<p>The trust anchor type and its related certificate data.</p>",
      "members": {
        "sourceData": {
          "documentation": "<p>The data field of the trust anchor depending on its type. </p>",
          "shape": "SourceData"
        },
        "sourceType": {
          "documentation": "<p>The type of the trust anchor. </p>",
          "shape": "TrustAnchorType"
        }
      },
      "type": "structure"
    },
    "SourceData": {
      "documentation": "<p>The data field of the trust anchor depending on its type. </p>",
      "members": {
        "acmPcaArn": {
          "documentation": "<p>The root certificate of the Certificate Manager Private Certificate Authority specified by this ARN is used in trust validation for <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operations. Included for trust anchors of type <code>AWS_ACM_PCA</code>. </p>",
          "shape": "String"
        },
        "x509CertificateData": {
          "documentation": "<p>The PEM-encoded data for the certificate anchor. Included for trust anchors of type <code>CERTIFICATE_BUNDLE</code>. </p>",
          "shape": "String"
        }
      },
      "type": "structure",
      "union": true
    },
    "String": {
      "type": "string"
    },
    "SubjectDetail": {
      "documentation": "<p>The state of the subject after a read or write operation.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The ISO-8601 timestamp when the subject was created. </p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "credentials": {
          "documentation": "<p>The temporary session credentials vended at the last authenticating call with this Subject.</p>",
          "shape": "CredentialSummaries"
        },
        "enabled": {
          "documentation": "<p>The enabled status of the subject.</p>",
          "shape": "Boolean"
        },
        "instanceProperties": {
          "documentation": "<p>The specified instance properties associated with the request.</p>",
          "shape": "InstanceProperties"
        },
        "lastSeenAt": {
          "documentation": "<p>The ISO-8601 timestamp of the last time this Subject requested temporary session credentials.</p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "subjectArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "String"
        },
        "subjectId": {
          "documentation": "<p>The id of the resource</p>",
          "shape": "Uuid"
        },
        "updatedAt": {
          "documentation": "<p>The ISO-8601 timestamp when the subject was last updated.</p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "x509Subject": {
          "documentation": "<p>The x509 principal identifier of the authenticating certificate.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SubjectDetailResponse": {
      "members": {
        "subject": {
          "documentation": "<p>The state of the subject after a read or write operation.</p>",
          "shape": "SubjectDetail"
        }
      },
      "type": "structure"
    },
    "SubjectSummaries": {
      "member": {
        "shape": "SubjectSummary"
      },
      "type": "list"
    },
    "SubjectSummary": {
      "documentation": "<p>A summary representation of Subject resources returned in read operations; primarily ListSubjects.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The ISO-8601 time stamp of when the certificate was first used in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "enabled": {
          "documentation": "<p>The enabled status of the Subject. </p>",
          "shape": "Boolean"
        },
        "lastSeenAt": {
          "documentation": "<p>The ISO-8601 time stamp of when the certificate was last used in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "subjectArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "String"
        },
        "subjectId": {
          "documentation": "<p>The id of the resource.</p>",
          "shape": "Uuid"
        },
        "updatedAt": {
          "documentation": "<p>The ISO-8601 timestamp when the subject was last updated. </p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "x509Subject": {
          "documentation": "<p>The x509 principal identifier of the authenticating certificate.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SyntheticTimestamp_date_time": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "Tag": {
      "documentation": "<p>A label that consists of a key and value you define. </p>",
      "members": {
        "key": {
          "documentation": "<p>The tag key.</p>",
          "shape": "TagKey"
        },
        "value": {
          "documentation": "<p>The tag value.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^[ a-zA-Z0-9_.:/=+@-]*$",
      "sensitive": true,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagList": {
      "max": 50,
      "member": {
        "shape": "Tag"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "AmazonResourceName"
        },
        "tags": {
          "documentation": "<p>The tags to attach to the resource.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "^[ a-zA-Z0-9_.:/=+@-]*$",
      "sensitive": true,
      "type": "string"
    },
    "TooManyTagsException": {
      "documentation": "<p>Too many tags.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TrustAnchorArn": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn:aws(-[^:]+)?:rolesanywhere(:.*){2}(:trust-anchor.*)$",
      "type": "string"
    },
    "TrustAnchorDetail": {
      "documentation": "<p>The state of the trust anchor after a read or write operation. </p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The ISO-8601 timestamp when the trust anchor was created. </p>",
          "shape": "SyntheticTimestamp_date_time"
        },
        "enabled": {
          "documentation": "<p>Indicates whether the trust anchor is enabled.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p>The name of the trust anchor.</p>",
          "shape": "ResourceName"
        },
        "source": {
          "documentation": "<p>The trust anchor type and its related certificate data.</p>",
          "shape": "Source"
        },
        "trustAnchorArn": {
          "documentation": "<p>The ARN of the trust anchor.</p>",
          "shape": "String"
        },
        "trustAnchorId": {
          "documentation": "<p>The unique identifier of the trust anchor.</p>",
          "shape": "Uuid"
        },
        "updatedAt": {
          "documentation": "<p>The ISO-8601 timestamp when the trust anchor was last updated. </p>",
          "shape": "SyntheticTimestamp_date_time"
        }
      },
      "type": "structure"
    },
    "TrustAnchorDetailResponse": {
      "members": {
        "trustAnchor": {
          "documentation": "<p>The state of the trust anchor after a read or write operation. </p>",
          "shape": "TrustAnchorDetail"
        }
      },
      "required": [
        "trustAnchor"
      ],
      "type": "structure"
    },
    "TrustAnchorDetails": {
      "member": {
        "shape": "TrustAnchorDetail"
      },
      "type": "list"
    },
    "TrustAnchorType": {
      "enum": [
        "AWS_ACM_PCA",
        "CERTIFICATE_BUNDLE",
        "SELF_SIGNED_REPOSITORY"
      ],
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "AmazonResourceName"
        },
        "tagKeys": {
          "documentation": "<p>A list of keys. Tag keys are the unique identifiers of tags. </p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateCrlRequest": {
      "members": {
        "crlData": {
          "documentation": "<p>The x509 v3 specified certificate revocation list</p>",
          "shape": "UpdateCrlRequestCrlDataBlob"
        },
        "crlId": {
          "documentation": "<p>The unique identifier of the certificate revocation list (CRL).</p>",
          "location": "uri",
          "locationName": "crlId",
          "shape": "Uuid"
        },
        "name": {
          "documentation": "<p>The name of the Crl.</p>",
          "shape": "ResourceName"
        }
      },
      "required": [
        "crlId"
      ],
      "type": "structure"
    },
    "UpdateCrlRequestCrlDataBlob": {
      "max": 300000,
      "min": 1,
      "type": "blob"
    },
    "UpdateProfileRequest": {
      "members": {
        "durationSeconds": {
          "documentation": "<p> The number of seconds the vended session credentials are valid for. </p>",
          "shape": "UpdateProfileRequestDurationSecondsInteger"
        },
        "managedPolicyArns": {
          "documentation": "<p>A list of managed policy ARNs that apply to the vended session credentials. </p>",
          "shape": "ManagedPolicyList"
        },
        "name": {
          "documentation": "<p>The name of the profile.</p>",
          "shape": "ResourceName"
        },
        "profileId": {
          "documentation": "<p>The unique identifier of the profile.</p>",
          "location": "uri",
          "locationName": "profileId",
          "shape": "Uuid"
        },
        "roleArns": {
          "documentation": "<p>A list of IAM roles that this profile can assume in a <a href=\"https://docs.aws.amazon.com/rolesanywhere/latest/APIReference/API_CreateSession.html\">CreateSession</a> operation.</p>",
          "shape": "RoleArnList"
        },
        "sessionPolicy": {
          "documentation": "<p>A session policy that applies to the trust boundary of the vended session credentials. </p>",
          "shape": "UpdateProfileRequestSessionPolicyString"
        }
      },
      "required": [
        "profileId"
      ],
      "type": "structure"
    },
    "UpdateProfileRequestDurationSecondsInteger": {
      "box": true,
      "max": 43200,
      "min": 900,
      "type": "integer"
    },
    "UpdateProfileRequestSessionPolicyString": {
      "max": 100000,
      "min": 1,
      "type": "string"
    },
    "UpdateTrustAnchorRequest": {
      "members": {
        "name": {
          "documentation": "<p>The name of the trust anchor.</p>",
          "shape": "ResourceName"
        },
        "source": {
          "documentation": "<p>The trust anchor type and its related certificate data.</p>",
          "shape": "Source"
        },
        "trustAnchorId": {
          "documentation": "<p>The unique identifier of the trust anchor.</p>",
          "location": "uri",
          "locationName": "trustAnchorId",
          "shape": "Uuid"
        }
      },
      "required": [
        "trustAnchorId"
      ],
      "type": "structure"
    },
    "Uuid": {
      "max": 36,
      "min": 36,
      "pattern": "[a-f0-9]{8}-([a-z0-9]{4}-){3}[a-z0-9]{12}",
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>Validation exception error.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
