{
  "documentation": "<p>Amazon HealthLake is a HIPAA eligibile service that allows customers to store, transform, query, and analyze their FHIR-formatted data in a consistent fashion in the cloud.</p>",
  "metadata": {
    "apiVersion": "2017-07-01",
    "endpointPrefix": "healthlake",
    "jsonVersion": "1.0",
    "protocol": "json",
    "serviceAbbreviation": "HealthLake",
    "serviceFullName": "Amazon HealthLake",
    "serviceId": "HealthLake",
    "signatureVersion": "v4",
    "signingName": "healthlake",
    "targetPrefix": "HealthLake",
    "uid": "healthlake-2017-07-01"
  },
  "operations": {
    "CreateFHIRDatastore": {
      "documentation": "<p>Creates a Data Store that can ingest and export FHIR formatted data.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateFHIRDatastoreRequest"
      },
      "name": "CreateFHIRDatastore",
      "output": {
        "shape": "CreateFHIRDatastoreResponse"
      }
    },
    "DeleteFHIRDatastore": {
      "documentation": "<p>Deletes a Data Store. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteFHIRDatastoreRequest"
      },
      "name": "DeleteFHIRDatastore",
      "output": {
        "shape": "DeleteFHIRDatastoreResponse"
      }
    },
    "DescribeFHIRDatastore": {
      "documentation": "<p>Gets the properties associated with the FHIR Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeFHIRDatastoreRequest"
      },
      "name": "DescribeFHIRDatastore",
      "output": {
        "shape": "DescribeFHIRDatastoreResponse"
      }
    },
    "DescribeFHIRExportJob": {
      "documentation": "<p>Displays the properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeFHIRExportJobRequest"
      },
      "name": "DescribeFHIRExportJob",
      "output": {
        "shape": "DescribeFHIRExportJobResponse"
      }
    },
    "DescribeFHIRImportJob": {
      "documentation": "<p>Displays the properties of a FHIR import job, including the ID, ARN, name, and the status of the job. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DescribeFHIRImportJobRequest"
      },
      "name": "DescribeFHIRImportJob",
      "output": {
        "shape": "DescribeFHIRImportJobResponse"
      }
    },
    "ListFHIRDatastores": {
      "documentation": "<p>Lists all FHIR Data Stores that are in the user\u2019s account, regardless of Data Store status.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListFHIRDatastoresRequest"
      },
      "name": "ListFHIRDatastores",
      "output": {
        "shape": "ListFHIRDatastoresResponse"
      }
    },
    "ListFHIRExportJobs": {
      "documentation": "<p> Lists all FHIR export jobs associated with an account and their statuses. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListFHIRExportJobsRequest"
      },
      "name": "ListFHIRExportJobs",
      "output": {
        "shape": "ListFHIRExportJobsResponse"
      }
    },
    "ListFHIRImportJobs": {
      "documentation": "<p> Lists all FHIR import jobs associated with an account and their statuses. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListFHIRImportJobsRequest"
      },
      "name": "ListFHIRImportJobs",
      "output": {
        "shape": "ListFHIRImportJobsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p> Returns a list of all existing tags associated with a Data Store. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "StartFHIRExportJob": {
      "documentation": "<p>Begins a FHIR export job.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartFHIRExportJobRequest"
      },
      "name": "StartFHIRExportJob",
      "output": {
        "shape": "StartFHIRExportJobResponse"
      }
    },
    "StartFHIRImportJob": {
      "documentation": "<p>Begins a FHIR Import job.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StartFHIRImportJobRequest"
      },
      "name": "StartFHIRImportJob",
      "output": {
        "shape": "StartFHIRImportJobResponse"
      }
    },
    "TagResource": {
      "documentation": "<p> Adds a user specifed key and value tag to a Data Store. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p> Removes tags from a Data Store. </p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>Access is denied. Your account is not authorized to perform this operation.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AmazonResourceName": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-z0-9-]+:\\d{12}:datastore\\/fhir\\/.{32}",
      "type": "string"
    },
    "BoundedLengthString": {
      "max": 5000,
      "min": 1,
      "pattern": "[\\P{M}\\p{M}]{1,5000}",
      "type": "string"
    },
    "ClientTokenString": {
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-]+$",
      "type": "string"
    },
    "CmkType": {
      "enum": [
        "CUSTOMER_MANAGED_KMS_KEY",
        "AWS_OWNED_KMS_KEY"
      ],
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>The Data Store is in a transition state and the user requested action can not be performed.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateFHIRDatastoreRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken": true,
          "shape": "ClientTokenString"
        },
        "DatastoreName": {
          "documentation": "<p>The user generated name for the Data Store.</p>",
          "shape": "DatastoreName"
        },
        "DatastoreTypeVersion": {
          "documentation": "<p>The FHIR version of the Data Store. The only supported version is R4.</p>",
          "shape": "FHIRVersion"
        },
        "PreloadDataConfig": {
          "documentation": "<p>Optional parameter to preload data upon creation of the Data Store. Currently, the only supported preloaded data is synthetic data generated from Synthea.</p>",
          "shape": "PreloadDataConfig"
        },
        "SseConfiguration": {
          "documentation": "<p> The server-side encryption key configuration for a customer provided encryption key specified for creating a Data Store. </p>",
          "shape": "SseConfiguration"
        },
        "Tags": {
          "documentation": "<p> Resource tags that are applied to a Data Store when it is created. </p>",
          "shape": "TagList"
        }
      },
      "required": [
        "DatastoreTypeVersion"
      ],
      "type": "structure"
    },
    "CreateFHIRDatastoreResponse": {
      "members": {
        "DatastoreArn": {
          "documentation": "<p>The datastore ARN is generated during the creation of the Data Store and can be found in the output from the initial Data Store creation call.</p>",
          "shape": "DatastoreArn"
        },
        "DatastoreEndpoint": {
          "documentation": "<p>The AWS endpoint for the created Data Store. For preview, only US-east-1 endpoints are supported.</p>",
          "shape": "BoundedLengthString"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS-generated Data Store id. This id is in the output from the initial Data Store creation call.</p>",
          "shape": "DatastoreId"
        },
        "DatastoreStatus": {
          "documentation": "<p>The status of the FHIR Data Store. Possible statuses are \u2018CREATING\u2019, \u2018ACTIVE\u2019, \u2018DELETING\u2019, \u2018DELETED\u2019.</p>",
          "shape": "DatastoreStatus"
        }
      },
      "required": [
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreEndpoint"
      ],
      "type": "structure"
    },
    "DatastoreArn": {
      "pattern": "^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:healthlake:[a-zA-Z0-9-]+:[0-9]{12}:datastore/.+?",
      "type": "string"
    },
    "DatastoreFilter": {
      "documentation": "<p>The filters applied to Data Store query.</p>",
      "members": {
        "CreatedAfter": {
          "documentation": "<p>A filter that allows the user to set cutoff dates for records. All Data Stores created after the specified date will be included in the results.</p>",
          "shape": "Timestamp"
        },
        "CreatedBefore": {
          "documentation": "<p>A filter that allows the user to set cutoff dates for records. All Data Stores created before the specified date will be included in the results. </p>",
          "shape": "Timestamp"
        },
        "DatastoreName": {
          "documentation": "<p>Allows the user to filter Data Store results by name.</p>",
          "shape": "DatastoreName"
        },
        "DatastoreStatus": {
          "documentation": "<p>Allows the user to filter Data Store results by status.</p>",
          "shape": "DatastoreStatus"
        }
      },
      "type": "structure"
    },
    "DatastoreId": {
      "max": 32,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
      "type": "string"
    },
    "DatastoreName": {
      "max": 256,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
      "type": "string"
    },
    "DatastoreProperties": {
      "documentation": "<p>Displays the properties of the Data Store, including the ID, Arn, name, and the status of the Data Store.</p>",
      "members": {
        "CreatedAt": {
          "documentation": "<p>The time that a Data Store was created. </p>",
          "shape": "Timestamp"
        },
        "DatastoreArn": {
          "documentation": "<p>The Amazon Resource Name used in the creation of the Data Store.</p>",
          "shape": "DatastoreArn"
        },
        "DatastoreEndpoint": {
          "documentation": "<p>The AWS endpoint for the Data Store. Each Data Store will have it's own endpoint with Data Store ID in the endpoint URL.</p>",
          "shape": "String"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS-generated ID number for the Data Store.</p>",
          "shape": "DatastoreId"
        },
        "DatastoreName": {
          "documentation": "<p>The user-generated name for the Data Store.</p>",
          "shape": "DatastoreName"
        },
        "DatastoreStatus": {
          "documentation": "<p>The status of the Data Store. Possible statuses are 'CREATING', 'ACTIVE', 'DELETING', or 'DELETED'.</p>",
          "shape": "DatastoreStatus"
        },
        "DatastoreTypeVersion": {
          "documentation": "<p>The FHIR version. Only R4 version data is supported.</p>",
          "shape": "FHIRVersion"
        },
        "PreloadDataConfig": {
          "documentation": "<p>The preloaded data configuration for the Data Store. Only data preloaded from Synthea is supported.</p>",
          "shape": "PreloadDataConfig"
        },
        "SseConfiguration": {
          "documentation": "<p> The server-side encryption key configuration for a customer provided encryption key (CMK). </p>",
          "shape": "SseConfiguration"
        }
      },
      "required": [
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreTypeVersion",
        "DatastoreEndpoint"
      ],
      "type": "structure"
    },
    "DatastorePropertiesList": {
      "member": {
        "shape": "DatastoreProperties"
      },
      "type": "list"
    },
    "DatastoreStatus": {
      "enum": [
        "CREATING",
        "ACTIVE",
        "DELETING",
        "DELETED"
      ],
      "type": "string"
    },
    "DeleteFHIRDatastoreRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p> The AWS-generated ID for the Data Store to be deleted.</p>",
          "shape": "DatastoreId"
        }
      },
      "type": "structure"
    },
    "DeleteFHIRDatastoreResponse": {
      "members": {
        "DatastoreArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>",
          "shape": "DatastoreArn"
        },
        "DatastoreEndpoint": {
          "documentation": "<p>The AWS endpoint for the Data Store the user has requested to be deleted.</p>",
          "shape": "BoundedLengthString"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS-generated ID for the Data Store to be deleted.</p>",
          "shape": "DatastoreId"
        },
        "DatastoreStatus": {
          "documentation": "<p>The status of the Data Store that the user has requested to be deleted. </p>",
          "shape": "DatastoreStatus"
        }
      },
      "required": [
        "DatastoreId",
        "DatastoreArn",
        "DatastoreStatus",
        "DatastoreEndpoint"
      ],
      "type": "structure"
    },
    "DescribeFHIRDatastoreRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p>The AWS-generated Data Store id. This is part of the \u2018CreateFHIRDatastore\u2019 output.</p>",
          "shape": "DatastoreId"
        }
      },
      "type": "structure"
    },
    "DescribeFHIRDatastoreResponse": {
      "members": {
        "DatastoreProperties": {
          "documentation": "<p>All properties associated with a Data Store, including the Data Store ID, Data Store ARN, Data Store name, Data Store status, created at, Data Store type version, and Data Store endpoint.</p>",
          "shape": "DatastoreProperties"
        }
      },
      "required": [
        "DatastoreProperties"
      ],
      "type": "structure"
    },
    "DescribeFHIRExportJobRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p>The AWS generated ID for the Data Store from which files are being exported from for an export job.</p>",
          "shape": "DatastoreId"
        },
        "JobId": {
          "documentation": "<p>The AWS generated ID for an export job.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "DatastoreId",
        "JobId"
      ],
      "type": "structure"
    },
    "DescribeFHIRExportJobResponse": {
      "members": {
        "ExportJobProperties": {
          "documentation": "<p>Displays the properties of the export job, including the ID, Arn, Name, and the status of the job. </p>",
          "shape": "ExportJobProperties"
        }
      },
      "required": [
        "ExportJobProperties"
      ],
      "type": "structure"
    },
    "DescribeFHIRImportJobRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p>The AWS-generated ID of the Data Store.</p>",
          "shape": "DatastoreId"
        },
        "JobId": {
          "documentation": "<p>The AWS-generated job ID.</p>",
          "shape": "JobId"
        }
      },
      "required": [
        "DatastoreId",
        "JobId"
      ],
      "type": "structure"
    },
    "DescribeFHIRImportJobResponse": {
      "members": {
        "ImportJobProperties": {
          "documentation": "<p>The properties of the Import job request, including the ID, ARN, name, and the status of the job.</p>",
          "shape": "ImportJobProperties"
        }
      },
      "required": [
        "ImportJobProperties"
      ],
      "type": "structure"
    },
    "EncryptionKeyID": {
      "max": 400,
      "min": 1,
      "pattern": "(arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:kms:)?([a-z]{2}-[a-z]+(-[a-z]+)?-\\d:)?(\\d{12}:)?(((key/)?[a-zA-Z0-9-_]+)|(alias/[a-zA-Z0-9:/_-]+))",
      "type": "string"
    },
    "ExportJobProperties": {
      "documentation": "<p>The properties of a FHIR export job, including the ID, ARN, name, and the status of the job.</p>",
      "members": {
        "DataAccessRoleArn": {
          "documentation": "<p>The Amazon Resource Name used during the initiation of the job.</p>",
          "shape": "IamRoleArn"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>",
          "shape": "DatastoreId"
        },
        "EndTime": {
          "documentation": "<p>The time an export job completed.</p>",
          "shape": "Timestamp"
        },
        "JobId": {
          "documentation": "<p>The AWS generated ID for an export job.</p>",
          "shape": "JobId"
        },
        "JobName": {
          "documentation": "<p>The user generated name for an export job.</p>",
          "shape": "JobName"
        },
        "JobStatus": {
          "documentation": "<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>",
          "shape": "JobStatus"
        },
        "Message": {
          "documentation": "<p>An explanation of any errors that may have occurred during the export job.</p>",
          "shape": "Message"
        },
        "OutputDataConfig": {
          "documentation": "<p>The output data configuration that was supplied when the export job was created.</p>",
          "shape": "OutputDataConfig"
        },
        "SubmitTime": {
          "documentation": "<p>The time an export job was initiated.</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "JobId",
        "JobStatus",
        "SubmitTime",
        "DatastoreId",
        "OutputDataConfig"
      ],
      "type": "structure"
    },
    "ExportJobPropertiesList": {
      "member": {
        "shape": "ExportJobProperties"
      },
      "type": "list"
    },
    "FHIRVersion": {
      "enum": [
        "R4"
      ],
      "type": "string"
    },
    "IamRoleArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+",
      "type": "string"
    },
    "ImportJobProperties": {
      "documentation": "<p>Displays the properties of the import job, including the ID, Arn, Name, and the status of the Data Store.</p>",
      "members": {
        "DataAccessRoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access to your input data.</p>",
          "shape": "IamRoleArn"
        },
        "DatastoreId": {
          "documentation": "<p>The datastore id used when the Import job was created. </p>",
          "shape": "DatastoreId"
        },
        "EndTime": {
          "documentation": "<p>The time that the Import job was completed.</p>",
          "shape": "Timestamp"
        },
        "InputDataConfig": {
          "documentation": "<p>The input data configuration that was supplied when the Import job was created.</p>",
          "shape": "InputDataConfig"
        },
        "JobId": {
          "documentation": "<p>The AWS-generated id number for the Import job.</p>",
          "shape": "JobId"
        },
        "JobName": {
          "documentation": "<p>The user-generated name for an Import job.</p>",
          "shape": "JobName"
        },
        "JobOutputDataConfig": {
          "shape": "OutputDataConfig"
        },
        "JobStatus": {
          "documentation": "<p>The job status for an Import job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, FAILED.</p>",
          "shape": "JobStatus"
        },
        "Message": {
          "documentation": "<p>An explanation of any errors that may have occurred during the FHIR import job. </p>",
          "shape": "Message"
        },
        "SubmitTime": {
          "documentation": "<p>The time that the Import job was submitted for processing.</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "JobId",
        "JobStatus",
        "SubmitTime",
        "DatastoreId",
        "InputDataConfig"
      ],
      "type": "structure"
    },
    "ImportJobPropertiesList": {
      "member": {
        "shape": "ImportJobProperties"
      },
      "type": "list"
    },
    "InputDataConfig": {
      "documentation": "<p> The input properties for an import job.</p>",
      "members": {
        "S3Uri": {
          "documentation": "<p>The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. </p>",
          "shape": "S3Uri"
        }
      },
      "type": "structure",
      "union": true
    },
    "InternalServerException": {
      "documentation": "<p>Unknown error occurs in the service.</p>",
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JobId": {
      "max": 32,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
      "type": "string"
    },
    "JobName": {
      "max": 64,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
      "type": "string"
    },
    "JobStatus": {
      "enum": [
        "SUBMITTED",
        "IN_PROGRESS",
        "COMPLETED_WITH_ERRORS",
        "COMPLETED",
        "FAILED"
      ],
      "type": "string"
    },
    "KmsEncryptionConfig": {
      "documentation": "<p> The customer-managed-key(CMK) used when creating a Data Store. If a customer owned key is not specified, an AWS owned key will be used for encryption. </p>",
      "members": {
        "CmkType": {
          "documentation": "<p> The type of customer-managed-key(CMK) used for encyrption. The two types of supported CMKs are customer owned CMKs and AWS owned CMKs. </p>",
          "shape": "CmkType"
        },
        "KmsKeyId": {
          "documentation": "<p> The KMS encryption key id/alias used to encrypt the Data Store contents at rest. </p>",
          "shape": "EncryptionKeyID"
        }
      },
      "required": [
        "CmkType"
      ],
      "type": "structure"
    },
    "ListFHIRDatastoresRequest": {
      "members": {
        "Filter": {
          "documentation": "<p>Lists all filters associated with a FHIR Data Store request.</p>",
          "shape": "DatastoreFilter"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of Data Stores returned in a single page of a ListFHIRDatastoresRequest call.</p>",
          "shape": "MaxResultsInteger"
        },
        "NextToken": {
          "documentation": "<p>Fetches the next page of Data Stores when results are paginated.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListFHIRDatastoresResponse": {
      "members": {
        "DatastorePropertiesList": {
          "documentation": "<p>All properties associated with the listed Data Stores.</p>",
          "shape": "DatastorePropertiesList"
        },
        "NextToken": {
          "documentation": "<p>Pagination token that can be used to retrieve the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "DatastorePropertiesList"
      ],
      "type": "structure"
    },
    "ListFHIRExportJobsRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p> This parameter limits the response to the export job with the specified Data Store ID. </p>",
          "shape": "DatastoreId"
        },
        "JobName": {
          "documentation": "<p> This parameter limits the response to the export job with the specified job name. </p>",
          "shape": "JobName"
        },
        "JobStatus": {
          "documentation": "<p> This parameter limits the response to the export jobs with the specified job status. </p>",
          "shape": "JobStatus"
        },
        "MaxResults": {
          "documentation": "<p> This parameter limits the number of results returned for a ListFHIRExportJobs to a maximum quantity specified by the user. </p>",
          "shape": "MaxResultsInteger"
        },
        "NextToken": {
          "documentation": "<p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>",
          "shape": "NextToken"
        },
        "SubmittedAfter": {
          "documentation": "<p> This parameter limits the response to FHIR export jobs submitted after a user specified date. </p>",
          "shape": "Timestamp"
        },
        "SubmittedBefore": {
          "documentation": "<p> This parameter limits the response to FHIR export jobs submitted before a user specified date. </p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "DatastoreId"
      ],
      "type": "structure"
    },
    "ListFHIRExportJobsResponse": {
      "members": {
        "ExportJobPropertiesList": {
          "documentation": "<p> The properties of listed FHIR export jobs, including the ID, ARN, name, and the status of the job. </p>",
          "shape": "ExportJobPropertiesList"
        },
        "NextToken": {
          "documentation": "<p> A pagination token used to identify the next page of results to return for a ListFHIRExportJobs query. </p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "ExportJobPropertiesList"
      ],
      "type": "structure"
    },
    "ListFHIRImportJobsRequest": {
      "members": {
        "DatastoreId": {
          "documentation": "<p> This parameter limits the response to the import job with the specified Data Store ID. </p>",
          "shape": "DatastoreId"
        },
        "JobName": {
          "documentation": "<p> This parameter limits the response to the import job with the specified job name. </p>",
          "shape": "JobName"
        },
        "JobStatus": {
          "documentation": "<p> This parameter limits the response to the import job with the specified job status. </p>",
          "shape": "JobStatus"
        },
        "MaxResults": {
          "documentation": "<p> This parameter limits the number of results returned for a ListFHIRImportJobs to a maximum quantity specified by the user. </p>",
          "shape": "MaxResultsInteger"
        },
        "NextToken": {
          "documentation": "<p> A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. </p>",
          "shape": "NextToken"
        },
        "SubmittedAfter": {
          "documentation": "<p> This parameter limits the response to FHIR import jobs submitted after a user specified date. </p>",
          "shape": "Timestamp"
        },
        "SubmittedBefore": {
          "documentation": "<p> This parameter limits the response to FHIR import jobs submitted before a user specified date. </p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "DatastoreId"
      ],
      "type": "structure"
    },
    "ListFHIRImportJobsResponse": {
      "members": {
        "ImportJobPropertiesList": {
          "documentation": "<p> The properties of a listed FHIR import jobs, including the ID, ARN, name, and the status of the job. </p>",
          "shape": "ImportJobPropertiesList"
        },
        "NextToken": {
          "documentation": "<p> A pagination token used to identify the next page of results to return for a ListFHIRImportJobs query. </p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "ImportJobPropertiesList"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p> The Amazon Resource Name(ARN) of the Data Store for which tags are being added. </p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "ResourceARN"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p> Returns a list of tags associated with a Data Store. </p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "MaxResultsInteger": {
      "max": 500,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "max": 2048,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-%@]*)$",
      "type": "string"
    },
    "NextToken": {
      "max": 8192,
      "pattern": "\\p{ASCII}{0,8192}",
      "type": "string"
    },
    "OutputDataConfig": {
      "documentation": "<p>The output data configuration that was supplied when the export job was created.</p>",
      "members": {
        "S3Configuration": {
          "documentation": "<p> The output data configuration that was supplied when the export job was created. </p>",
          "shape": "S3Configuration"
        }
      },
      "type": "structure",
      "union": true
    },
    "PreloadDataConfig": {
      "documentation": "<p> The input properties for the preloaded Data Store. Only data preloaded from Synthea is supported.</p>",
      "members": {
        "PreloadDataType": {
          "documentation": "<p>The type of preloaded data. Only Synthea preloaded data is supported.</p>",
          "shape": "PreloadDataType"
        }
      },
      "required": [
        "PreloadDataType"
      ],
      "type": "structure"
    },
    "PreloadDataType": {
      "enum": [
        "SYNTHEA"
      ],
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p> The requested Data Store was not found.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "S3Configuration": {
      "documentation": "<p> The configuration of the S3 bucket for either an import or export job. This includes assigning permissions for access. </p>",
      "members": {
        "KmsKeyId": {
          "documentation": "<p> The KMS key ID used to access the S3 bucket. </p>",
          "shape": "EncryptionKeyID"
        },
        "S3Uri": {
          "documentation": "<p> The S3Uri is the user specified S3 location of the FHIR data to be imported into Amazon HealthLake. </p>",
          "shape": "S3Uri"
        }
      },
      "required": [
        "S3Uri",
        "KmsKeyId"
      ],
      "type": "structure"
    },
    "S3Uri": {
      "max": 1024,
      "pattern": "s3://[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9](/.*)?",
      "type": "string"
    },
    "SseConfiguration": {
      "documentation": "<p> The server-side encryption key configuration for a customer provided encryption key. </p>",
      "members": {
        "KmsEncryptionConfig": {
          "documentation": "<p> The KMS encryption configuration used to provide details for data encryption. </p>",
          "shape": "KmsEncryptionConfig"
        }
      },
      "required": [
        "KmsEncryptionConfig"
      ],
      "type": "structure"
    },
    "StartFHIRExportJobRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>An optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken": true,
          "shape": "ClientTokenString"
        },
        "DataAccessRoleArn": {
          "documentation": "<p>The Amazon Resource Name used during the initiation of the job.</p>",
          "shape": "IamRoleArn"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>",
          "shape": "DatastoreId"
        },
        "JobName": {
          "documentation": "<p>The user generated name for an export job.</p>",
          "shape": "JobName"
        },
        "OutputDataConfig": {
          "documentation": "<p>The output data configuration that was supplied when the export job was created.</p>",
          "shape": "OutputDataConfig"
        }
      },
      "required": [
        "OutputDataConfig",
        "DatastoreId",
        "DataAccessRoleArn",
        "ClientToken"
      ],
      "type": "structure"
    },
    "StartFHIRExportJobResponse": {
      "members": {
        "DatastoreId": {
          "documentation": "<p>The AWS generated ID for the Data Store from which files are being exported for an export job.</p>",
          "shape": "DatastoreId"
        },
        "JobId": {
          "documentation": "<p>The AWS generated ID for an export job.</p>",
          "shape": "JobId"
        },
        "JobStatus": {
          "documentation": "<p>The status of a FHIR export job. Possible statuses are SUBMITTED, IN_PROGRESS, COMPLETED, or FAILED.</p>",
          "shape": "JobStatus"
        }
      },
      "required": [
        "JobId",
        "JobStatus"
      ],
      "type": "structure"
    },
    "StartFHIRImportJobRequest": {
      "members": {
        "ClientToken": {
          "documentation": "<p>Optional user provided token used for ensuring idempotency.</p>",
          "idempotencyToken": true,
          "shape": "ClientTokenString"
        },
        "DataAccessRoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) that gives Amazon HealthLake access permission.</p>",
          "shape": "IamRoleArn"
        },
        "DatastoreId": {
          "documentation": "<p>The AWS-generated Data Store ID.</p>",
          "shape": "DatastoreId"
        },
        "InputDataConfig": {
          "documentation": "<p>The input properties of the FHIR Import job in the StartFHIRImport job request.</p>",
          "shape": "InputDataConfig"
        },
        "JobName": {
          "documentation": "<p>The name of the FHIR Import job in the StartFHIRImport job request.</p>",
          "shape": "JobName"
        },
        "JobOutputDataConfig": {
          "shape": "OutputDataConfig"
        }
      },
      "required": [
        "InputDataConfig",
        "JobOutputDataConfig",
        "DatastoreId",
        "DataAccessRoleArn",
        "ClientToken"
      ],
      "type": "structure"
    },
    "StartFHIRImportJobResponse": {
      "members": {
        "DatastoreId": {
          "documentation": "<p>The AWS-generated Data Store ID.</p>",
          "shape": "DatastoreId"
        },
        "JobId": {
          "documentation": "<p>The AWS-generated job ID.</p>",
          "shape": "JobId"
        },
        "JobStatus": {
          "documentation": "<p>The status of an import job.</p>",
          "shape": "JobStatus"
        }
      },
      "required": [
        "JobId",
        "JobStatus"
      ],
      "type": "structure"
    },
    "String": {
      "max": 10000,
      "pattern": "[\\P{M}\\p{M}]{0,10000}",
      "type": "string"
    },
    "Tag": {
      "documentation": "<p> A tag is a label consisting of a user-defined key and value. The form for tags is {\"Key\", \"Value\"} </p>",
      "members": {
        "Key": {
          "documentation": "<p> The key portion of a tag. Tag keys are case sensitive. </p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p> The value portion of tag. Tag values are case sensitive. </p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 200,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagList": {
      "max": 200,
      "member": {
        "shape": "Tag"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p> The Amazon Resource Name(ARN)that gives Amazon HealthLake access to the Data Store which tags are being added to. </p>",
          "shape": "AmazonResourceName"
        },
        "Tags": {
          "documentation": "<p> The user specified key and value pair tags being added to a Data Store. </p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceARN",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The user has exceeded their maximum number of allowed calls to the given API. </p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p> \"The Amazon Resource Name(ARN) of the Data Store for which tags are being removed </p>",
          "shape": "AmazonResourceName"
        },
        "TagKeys": {
          "documentation": "<p> The keys for the tags to be removed from the Healthlake Data Store. </p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceARN",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The user input parameter was invalid.</p>",
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
