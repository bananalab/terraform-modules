{
  "documentation": "<p>Welcome to the AWS Device Farm API documentation, which contains APIs for:</p> <ul> <li> <p>Testing on desktop browsers</p> <p> Device Farm makes it possible for you to test your web applications on desktop browsers using Selenium. The APIs for desktop browser testing contain <code>TestGrid</code> in their names. For more information, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/testgrid/\">Testing Web Applications on Selenium with Device Farm</a>.</p> </li> <li> <p>Testing on real mobile devices</p> <p>Device Farm makes it possible for you to test apps on physical phones, tablets, and other devices in the cloud. For more information, see the <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/\">Device Farm Developer Guide</a>.</p> </li> </ul>",
  "metadata": {
    "apiVersion": "2015-06-23",
    "endpointPrefix": "devicefarm",
    "jsonVersion": "1.1",
    "protocol": "json",
    "serviceFullName": "AWS Device Farm",
    "serviceId": "Device Farm",
    "signatureVersion": "v4",
    "targetPrefix": "DeviceFarm_20150623",
    "uid": "devicefarm-2015-06-23"
  },
  "operations": {
    "CreateDevicePool": {
      "documentation": "<p>Creates a device pool.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateDevicePoolRequest"
      },
      "name": "CreateDevicePool",
      "output": {
        "shape": "CreateDevicePoolResult"
      }
    },
    "CreateInstanceProfile": {
      "documentation": "<p>Creates a profile that can be applied to one or more private fleet device instances.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateInstanceProfileRequest"
      },
      "name": "CreateInstanceProfile",
      "output": {
        "shape": "CreateInstanceProfileResult"
      }
    },
    "CreateNetworkProfile": {
      "documentation": "<p>Creates a network profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateNetworkProfileRequest"
      },
      "name": "CreateNetworkProfile",
      "output": {
        "shape": "CreateNetworkProfileResult"
      }
    },
    "CreateProject": {
      "documentation": "<p>Creates a project.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        },
        {
          "shape": "TagOperationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateProjectRequest"
      },
      "name": "CreateProject",
      "output": {
        "shape": "CreateProjectResult"
      }
    },
    "CreateRemoteAccessSession": {
      "documentation": "<p>Specifies and starts a remote access session.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateRemoteAccessSessionRequest"
      },
      "name": "CreateRemoteAccessSession",
      "output": {
        "shape": "CreateRemoteAccessSessionResult"
      }
    },
    "CreateTestGridProject": {
      "documentation": "<p>Creates a Selenium testing project. Projects are used to track <a>TestGridSession</a> instances.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateTestGridProjectRequest"
      },
      "name": "CreateTestGridProject",
      "output": {
        "shape": "CreateTestGridProjectResult"
      }
    },
    "CreateTestGridUrl": {
      "documentation": "<p>Creates a signed, short-term URL that can be passed to a Selenium <code>RemoteWebDriver</code> constructor.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateTestGridUrlRequest"
      },
      "name": "CreateTestGridUrl",
      "output": {
        "shape": "CreateTestGridUrlResult"
      }
    },
    "CreateUpload": {
      "documentation": "<p>Uploads an app or test scripts.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateUploadRequest"
      },
      "name": "CreateUpload",
      "output": {
        "shape": "CreateUploadResult"
      }
    },
    "CreateVPCEConfiguration": {
      "documentation": "<p>Creates a configuration record in Device Farm for your Amazon Virtual Private Cloud (VPC) endpoint.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "CreateVPCEConfigurationRequest"
      },
      "name": "CreateVPCEConfiguration",
      "output": {
        "shape": "CreateVPCEConfigurationResult"
      }
    },
    "DeleteDevicePool": {
      "documentation": "<p>Deletes a device pool given the pool ARN. Does not allow deletion of curated pools owned by the system.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteDevicePoolRequest"
      },
      "name": "DeleteDevicePool",
      "output": {
        "shape": "DeleteDevicePoolResult"
      }
    },
    "DeleteInstanceProfile": {
      "documentation": "<p>Deletes a profile that can be applied to one or more private device instances.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteInstanceProfileRequest"
      },
      "name": "DeleteInstanceProfile",
      "output": {
        "shape": "DeleteInstanceProfileResult"
      }
    },
    "DeleteNetworkProfile": {
      "documentation": "<p>Deletes a network profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteNetworkProfileRequest"
      },
      "name": "DeleteNetworkProfile",
      "output": {
        "shape": "DeleteNetworkProfileResult"
      }
    },
    "DeleteProject": {
      "documentation": "<p>Deletes an AWS Device Farm project, given the project ARN.</p> <p> Deleting this resource does not stop an in-progress run.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteProjectRequest"
      },
      "name": "DeleteProject",
      "output": {
        "shape": "DeleteProjectResult"
      }
    },
    "DeleteRemoteAccessSession": {
      "documentation": "<p>Deletes a completed remote access session and its results.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteRemoteAccessSessionRequest"
      },
      "name": "DeleteRemoteAccessSession",
      "output": {
        "shape": "DeleteRemoteAccessSessionResult"
      }
    },
    "DeleteRun": {
      "documentation": "<p>Deletes the run, given the run ARN.</p> <p> Deleting this resource does not stop an in-progress run.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteRunRequest"
      },
      "name": "DeleteRun",
      "output": {
        "shape": "DeleteRunResult"
      }
    },
    "DeleteTestGridProject": {
      "documentation": "<p> Deletes a Selenium testing project and all content generated under it. </p> <important> <p>You cannot undo this operation.</p> </important> <note> <p>You cannot delete a project if it has active sessions.</p> </note>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "CannotDeleteException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteTestGridProjectRequest"
      },
      "name": "DeleteTestGridProject",
      "output": {
        "shape": "DeleteTestGridProjectResult"
      }
    },
    "DeleteUpload": {
      "documentation": "<p>Deletes an upload given the upload ARN.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteUploadRequest"
      },
      "name": "DeleteUpload",
      "output": {
        "shape": "DeleteUploadResult"
      }
    },
    "DeleteVPCEConfiguration": {
      "documentation": "<p>Deletes a configuration for your Amazon Virtual Private Cloud (VPC) endpoint.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceAccountException"
        },
        {
          "shape": "InvalidOperationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "DeleteVPCEConfigurationRequest"
      },
      "name": "DeleteVPCEConfiguration",
      "output": {
        "shape": "DeleteVPCEConfigurationResult"
      }
    },
    "GetAccountSettings": {
      "documentation": "<p>Returns the number of unmetered iOS or unmetered Android devices that have been purchased by the account.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetAccountSettingsRequest"
      },
      "name": "GetAccountSettings",
      "output": {
        "shape": "GetAccountSettingsResult"
      }
    },
    "GetDevice": {
      "documentation": "<p>Gets information about a unique device type.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDeviceRequest"
      },
      "name": "GetDevice",
      "output": {
        "shape": "GetDeviceResult"
      }
    },
    "GetDeviceInstance": {
      "documentation": "<p>Returns information about a device instance that belongs to a private device fleet.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDeviceInstanceRequest"
      },
      "name": "GetDeviceInstance",
      "output": {
        "shape": "GetDeviceInstanceResult"
      }
    },
    "GetDevicePool": {
      "documentation": "<p>Gets information about a device pool.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDevicePoolRequest"
      },
      "name": "GetDevicePool",
      "output": {
        "shape": "GetDevicePoolResult"
      }
    },
    "GetDevicePoolCompatibility": {
      "documentation": "<p>Gets information about compatibility with a device pool.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetDevicePoolCompatibilityRequest"
      },
      "name": "GetDevicePoolCompatibility",
      "output": {
        "shape": "GetDevicePoolCompatibilityResult"
      }
    },
    "GetInstanceProfile": {
      "documentation": "<p>Returns information about the specified instance profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetInstanceProfileRequest"
      },
      "name": "GetInstanceProfile",
      "output": {
        "shape": "GetInstanceProfileResult"
      }
    },
    "GetJob": {
      "documentation": "<p>Gets information about a job.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetJobRequest"
      },
      "name": "GetJob",
      "output": {
        "shape": "GetJobResult"
      }
    },
    "GetNetworkProfile": {
      "documentation": "<p>Returns information about a network profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetNetworkProfileRequest"
      },
      "name": "GetNetworkProfile",
      "output": {
        "shape": "GetNetworkProfileResult"
      }
    },
    "GetOfferingStatus": {
      "documentation": "<p>Gets the current status and future status of all offerings purchased by an AWS account. The response indicates how many offerings are currently available and the offerings that will be available in the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetOfferingStatusRequest"
      },
      "name": "GetOfferingStatus",
      "output": {
        "shape": "GetOfferingStatusResult"
      }
    },
    "GetProject": {
      "documentation": "<p>Gets information about a project.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetProjectRequest"
      },
      "name": "GetProject",
      "output": {
        "shape": "GetProjectResult"
      }
    },
    "GetRemoteAccessSession": {
      "documentation": "<p>Returns a link to a currently running remote access session.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetRemoteAccessSessionRequest"
      },
      "name": "GetRemoteAccessSession",
      "output": {
        "shape": "GetRemoteAccessSessionResult"
      }
    },
    "GetRun": {
      "documentation": "<p>Gets information about a run.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetRunRequest"
      },
      "name": "GetRun",
      "output": {
        "shape": "GetRunResult"
      }
    },
    "GetSuite": {
      "documentation": "<p>Gets information about a suite.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetSuiteRequest"
      },
      "name": "GetSuite",
      "output": {
        "shape": "GetSuiteResult"
      }
    },
    "GetTest": {
      "documentation": "<p>Gets information about a test.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTestRequest"
      },
      "name": "GetTest",
      "output": {
        "shape": "GetTestResult"
      }
    },
    "GetTestGridProject": {
      "documentation": "<p>Retrieves information about a Selenium testing project.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTestGridProjectRequest"
      },
      "name": "GetTestGridProject",
      "output": {
        "shape": "GetTestGridProjectResult"
      }
    },
    "GetTestGridSession": {
      "documentation": "<p>A session is an instance of a browser created through a <code>RemoteWebDriver</code> with the URL from <a>CreateTestGridUrlResult$url</a>. You can use the following to look up sessions:</p> <ul> <li> <p>The session ARN (<a>GetTestGridSessionRequest$sessionArn</a>).</p> </li> <li> <p>The project ARN and a session ID (<a>GetTestGridSessionRequest$projectArn</a> and <a>GetTestGridSessionRequest$sessionId</a>).</p> </li> </ul> <p/>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetTestGridSessionRequest"
      },
      "name": "GetTestGridSession",
      "output": {
        "shape": "GetTestGridSessionResult"
      }
    },
    "GetUpload": {
      "documentation": "<p>Gets information about an upload.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetUploadRequest"
      },
      "name": "GetUpload",
      "output": {
        "shape": "GetUploadResult"
      }
    },
    "GetVPCEConfiguration": {
      "documentation": "<p>Returns information about the configuration settings for your Amazon Virtual Private Cloud (VPC) endpoint.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "GetVPCEConfigurationRequest"
      },
      "name": "GetVPCEConfiguration",
      "output": {
        "shape": "GetVPCEConfigurationResult"
      }
    },
    "InstallToRemoteAccessSession": {
      "documentation": "<p>Installs an application to the device in a remote access session. For Android applications, the file must be in .apk format. For iOS applications, the file must be in .ipa format.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "InstallToRemoteAccessSessionRequest"
      },
      "name": "InstallToRemoteAccessSession",
      "output": {
        "shape": "InstallToRemoteAccessSessionResult"
      }
    },
    "ListArtifacts": {
      "documentation": "<p>Gets information about artifacts.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListArtifactsRequest"
      },
      "name": "ListArtifacts",
      "output": {
        "shape": "ListArtifactsResult"
      }
    },
    "ListDeviceInstances": {
      "documentation": "<p>Returns information about the private device instances associated with one or more AWS accounts.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListDeviceInstancesRequest"
      },
      "name": "ListDeviceInstances",
      "output": {
        "shape": "ListDeviceInstancesResult"
      }
    },
    "ListDevicePools": {
      "documentation": "<p>Gets information about device pools.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListDevicePoolsRequest"
      },
      "name": "ListDevicePools",
      "output": {
        "shape": "ListDevicePoolsResult"
      }
    },
    "ListDevices": {
      "documentation": "<p>Gets information about unique device types.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListDevicesRequest"
      },
      "name": "ListDevices",
      "output": {
        "shape": "ListDevicesResult"
      }
    },
    "ListInstanceProfiles": {
      "documentation": "<p>Returns information about all the instance profiles in an AWS account.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListInstanceProfilesRequest"
      },
      "name": "ListInstanceProfiles",
      "output": {
        "shape": "ListInstanceProfilesResult"
      }
    },
    "ListJobs": {
      "documentation": "<p>Gets information about jobs for a given test run.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListJobsRequest"
      },
      "name": "ListJobs",
      "output": {
        "shape": "ListJobsResult"
      }
    },
    "ListNetworkProfiles": {
      "documentation": "<p>Returns the list of available network profiles.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListNetworkProfilesRequest"
      },
      "name": "ListNetworkProfiles",
      "output": {
        "shape": "ListNetworkProfilesResult"
      }
    },
    "ListOfferingPromotions": {
      "documentation": "<p>Returns a list of offering promotions. Each offering promotion record contains the ID and description of the promotion. The API returns a <code>NotEligible</code> error if the caller is not permitted to invoke the operation. Contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you must be able to invoke this operation.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListOfferingPromotionsRequest"
      },
      "name": "ListOfferingPromotions",
      "output": {
        "shape": "ListOfferingPromotionsResult"
      }
    },
    "ListOfferingTransactions": {
      "documentation": "<p>Returns a list of all historical purchases, renewals, and system renewal transactions for an AWS account. The list is paginated and ordered by a descending timestamp (most recent transactions are first). The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListOfferingTransactionsRequest"
      },
      "name": "ListOfferingTransactions",
      "output": {
        "shape": "ListOfferingTransactionsResult"
      }
    },
    "ListOfferings": {
      "documentation": "<p>Returns a list of products or offerings that the user can manage through the API. Each offering record indicates the recurring price per unit and the frequency for that offering. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListOfferingsRequest"
      },
      "name": "ListOfferings",
      "output": {
        "shape": "ListOfferingsResult"
      }
    },
    "ListProjects": {
      "documentation": "<p>Gets information about projects.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListProjectsRequest"
      },
      "name": "ListProjects",
      "output": {
        "shape": "ListProjectsResult"
      }
    },
    "ListRemoteAccessSessions": {
      "documentation": "<p>Returns a list of all currently running remote access sessions.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListRemoteAccessSessionsRequest"
      },
      "name": "ListRemoteAccessSessions",
      "output": {
        "shape": "ListRemoteAccessSessionsResult"
      }
    },
    "ListRuns": {
      "documentation": "<p>Gets information about runs, given an AWS Device Farm project ARN.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListRunsRequest"
      },
      "name": "ListRuns",
      "output": {
        "shape": "ListRunsResult"
      }
    },
    "ListSamples": {
      "documentation": "<p>Gets information about samples, given an AWS Device Farm job ARN.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListSamplesRequest"
      },
      "name": "ListSamples",
      "output": {
        "shape": "ListSamplesResult"
      }
    },
    "ListSuites": {
      "documentation": "<p>Gets information about test suites for a given job.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListSuitesRequest"
      },
      "name": "ListSuites",
      "output": {
        "shape": "ListSuitesResult"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>List the tags for an AWS Device Farm resource.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TagOperationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTestGridProjects": {
      "documentation": "<p>Gets a list of all Selenium testing projects in your account.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTestGridProjectsRequest"
      },
      "name": "ListTestGridProjects",
      "output": {
        "shape": "ListTestGridProjectsResult"
      }
    },
    "ListTestGridSessionActions": {
      "documentation": "<p>Returns a list of the actions taken in a <a>TestGridSession</a>.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTestGridSessionActionsRequest"
      },
      "name": "ListTestGridSessionActions",
      "output": {
        "shape": "ListTestGridSessionActionsResult"
      }
    },
    "ListTestGridSessionArtifacts": {
      "documentation": "<p>Retrieves a list of artifacts created during the session.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTestGridSessionArtifactsRequest"
      },
      "name": "ListTestGridSessionArtifacts",
      "output": {
        "shape": "ListTestGridSessionArtifactsResult"
      }
    },
    "ListTestGridSessions": {
      "documentation": "<p>Retrieves a list of sessions for a <a>TestGridProject</a>.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTestGridSessionsRequest"
      },
      "name": "ListTestGridSessions",
      "output": {
        "shape": "ListTestGridSessionsResult"
      }
    },
    "ListTests": {
      "documentation": "<p>Gets information about tests in a given test suite.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListTestsRequest"
      },
      "name": "ListTests",
      "output": {
        "shape": "ListTestsResult"
      }
    },
    "ListUniqueProblems": {
      "documentation": "<p>Gets information about unique problems, such as exceptions or crashes.</p> <p>Unique problems are defined as a single instance of an error across a run, job, or suite. For example, if a call in your application consistently raises an exception (<code>OutOfBoundsException in MyActivity.java:386</code>), <code>ListUniqueProblems</code> returns a single entry instead of many individual entries for that exception.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListUniqueProblemsRequest"
      },
      "name": "ListUniqueProblems",
      "output": {
        "shape": "ListUniqueProblemsResult"
      }
    },
    "ListUploads": {
      "documentation": "<p>Gets information about uploads, given an AWS Device Farm project ARN.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListUploadsRequest"
      },
      "name": "ListUploads",
      "output": {
        "shape": "ListUploadsResult"
      }
    },
    "ListVPCEConfigurations": {
      "documentation": "<p>Returns information about all Amazon Virtual Private Cloud (VPC) endpoint configurations in the AWS account.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ListVPCEConfigurationsRequest"
      },
      "name": "ListVPCEConfigurations",
      "output": {
        "shape": "ListVPCEConfigurationsResult"
      }
    },
    "PurchaseOffering": {
      "documentation": "<p>Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering, unless the renewal was overridden. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "PurchaseOfferingRequest"
      },
      "name": "PurchaseOffering",
      "output": {
        "shape": "PurchaseOfferingResult"
      }
    },
    "RenewOffering": {
      "documentation": "<p>Explicitly sets the quantity of devices to renew for an offering, starting from the <code>effectiveDate</code> of the next period. The API returns a <code>NotEligible</code> error if the user is not permitted to invoke the operation. If you must be able to invoke this operation, contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a>.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "NotEligibleException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "RenewOfferingRequest"
      },
      "name": "RenewOffering",
      "output": {
        "shape": "RenewOfferingResult"
      }
    },
    "ScheduleRun": {
      "documentation": "<p>Schedules a run.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "IdempotencyException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "ScheduleRunRequest"
      },
      "name": "ScheduleRun",
      "output": {
        "shape": "ScheduleRunResult"
      }
    },
    "StopJob": {
      "documentation": "<p>Initiates a stop request for the current job. AWS Device Farm immediately stops the job on the device where tests have not started. You are not billed for this device. On the device where tests have started, setup suite and teardown suite tests run to completion on the device. You are billed for setup, teardown, and any tests that were in progress or already completed.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopJobRequest"
      },
      "name": "StopJob",
      "output": {
        "shape": "StopJobResult"
      }
    },
    "StopRemoteAccessSession": {
      "documentation": "<p>Ends a specified remote access session.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopRemoteAccessSessionRequest"
      },
      "name": "StopRemoteAccessSession",
      "output": {
        "shape": "StopRemoteAccessSessionResult"
      }
    },
    "StopRun": {
      "documentation": "<p>Initiates a stop request for the current test run. AWS Device Farm immediately stops the run on devices where tests have not started. You are not billed for these devices. On devices where tests have started executing, setup suite and teardown suite tests run to completion on those devices. You are billed for setup, teardown, and any tests that were in progress or already completed.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "StopRunRequest"
      },
      "name": "StopRun",
      "output": {
        "shape": "StopRunResult"
      }
    },
    "TagResource": {
      "documentation": "<p>Associates the specified tags to a resource with the specified <code>resourceArn</code>. If existing tags on a resource are not specified in the request parameters, they are not changed. When a resource is deleted, the tags associated with that resource are also deleted.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TagOperationException"
        },
        {
          "shape": "TooManyTagsException"
        },
        {
          "shape": "TagPolicyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Deletes the specified tags from a resource.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "TagOperationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDeviceInstance": {
      "documentation": "<p>Updates information about a private device instance.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateDeviceInstanceRequest"
      },
      "name": "UpdateDeviceInstance",
      "output": {
        "shape": "UpdateDeviceInstanceResult"
      }
    },
    "UpdateDevicePool": {
      "documentation": "<p>Modifies the name, description, and rules in a device pool given the attributes and the pool ARN. Rule updates are all-or-nothing, meaning they can only be updated as a whole (or not at all).</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateDevicePoolRequest"
      },
      "name": "UpdateDevicePool",
      "output": {
        "shape": "UpdateDevicePoolResult"
      }
    },
    "UpdateInstanceProfile": {
      "documentation": "<p>Updates information about an existing private device instance profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateInstanceProfileRequest"
      },
      "name": "UpdateInstanceProfile",
      "output": {
        "shape": "UpdateInstanceProfileResult"
      }
    },
    "UpdateNetworkProfile": {
      "documentation": "<p>Updates the network profile.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateNetworkProfileRequest"
      },
      "name": "UpdateNetworkProfile",
      "output": {
        "shape": "UpdateNetworkProfileResult"
      }
    },
    "UpdateProject": {
      "documentation": "<p>Modifies the specified project name, given the project ARN and a new name.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateProjectRequest"
      },
      "name": "UpdateProject",
      "output": {
        "shape": "UpdateProjectResult"
      }
    },
    "UpdateTestGridProject": {
      "documentation": "<p>Change details of a project.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalServiceException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateTestGridProjectRequest"
      },
      "name": "UpdateTestGridProject",
      "output": {
        "shape": "UpdateTestGridProjectResult"
      }
    },
    "UpdateUpload": {
      "documentation": "<p>Updates an uploaded test spec.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceAccountException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateUploadRequest"
      },
      "name": "UpdateUpload",
      "output": {
        "shape": "UpdateUploadResult"
      }
    },
    "UpdateVPCEConfiguration": {
      "documentation": "<p>Updates information about an Amazon Virtual Private Cloud (VPC) endpoint configuration.</p>",
      "errors": [
        {
          "shape": "ArgumentException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceAccountException"
        },
        {
          "shape": "InvalidOperationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/"
      },
      "input": {
        "shape": "UpdateVPCEConfigurationRequest"
      },
      "name": "UpdateVPCEConfiguration",
      "output": {
        "shape": "UpdateVPCEConfigurationResult"
      }
    }
  },
  "shapes": {
    "AWSAccountNumber": {
      "max": 16,
      "min": 2,
      "type": "string"
    },
    "AccountSettings": {
      "documentation": "<p>A container for account-level settings in AWS Device Farm.</p>",
      "members": {
        "awsAccountNumber": {
          "documentation": "<p>The AWS account number specified in the <code>AccountSettings</code> container.</p>",
          "shape": "AWSAccountNumber"
        },
        "defaultJobTimeoutMinutes": {
          "documentation": "<p>The default number of minutes (at the account level) a test run executes before it times out. The default value is 150 minutes.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "maxJobTimeoutMinutes": {
          "documentation": "<p>The maximum number of minutes a test run executes before it times out.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "maxSlots": {
          "documentation": "<p>The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command.</p>",
          "shape": "MaxSlotMap"
        },
        "skipAppResign": {
          "documentation": "<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
          "shape": "SkipAppResign"
        },
        "trialMinutes": {
          "documentation": "<p>Information about an AWS account's usage of free trial device minutes.</p>",
          "shape": "TrialMinutes"
        },
        "unmeteredDevices": {
          "documentation": "<p>Returns the unmetered devices you have purchased or want to purchase.</p>",
          "shape": "PurchasedDevicesMap"
        },
        "unmeteredRemoteAccessDevices": {
          "documentation": "<p>Returns the unmetered remote access devices you have purchased or want to purchase.</p>",
          "shape": "PurchasedDevicesMap"
        }
      },
      "type": "structure"
    },
    "AccountsCleanup": {
      "type": "boolean"
    },
    "AmazonResourceName": {
      "max": 1011,
      "min": 32,
      "pattern": "^arn:.+",
      "type": "string"
    },
    "AmazonResourceNames": {
      "member": {
        "shape": "AmazonResourceName"
      },
      "type": "list"
    },
    "AndroidPaths": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "AppPackagesCleanup": {
      "type": "boolean"
    },
    "ArgumentException": {
      "documentation": "<p>An invalid argument was specified.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Any additional information about the exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Artifact": {
      "documentation": "<p>Represents the output of a test. Examples of artifacts include logs and screenshots.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The artifact's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "extension": {
          "documentation": "<p>The artifact's file extension.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>The artifact's name.</p>",
          "shape": "Name"
        },
        "type": {
          "documentation": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN</p> </li> <li> <p>SCREENSHOT</p> </li> <li> <p>DEVICE_LOG</p> </li> <li> <p>MESSAGE_LOG</p> </li> <li> <p>VIDEO_LOG</p> </li> <li> <p>RESULT_LOG</p> </li> <li> <p>SERVICE_LOG</p> </li> <li> <p>WEBKIT_LOG</p> </li> <li> <p>INSTRUMENTATION_OUTPUT</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT</p> </li> <li> <p>AUTOMATION_OUTPUT</p> </li> <li> <p>APPIUM_SERVER_OUTPUT</p> </li> <li> <p>APPIUM_JAVA_OUTPUT</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT</p> </li> <li> <p>EXPLORER_EVENT_LOG</p> </li> <li> <p>EXPLORER_SUMMARY_LOG</p> </li> <li> <p>APPLICATION_CRASH_REPORT</p> </li> <li> <p>XCTEST_LOG</p> </li> <li> <p>VIDEO</p> </li> <li> <p>CUSTOMER_ARTIFACT</p> </li> <li> <p>CUSTOMER_ARTIFACT_LOG</p> </li> <li> <p>TESTSPEC_OUTPUT</p> </li> </ul>",
          "shape": "ArtifactType"
        },
        "url": {
          "documentation": "<p>The presigned Amazon S3 URL that can be used with a GET request to download the artifact's file.</p>",
          "shape": "URL"
        }
      },
      "type": "structure"
    },
    "ArtifactCategory": {
      "enum": [
        "SCREENSHOT",
        "FILE",
        "LOG"
      ],
      "type": "string"
    },
    "ArtifactType": {
      "enum": [
        "UNKNOWN",
        "SCREENSHOT",
        "DEVICE_LOG",
        "MESSAGE_LOG",
        "VIDEO_LOG",
        "RESULT_LOG",
        "SERVICE_LOG",
        "WEBKIT_LOG",
        "INSTRUMENTATION_OUTPUT",
        "EXERCISER_MONKEY_OUTPUT",
        "CALABASH_JSON_OUTPUT",
        "CALABASH_PRETTY_OUTPUT",
        "CALABASH_STANDARD_OUTPUT",
        "CALABASH_JAVA_XML_OUTPUT",
        "AUTOMATION_OUTPUT",
        "APPIUM_SERVER_OUTPUT",
        "APPIUM_JAVA_OUTPUT",
        "APPIUM_JAVA_XML_OUTPUT",
        "APPIUM_PYTHON_OUTPUT",
        "APPIUM_PYTHON_XML_OUTPUT",
        "EXPLORER_EVENT_LOG",
        "EXPLORER_SUMMARY_LOG",
        "APPLICATION_CRASH_REPORT",
        "XCTEST_LOG",
        "VIDEO",
        "CUSTOMER_ARTIFACT",
        "CUSTOMER_ARTIFACT_LOG",
        "TESTSPEC_OUTPUT"
      ],
      "type": "string"
    },
    "Artifacts": {
      "member": {
        "shape": "Artifact"
      },
      "type": "list"
    },
    "BillingMethod": {
      "enum": [
        "METERED",
        "UNMETERED"
      ],
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CPU": {
      "documentation": "<p>Represents the amount of CPU that an app is using on a physical device. Does not represent system-wide CPU usage.</p>",
      "members": {
        "architecture": {
          "documentation": "<p>The CPU's architecture (for example, x86 or ARM).</p>",
          "shape": "String"
        },
        "clock": {
          "documentation": "<p>The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000.</p>",
          "shape": "Double"
        },
        "frequency": {
          "documentation": "<p>The CPU's frequency.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CannotDeleteException": {
      "documentation": "<p>The requested object could not be deleted.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ClientId": {
      "max": 64,
      "min": 0,
      "type": "string"
    },
    "ContentType": {
      "max": 64,
      "min": 0,
      "type": "string"
    },
    "Counters": {
      "documentation": "<p>Represents entity counters.</p>",
      "members": {
        "errored": {
          "documentation": "<p>The number of errored entities.</p>",
          "shape": "Integer"
        },
        "failed": {
          "documentation": "<p>The number of failed entities.</p>",
          "shape": "Integer"
        },
        "passed": {
          "documentation": "<p>The number of passed entities.</p>",
          "shape": "Integer"
        },
        "skipped": {
          "documentation": "<p>The number of skipped entities.</p>",
          "shape": "Integer"
        },
        "stopped": {
          "documentation": "<p>The number of stopped entities.</p>",
          "shape": "Integer"
        },
        "total": {
          "documentation": "<p>The total number of entities.</p>",
          "shape": "Integer"
        },
        "warned": {
          "documentation": "<p>The number of warned entities.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "CreateDevicePoolRequest": {
      "documentation": "<p>Represents a request to the create device pool operation.</p>",
      "members": {
        "description": {
          "documentation": "<p>The device pool's description.</p>",
          "shape": "Message"
        },
        "maxDevices": {
          "documentation": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
          "shape": "Integer"
        },
        "name": {
          "documentation": "<p>The device pool's name.</p>",
          "shape": "Name"
        },
        "projectArn": {
          "documentation": "<p>The ARN of the project for the device pool.</p>",
          "shape": "AmazonResourceName"
        },
        "rules": {
          "documentation": "<p>The device pool's rules.</p>",
          "shape": "Rules"
        }
      },
      "required": [
        "projectArn",
        "name",
        "rules"
      ],
      "type": "structure"
    },
    "CreateDevicePoolResult": {
      "documentation": "<p>Represents the result of a create device pool request.</p>",
      "members": {
        "devicePool": {
          "documentation": "<p>The newly created device pool.</p>",
          "shape": "DevicePool"
        }
      },
      "type": "structure"
    },
    "CreateInstanceProfileRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of your instance profile.</p>",
          "shape": "Message"
        },
        "excludeAppPackagesFromCleanup": {
          "documentation": "<p>An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run.</p> <p>The list of packages is considered only if you set <code>packageCleanup</code> to <code>true</code>.</p>",
          "shape": "PackageIds"
        },
        "name": {
          "documentation": "<p>The name of your instance profile.</p>",
          "shape": "Name"
        },
        "packageCleanup": {
          "documentation": "<p>When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is <code>false</code> for private devices.</p>",
          "shape": "Boolean"
        },
        "rebootAfterUse": {
          "documentation": "<p>When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is <code>true</code>.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateInstanceProfileResult": {
      "members": {
        "instanceProfile": {
          "documentation": "<p>An object that contains information about your instance profile.</p>",
          "shape": "InstanceProfile"
        }
      },
      "type": "structure"
    },
    "CreateNetworkProfileRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the network profile.</p>",
          "shape": "Message"
        },
        "downlinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "downlinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkLossPercent": {
          "documentation": "<p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        },
        "name": {
          "documentation": "<p>The name for the new network profile.</p>",
          "shape": "Name"
        },
        "projectArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to create a network profile.</p>",
          "shape": "AmazonResourceName"
        },
        "type": {
          "documentation": "<p>The type of network profile to create. Valid values are listed here.</p>",
          "shape": "NetworkProfileType"
        },
        "uplinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "uplinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkLossPercent": {
          "documentation": "<p>Proportion of transmitted packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        }
      },
      "required": [
        "projectArn",
        "name"
      ],
      "type": "structure"
    },
    "CreateNetworkProfileResult": {
      "members": {
        "networkProfile": {
          "documentation": "<p>The network profile that is returned by the create network profile request.</p>",
          "shape": "NetworkProfile"
        }
      },
      "type": "structure"
    },
    "CreateProjectRequest": {
      "documentation": "<p>Represents a request to the create project operation.</p>",
      "members": {
        "defaultJobTimeoutMinutes": {
          "documentation": "<p>Sets the execution timeout value (in minutes) for a project. All test runs in this project use the specified execution timeout value unless overridden when scheduling a run.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "name": {
          "documentation": "<p>The project's name.</p>",
          "shape": "Name"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "VpcConfig"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateProjectResult": {
      "documentation": "<p>Represents the result of a create project request.</p>",
      "members": {
        "project": {
          "documentation": "<p>The newly created project.</p>",
          "shape": "Project"
        }
      },
      "type": "structure"
    },
    "CreateRemoteAccessSessionConfiguration": {
      "documentation": "<p>Configuration settings for a remote access session, including billing method.</p>",
      "members": {
        "billingMethod": {
          "documentation": "<p>The billing method for the remote access session.</p>",
          "shape": "BillingMethod"
        },
        "vpceConfigurationArns": {
          "documentation": "<p>An array of ARNs included in the VPC endpoint configuration.</p>",
          "shape": "AmazonResourceNames"
        }
      },
      "type": "structure"
    },
    "CreateRemoteAccessSessionRequest": {
      "documentation": "<p>Creates and submits a request to start a remote access session.</p>",
      "members": {
        "clientId": {
          "documentation": "<p>Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same <code>clientId</code> value in each call to <code>CreateRemoteAccessSession</code>. This identifier is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "ClientId"
        },
        "configuration": {
          "documentation": "<p>The configuration information for the remote access session request.</p>",
          "shape": "CreateRemoteAccessSessionConfiguration"
        },
        "deviceArn": {
          "documentation": "<p>The ARN of the device for which you want to create a remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "instanceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "interactionMode": {
          "documentation": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
          "shape": "InteractionMode"
        },
        "name": {
          "documentation": "<p>The name of the remote access session to create.</p>",
          "shape": "Name"
        },
        "projectArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "remoteDebugEnabled": {
          "documentation": "<p>Set to <code>true</code> if you want to access devices remotely for debugging in your remote access session.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "Boolean"
        },
        "remoteRecordAppArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "remoteRecordEnabled": {
          "documentation": "<p>Set to <code>true</code> to enable remote recording for the remote access session.</p>",
          "shape": "Boolean"
        },
        "skipAppResign": {
          "documentation": "<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information on how Device Farm modifies your uploads during tests, see <a href=\"http://aws.amazon.com/device-farm/faqs/\">Do you modify my app?</a> </p>",
          "shape": "Boolean"
        },
        "sshPublicKey": {
          "documentation": "<p>Ignored. The public key of the <code>ssh</code> key pair you want to use for connecting to remote devices in your remote debugging session. This key is required only if <code>remoteDebugEnabled</code> is set to <code>true</code>.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "SshPublicKey"
        }
      },
      "required": [
        "projectArn",
        "deviceArn"
      ],
      "type": "structure"
    },
    "CreateRemoteAccessSessionResult": {
      "documentation": "<p>Represents the server response from a request to create a remote access session.</p>",
      "members": {
        "remoteAccessSession": {
          "documentation": "<p>A container that describes the remote access session when the request to create a remote access session is sent.</p>",
          "shape": "RemoteAccessSession"
        }
      },
      "type": "structure"
    },
    "CreateTestGridProjectRequest": {
      "members": {
        "description": {
          "documentation": "<p>Human-readable description of the project.</p>",
          "shape": "ResourceDescription"
        },
        "name": {
          "documentation": "<p>Human-readable name of the Selenium testing project.</p>",
          "shape": "ResourceName"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "TestGridVpcConfig"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateTestGridProjectResult": {
      "members": {
        "testGridProject": {
          "documentation": "<p>ARN of the Selenium testing project that was created.</p>",
          "shape": "TestGridProject"
        }
      },
      "type": "structure"
    },
    "CreateTestGridUrlRequest": {
      "members": {
        "expiresInSeconds": {
          "documentation": "<p>Lifetime, in seconds, of the URL.</p>",
          "shape": "TestGridUrlExpiresInSecondsInput"
        },
        "projectArn": {
          "documentation": "<p>ARN (from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>) to associate with the short-term URL. </p>",
          "shape": "DeviceFarmArn"
        }
      },
      "required": [
        "projectArn",
        "expiresInSeconds"
      ],
      "type": "structure"
    },
    "CreateTestGridUrlResult": {
      "members": {
        "expires": {
          "documentation": "<p>The number of seconds the URL from <a>CreateTestGridUrlResult$url</a> stays active.</p>",
          "shape": "DateTime"
        },
        "url": {
          "documentation": "<p>A signed URL, expiring in <a>CreateTestGridUrlRequest$expiresInSeconds</a> seconds, to be passed to a <code>RemoteWebDriver</code>. </p>",
          "shape": "SensitiveString"
        }
      },
      "type": "structure"
    },
    "CreateUploadRequest": {
      "documentation": "<p>Represents a request to the create upload operation.</p>",
      "members": {
        "contentType": {
          "documentation": "<p>The upload's content type (for example, <code>application/octet-stream</code>).</p>",
          "shape": "ContentType"
        },
        "name": {
          "documentation": "<p>The upload's file name. The name should not contain any forward slashes (<code>/</code>). If you are uploading an iOS app, the file name must end with the <code>.ipa</code> extension. If you are uploading an Android app, the file name must end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension.</p>",
          "shape": "Name"
        },
        "projectArn": {
          "documentation": "<p>The ARN of the project for the upload.</p>",
          "shape": "AmazonResourceName"
        },
        "type": {
          "documentation": "<p>The upload's upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul> <p> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>",
          "shape": "UploadType"
        }
      },
      "required": [
        "projectArn",
        "name",
        "type"
      ],
      "type": "structure"
    },
    "CreateUploadResult": {
      "documentation": "<p>Represents the result of a create upload request.</p>",
      "members": {
        "upload": {
          "documentation": "<p>The newly created upload.</p>",
          "shape": "Upload"
        }
      },
      "type": "structure"
    },
    "CreateVPCEConfigurationRequest": {
      "members": {
        "serviceDnsName": {
          "documentation": "<p>The DNS name of the service running in your VPC that you want Device Farm to test.</p>",
          "shape": "ServiceDnsName"
        },
        "vpceConfigurationDescription": {
          "documentation": "<p>An optional description that provides details about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfigurationDescription"
        },
        "vpceConfigurationName": {
          "documentation": "<p>The friendly name you give to your VPC endpoint configuration, to manage your configurations more easily.</p>",
          "shape": "VPCEConfigurationName"
        },
        "vpceServiceName": {
          "documentation": "<p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>",
          "shape": "VPCEServiceName"
        }
      },
      "required": [
        "vpceConfigurationName",
        "vpceServiceName",
        "serviceDnsName"
      ],
      "type": "structure"
    },
    "CreateVPCEConfigurationResult": {
      "members": {
        "vpceConfiguration": {
          "documentation": "<p>An object that contains information about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfiguration"
        }
      },
      "type": "structure"
    },
    "CurrencyCode": {
      "enum": [
        "USD"
      ],
      "type": "string"
    },
    "CustomerArtifactPaths": {
      "documentation": "<p>A JSON object that specifies the paths where the artifacts generated by the customer's tests, on the device or in the test environment, are pulled from.</p> <p>Specify <code>deviceHostPaths</code> and optionally specify either <code>iosPaths</code> or <code>androidPaths</code>.</p> <p>For web app tests, you can specify both <code>iosPaths</code> and <code>androidPaths</code>.</p>",
      "members": {
        "androidPaths": {
          "documentation": "<p>Comma-separated list of paths on the Android device where the artifacts generated by the customer's tests are pulled from.</p>",
          "shape": "AndroidPaths"
        },
        "deviceHostPaths": {
          "documentation": "<p>Comma-separated list of paths in the test execution environment where the artifacts generated by the customer's tests are pulled from.</p>",
          "shape": "DeviceHostPaths"
        },
        "iosPaths": {
          "documentation": "<p>Comma-separated list of paths on the iOS device where the artifacts generated by the customer's tests are pulled from.</p>",
          "shape": "IosPaths"
        }
      },
      "type": "structure"
    },
    "DateTime": {
      "type": "timestamp"
    },
    "DeleteDevicePoolRequest": {
      "documentation": "<p>Represents a request to the delete device pool operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>Represents the Amazon Resource Name (ARN) of the Device Farm device pool to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteDevicePoolResult": {
      "documentation": "<p>Represents the result of a delete device pool request.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteInstanceProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the instance profile you are requesting to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteInstanceProfileResult": {
      "members": {},
      "type": "structure"
    },
    "DeleteNetworkProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the network profile to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteNetworkProfileResult": {
      "members": {},
      "type": "structure"
    },
    "DeleteProjectRequest": {
      "documentation": "<p>Represents a request to the delete project operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>Represents the Amazon Resource Name (ARN) of the Device Farm project to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteProjectResult": {
      "documentation": "<p>Represents the result of a delete project request.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteRemoteAccessSessionRequest": {
      "documentation": "<p>Represents the request to delete the specified remote access session.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the session for which you want to delete remote access.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteRemoteAccessSessionResult": {
      "documentation": "<p>The response from the server when a request is made to delete the remote access session.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteRunRequest": {
      "documentation": "<p>Represents a request to the delete run operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the run to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteRunResult": {
      "documentation": "<p>Represents the result of a delete run request.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteTestGridProjectRequest": {
      "members": {
        "projectArn": {
          "documentation": "<p>The ARN of the project to delete, from <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.</p>",
          "shape": "DeviceFarmArn"
        }
      },
      "required": [
        "projectArn"
      ],
      "type": "structure"
    },
    "DeleteTestGridProjectResult": {
      "members": {},
      "type": "structure"
    },
    "DeleteUploadRequest": {
      "documentation": "<p>Represents a request to the delete upload operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>Represents the Amazon Resource Name (ARN) of the Device Farm upload to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteUploadResult": {
      "documentation": "<p>Represents the result of a delete upload request.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteVPCEConfigurationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to delete.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteVPCEConfigurationResult": {
      "members": {},
      "type": "structure"
    },
    "Device": {
      "documentation": "<p>Represents a device type that an app is tested against.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The device's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "availability": {
          "documentation": "<p>Indicates how likely a device is available for a test run. Currently available in the <a>ListDevices</a> and GetDevice API methods.</p>",
          "shape": "DeviceAvailability"
        },
        "carrier": {
          "documentation": "<p>The device's carrier.</p>",
          "shape": "String"
        },
        "cpu": {
          "documentation": "<p>Information about the device's CPU.</p>",
          "shape": "CPU"
        },
        "fleetName": {
          "documentation": "<p>The name of the fleet to which this device belongs.</p>",
          "shape": "String"
        },
        "fleetType": {
          "documentation": "<p>The type of fleet to which this device belongs. Possible values are PRIVATE and PUBLIC.</p>",
          "shape": "String"
        },
        "formFactor": {
          "documentation": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE</p> </li> <li> <p>TABLET</p> </li> </ul>",
          "shape": "DeviceFormFactor"
        },
        "heapSize": {
          "documentation": "<p>The device's heap size, expressed in bytes.</p>",
          "shape": "Long"
        },
        "image": {
          "documentation": "<p>The device's image name.</p>",
          "shape": "String"
        },
        "instances": {
          "documentation": "<p>The instances that belong to this device.</p>",
          "shape": "DeviceInstances"
        },
        "manufacturer": {
          "documentation": "<p>The device's manufacturer name.</p>",
          "shape": "String"
        },
        "memory": {
          "documentation": "<p>The device's total memory size, expressed in bytes.</p>",
          "shape": "Long"
        },
        "model": {
          "documentation": "<p>The device's model name.</p>",
          "shape": "String"
        },
        "modelId": {
          "documentation": "<p>The device's model ID.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>The device's display name.</p>",
          "shape": "Name"
        },
        "os": {
          "documentation": "<p>The device's operating system type.</p>",
          "shape": "String"
        },
        "platform": {
          "documentation": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>",
          "shape": "DevicePlatform"
        },
        "radio": {
          "documentation": "<p>The device's radio.</p>",
          "shape": "String"
        },
        "remoteAccessEnabled": {
          "documentation": "<p>Specifies whether remote access has been enabled for the specified device.</p>",
          "shape": "Boolean"
        },
        "remoteDebugEnabled": {
          "documentation": "<p>This flag is set to <code>true</code> if remote debugging is enabled for the device.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "Boolean"
        },
        "resolution": {
          "documentation": "<p>The resolution of the device.</p>",
          "shape": "Resolution"
        }
      },
      "type": "structure"
    },
    "DeviceAttribute": {
      "enum": [
        "ARN",
        "PLATFORM",
        "FORM_FACTOR",
        "MANUFACTURER",
        "REMOTE_ACCESS_ENABLED",
        "REMOTE_DEBUG_ENABLED",
        "APPIUM_VERSION",
        "INSTANCE_ARN",
        "INSTANCE_LABELS",
        "FLEET_TYPE",
        "OS_VERSION",
        "MODEL",
        "AVAILABILITY"
      ],
      "type": "string"
    },
    "DeviceAvailability": {
      "enum": [
        "TEMPORARY_NOT_AVAILABLE",
        "BUSY",
        "AVAILABLE",
        "HIGHLY_AVAILABLE"
      ],
      "type": "string"
    },
    "DeviceFarmArn": {
      "max": 1011,
      "min": 32,
      "pattern": "^arn:aws:devicefarm:.+",
      "type": "string"
    },
    "DeviceFilter": {
      "documentation": "<p>Represents a device filter used to select a set of devices to be included in a test run. This data structure is passed in as the <code>deviceSelectionConfiguration</code> parameter to <code>ScheduleRun</code>. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p> <p>It is also passed in as the <code>filters</code> parameter to <code>ListDevices</code>. For an example of the JSON request syntax, see <a>ListDevices</a>.</p>",
      "members": {
        "attribute": {
          "documentation": "<p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are ANDROID or IOS.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version (for example, 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model (for example, iPad 5th Gen).</p> <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are PHONE or TABLET.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer (for example, Apple).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> <p>Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>, this filter is ignored.</p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> </dl>",
          "shape": "DeviceFilterAttribute"
        },
        "operator": {
          "documentation": "<p>Specifies how Device Farm compares the filter's attribute to the value. See the attribute descriptions.</p>",
          "shape": "RuleOperator"
        },
        "values": {
          "documentation": "<p>An array of one or more filter values used in a device filter.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p> </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p> </li> </ul>",
          "shape": "DeviceFilterValues"
        }
      },
      "required": [
        "attribute",
        "operator",
        "values"
      ],
      "type": "structure"
    },
    "DeviceFilterAttribute": {
      "enum": [
        "ARN",
        "PLATFORM",
        "OS_VERSION",
        "MODEL",
        "AVAILABILITY",
        "FORM_FACTOR",
        "MANUFACTURER",
        "REMOTE_ACCESS_ENABLED",
        "REMOTE_DEBUG_ENABLED",
        "INSTANCE_ARN",
        "INSTANCE_LABELS",
        "FLEET_TYPE"
      ],
      "type": "string"
    },
    "DeviceFilterValues": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "DeviceFilters": {
      "member": {
        "shape": "DeviceFilter"
      },
      "type": "list"
    },
    "DeviceFormFactor": {
      "enum": [
        "PHONE",
        "TABLET"
      ],
      "type": "string"
    },
    "DeviceHostPaths": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "DeviceInstance": {
      "documentation": "<p>Represents the device instance.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the device instance.</p>",
          "shape": "AmazonResourceName"
        },
        "deviceArn": {
          "documentation": "<p>The ARN of the device.</p>",
          "shape": "AmazonResourceName"
        },
        "instanceProfile": {
          "documentation": "<p>A object that contains information about the instance profile.</p>",
          "shape": "InstanceProfile"
        },
        "labels": {
          "documentation": "<p>An array of strings that describe the device instance.</p>",
          "shape": "InstanceLabels"
        },
        "status": {
          "documentation": "<p>The status of the device instance. Valid values are listed here.</p>",
          "shape": "InstanceStatus"
        },
        "udid": {
          "documentation": "<p>Unique device identifier for the device instance.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DeviceInstances": {
      "member": {
        "shape": "DeviceInstance"
      },
      "type": "list"
    },
    "DeviceMinutes": {
      "documentation": "<p>Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.</p>",
      "members": {
        "metered": {
          "documentation": "<p>When specified, represents only the sum of metered minutes used by the resource to run tests.</p>",
          "shape": "Double"
        },
        "total": {
          "documentation": "<p>When specified, represents the total minutes used by the resource to run tests.</p>",
          "shape": "Double"
        },
        "unmetered": {
          "documentation": "<p>When specified, represents only the sum of unmetered minutes used by the resource to run tests.</p>",
          "shape": "Double"
        }
      },
      "type": "structure"
    },
    "DevicePlatform": {
      "enum": [
        "ANDROID",
        "IOS"
      ],
      "type": "string"
    },
    "DevicePool": {
      "documentation": "<p>Represents a collection of device types.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The device pool's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "description": {
          "documentation": "<p>The device pool's description.</p>",
          "shape": "Message"
        },
        "maxDevices": {
          "documentation": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p>",
          "shape": "Integer"
        },
        "name": {
          "documentation": "<p>The device pool's name.</p>",
          "shape": "Name"
        },
        "rules": {
          "documentation": "<p>Information about the device pool's rules.</p>",
          "shape": "Rules"
        },
        "type": {
          "documentation": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
          "shape": "DevicePoolType"
        }
      },
      "type": "structure"
    },
    "DevicePoolCompatibilityResult": {
      "documentation": "<p>Represents a device pool compatibility result.</p>",
      "members": {
        "compatible": {
          "documentation": "<p>Whether the result was compatible with the device pool.</p>",
          "shape": "Boolean"
        },
        "device": {
          "documentation": "<p>The device (phone or tablet) to return information about.</p>",
          "shape": "Device"
        },
        "incompatibilityMessages": {
          "documentation": "<p>Information about the compatibility.</p>",
          "shape": "IncompatibilityMessages"
        }
      },
      "type": "structure"
    },
    "DevicePoolCompatibilityResults": {
      "member": {
        "shape": "DevicePoolCompatibilityResult"
      },
      "type": "list"
    },
    "DevicePoolType": {
      "enum": [
        "CURATED",
        "PRIVATE"
      ],
      "type": "string"
    },
    "DevicePools": {
      "member": {
        "shape": "DevicePool"
      },
      "type": "list"
    },
    "DeviceSelectionConfiguration": {
      "documentation": "<p>Represents the device filters used in a test run and the maximum number of devices to be included in the run. It is passed in as the <code>deviceSelectionConfiguration</code> request parameter in <a>ScheduleRun</a>.</p>",
      "members": {
        "filters": {
          "documentation": "<p>Used to dynamically select a set of devices for a test run. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p> <b>Attribute</b> </p> <p>The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</p> </li> <li> <p>MANUFACTURER: The device manufacturer (for example, Apple).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>, this filter is ignored.</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p> </li> </ul> </li> <li> <p> <b>Operator</b> </p> <p>The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p> <b>Values</b> </p> <p>An array of one or more filter values.</p> <p class=\"title\"> <b>Operator Values</b> </p> <ul> <li> <p>The IN and NOT_IN operators can take a values array that has more than one element.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> </ul> <p class=\"title\"> <b>Attribute Values</b> </p> <ul> <li> <p>The PLATFORM attribute can be set to ANDROID or IOS.</p> </li> <li> <p>The AVAILABILITY attribute can be set to AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>The FORM_FACTOR attribute can be set to PHONE or TABLET.</p> </li> <li> <p>The FLEET_TYPE attribute can be set to PUBLIC or PRIVATE.</p> </li> </ul> </li> </ul>",
          "shape": "DeviceFilters"
        },
        "maxDevices": {
          "documentation": "<p>The maximum number of devices to be included in a test run.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "filters",
        "maxDevices"
      ],
      "type": "structure"
    },
    "DeviceSelectionResult": {
      "documentation": "<p>Contains the run results requested by the device selection configuration and how many devices were returned. For an example of the JSON response syntax, see <a>ScheduleRun</a>.</p>",
      "members": {
        "filters": {
          "documentation": "<p>The filters in a device selection result.</p>",
          "shape": "DeviceFilters"
        },
        "matchedDevicesCount": {
          "documentation": "<p>The number of devices that matched the device filter selection criteria.</p>",
          "shape": "Integer"
        },
        "maxDevices": {
          "documentation": "<p>The maximum number of devices to be selected by a device filter and included in a test run.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "Devices": {
      "member": {
        "shape": "Device"
      },
      "type": "list"
    },
    "Double": {
      "type": "double"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "ExecutionConfiguration": {
      "documentation": "<p>Represents configuration information about a test run, such as the execution timeout (in minutes).</p>",
      "members": {
        "accountsCleanup": {
          "documentation": "<p>True if account cleanup is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "AccountsCleanup"
        },
        "appPackagesCleanup": {
          "documentation": "<p>True if app package cleanup is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "AppPackagesCleanup"
        },
        "jobTimeoutMinutes": {
          "documentation": "<p>The number of minutes a test run executes before it times out.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "skipAppResign": {
          "documentation": "<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
          "shape": "SkipAppResign"
        },
        "videoCapture": {
          "documentation": "<p>Set to true to enable video capture. Otherwise, set to false. The default is true.</p>",
          "shape": "VideoCapture"
        }
      },
      "type": "structure"
    },
    "ExecutionResult": {
      "enum": [
        "PENDING",
        "PASSED",
        "WARNED",
        "FAILED",
        "SKIPPED",
        "ERRORED",
        "STOPPED"
      ],
      "type": "string"
    },
    "ExecutionResultCode": {
      "enum": [
        "PARSING_FAILED",
        "VPC_ENDPOINT_SETUP_FAILED"
      ],
      "type": "string"
    },
    "ExecutionStatus": {
      "enum": [
        "PENDING",
        "PENDING_CONCURRENCY",
        "PENDING_DEVICE",
        "PROCESSING",
        "SCHEDULING",
        "PREPARING",
        "RUNNING",
        "COMPLETED",
        "STOPPING"
      ],
      "type": "string"
    },
    "Filter": {
      "max": 8192,
      "min": 0,
      "type": "string"
    },
    "GetAccountSettingsRequest": {
      "documentation": "<p>Represents the request sent to retrieve the account settings.</p>",
      "members": {},
      "type": "structure"
    },
    "GetAccountSettingsResult": {
      "documentation": "<p>Represents the account settings return values from the <code>GetAccountSettings</code> request.</p>",
      "members": {
        "accountSettings": {
          "documentation": "<p>The account settings.</p>",
          "shape": "AccountSettings"
        }
      },
      "type": "structure"
    },
    "GetDeviceInstanceRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the instance you're requesting information about.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetDeviceInstanceResult": {
      "members": {
        "deviceInstance": {
          "documentation": "<p>An object that contains information about your device instance.</p>",
          "shape": "DeviceInstance"
        }
      },
      "type": "structure"
    },
    "GetDevicePoolCompatibilityRequest": {
      "documentation": "<p>Represents a request to the get device pool compatibility operation.</p>",
      "members": {
        "appArn": {
          "documentation": "<p>The ARN of the app that is associated with the specified device pool.</p>",
          "shape": "AmazonResourceName"
        },
        "configuration": {
          "documentation": "<p>An object that contains information about the settings for a run.</p>",
          "shape": "ScheduleRunConfiguration"
        },
        "devicePoolArn": {
          "documentation": "<p>The device pool's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "test": {
          "documentation": "<p>Information about the uploaded test to be run against the device pool.</p>",
          "shape": "ScheduleRunTest"
        },
        "testType": {
          "documentation": "<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ.</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT.</p> </li> <li> <p>APPIUM_JAVA_TESTNG.</p> </li> <li> <p>APPIUM_PYTHON.</p> </li> <li> <p>APPIUM_NODE.</p> </li> <li> <p>APPIUM_RUBY.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG.</p> </li> <li> <p>APPIUM_WEB_PYTHON.</p> </li> <li> <p>APPIUM_WEB_NODE.</p> </li> <li> <p>APPIUM_WEB_RUBY.</p> </li> <li> <p>CALABASH.</p> </li> <li> <p>INSTRUMENTATION.</p> </li> <li> <p>UIAUTOMATION.</p> </li> <li> <p>UIAUTOMATOR.</p> </li> <li> <p>XCTEST.</p> </li> <li> <p>XCTEST_UI.</p> </li> </ul>",
          "shape": "TestType"
        }
      },
      "required": [
        "devicePoolArn"
      ],
      "type": "structure"
    },
    "GetDevicePoolCompatibilityResult": {
      "documentation": "<p>Represents the result of describe device pool compatibility request.</p>",
      "members": {
        "compatibleDevices": {
          "documentation": "<p>Information about compatible devices.</p>",
          "shape": "DevicePoolCompatibilityResults"
        },
        "incompatibleDevices": {
          "documentation": "<p>Information about incompatible devices.</p>",
          "shape": "DevicePoolCompatibilityResults"
        }
      },
      "type": "structure"
    },
    "GetDevicePoolRequest": {
      "documentation": "<p>Represents a request to the get device pool operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The device pool's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetDevicePoolResult": {
      "documentation": "<p>Represents the result of a get device pool request.</p>",
      "members": {
        "devicePool": {
          "documentation": "<p>An object that contains information about the requested device pool.</p>",
          "shape": "DevicePool"
        }
      },
      "type": "structure"
    },
    "GetDeviceRequest": {
      "documentation": "<p>Represents a request to the get device request.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The device type's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetDeviceResult": {
      "documentation": "<p>Represents the result of a get device request.</p>",
      "members": {
        "device": {
          "documentation": "<p>An object that contains information about the requested device.</p>",
          "shape": "Device"
        }
      },
      "type": "structure"
    },
    "GetInstanceProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an instance profile.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetInstanceProfileResult": {
      "members": {
        "instanceProfile": {
          "documentation": "<p>An object that contains information about an instance profile.</p>",
          "shape": "InstanceProfile"
        }
      },
      "type": "structure"
    },
    "GetJobRequest": {
      "documentation": "<p>Represents a request to the get job operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The job's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetJobResult": {
      "documentation": "<p>Represents the result of a get job request.</p>",
      "members": {
        "job": {
          "documentation": "<p>An object that contains information about the requested job.</p>",
          "shape": "Job"
        }
      },
      "type": "structure"
    },
    "GetNetworkProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the network profile to return information about.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetNetworkProfileResult": {
      "members": {
        "networkProfile": {
          "documentation": "<p>The network profile.</p>",
          "shape": "NetworkProfile"
        }
      },
      "type": "structure"
    },
    "GetOfferingStatusRequest": {
      "documentation": "<p>Represents the request to retrieve the offering status for the specified customer or account.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "GetOfferingStatusResult": {
      "documentation": "<p>Returns the status result for a device offering.</p>",
      "members": {
        "current": {
          "documentation": "<p>When specified, gets the offering status for the current period.</p>",
          "shape": "OfferingStatusMap"
        },
        "nextPeriod": {
          "documentation": "<p>When specified, gets the offering status for the next period.</p>",
          "shape": "OfferingStatusMap"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "GetProjectRequest": {
      "documentation": "<p>Represents a request to the get project operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The project's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetProjectResult": {
      "documentation": "<p>Represents the result of a get project request.</p>",
      "members": {
        "project": {
          "documentation": "<p>The project to get information about.</p>",
          "shape": "Project"
        }
      },
      "type": "structure"
    },
    "GetRemoteAccessSessionRequest": {
      "documentation": "<p>Represents the request to get information about the specified remote access session.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the remote access session about which you want to get session information.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetRemoteAccessSessionResult": {
      "documentation": "<p>Represents the response from the server that lists detailed information about the remote access session.</p>",
      "members": {
        "remoteAccessSession": {
          "documentation": "<p>A container that lists detailed information about the remote access session.</p>",
          "shape": "RemoteAccessSession"
        }
      },
      "type": "structure"
    },
    "GetRunRequest": {
      "documentation": "<p>Represents a request to the get run operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The run's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetRunResult": {
      "documentation": "<p>Represents the result of a get run request.</p>",
      "members": {
        "run": {
          "documentation": "<p>The run to get results from.</p>",
          "shape": "Run"
        }
      },
      "type": "structure"
    },
    "GetSuiteRequest": {
      "documentation": "<p>Represents a request to the get suite operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The suite's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetSuiteResult": {
      "documentation": "<p>Represents the result of a get suite request.</p>",
      "members": {
        "suite": {
          "documentation": "<p>A collection of one or more tests.</p>",
          "shape": "Suite"
        }
      },
      "type": "structure"
    },
    "GetTestGridProjectRequest": {
      "members": {
        "projectArn": {
          "documentation": "<p>The ARN of the Selenium testing project, from either <a>CreateTestGridProject</a> or <a>ListTestGridProjects</a>.</p>",
          "shape": "DeviceFarmArn"
        }
      },
      "required": [
        "projectArn"
      ],
      "type": "structure"
    },
    "GetTestGridProjectResult": {
      "members": {
        "testGridProject": {
          "documentation": "<p>A <a>TestGridProject</a>.</p>",
          "shape": "TestGridProject"
        }
      },
      "type": "structure"
    },
    "GetTestGridSessionRequest": {
      "members": {
        "projectArn": {
          "documentation": "<p>The ARN for the project that this session belongs to. See <a>CreateTestGridProject</a> and <a>ListTestGridProjects</a>.</p>",
          "shape": "DeviceFarmArn"
        },
        "sessionArn": {
          "documentation": "<p>An ARN that uniquely identifies a <a>TestGridSession</a>.</p>",
          "shape": "DeviceFarmArn"
        },
        "sessionId": {
          "documentation": "<p>An ID associated with this session.</p>",
          "shape": "ResourceId"
        }
      },
      "type": "structure"
    },
    "GetTestGridSessionResult": {
      "members": {
        "testGridSession": {
          "documentation": "<p>The <a>TestGridSession</a> that was requested.</p>",
          "shape": "TestGridSession"
        }
      },
      "type": "structure"
    },
    "GetTestRequest": {
      "documentation": "<p>Represents a request to the get test operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The test's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetTestResult": {
      "documentation": "<p>Represents the result of a get test request.</p>",
      "members": {
        "test": {
          "documentation": "<p>A test condition that is evaluated.</p>",
          "shape": "Test"
        }
      },
      "type": "structure"
    },
    "GetUploadRequest": {
      "documentation": "<p>Represents a request to the get upload operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The upload's ARN.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetUploadResult": {
      "documentation": "<p>Represents the result of a get upload request.</p>",
      "members": {
        "upload": {
          "documentation": "<p>An app or a set of one or more tests to upload or that have been uploaded.</p>",
          "shape": "Upload"
        }
      },
      "type": "structure"
    },
    "GetVPCEConfigurationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to describe.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetVPCEConfigurationResult": {
      "members": {
        "vpceConfiguration": {
          "documentation": "<p>An object that contains information about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfiguration"
        }
      },
      "type": "structure"
    },
    "HostAddress": {
      "max": 1024,
      "type": "string"
    },
    "IdempotencyException": {
      "documentation": "<p>An entity with the same name already exists.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Any additional information about the exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "IncompatibilityMessage": {
      "documentation": "<p>Represents information about incompatibility.</p>",
      "members": {
        "message": {
          "documentation": "<p>A message about the incompatibility.</p>",
          "shape": "Message"
        },
        "type": {
          "documentation": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN</p> </li> <li> <p>FORM_FACTOR (for example, phone or tablet)</p> </li> <li> <p>MANUFACTURER</p> </li> <li> <p>PLATFORM (for example, Android or iOS)</p> </li> <li> <p>REMOTE_ACCESS_ENABLED</p> </li> <li> <p>APPIUM_VERSION</p> </li> </ul>",
          "shape": "DeviceAttribute"
        }
      },
      "type": "structure"
    },
    "IncompatibilityMessages": {
      "member": {
        "shape": "IncompatibilityMessage"
      },
      "type": "list"
    },
    "InstallToRemoteAccessSessionRequest": {
      "documentation": "<p>Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.</p>",
      "members": {
        "appArn": {
          "documentation": "<p>The ARN of the app about which you are requesting information.</p>",
          "shape": "AmazonResourceName"
        },
        "remoteAccessSessionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the remote access session about which you are requesting information.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "remoteAccessSessionArn",
        "appArn"
      ],
      "type": "structure"
    },
    "InstallToRemoteAccessSessionResult": {
      "documentation": "<p>Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.</p>",
      "members": {
        "appUpload": {
          "documentation": "<p>An app to upload or that has been uploaded.</p>",
          "shape": "Upload"
        }
      },
      "type": "structure"
    },
    "InstanceLabels": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "InstanceProfile": {
      "documentation": "<p>Represents the instance profile.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the instance profile.</p>",
          "shape": "AmazonResourceName"
        },
        "description": {
          "documentation": "<p>The description of the instance profile.</p>",
          "shape": "Message"
        },
        "excludeAppPackagesFromCleanup": {
          "documentation": "<p>An array of strings containing the list of app packages that should not be cleaned up from the device after a test run completes.</p> <p>The list of packages is considered only if you set <code>packageCleanup</code> to <code>true</code>.</p>",
          "shape": "PackageIds"
        },
        "name": {
          "documentation": "<p>The name of the instance profile.</p>",
          "shape": "Name"
        },
        "packageCleanup": {
          "documentation": "<p>When set to <code>true</code>, Device Farm removes app packages after a test run. The default value is <code>false</code> for private devices.</p>",
          "shape": "Boolean"
        },
        "rebootAfterUse": {
          "documentation": "<p>When set to <code>true</code>, Device Farm reboots the instance after a test run. The default value is <code>true</code>.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "InstanceProfiles": {
      "member": {
        "shape": "InstanceProfile"
      },
      "type": "list"
    },
    "InstanceStatus": {
      "enum": [
        "IN_USE",
        "PREPARING",
        "AVAILABLE",
        "NOT_AVAILABLE"
      ],
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InteractionMode": {
      "enum": [
        "INTERACTIVE",
        "NO_VIDEO",
        "VIDEO_ONLY"
      ],
      "max": 64,
      "min": 0,
      "type": "string"
    },
    "InternalServiceException": {
      "documentation": "<p>An internal exception was raised in the service. Contact <a href=\"mailto:aws-devicefarm-support@amazon.com\">aws-devicefarm-support@amazon.com</a> if you see this error. </p>",
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "InvalidOperationException": {
      "documentation": "<p>There was an error with the update request, or you do not have sufficient permissions to update this VPC endpoint configuration.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "IosPaths": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "Job": {
      "documentation": "<p>Represents a device.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The job's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "counters": {
          "documentation": "<p>The job's result counters.</p>",
          "shape": "Counters"
        },
        "created": {
          "documentation": "<p>When the job was created.</p>",
          "shape": "DateTime"
        },
        "device": {
          "documentation": "<p>The device (phone or tablet).</p>",
          "shape": "Device"
        },
        "deviceMinutes": {
          "documentation": "<p>Represents the total (metered or unmetered) minutes used by the job.</p>",
          "shape": "DeviceMinutes"
        },
        "instanceArn": {
          "documentation": "<p>The ARN of the instance.</p>",
          "shape": "AmazonResourceName"
        },
        "message": {
          "documentation": "<p>A message about the job's result.</p>",
          "shape": "Message"
        },
        "name": {
          "documentation": "<p>The job's name.</p>",
          "shape": "Name"
        },
        "result": {
          "documentation": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "started": {
          "documentation": "<p>The job's start time.</p>",
          "shape": "DateTime"
        },
        "status": {
          "documentation": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>",
          "shape": "ExecutionStatus"
        },
        "stopped": {
          "documentation": "<p>The job's stop time.</p>",
          "shape": "DateTime"
        },
        "type": {
          "documentation": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>",
          "shape": "TestType"
        },
        "videoCapture": {
          "documentation": "<p>This value is set to true if video capture is enabled. Otherwise, it is set to false.</p>",
          "shape": "VideoCapture"
        },
        "videoEndpoint": {
          "documentation": "<p>The endpoint for streaming device video.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JobTimeoutMinutes": {
      "type": "integer"
    },
    "Jobs": {
      "member": {
        "shape": "Job"
      },
      "type": "list"
    },
    "LimitExceededException": {
      "documentation": "<p>A limit was exceeded.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Any additional information about the exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ListArtifactsRequest": {
      "documentation": "<p>Represents a request to the list artifacts operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The run, job, suite, or test ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "type": {
          "documentation": "<p>The artifacts' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE</p> </li> <li> <p>LOG</p> </li> <li> <p>SCREENSHOT</p> </li> </ul>",
          "shape": "ArtifactCategory"
        }
      },
      "required": [
        "arn",
        "type"
      ],
      "type": "structure"
    },
    "ListArtifactsResult": {
      "documentation": "<p>Represents the result of a list artifacts operation.</p>",
      "members": {
        "artifacts": {
          "documentation": "<p>Information about the artifacts.</p>",
          "shape": "Artifacts"
        },
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDeviceInstancesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>An integer that specifies the maximum number of items you want to return in the API response.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDeviceInstancesResult": {
      "members": {
        "deviceInstances": {
          "documentation": "<p>An object that contains information about your device instances.</p>",
          "shape": "DeviceInstances"
        },
        "nextToken": {
          "documentation": "<p>An identifier that can be used in the next call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDevicePoolsRequest": {
      "documentation": "<p>Represents the result of a list device pools request.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The project ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "type": {
          "documentation": "<p>The device pools' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>",
          "shape": "DevicePoolType"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListDevicePoolsResult": {
      "documentation": "<p>Represents the result of a list device pools request.</p>",
      "members": {
        "devicePools": {
          "documentation": "<p>Information about the device pools.</p>",
          "shape": "DevicePools"
        },
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDevicesRequest": {
      "documentation": "<p>Represents the result of a list devices request.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project.</p>",
          "shape": "AmazonResourceName"
        },
        "filters": {
          "documentation": "<p>Used to select a set of devices. A filter is made up of an attribute, an operator, and one or more values.</p> <ul> <li> <p>Attribute: The aspect of a device such as platform or model used as the selection criteria in a device filter.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>).</p> </li> <li> <p>PLATFORM: The device platform. Valid values are ANDROID or IOS.</p> </li> <li> <p>OS_VERSION: The operating system version (for example, 10.3.2).</p> </li> <li> <p>MODEL: The device model (for example, iPad 5th Gen).</p> </li> <li> <p>AVAILABILITY: The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> <li> <p>FORM_FACTOR: The device form factor. Valid values are PHONE or TABLET.</p> </li> <li> <p>MANUFACTURER: The device manufacturer (for example, Apple).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> </li> <li> <p>REMOTE_DEBUG_ENABLED: Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE. Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>, this attribute is ignored.</p> </li> <li> <p>INSTANCE_ARN: The Amazon Resource Name (ARN) of the device instance.</p> </li> <li> <p>INSTANCE_LABELS: The label of the device instance.</p> </li> <li> <p>FLEET_TYPE: The fleet type. Valid values are PUBLIC or PRIVATE.</p> </li> </ul> </li> <li> <p>Operator: The filter operator.</p> <ul> <li> <p>The EQUALS operator is available for every attribute except INSTANCE_LABELS.</p> </li> <li> <p>The CONTAINS operator is available for the INSTANCE_LABELS and MODEL attributes.</p> </li> <li> <p>The IN and NOT_IN operators are available for the ARN, OS_VERSION, MODEL, MANUFACTURER, and INSTANCE_ARN attributes.</p> </li> <li> <p>The LESS_THAN, GREATER_THAN, LESS_THAN_OR_EQUALS, and GREATER_THAN_OR_EQUALS operators are also available for the OS_VERSION attribute.</p> </li> </ul> </li> <li> <p>Values: An array of one or more filter values.</p> <ul> <li> <p>The IN and NOT_IN operators take a values array that has one or more elements.</p> </li> <li> <p>The other operators require an array with a single element.</p> </li> <li> <p>In a request, the AVAILABILITY attribute takes the following values: AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> </li> </ul> </li> </ul>",
          "shape": "DeviceFilters"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDevicesResult": {
      "documentation": "<p>Represents the result of a list devices operation.</p>",
      "members": {
        "devices": {
          "documentation": "<p>Information about the devices.</p>",
          "shape": "Devices"
        },
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListInstanceProfilesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>An integer that specifies the maximum number of items you want to return in the API response.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListInstanceProfilesResult": {
      "members": {
        "instanceProfiles": {
          "documentation": "<p>An object that contains information about your instance profiles.</p>",
          "shape": "InstanceProfiles"
        },
        "nextToken": {
          "documentation": "<p>An identifier that can be used in the next call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListJobsRequest": {
      "documentation": "<p>Represents a request to the list jobs operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The run's Amazon Resource Name (ARN).</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListJobsResult": {
      "documentation": "<p>Represents the result of a list jobs request.</p>",
      "members": {
        "jobs": {
          "documentation": "<p>Information about the jobs.</p>",
          "shape": "Jobs"
        },
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListNetworkProfilesRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to list network profiles.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "type": {
          "documentation": "<p>The type of network profile to return information about. Valid values are listed here.</p>",
          "shape": "NetworkProfileType"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListNetworkProfilesResult": {
      "members": {
        "networkProfiles": {
          "documentation": "<p>A list of the available network profiles.</p>",
          "shape": "NetworkProfiles"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListOfferingPromotionsRequest": {
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListOfferingPromotionsResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier to be used in the next call to this operation, to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "offeringPromotions": {
          "documentation": "<p>Information about the offering promotions.</p>",
          "shape": "OfferingPromotions"
        }
      },
      "type": "structure"
    },
    "ListOfferingTransactionsRequest": {
      "documentation": "<p>Represents the request to list the offering transaction history.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListOfferingTransactionsResult": {
      "documentation": "<p>Returns the transaction log of the specified offerings.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "offeringTransactions": {
          "documentation": "<p>The audit log of subscriptions you have purchased and modified through AWS Device Farm.</p>",
          "shape": "OfferingTransactions"
        }
      },
      "type": "structure"
    },
    "ListOfferingsRequest": {
      "documentation": "<p>Represents the request to list all offerings.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListOfferingsResult": {
      "documentation": "<p>Represents the return values of the list of offerings.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "offerings": {
          "documentation": "<p>A value that represents the list offering results.</p>",
          "shape": "Offerings"
        }
      },
      "type": "structure"
    },
    "ListProjectsRequest": {
      "documentation": "<p>Represents a request to the list projects operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListProjectsResult": {
      "documentation": "<p>Represents the result of a list projects request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "projects": {
          "documentation": "<p>Information about the projects.</p>",
          "shape": "Projects"
        }
      },
      "type": "structure"
    },
    "ListRemoteAccessSessionsRequest": {
      "documentation": "<p>Represents the request to return information about the remote access session.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project about which you are requesting information.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListRemoteAccessSessionsResult": {
      "documentation": "<p>Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "remoteAccessSessions": {
          "documentation": "<p>A container that represents the metadata from the service about each remote access session you are requesting.</p>",
          "shape": "RemoteAccessSessions"
        }
      },
      "type": "structure"
    },
    "ListRunsRequest": {
      "documentation": "<p>Represents a request to the list runs operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to list runs.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListRunsResult": {
      "documentation": "<p>Represents the result of a list runs request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "runs": {
          "documentation": "<p>Information about the runs.</p>",
          "shape": "Runs"
        }
      },
      "type": "structure"
    },
    "ListSamplesRequest": {
      "documentation": "<p>Represents a request to the list samples operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the job used to list samples.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListSamplesResult": {
      "documentation": "<p>Represents the result of a list samples request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "samples": {
          "documentation": "<p>Information about the samples.</p>",
          "shape": "Samples"
        }
      },
      "type": "structure"
    },
    "ListSuitesRequest": {
      "documentation": "<p>Represents a request to the list suites operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The job's Amazon Resource Name (ARN).</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListSuitesResult": {
      "documentation": "<p>Represents the result of a list suites request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "suites": {
          "documentation": "<p>Information about the suites.</p>",
          "shape": "Suites"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource or resources for which to list tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</p>",
          "shape": "DeviceFarmArn"
        }
      },
      "required": [
        "ResourceARN"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTestGridProjectsRequest": {
      "members": {
        "maxResult": {
          "documentation": "<p>Return no more than this number of results.</p>",
          "shape": "MaxPageSize"
        },
        "nextToken": {
          "documentation": "<p>From a response, used to continue a paginated listing. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListTestGridProjectsResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>Used for pagination. Pass into <a>ListTestGridProjects</a> to get more results in a paginated request.</p>",
          "shape": "PaginationToken"
        },
        "testGridProjects": {
          "documentation": "<p>The list of TestGridProjects, based on a <a>ListTestGridProjectsRequest</a>.</p>",
          "shape": "TestGridProjects"
        }
      },
      "type": "structure"
    },
    "ListTestGridSessionActionsRequest": {
      "members": {
        "maxResult": {
          "documentation": "<p>The maximum number of sessions to return per response.</p>",
          "shape": "MaxPageSize"
        },
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        },
        "sessionArn": {
          "documentation": "<p>The ARN of the session to retrieve.</p>",
          "shape": "DeviceFarmArn"
        }
      },
      "required": [
        "sessionArn"
      ],
      "type": "structure"
    },
    "ListTestGridSessionActionsResult": {
      "members": {
        "actions": {
          "documentation": "<p>The action taken by the session.</p>",
          "shape": "TestGridSessionActions"
        },
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListTestGridSessionArtifactsRequest": {
      "members": {
        "maxResult": {
          "documentation": "<p>The maximum number of results to be returned by a request.</p>",
          "shape": "MaxPageSize"
        },
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        },
        "sessionArn": {
          "documentation": "<p>The ARN of a <a>TestGridSession</a>. </p>",
          "shape": "DeviceFarmArn"
        },
        "type": {
          "documentation": "<p>Limit results to a specified type of artifact.</p>",
          "shape": "TestGridSessionArtifactCategory"
        }
      },
      "required": [
        "sessionArn"
      ],
      "type": "structure"
    },
    "ListTestGridSessionArtifactsResult": {
      "members": {
        "artifacts": {
          "documentation": "<p>A list of test grid session artifacts for a <a>TestGridSession</a>.</p>",
          "shape": "TestGridSessionArtifacts"
        },
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListTestGridSessionsRequest": {
      "members": {
        "creationTimeAfter": {
          "documentation": "<p>Return only sessions created after this time.</p>",
          "shape": "DateTime"
        },
        "creationTimeBefore": {
          "documentation": "<p>Return only sessions created before this time.</p>",
          "shape": "DateTime"
        },
        "endTimeAfter": {
          "documentation": "<p>Return only sessions that ended after this time.</p>",
          "shape": "DateTime"
        },
        "endTimeBefore": {
          "documentation": "<p>Return only sessions that ended before this time.</p>",
          "shape": "DateTime"
        },
        "maxResult": {
          "documentation": "<p>Return only this many results at a time.</p>",
          "shape": "MaxPageSize"
        },
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        },
        "projectArn": {
          "documentation": "<p>ARN of a <a>TestGridProject</a>.</p>",
          "shape": "DeviceFarmArn"
        },
        "status": {
          "documentation": "<p>Return only sessions in this state.</p>",
          "shape": "TestGridSessionStatus"
        }
      },
      "required": [
        "projectArn"
      ],
      "type": "structure"
    },
    "ListTestGridSessionsResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>Pagination token.</p>",
          "shape": "PaginationToken"
        },
        "testGridSessions": {
          "documentation": "<p>The sessions that match the criteria in a <a>ListTestGridSessionsRequest</a>. </p>",
          "shape": "TestGridSessions"
        }
      },
      "type": "structure"
    },
    "ListTestsRequest": {
      "documentation": "<p>Represents a request to the list tests operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The test suite's Amazon Resource Name (ARN).</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListTestsResult": {
      "documentation": "<p>Represents the result of a list tests request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "tests": {
          "documentation": "<p>Information about the tests.</p>",
          "shape": "Tests"
        }
      },
      "type": "structure"
    },
    "ListUniqueProblemsRequest": {
      "documentation": "<p>Represents a request to the list unique problems operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The unique problems' ARNs.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListUniqueProblemsResult": {
      "documentation": "<p>Represents the result of a list unique problems request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "uniqueProblems": {
          "documentation": "<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "UniqueProblemsByExecutionResultMap"
        }
      },
      "type": "structure"
    },
    "ListUploadsRequest": {
      "documentation": "<p>Represents a request to the list uploads operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to list uploads.</p>",
          "shape": "AmazonResourceName"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "type": {
          "documentation": "<p>The type of upload.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p> APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>",
          "shape": "UploadType"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListUploadsResult": {
      "documentation": "<p>Represents the result of a list uploads request.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>If the number of items that are returned is significantly large, this is an identifier that is also returned. It can be used in a subsequent call to this operation to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "uploads": {
          "documentation": "<p>Information about the uploads.</p>",
          "shape": "Uploads"
        }
      },
      "type": "structure"
    },
    "ListVPCEConfigurationsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>An integer that specifies the maximum number of items you want to return in the API response.</p>",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListVPCEConfigurationsResult": {
      "members": {
        "nextToken": {
          "documentation": "<p>An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.</p>",
          "shape": "PaginationToken"
        },
        "vpceConfigurations": {
          "documentation": "<p>An array of <code>VPCEConfiguration</code> objects that contain information about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfigurations"
        }
      },
      "type": "structure"
    },
    "Location": {
      "documentation": "<p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example, 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>",
      "members": {
        "latitude": {
          "documentation": "<p>The latitude.</p>",
          "shape": "Double"
        },
        "longitude": {
          "documentation": "<p>The longitude.</p>",
          "shape": "Double"
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "type": "structure"
    },
    "Long": {
      "type": "long"
    },
    "MaxPageSize": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "MaxSlotMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "Integer"
      }
    },
    "Message": {
      "max": 16384,
      "min": 0,
      "type": "string"
    },
    "Metadata": {
      "max": 8192,
      "min": 0,
      "type": "string"
    },
    "MonetaryAmount": {
      "documentation": "<p>A number that represents the monetary amount for an offering or transaction.</p>",
      "members": {
        "amount": {
          "documentation": "<p>The numerical amount of an offering or transaction.</p>",
          "shape": "Double"
        },
        "currencyCode": {
          "documentation": "<p>The currency code of a monetary amount. For example, <code>USD</code> means U.S. dollars.</p>",
          "shape": "CurrencyCode"
        }
      },
      "type": "structure"
    },
    "Name": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "NetworkProfile": {
      "documentation": "<p>An array of settings that describes characteristics of a network profile.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the network profile.</p>",
          "shape": "AmazonResourceName"
        },
        "description": {
          "documentation": "<p>The description of the network profile.</p>",
          "shape": "Message"
        },
        "downlinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "downlinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkLossPercent": {
          "documentation": "<p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        },
        "name": {
          "documentation": "<p>The name of the network profile.</p>",
          "shape": "Name"
        },
        "type": {
          "documentation": "<p>The type of network profile. Valid values are listed here.</p>",
          "shape": "NetworkProfileType"
        },
        "uplinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "uplinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkLossPercent": {
          "documentation": "<p>Proportion of transmitted packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        }
      },
      "type": "structure"
    },
    "NetworkProfileType": {
      "enum": [
        "CURATED",
        "PRIVATE"
      ],
      "type": "string"
    },
    "NetworkProfiles": {
      "member": {
        "shape": "NetworkProfile"
      },
      "type": "list"
    },
    "NonEmptyString": {
      "max": 4096,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NotEligibleException": {
      "documentation": "<p>Exception gets thrown when a user is not eligible to perform the specified transaction.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The HTTP response code of a Not Eligible exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "NotFoundException": {
      "documentation": "<p>The specified entity was not found.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Any additional information about the exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "Offering": {
      "documentation": "<p>Represents the metadata of a device offering.</p>",
      "members": {
        "description": {
          "documentation": "<p>A string that describes the offering.</p>",
          "shape": "Message"
        },
        "id": {
          "documentation": "<p>The ID that corresponds to a device offering.</p>",
          "shape": "OfferingIdentifier"
        },
        "platform": {
          "documentation": "<p>The platform of the device (for example, <code>ANDROID</code> or <code>IOS</code>).</p>",
          "shape": "DevicePlatform"
        },
        "recurringCharges": {
          "documentation": "<p>Specifies whether there are recurring charges for the offering.</p>",
          "shape": "RecurringCharges"
        },
        "type": {
          "documentation": "<p>The type of offering (for example, <code>RECURRING</code>) for a device.</p>",
          "shape": "OfferingType"
        }
      },
      "type": "structure"
    },
    "OfferingIdentifier": {
      "min": 32,
      "type": "string"
    },
    "OfferingPromotion": {
      "documentation": "<p>Represents information about an offering promotion.</p>",
      "members": {
        "description": {
          "documentation": "<p>A string that describes the offering promotion.</p>",
          "shape": "Message"
        },
        "id": {
          "documentation": "<p>The ID of the offering promotion.</p>",
          "shape": "OfferingPromotionIdentifier"
        }
      },
      "type": "structure"
    },
    "OfferingPromotionIdentifier": {
      "min": 4,
      "type": "string"
    },
    "OfferingPromotions": {
      "member": {
        "shape": "OfferingPromotion"
      },
      "type": "list"
    },
    "OfferingStatus": {
      "documentation": "<p>The status of the offering.</p>",
      "members": {
        "effectiveOn": {
          "documentation": "<p>The date on which the offering is effective.</p>",
          "shape": "DateTime"
        },
        "offering": {
          "documentation": "<p>Represents the metadata of an offering status.</p>",
          "shape": "Offering"
        },
        "quantity": {
          "documentation": "<p>The number of available devices in the offering.</p>",
          "shape": "Integer"
        },
        "type": {
          "documentation": "<p>The type specified for the offering status.</p>",
          "shape": "OfferingTransactionType"
        }
      },
      "type": "structure"
    },
    "OfferingStatusMap": {
      "key": {
        "shape": "OfferingIdentifier"
      },
      "type": "map",
      "value": {
        "shape": "OfferingStatus"
      }
    },
    "OfferingTransaction": {
      "documentation": "<p>Represents the metadata of an offering transaction.</p>",
      "members": {
        "cost": {
          "documentation": "<p>The cost of an offering transaction.</p>",
          "shape": "MonetaryAmount"
        },
        "createdOn": {
          "documentation": "<p>The date on which an offering transaction was created.</p>",
          "shape": "DateTime"
        },
        "offeringPromotionId": {
          "documentation": "<p>The ID that corresponds to a device offering promotion.</p>",
          "shape": "OfferingPromotionIdentifier"
        },
        "offeringStatus": {
          "documentation": "<p>The status of an offering transaction.</p>",
          "shape": "OfferingStatus"
        },
        "transactionId": {
          "documentation": "<p>The transaction ID of the offering transaction.</p>",
          "shape": "TransactionIdentifier"
        }
      },
      "type": "structure"
    },
    "OfferingTransactionType": {
      "enum": [
        "PURCHASE",
        "RENEW",
        "SYSTEM"
      ],
      "type": "string"
    },
    "OfferingTransactions": {
      "member": {
        "shape": "OfferingTransaction"
      },
      "type": "list"
    },
    "OfferingType": {
      "enum": [
        "RECURRING"
      ],
      "type": "string"
    },
    "Offerings": {
      "member": {
        "shape": "Offering"
      },
      "type": "list"
    },
    "PackageIds": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "PaginationToken": {
      "max": 1024,
      "min": 4,
      "type": "string"
    },
    "PercentInteger": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "Problem": {
      "documentation": "<p>Represents a specific warning or failure.</p>",
      "members": {
        "device": {
          "documentation": "<p>Information about the associated device.</p>",
          "shape": "Device"
        },
        "job": {
          "documentation": "<p>Information about the associated job.</p>",
          "shape": "ProblemDetail"
        },
        "message": {
          "documentation": "<p>A message about the problem's result.</p>",
          "shape": "Message"
        },
        "result": {
          "documentation": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "run": {
          "documentation": "<p>Information about the associated run.</p>",
          "shape": "ProblemDetail"
        },
        "suite": {
          "documentation": "<p>Information about the associated suite.</p>",
          "shape": "ProblemDetail"
        },
        "test": {
          "documentation": "<p>Information about the associated test.</p>",
          "shape": "ProblemDetail"
        }
      },
      "type": "structure"
    },
    "ProblemDetail": {
      "documentation": "<p>Information about a problem detail.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The problem detail's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "name": {
          "documentation": "<p>The problem detail's name.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "Problems": {
      "member": {
        "shape": "Problem"
      },
      "type": "list"
    },
    "Project": {
      "documentation": "<p>Represents an operating-system neutral workspace for running and managing tests.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The project's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "created": {
          "documentation": "<p>When the project was created.</p>",
          "shape": "DateTime"
        },
        "defaultJobTimeoutMinutes": {
          "documentation": "<p>The default number of minutes (at the project level) a test run executes before it times out. The default value is 150 minutes.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "name": {
          "documentation": "<p>The project's name.</p>",
          "shape": "Name"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "VpcConfig"
        }
      },
      "type": "structure"
    },
    "Projects": {
      "member": {
        "shape": "Project"
      },
      "type": "list"
    },
    "PurchaseOfferingRequest": {
      "documentation": "<p>Represents a request for a purchase offering.</p>",
      "members": {
        "offeringId": {
          "documentation": "<p>The ID of the offering.</p>",
          "shape": "OfferingIdentifier"
        },
        "offeringPromotionId": {
          "documentation": "<p>The ID of the offering promotion to be applied to the purchase.</p>",
          "shape": "OfferingPromotionIdentifier"
        },
        "quantity": {
          "documentation": "<p>The number of device slots to purchase in an offering request.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "offeringId",
        "quantity"
      ],
      "type": "structure"
    },
    "PurchaseOfferingResult": {
      "documentation": "<p>The result of the purchase offering (for example, success or failure).</p>",
      "members": {
        "offeringTransaction": {
          "documentation": "<p>Represents the offering transaction for the purchase result.</p>",
          "shape": "OfferingTransaction"
        }
      },
      "type": "structure"
    },
    "PurchasedDevicesMap": {
      "key": {
        "shape": "DevicePlatform"
      },
      "type": "map",
      "value": {
        "shape": "Integer"
      }
    },
    "Radios": {
      "documentation": "<p>Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.</p>",
      "members": {
        "bluetooth": {
          "documentation": "<p>True if Bluetooth is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "Boolean"
        },
        "gps": {
          "documentation": "<p>True if GPS is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "Boolean"
        },
        "nfc": {
          "documentation": "<p>True if NFC is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "Boolean"
        },
        "wifi": {
          "documentation": "<p>True if Wi-Fi is enabled at the beginning of the test. Otherwise, false.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "RecurringCharge": {
      "documentation": "<p>Specifies whether charges for devices are recurring.</p>",
      "members": {
        "cost": {
          "documentation": "<p>The cost of the recurring charge.</p>",
          "shape": "MonetaryAmount"
        },
        "frequency": {
          "documentation": "<p>The frequency in which charges recur.</p>",
          "shape": "RecurringChargeFrequency"
        }
      },
      "type": "structure"
    },
    "RecurringChargeFrequency": {
      "enum": [
        "MONTHLY"
      ],
      "type": "string"
    },
    "RecurringCharges": {
      "member": {
        "shape": "RecurringCharge"
      },
      "type": "list"
    },
    "RemoteAccessSession": {
      "documentation": "<p>Represents information about the remote access session.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "billingMethod": {
          "documentation": "<p>The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.</p>",
          "shape": "BillingMethod"
        },
        "clientId": {
          "documentation": "<p>Unique identifier of your client for the remote access session. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "ClientId"
        },
        "created": {
          "documentation": "<p>The date and time the remote access session was created.</p>",
          "shape": "DateTime"
        },
        "device": {
          "documentation": "<p>The device (phone or tablet) used in the remote access session.</p>",
          "shape": "Device"
        },
        "deviceMinutes": {
          "documentation": "<p>The number of minutes a device is used in a remote access session (including setup and teardown minutes).</p>",
          "shape": "DeviceMinutes"
        },
        "deviceUdid": {
          "documentation": "<p>Unique device identifier for the remote device. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "String"
        },
        "endpoint": {
          "documentation": "<p>The endpoint for the remote access sesssion.</p>",
          "shape": "String"
        },
        "hostAddress": {
          "documentation": "<p>IP address of the EC2 host where you need to connect to remotely debug devices. Only returned if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "HostAddress"
        },
        "instanceArn": {
          "documentation": "<p>The ARN of the instance.</p>",
          "shape": "AmazonResourceName"
        },
        "interactionMode": {
          "documentation": "<p>The interaction mode of the remote access session. Valid values are:</p> <ul> <li> <p>INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.</p> </li> <li> <p>NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.</p> </li> <li> <p>VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.</p> </li> </ul>",
          "shape": "InteractionMode"
        },
        "message": {
          "documentation": "<p>A message about the remote access session.</p>",
          "shape": "Message"
        },
        "name": {
          "documentation": "<p>The name of the remote access session.</p>",
          "shape": "Name"
        },
        "remoteDebugEnabled": {
          "documentation": "<p>This flag is set to <code>true</code> if remote debugging is enabled for the remote access session.</p> <p>Remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>.</p>",
          "shape": "Boolean"
        },
        "remoteRecordAppArn": {
          "documentation": "<p>The ARN for the app to be recorded in the remote access session.</p>",
          "shape": "AmazonResourceName"
        },
        "remoteRecordEnabled": {
          "documentation": "<p>This flag is set to <code>true</code> if remote recording is enabled for the remote access session.</p>",
          "shape": "Boolean"
        },
        "result": {
          "documentation": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PASSED.</p> </li> <li> <p>WARNED.</p> </li> <li> <p>FAILED.</p> </li> <li> <p>SKIPPED.</p> </li> <li> <p>ERRORED.</p> </li> <li> <p>STOPPED.</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "skipAppResign": {
          "documentation": "<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
          "shape": "SkipAppResign"
        },
        "started": {
          "documentation": "<p>The date and time the remote access session was started.</p>",
          "shape": "DateTime"
        },
        "status": {
          "documentation": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING.</p> </li> <li> <p>PENDING_CONCURRENCY.</p> </li> <li> <p>PENDING_DEVICE.</p> </li> <li> <p>PROCESSING.</p> </li> <li> <p>SCHEDULING.</p> </li> <li> <p>PREPARING.</p> </li> <li> <p>RUNNING.</p> </li> <li> <p>COMPLETED.</p> </li> <li> <p>STOPPING.</p> </li> </ul>",
          "shape": "ExecutionStatus"
        },
        "stopped": {
          "documentation": "<p>The date and time the remote access session was stopped.</p>",
          "shape": "DateTime"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "VpcConfig"
        }
      },
      "type": "structure"
    },
    "RemoteAccessSessions": {
      "member": {
        "shape": "RemoteAccessSession"
      },
      "type": "list"
    },
    "RenewOfferingRequest": {
      "documentation": "<p>A request that represents an offering renewal.</p>",
      "members": {
        "offeringId": {
          "documentation": "<p>The ID of a request to renew an offering.</p>",
          "shape": "OfferingIdentifier"
        },
        "quantity": {
          "documentation": "<p>The quantity requested in an offering renewal.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "offeringId",
        "quantity"
      ],
      "type": "structure"
    },
    "RenewOfferingResult": {
      "documentation": "<p>The result of a renewal offering.</p>",
      "members": {
        "offeringTransaction": {
          "documentation": "<p>Represents the status of the offering transaction for the renewal.</p>",
          "shape": "OfferingTransaction"
        }
      },
      "type": "structure"
    },
    "Resolution": {
      "documentation": "<p>Represents the screen resolution of a device in height and width, expressed in pixels.</p>",
      "members": {
        "height": {
          "documentation": "<p>The screen resolution's height, expressed in pixels.</p>",
          "shape": "Integer"
        },
        "width": {
          "documentation": "<p>The screen resolution's width, expressed in pixels.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ResourceDescription": {
      "max": 2048,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "ResourceId": {
      "max": 128,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "ResourceName": {
      "max": 64,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "Rule": {
      "documentation": "<p>Represents a condition for a device pool.</p>",
      "members": {
        "attribute": {
          "documentation": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>The supported operators for each attribute are provided in the following list.</p> <dl> <dt>APPIUM_VERSION</dt> <dd> <p>The Appium version for the test.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device (for example, <code>arn:aws:devicefarm:us-west-2::device:12345Example</code>.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>AVAILABILITY</dt> <dd> <p>The current availability of the device. Valid values are AVAILABLE, HIGHLY_AVAILABLE, BUSY, or TEMPORARY_NOT_AVAILABLE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FLEET_TYPE</dt> <dd> <p>The fleet type. Valid values are PUBLIC or PRIVATE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>FORM_FACTOR</dt> <dd> <p>The device form factor. Valid values are PHONE or TABLET.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_ARN</dt> <dd> <p>The Amazon Resource Name (ARN) of the device instance.</p> <p>Supported operators: <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>INSTANCE_LABELS</dt> <dd> <p>The label of the device instance.</p> <p>Supported operators: <code>CONTAINS</code> </p> </dd> <dt>MANUFACTURER</dt> <dd> <p>The device manufacturer (for example, Apple).</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>MODEL</dt> <dd> <p>The device model, such as Apple iPad Air 2 or Google Pixel.</p> <p>Supported operators: <code>CONTAINS</code>, <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>OS_VERSION</dt> <dd> <p>The operating system version (for example, 10.3.2).</p> <p>Supported operators: <code>EQUALS</code>, <code>GREATER_THAN</code>, <code>GREATER_THAN_OR_EQUALS</code>, <code>IN</code>, <code>LESS_THAN</code>, <code>LESS_THAN_OR_EQUALS</code>, <code>NOT_IN</code> </p> </dd> <dt>PLATFORM</dt> <dd> <p>The device platform. Valid values are ANDROID or IOS.</p> <p>Supported operators: <code>EQUALS</code>, <code>IN</code>, <code>NOT_IN</code> </p> </dd> <dt>REMOTE_ACCESS_ENABLED</dt> <dd> <p>Whether the device is enabled for remote access. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> </dd> <dt>REMOTE_DEBUG_ENABLED</dt> <dd> <p>Whether the device is enabled for remote debugging. Valid values are TRUE or FALSE.</p> <p>Supported operators: <code>EQUALS</code> </p> <p>Because remote debugging is <a href=\"https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html\">no longer supported</a>, this filter is ignored.</p> </dd> </dl>",
          "shape": "DeviceAttribute"
        },
        "operator": {
          "documentation": "<p>Specifies how Device Farm compares the rule's attribute to the value. For the operators that are supported by each attribute, see the attribute descriptions.</p>",
          "shape": "RuleOperator"
        },
        "value": {
          "documentation": "<p>The rule's value.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RuleOperator": {
      "enum": [
        "EQUALS",
        "LESS_THAN",
        "LESS_THAN_OR_EQUALS",
        "GREATER_THAN",
        "GREATER_THAN_OR_EQUALS",
        "IN",
        "NOT_IN",
        "CONTAINS"
      ],
      "type": "string"
    },
    "Rules": {
      "member": {
        "shape": "Rule"
      },
      "type": "list"
    },
    "Run": {
      "documentation": "<p>Represents a test run on a set of devices with a given app package, test parameters, and so on.</p>",
      "members": {
        "appUpload": {
          "documentation": "<p>An app to upload or that has been uploaded.</p>",
          "shape": "AmazonResourceName"
        },
        "arn": {
          "documentation": "<p>The run's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "billingMethod": {
          "documentation": "<p>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.</p> <note> <p>If you have unmetered device slots, you must set this to <code>unmetered</code> to use them. Otherwise, the run is counted toward metered device minutes.</p> </note>",
          "shape": "BillingMethod"
        },
        "completedJobs": {
          "documentation": "<p>The total number of completed jobs.</p>",
          "shape": "Integer"
        },
        "counters": {
          "documentation": "<p>The run's result counters.</p>",
          "shape": "Counters"
        },
        "created": {
          "documentation": "<p>When the run was created.</p>",
          "shape": "DateTime"
        },
        "customerArtifactPaths": {
          "documentation": "<p>Output <code>CustomerArtifactPaths</code> object for the test run.</p>",
          "shape": "CustomerArtifactPaths"
        },
        "deviceMinutes": {
          "documentation": "<p>Represents the total (metered or unmetered) minutes used by the test run.</p>",
          "shape": "DeviceMinutes"
        },
        "devicePoolArn": {
          "documentation": "<p>The ARN of the device pool for the run.</p>",
          "shape": "AmazonResourceName"
        },
        "deviceSelectionResult": {
          "documentation": "<p>The results of a device filter used to select the devices for a test run.</p>",
          "shape": "DeviceSelectionResult"
        },
        "eventCount": {
          "documentation": "<p>For fuzz tests, this is the number of events, between 1 and 10000, that the UI fuzz test should perform.</p>",
          "shape": "Integer"
        },
        "jobTimeoutMinutes": {
          "documentation": "<p>The number of minutes the job executes before it times out.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "locale": {
          "documentation": "<p>Information about the locale that is used for the run.</p>",
          "shape": "String"
        },
        "location": {
          "documentation": "<p>Information about the location that is used for the run.</p>",
          "shape": "Location"
        },
        "message": {
          "documentation": "<p>A message about the run's result.</p>",
          "shape": "Message"
        },
        "name": {
          "documentation": "<p>The run's name.</p>",
          "shape": "Name"
        },
        "networkProfile": {
          "documentation": "<p>The network profile being used for a test run.</p>",
          "shape": "NetworkProfile"
        },
        "parsingResultUrl": {
          "documentation": "<p>Read-only URL for an object in an S3 bucket where you can get the parsing results of the test package. If the test package doesn't parse, the reason why it doesn't parse appears in the file that this URL points to.</p>",
          "shape": "String"
        },
        "platform": {
          "documentation": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID</p> </li> <li> <p>IOS</p> </li> </ul>",
          "shape": "DevicePlatform"
        },
        "radios": {
          "documentation": "<p>Information about the radio states for the run.</p>",
          "shape": "Radios"
        },
        "result": {
          "documentation": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "resultCode": {
          "documentation": "<p>Supporting field for the result field. Set only if <code>result</code> is <code>SKIPPED</code>. <code>PARSING_FAILED</code> if the result is skipped because of test package parsing failure.</p>",
          "shape": "ExecutionResultCode"
        },
        "seed": {
          "documentation": "<p>For fuzz tests, this is a seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p>",
          "shape": "Integer"
        },
        "skipAppResign": {
          "documentation": "<p>When set to <code>true</code>, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.</p> <p>For more information about how Device Farm re-signs your apps, see <a href=\"http://aws.amazon.com/device-farm/faqs/\">Do you modify my app?</a> in the <i>AWS Device Farm FAQs</i>.</p>",
          "shape": "SkipAppResign"
        },
        "started": {
          "documentation": "<p>The run's start time.</p>",
          "shape": "DateTime"
        },
        "status": {
          "documentation": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>",
          "shape": "ExecutionStatus"
        },
        "stopped": {
          "documentation": "<p>The run's stop time.</p>",
          "shape": "DateTime"
        },
        "testSpecArn": {
          "documentation": "<p>The ARN of the YAML-formatted test specification for the run.</p>",
          "shape": "AmazonResourceName"
        },
        "totalJobs": {
          "documentation": "<p>The total number of jobs for the run.</p>",
          "shape": "Integer"
        },
        "type": {
          "documentation": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p> <note> <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>",
          "shape": "TestType"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "VpcConfig"
        },
        "webUrl": {
          "documentation": "<p>The Device Farm console URL for the recording of the run.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Runs": {
      "member": {
        "shape": "Run"
      },
      "type": "list"
    },
    "Sample": {
      "documentation": "<p>Represents a sample of performance data.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The sample's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "type": {
          "documentation": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>",
          "shape": "SampleType"
        },
        "url": {
          "documentation": "<p>The presigned Amazon S3 URL that can be used with a GET request to download the sample's file.</p>",
          "shape": "URL"
        }
      },
      "type": "structure"
    },
    "SampleType": {
      "enum": [
        "CPU",
        "MEMORY",
        "THREADS",
        "RX_RATE",
        "TX_RATE",
        "RX",
        "TX",
        "NATIVE_FRAMES",
        "NATIVE_FPS",
        "NATIVE_MIN_DRAWTIME",
        "NATIVE_AVG_DRAWTIME",
        "NATIVE_MAX_DRAWTIME",
        "OPENGL_FRAMES",
        "OPENGL_FPS",
        "OPENGL_MIN_DRAWTIME",
        "OPENGL_AVG_DRAWTIME",
        "OPENGL_MAX_DRAWTIME"
      ],
      "type": "string"
    },
    "Samples": {
      "member": {
        "shape": "Sample"
      },
      "type": "list"
    },
    "ScheduleRunConfiguration": {
      "documentation": "<p>Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.</p>",
      "members": {
        "auxiliaryApps": {
          "documentation": "<p>A list of upload ARNs for app packages to be installed with your app.</p>",
          "shape": "AmazonResourceNames"
        },
        "billingMethod": {
          "documentation": "<p>Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>.</p> <note> <p>If you have purchased unmetered device slots, you must set this parameter to <code>unmetered</code> to make use of them. Otherwise, your run counts against your metered time.</p> </note>",
          "shape": "BillingMethod"
        },
        "customerArtifactPaths": {
          "documentation": "<p>Input <code>CustomerArtifactPaths</code> object for the scheduled run configuration.</p>",
          "shape": "CustomerArtifactPaths"
        },
        "extraDataPackageArn": {
          "documentation": "<p>The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm extracts to external data for Android or the app's sandbox for iOS.</p>",
          "shape": "AmazonResourceName"
        },
        "locale": {
          "documentation": "<p>Information about the locale that is used for the run.</p>",
          "shape": "String"
        },
        "location": {
          "documentation": "<p>Information about the location that is used for the run.</p>",
          "shape": "Location"
        },
        "networkProfileArn": {
          "documentation": "<p>Reserved for internal use.</p>",
          "shape": "AmazonResourceName"
        },
        "radios": {
          "documentation": "<p>Information about the radio states for the run.</p>",
          "shape": "Radios"
        },
        "vpceConfigurationArns": {
          "documentation": "<p>An array of ARNs for your VPC endpoint configurations.</p>",
          "shape": "AmazonResourceNames"
        }
      },
      "type": "structure"
    },
    "ScheduleRunRequest": {
      "documentation": "<p>Represents a request to the schedule run operation.</p>",
      "members": {
        "appArn": {
          "documentation": "<p>The ARN of an application package to run tests against, created with <a>CreateUpload</a>. See <a>ListUploads</a>.</p>",
          "shape": "AmazonResourceName"
        },
        "configuration": {
          "documentation": "<p>Information about the settings for the run to be scheduled.</p>",
          "shape": "ScheduleRunConfiguration"
        },
        "devicePoolArn": {
          "documentation": "<p>The ARN of the device pool for the run to be scheduled.</p>",
          "shape": "AmazonResourceName"
        },
        "deviceSelectionConfiguration": {
          "documentation": "<p>The filter criteria used to dynamically select a set of devices for a test run and the maximum number of devices to be included in the run.</p> <p>Either <b> <code>devicePoolArn</code> </b> or <b> <code>deviceSelectionConfiguration</code> </b> is required in a request.</p>",
          "shape": "DeviceSelectionConfiguration"
        },
        "executionConfiguration": {
          "documentation": "<p>Specifies configuration information about a test run, such as the execution timeout (in minutes).</p>",
          "shape": "ExecutionConfiguration"
        },
        "name": {
          "documentation": "<p>The name for the run to be scheduled.</p>",
          "shape": "Name"
        },
        "projectArn": {
          "documentation": "<p>The ARN of the project for the run to be scheduled.</p>",
          "shape": "AmazonResourceName"
        },
        "test": {
          "documentation": "<p>Information about the test for the run to be scheduled.</p>",
          "shape": "ScheduleRunTest"
        }
      },
      "required": [
        "projectArn",
        "test"
      ],
      "type": "structure"
    },
    "ScheduleRunResult": {
      "documentation": "<p>Represents the result of a schedule run request.</p>",
      "members": {
        "run": {
          "documentation": "<p>Information about the scheduled run.</p>",
          "shape": "Run"
        }
      },
      "type": "structure"
    },
    "ScheduleRunTest": {
      "documentation": "<p>Represents test settings. This data structure is passed in as the test parameter to ScheduleRun. For an example of the JSON request syntax, see <a>ScheduleRun</a>.</p>",
      "members": {
        "filter": {
          "documentation": "<p>The test's filter.</p>",
          "shape": "Filter"
        },
        "parameters": {
          "documentation": "<p>The test's parameters, such as test framework parameters and fixture settings. Parameters are represented by name-value pairs of strings.</p> <p>For all tests:</p> <ul> <li> <p> <code>app_performance_monitoring</code>: Performance monitoring is enabled by default. Set this parameter to false to disable it.</p> </li> </ul> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile (for example, <code>my_profile_name</code>).</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags (for example, @smoke or @smoke,~@wip).</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are 1.6.5 (and later), latest, and default.</p> <ul> <li> <p>latest runs the latest Appium version supported by Device Farm (1.9.1).</p> </li> <li> <p>For default, Device Farm selects a compatible version of Appium for the device. The current behavior is to run 1.7.2 on Android devices and iOS 9 and earlier and 1.7.2 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A user name to use if the Explorer encounters a login form. If not supplied, no user name is inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password is inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code> </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code> </p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: <code>LoginTests</code> </p> </li> <li> <p>Running a multiple test classes: <code>LoginTests,SmokeTests</code> </p> </li> <li> <p>Running a single test: <code>LoginTests/testValid</code> </p> </li> <li> <p>Running multiple tests: <code>LoginTests/testValid,LoginTests/testInvalid</code> </p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: <code>com.android.abc.Test1</code> </p> </li> <li> <p>Running a single test: <code>com.android.abc.Test1#smoke</code> </p> </li> <li> <p>Running multiple tests: <code>com.android.abc.Test1,com.android.abc.Test2</code> </p> </li> </ul> </li> </ul>",
          "shape": "TestParameters"
        },
        "testPackageArn": {
          "documentation": "<p>The ARN of the uploaded test to be run.</p>",
          "shape": "AmazonResourceName"
        },
        "testSpecArn": {
          "documentation": "<p>The ARN of the YAML-formatted test specification.</p>",
          "shape": "AmazonResourceName"
        },
        "type": {
          "documentation": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER. For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>",
          "shape": "TestType"
        }
      },
      "required": [
        "type"
      ],
      "type": "structure"
    },
    "SecurityGroupId": {
      "max": 4096,
      "min": 1,
      "pattern": "^sg-[0-9a-fA-F]{8,}$",
      "type": "string"
    },
    "SecurityGroupIds": {
      "max": 5,
      "member": {
        "shape": "NonEmptyString"
      },
      "min": 1,
      "type": "list"
    },
    "SensitiveString": {
      "sensitive": true,
      "type": "string"
    },
    "SensitiveURL": {
      "max": 2048,
      "min": 0,
      "sensitive": true,
      "type": "string"
    },
    "ServiceAccountException": {
      "documentation": "<p>There was a problem with the service account.</p>",
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Any additional information about the exception.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "ServiceDnsName": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "SkipAppResign": {
      "type": "boolean"
    },
    "SshPublicKey": {
      "max": 8192,
      "min": 0,
      "type": "string"
    },
    "StopJobRequest": {
      "members": {
        "arn": {
          "documentation": "<p>Represents the Amazon Resource Name (ARN) of the Device Farm job to stop.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "StopJobResult": {
      "members": {
        "job": {
          "documentation": "<p>The job that was stopped.</p>",
          "shape": "Job"
        }
      },
      "type": "structure"
    },
    "StopRemoteAccessSessionRequest": {
      "documentation": "<p>Represents the request to stop the remote access session.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the remote access session to stop.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "StopRemoteAccessSessionResult": {
      "documentation": "<p>Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.</p>",
      "members": {
        "remoteAccessSession": {
          "documentation": "<p>A container that represents the metadata from the service about the remote access session you are stopping.</p>",
          "shape": "RemoteAccessSession"
        }
      },
      "type": "structure"
    },
    "StopRunRequest": {
      "documentation": "<p>Represents the request to stop a specific run.</p>",
      "members": {
        "arn": {
          "documentation": "<p>Represents the Amazon Resource Name (ARN) of the Device Farm run to stop.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "StopRunResult": {
      "documentation": "<p>Represents the results of your stop run attempt.</p>",
      "members": {
        "run": {
          "documentation": "<p>The run that was stopped.</p>",
          "shape": "Run"
        }
      },
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "SubnetId": {
      "max": 4096,
      "min": 1,
      "pattern": "^subnet-[0-9a-fA-F]{8,}$",
      "type": "string"
    },
    "SubnetIds": {
      "max": 8,
      "member": {
        "shape": "NonEmptyString"
      },
      "min": 1,
      "type": "list"
    },
    "Suite": {
      "documentation": "<p>Represents a collection of one or more tests.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The suite's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "counters": {
          "documentation": "<p>The suite's result counters.</p>",
          "shape": "Counters"
        },
        "created": {
          "documentation": "<p>When the suite was created.</p>",
          "shape": "DateTime"
        },
        "deviceMinutes": {
          "documentation": "<p>Represents the total (metered or unmetered) minutes used by the test suite.</p>",
          "shape": "DeviceMinutes"
        },
        "message": {
          "documentation": "<p>A message about the suite's result.</p>",
          "shape": "Message"
        },
        "name": {
          "documentation": "<p>The suite's name.</p>",
          "shape": "Name"
        },
        "result": {
          "documentation": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "started": {
          "documentation": "<p>The suite's start time.</p>",
          "shape": "DateTime"
        },
        "status": {
          "documentation": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>",
          "shape": "ExecutionStatus"
        },
        "stopped": {
          "documentation": "<p>The suite's stop time.</p>",
          "shape": "DateTime"
        },
        "type": {
          "documentation": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER </p> <note> <p>Only available for Android; an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>",
          "shape": "TestType"
        }
      },
      "type": "structure"
    },
    "Suites": {
      "member": {
        "shape": "Suite"
      },
      "type": "list"
    },
    "Tag": {
      "documentation": "<p>The metadata that you apply to a resource to help you categorize and organize it. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters. </p>",
      "members": {
        "Key": {
          "documentation": "<p>One part of a key-value pair that makes up a tag. A <code>key</code> is a general label that acts like a category for more specific tag values.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>The optional part of a key-value pair that makes up a tag. A <code>value</code> acts as a descriptor in a tag category (key).</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 150,
      "member": {
        "shape": "TagKey"
      },
      "type": "list"
    },
    "TagList": {
      "max": 150,
      "member": {
        "shape": "Tag"
      },
      "type": "list"
    },
    "TagOperationException": {
      "documentation": "<p>The operation was not successful. Try again.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "resourceName": {
          "shape": "AmazonResourceName"
        }
      },
      "type": "structure"
    },
    "TagPolicyException": {
      "documentation": "<p>The request doesn't comply with the AWS Identity and Access Management (IAM) tag policy. Correct your request and then retry it.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "resourceName": {
          "shape": "AmazonResourceName"
        }
      },
      "type": "structure"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource or resources to which to add tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</p>",
          "shape": "DeviceFarmArn"
        },
        "Tags": {
          "documentation": "<p>The tags to add to the resource. A tag is an array of key-value pairs. Tag keys can have a maximum character length of 128 characters. Tag values can have a maximum length of 256 characters.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceARN",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "Test": {
      "documentation": "<p>Represents a condition that is evaluated.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The test's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "counters": {
          "documentation": "<p>The test's result counters.</p>",
          "shape": "Counters"
        },
        "created": {
          "documentation": "<p>When the test was created.</p>",
          "shape": "DateTime"
        },
        "deviceMinutes": {
          "documentation": "<p>Represents the total (metered or unmetered) minutes used by the test.</p>",
          "shape": "DeviceMinutes"
        },
        "message": {
          "documentation": "<p>A message about the test's result.</p>",
          "shape": "Message"
        },
        "name": {
          "documentation": "<p>The test's name.</p>",
          "shape": "Name"
        },
        "result": {
          "documentation": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PASSED</p> </li> <li> <p>WARNED</p> </li> <li> <p>FAILED</p> </li> <li> <p>SKIPPED</p> </li> <li> <p>ERRORED</p> </li> <li> <p>STOPPED</p> </li> </ul>",
          "shape": "ExecutionResult"
        },
        "started": {
          "documentation": "<p>The test's start time.</p>",
          "shape": "DateTime"
        },
        "status": {
          "documentation": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING</p> </li> <li> <p>PENDING_CONCURRENCY</p> </li> <li> <p>PENDING_DEVICE</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SCHEDULING</p> </li> <li> <p>PREPARING</p> </li> <li> <p>RUNNING</p> </li> <li> <p>COMPLETED</p> </li> <li> <p>STOPPING</p> </li> </ul>",
          "shape": "ExecutionStatus"
        },
        "stopped": {
          "documentation": "<p>The test's stop time.</p>",
          "shape": "DateTime"
        },
        "type": {
          "documentation": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ</p> </li> <li> <p>BUILTIN_EXPLORER</p> <note> <p>For Android, an app explorer that traverses an Android app, interacting with it and capturing screenshots at the same time.</p> </note> </li> <li> <p>APPIUM_JAVA_JUNIT</p> </li> <li> <p>APPIUM_JAVA_TESTNG</p> </li> <li> <p>APPIUM_PYTHON</p> </li> <li> <p>APPIUM_NODE</p> </li> <li> <p>APPIUM_RUBY</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG</p> </li> <li> <p>APPIUM_WEB_PYTHON</p> </li> <li> <p>APPIUM_WEB_NODE</p> </li> <li> <p>APPIUM_WEB_RUBY</p> </li> <li> <p>CALABASH</p> </li> <li> <p>INSTRUMENTATION</p> </li> <li> <p>UIAUTOMATION</p> </li> <li> <p>UIAUTOMATOR</p> </li> <li> <p>XCTEST</p> </li> <li> <p>XCTEST_UI</p> </li> </ul>",
          "shape": "TestType"
        }
      },
      "type": "structure"
    },
    "TestGridProject": {
      "documentation": "<p>A Selenium testing project. Projects are used to collect and collate sessions.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The ARN for the project.</p>",
          "shape": "DeviceFarmArn"
        },
        "created": {
          "documentation": "<p>When the project was created.</p>",
          "shape": "DateTime"
        },
        "description": {
          "documentation": "<p>A human-readable description for the project.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>A human-readable name for the project.</p>",
          "shape": "String"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "TestGridVpcConfig"
        }
      },
      "type": "structure"
    },
    "TestGridProjects": {
      "member": {
        "shape": "TestGridProject"
      },
      "type": "list"
    },
    "TestGridSession": {
      "documentation": "<p>A <a>TestGridSession</a> is a single instance of a browser launched from the URL provided by a call to <a>CreateTestGridUrl</a>.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the session.</p>",
          "shape": "DeviceFarmArn"
        },
        "billingMinutes": {
          "documentation": "<p>The number of billed minutes that were used for this session. </p>",
          "shape": "Double"
        },
        "created": {
          "documentation": "<p>The time that the session was started.</p>",
          "shape": "DateTime"
        },
        "ended": {
          "documentation": "<p>The time the session ended.</p>",
          "shape": "DateTime"
        },
        "seleniumProperties": {
          "documentation": "<p>A JSON object of options and parameters passed to the Selenium WebDriver.</p>",
          "shape": "String"
        },
        "status": {
          "documentation": "<p>The state of the session.</p>",
          "shape": "TestGridSessionStatus"
        }
      },
      "type": "structure"
    },
    "TestGridSessionAction": {
      "documentation": "<p>An action taken by a <a>TestGridSession</a> browser instance.</p>",
      "members": {
        "action": {
          "documentation": "<p>The action taken by the session.</p>",
          "shape": "String"
        },
        "duration": {
          "documentation": "<p>The time, in milliseconds, that the action took to complete in the browser.</p>",
          "shape": "Long"
        },
        "requestMethod": {
          "documentation": "<p>HTTP method that the browser used to make the request.</p>",
          "shape": "String"
        },
        "started": {
          "documentation": "<p>The time that the session invoked the action.</p>",
          "shape": "DateTime"
        },
        "statusCode": {
          "documentation": "<p>HTTP status code returned to the browser when the action was taken.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TestGridSessionActions": {
      "member": {
        "shape": "TestGridSessionAction"
      },
      "type": "list"
    },
    "TestGridSessionArtifact": {
      "documentation": "<p>Artifacts are video and other files that are produced in the process of running a browser in an automated context. </p> <note> <p>Video elements might be broken up into multiple artifacts as they grow in size during creation. </p> </note>",
      "members": {
        "filename": {
          "documentation": "<p>The file name of the artifact.</p>",
          "shape": "String"
        },
        "type": {
          "documentation": "<p>The kind of artifact.</p>",
          "shape": "TestGridSessionArtifactType"
        },
        "url": {
          "documentation": "<p>A semi-stable URL to the content of the object.</p>",
          "shape": "SensitiveString"
        }
      },
      "type": "structure"
    },
    "TestGridSessionArtifactCategory": {
      "enum": [
        "VIDEO",
        "LOG"
      ],
      "type": "string"
    },
    "TestGridSessionArtifactType": {
      "enum": [
        "UNKNOWN",
        "VIDEO",
        "SELENIUM_LOG"
      ],
      "type": "string"
    },
    "TestGridSessionArtifacts": {
      "member": {
        "shape": "TestGridSessionArtifact"
      },
      "type": "list"
    },
    "TestGridSessionStatus": {
      "enum": [
        "ACTIVE",
        "CLOSED",
        "ERRORED"
      ],
      "type": "string"
    },
    "TestGridSessions": {
      "member": {
        "shape": "TestGridSession"
      },
      "type": "list"
    },
    "TestGridUrlExpiresInSecondsInput": {
      "max": 86400,
      "min": 60,
      "type": "integer"
    },
    "TestGridVpcConfig": {
      "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
      "members": {
        "securityGroupIds": {
          "documentation": "<p>A list of VPC security group IDs in your Amazon VPC.</p>",
          "shape": "SecurityGroupIds"
        },
        "subnetIds": {
          "documentation": "<p>A list of VPC subnet IDs in your Amazon VPC.</p>",
          "shape": "SubnetIds"
        },
        "vpcId": {
          "documentation": "<p>The ID of the Amazon VPC.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "securityGroupIds",
        "subnetIds",
        "vpcId"
      ],
      "type": "structure"
    },
    "TestParameters": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "TestType": {
      "enum": [
        "BUILTIN_FUZZ",
        "BUILTIN_EXPLORER",
        "WEB_PERFORMANCE_PROFILE",
        "APPIUM_JAVA_JUNIT",
        "APPIUM_JAVA_TESTNG",
        "APPIUM_PYTHON",
        "APPIUM_NODE",
        "APPIUM_RUBY",
        "APPIUM_WEB_JAVA_JUNIT",
        "APPIUM_WEB_JAVA_TESTNG",
        "APPIUM_WEB_PYTHON",
        "APPIUM_WEB_NODE",
        "APPIUM_WEB_RUBY",
        "CALABASH",
        "INSTRUMENTATION",
        "UIAUTOMATION",
        "UIAUTOMATOR",
        "XCTEST",
        "XCTEST_UI",
        "REMOTE_ACCESS_RECORD",
        "REMOTE_ACCESS_REPLAY"
      ],
      "type": "string"
    },
    "Tests": {
      "member": {
        "shape": "Test"
      },
      "type": "list"
    },
    "TooManyTagsException": {
      "documentation": "<p>The list of tags on the repository is over the limit. The maximum number of tags that can be applied to a repository is 50. </p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "resourceName": {
          "shape": "AmazonResourceName"
        }
      },
      "type": "structure"
    },
    "TransactionIdentifier": {
      "min": 32,
      "type": "string"
    },
    "TrialMinutes": {
      "documentation": "<p>Represents information about free trial device minutes for an AWS account.</p>",
      "members": {
        "remaining": {
          "documentation": "<p>The number of free trial minutes remaining in the account.</p>",
          "shape": "Double"
        },
        "total": {
          "documentation": "<p>The total number of free trial minutes that the account started with.</p>",
          "shape": "Double"
        }
      },
      "type": "structure"
    },
    "URL": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "UniqueProblem": {
      "documentation": "<p>A collection of one or more problems, grouped by their result.</p>",
      "members": {
        "message": {
          "documentation": "<p>A message about the unique problems' result.</p>",
          "shape": "Message"
        },
        "problems": {
          "documentation": "<p>Information about the problems.</p>",
          "shape": "Problems"
        }
      },
      "type": "structure"
    },
    "UniqueProblems": {
      "member": {
        "shape": "UniqueProblem"
      },
      "type": "list"
    },
    "UniqueProblemsByExecutionResultMap": {
      "key": {
        "shape": "ExecutionResult"
      },
      "type": "map",
      "value": {
        "shape": "UniqueProblems"
      }
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource or resources from which to delete tags. You can associate tags with the following Device Farm resources: <code>PROJECT</code>, <code>RUN</code>, <code>NETWORK_PROFILE</code>, <code>INSTANCE_PROFILE</code>, <code>DEVICE_INSTANCE</code>, <code>SESSION</code>, <code>DEVICE_POOL</code>, <code>DEVICE</code>, and <code>VPCE_CONFIGURATION</code>.</p>",
          "shape": "DeviceFarmArn"
        },
        "TagKeys": {
          "documentation": "<p>The keys of the tags to be removed.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceARN",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateDeviceInstanceRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the device instance.</p>",
          "shape": "AmazonResourceName"
        },
        "labels": {
          "documentation": "<p>An array of strings that you want to associate with the device instance.</p>",
          "shape": "InstanceLabels"
        },
        "profileArn": {
          "documentation": "<p>The ARN of the profile that you want to associate with the device instance.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateDeviceInstanceResult": {
      "members": {
        "deviceInstance": {
          "documentation": "<p>An object that contains information about your device instance.</p>",
          "shape": "DeviceInstance"
        }
      },
      "type": "structure"
    },
    "UpdateDevicePoolRequest": {
      "documentation": "<p>Represents a request to the update device pool operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Device Farm device pool to update.</p>",
          "shape": "AmazonResourceName"
        },
        "clearMaxDevices": {
          "documentation": "<p>Sets whether the <code>maxDevices</code> parameter applies to your device pool. If you set this parameter to <code>true</code>, the <code>maxDevices</code> parameter does not apply, and Device Farm does not limit the number of devices that it adds to your device pool. In this case, Device Farm adds all available devices that meet the criteria specified in the <code>rules</code> parameter.</p> <p>If you use this parameter in your request, you cannot use the <code>maxDevices</code> parameter in the same request.</p>",
          "shape": "Boolean"
        },
        "description": {
          "documentation": "<p>A description of the device pool to update.</p>",
          "shape": "Message"
        },
        "maxDevices": {
          "documentation": "<p>The number of devices that Device Farm can add to your device pool. Device Farm adds devices that are available and that meet the criteria that you assign for the <code>rules</code> parameter. Depending on how many devices meet these constraints, your device pool might contain fewer devices than the value for this parameter.</p> <p>By specifying the maximum number of devices, you can control the costs that you incur by running tests.</p> <p>If you use this parameter in your request, you cannot use the <code>clearMaxDevices</code> parameter in the same request.</p>",
          "shape": "Integer"
        },
        "name": {
          "documentation": "<p>A string that represents the name of the device pool to update.</p>",
          "shape": "Name"
        },
        "rules": {
          "documentation": "<p>Represents the rules to modify for the device pool. Updating rules is optional. If you update rules for your request, the update replaces the existing rules.</p>",
          "shape": "Rules"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateDevicePoolResult": {
      "documentation": "<p>Represents the result of an update device pool request.</p>",
      "members": {
        "devicePool": {
          "documentation": "<p>The device pool you just updated.</p>",
          "shape": "DevicePool"
        }
      },
      "type": "structure"
    },
    "UpdateInstanceProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the instance profile.</p>",
          "shape": "AmazonResourceName"
        },
        "description": {
          "documentation": "<p>The updated description for your instance profile.</p>",
          "shape": "Message"
        },
        "excludeAppPackagesFromCleanup": {
          "documentation": "<p>An array of strings that specifies the list of app packages that should not be cleaned up from the device after a test run is over.</p> <p>The list of packages is only considered if you set <code>packageCleanup</code> to <code>true</code>.</p>",
          "shape": "PackageIds"
        },
        "name": {
          "documentation": "<p>The updated name for your instance profile.</p>",
          "shape": "Name"
        },
        "packageCleanup": {
          "documentation": "<p>The updated choice for whether you want to specify package cleanup. The default value is <code>false</code> for private devices.</p>",
          "shape": "Boolean"
        },
        "rebootAfterUse": {
          "documentation": "<p>The updated choice for whether you want to reboot the device after use. The default value is <code>true</code>.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateInstanceProfileResult": {
      "members": {
        "instanceProfile": {
          "documentation": "<p>An object that contains information about your instance profile.</p>",
          "shape": "InstanceProfile"
        }
      },
      "type": "structure"
    },
    "UpdateNetworkProfileRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project for which you want to update network profile settings.</p>",
          "shape": "AmazonResourceName"
        },
        "description": {
          "documentation": "<p>The description of the network profile about which you are returning information.</p>",
          "shape": "Message"
        },
        "downlinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "downlinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "downlinkLossPercent": {
          "documentation": "<p>Proportion of received packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        },
        "name": {
          "documentation": "<p>The name of the network profile about which you are returning information.</p>",
          "shape": "Name"
        },
        "type": {
          "documentation": "<p>The type of network profile to return information about. Valid values are listed here.</p>",
          "shape": "NetworkProfileType"
        },
        "uplinkBandwidthBits": {
          "documentation": "<p>The data throughput rate in bits per second, as an integer from 0 to 104857600.</p>",
          "shape": "Long"
        },
        "uplinkDelayMs": {
          "documentation": "<p>Delay time for all packets to destination in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkJitterMs": {
          "documentation": "<p>Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000.</p>",
          "shape": "Long"
        },
        "uplinkLossPercent": {
          "documentation": "<p>Proportion of transmitted packets that fail to arrive from 0 to 100 percent.</p>",
          "shape": "PercentInteger"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateNetworkProfileResult": {
      "members": {
        "networkProfile": {
          "documentation": "<p>A list of the available network profiles.</p>",
          "shape": "NetworkProfile"
        }
      },
      "type": "structure"
    },
    "UpdateProjectRequest": {
      "documentation": "<p>Represents a request to the update project operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the project whose name to update.</p>",
          "shape": "AmazonResourceName"
        },
        "defaultJobTimeoutMinutes": {
          "documentation": "<p>The number of minutes a test run in the project executes before it times out.</p>",
          "shape": "JobTimeoutMinutes"
        },
        "name": {
          "documentation": "<p>A string that represents the new name of the project that you are updating.</p>",
          "shape": "Name"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "VpcConfig"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateProjectResult": {
      "documentation": "<p>Represents the result of an update project request.</p>",
      "members": {
        "project": {
          "documentation": "<p>The project to update.</p>",
          "shape": "Project"
        }
      },
      "type": "structure"
    },
    "UpdateTestGridProjectRequest": {
      "members": {
        "description": {
          "documentation": "<p>Human-readable description for the project.</p>",
          "shape": "ResourceDescription"
        },
        "name": {
          "documentation": "<p>Human-readable name for the project.</p>",
          "shape": "ResourceName"
        },
        "projectArn": {
          "documentation": "<p>ARN of the project to update.</p>",
          "shape": "DeviceFarmArn"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC security groups and subnets that are attached to a project.</p>",
          "shape": "TestGridVpcConfig"
        }
      },
      "required": [
        "projectArn"
      ],
      "type": "structure"
    },
    "UpdateTestGridProjectResult": {
      "members": {
        "testGridProject": {
          "documentation": "<p>The project, including updated information.</p>",
          "shape": "TestGridProject"
        }
      },
      "type": "structure"
    },
    "UpdateUploadRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the uploaded test spec.</p>",
          "shape": "AmazonResourceName"
        },
        "contentType": {
          "documentation": "<p>The upload's content type (for example, <code>application/x-yaml</code>).</p>",
          "shape": "ContentType"
        },
        "editContent": {
          "documentation": "<p>Set to true if the YAML file has changed and must be updated. Otherwise, set to false.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p>The upload's test spec file name. The name must not contain any forward slashes (/). The test spec file name must end with the <code>.yaml</code> or <code>.yml</code> file extension.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateUploadResult": {
      "members": {
        "upload": {
          "documentation": "<p>A test spec uploaded to Device Farm.</p>",
          "shape": "Upload"
        }
      },
      "type": "structure"
    },
    "UpdateVPCEConfigurationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the VPC endpoint configuration you want to update.</p>",
          "shape": "AmazonResourceName"
        },
        "serviceDnsName": {
          "documentation": "<p>The DNS (domain) name used to connect to your private service in your VPC. The DNS name must not already be in use on the internet.</p>",
          "shape": "ServiceDnsName"
        },
        "vpceConfigurationDescription": {
          "documentation": "<p>An optional description that provides details about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfigurationDescription"
        },
        "vpceConfigurationName": {
          "documentation": "<p>The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.</p>",
          "shape": "VPCEConfigurationName"
        },
        "vpceServiceName": {
          "documentation": "<p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>",
          "shape": "VPCEServiceName"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateVPCEConfigurationResult": {
      "members": {
        "vpceConfiguration": {
          "documentation": "<p>An object that contains information about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfiguration"
        }
      },
      "type": "structure"
    },
    "Upload": {
      "documentation": "<p>An app or a set of one or more tests to upload or that have been uploaded.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The upload's ARN.</p>",
          "shape": "AmazonResourceName"
        },
        "category": {
          "documentation": "<p>The upload's category. Allowed values include:</p> <ul> <li> <p>CURATED: An upload managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: An upload managed by the AWS Device Farm customer.</p> </li> </ul>",
          "shape": "UploadCategory"
        },
        "contentType": {
          "documentation": "<p>The upload's content type (for example, <code>application/octet-stream</code>).</p>",
          "shape": "ContentType"
        },
        "created": {
          "documentation": "<p>When the upload was created.</p>",
          "shape": "DateTime"
        },
        "message": {
          "documentation": "<p>A message about the upload's result.</p>",
          "shape": "Message"
        },
        "metadata": {
          "documentation": "<p>The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded.</p>",
          "shape": "Metadata"
        },
        "name": {
          "documentation": "<p>The upload's file name.</p>",
          "shape": "Name"
        },
        "status": {
          "documentation": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED</p> </li> <li> <p>INITIALIZED</p> </li> <li> <p>PROCESSING</p> </li> <li> <p>SUCCEEDED</p> </li> </ul>",
          "shape": "UploadStatus"
        },
        "type": {
          "documentation": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP</p> </li> <li> <p>IOS_APP</p> </li> <li> <p>WEB_APP</p> </li> <li> <p>EXTERNAL_DATA</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_RUBY_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_PACKAGE</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_PACKAGE</p> </li> <li> <p>CALABASH_TEST_PACKAGE</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE</p> </li> <li> <p>XCTEST_TEST_PACKAGE</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_RUBY_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_NODE_TEST_SPEC</p> </li> <li> <p>APPIUM_WEB_RUBY_TEST_SPEC</p> </li> <li> <p>INSTRUMENTATION_TEST_SPEC</p> </li> <li> <p>XCTEST_UI_TEST_SPEC</p> </li> </ul>",
          "shape": "UploadType"
        },
        "url": {
          "documentation": "<p>The presigned Amazon S3 URL that was used to store a file using a PUT request.</p>",
          "shape": "SensitiveURL"
        }
      },
      "type": "structure"
    },
    "UploadCategory": {
      "enum": [
        "CURATED",
        "PRIVATE"
      ],
      "type": "string"
    },
    "UploadStatus": {
      "enum": [
        "INITIALIZED",
        "PROCESSING",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string"
    },
    "UploadType": {
      "enum": [
        "ANDROID_APP",
        "IOS_APP",
        "WEB_APP",
        "EXTERNAL_DATA",
        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
        "APPIUM_PYTHON_TEST_PACKAGE",
        "APPIUM_NODE_TEST_PACKAGE",
        "APPIUM_RUBY_TEST_PACKAGE",
        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
        "APPIUM_WEB_NODE_TEST_PACKAGE",
        "APPIUM_WEB_RUBY_TEST_PACKAGE",
        "CALABASH_TEST_PACKAGE",
        "INSTRUMENTATION_TEST_PACKAGE",
        "UIAUTOMATION_TEST_PACKAGE",
        "UIAUTOMATOR_TEST_PACKAGE",
        "XCTEST_TEST_PACKAGE",
        "XCTEST_UI_TEST_PACKAGE",
        "APPIUM_JAVA_JUNIT_TEST_SPEC",
        "APPIUM_JAVA_TESTNG_TEST_SPEC",
        "APPIUM_PYTHON_TEST_SPEC",
        "APPIUM_NODE_TEST_SPEC",
        "APPIUM_RUBY_TEST_SPEC",
        "APPIUM_WEB_JAVA_JUNIT_TEST_SPEC",
        "APPIUM_WEB_JAVA_TESTNG_TEST_SPEC",
        "APPIUM_WEB_PYTHON_TEST_SPEC",
        "APPIUM_WEB_NODE_TEST_SPEC",
        "APPIUM_WEB_RUBY_TEST_SPEC",
        "INSTRUMENTATION_TEST_SPEC",
        "XCTEST_UI_TEST_SPEC"
      ],
      "type": "string"
    },
    "Uploads": {
      "member": {
        "shape": "Upload"
      },
      "type": "list"
    },
    "VPCEConfiguration": {
      "documentation": "<p>Represents an Amazon Virtual Private Cloud (VPC) endpoint configuration.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the VPC endpoint configuration.</p>",
          "shape": "AmazonResourceName"
        },
        "serviceDnsName": {
          "documentation": "<p>The DNS name that maps to the private IP address of the service you want to access.</p>",
          "shape": "ServiceDnsName"
        },
        "vpceConfigurationDescription": {
          "documentation": "<p>An optional description that provides details about your VPC endpoint configuration.</p>",
          "shape": "VPCEConfigurationDescription"
        },
        "vpceConfigurationName": {
          "documentation": "<p>The friendly name you give to your VPC endpoint configuration to manage your configurations more easily.</p>",
          "shape": "VPCEConfigurationName"
        },
        "vpceServiceName": {
          "documentation": "<p>The name of the VPC endpoint service running in your AWS account that you want Device Farm to test.</p>",
          "shape": "VPCEServiceName"
        }
      },
      "type": "structure"
    },
    "VPCEConfigurationDescription": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "VPCEConfigurationName": {
      "max": 1024,
      "min": 0,
      "type": "string"
    },
    "VPCEConfigurations": {
      "member": {
        "shape": "VPCEConfiguration"
      },
      "type": "list"
    },
    "VPCEServiceName": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "VideoCapture": {
      "type": "boolean"
    },
    "VpcConfig": {
      "documentation": "<p>Contains the VPC configuration data necessary to interface with AWS Device Farm's services.</p>",
      "members": {
        "securityGroupIds": {
          "documentation": "<p>An array of one or more security groups IDs in your Amazon VPC.</p>",
          "shape": "VpcSecurityGroupIds"
        },
        "subnetIds": {
          "documentation": "<p>An array of one or more subnet IDs in your Amazon VPC.</p>",
          "shape": "VpcSubnetIds"
        },
        "vpcId": {
          "documentation": "<p>The ID of the Amazon VPC.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "securityGroupIds",
        "subnetIds",
        "vpcId"
      ],
      "type": "structure"
    },
    "VpcSecurityGroupIds": {
      "max": 5,
      "member": {
        "shape": "SecurityGroupId"
      },
      "min": 1,
      "type": "list"
    },
    "VpcSubnetIds": {
      "max": 8,
      "member": {
        "shape": "SubnetId"
      },
      "min": 1,
      "type": "list"
    }
  },
  "version": "2.0"
}
