{
  "documentation": "<p>Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services. </p> <p>Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation. </p>",
  "metadata": {
    "apiVersion": "2018-05-10",
    "endpointPrefix": "ssm-incidents",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "SSM Incidents",
    "serviceFullName": "AWS Systems Manager Incident Manager",
    "serviceId": "SSM Incidents",
    "signatureVersion": "v4",
    "signingName": "ssm-incidents",
    "uid": "ssm-incidents-2018-05-10"
  },
  "operations": {
    "CreateReplicationSet": {
      "documentation": "<p>A replication set replicates and encrypts your data to the provided Regions with the provided KMS key. </p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createReplicationSet",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateReplicationSetInput"
      },
      "name": "CreateReplicationSet",
      "output": {
        "shape": "CreateReplicationSetOutput"
      }
    },
    "CreateResponsePlan": {
      "documentation": "<p>Creates a response plan that automates the initial response to incidents. A response plan engages contacts, starts chat channel collaboration, and initiates runbooks at the beginning of an incident.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createResponsePlan",
        "responseCode": 201
      },
      "idempotent": true,
      "input": {
        "shape": "CreateResponsePlanInput"
      },
      "name": "CreateResponsePlan",
      "output": {
        "shape": "CreateResponsePlanOutput"
      }
    },
    "CreateTimelineEvent": {
      "documentation": "<p>Creates a custom timeline event on the incident details page of an incident record. Timeline events are automatically created by Incident Manager, marking key moment during an incident. You can create custom timeline events to mark important events that are automatically detected by Incident Manager.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createTimelineEvent",
        "responseCode": 201
      },
      "idempotent": true,
      "input": {
        "shape": "CreateTimelineEventInput"
      },
      "name": "CreateTimelineEvent",
      "output": {
        "shape": "CreateTimelineEventOutput"
      }
    },
    "DeleteIncidentRecord": {
      "documentation": "<p>Delete an incident record from Incident Manager. </p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteIncidentRecord",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteIncidentRecordInput"
      },
      "name": "DeleteIncidentRecord",
      "output": {
        "shape": "DeleteIncidentRecordOutput"
      }
    },
    "DeleteReplicationSet": {
      "documentation": "<p>Deletes all Regions in your replication set. Deleting the replication set deletes all Incident Manager data.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteReplicationSet",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteReplicationSetInput"
      },
      "name": "DeleteReplicationSet",
      "output": {
        "shape": "DeleteReplicationSetOutput"
      }
    },
    "DeleteResourcePolicy": {
      "documentation": "<p>Deletes the resource policy that Resource Access Manager uses to share your Incident Manager resource.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteResourcePolicy",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteResourcePolicyInput"
      },
      "name": "DeleteResourcePolicy",
      "output": {
        "shape": "DeleteResourcePolicyOutput"
      }
    },
    "DeleteResponsePlan": {
      "documentation": "<p>Deletes the specified response plan. Deleting a response plan stops all linked CloudWatch alarms and EventBridge events from creating an incident with this response plan.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteResponsePlan",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteResponsePlanInput"
      },
      "name": "DeleteResponsePlan",
      "output": {
        "shape": "DeleteResponsePlanOutput"
      }
    },
    "DeleteTimelineEvent": {
      "documentation": "<p>Deletes a timeline event from an incident.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteTimelineEvent",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteTimelineEventInput"
      },
      "name": "DeleteTimelineEvent",
      "output": {
        "shape": "DeleteTimelineEventOutput"
      }
    },
    "GetIncidentRecord": {
      "documentation": "<p>Returns the details for the specified incident record.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/getIncidentRecord",
        "responseCode": 200
      },
      "input": {
        "shape": "GetIncidentRecordInput"
      },
      "name": "GetIncidentRecord",
      "output": {
        "shape": "GetIncidentRecordOutput"
      }
    },
    "GetReplicationSet": {
      "documentation": "<p>Retrieve your Incident Manager replication set.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/getReplicationSet",
        "responseCode": 200
      },
      "input": {
        "shape": "GetReplicationSetInput"
      },
      "name": "GetReplicationSet",
      "output": {
        "shape": "GetReplicationSetOutput"
      }
    },
    "GetResourcePolicies": {
      "documentation": "<p>Retrieves the resource policies attached to the specified response plan.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/getResourcePolicies",
        "responseCode": 200
      },
      "input": {
        "shape": "GetResourcePoliciesInput"
      },
      "name": "GetResourcePolicies",
      "output": {
        "shape": "GetResourcePoliciesOutput"
      }
    },
    "GetResponsePlan": {
      "documentation": "<p>Retrieves the details of the specified response plan.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/getResponsePlan",
        "responseCode": 200
      },
      "input": {
        "shape": "GetResponsePlanInput"
      },
      "name": "GetResponsePlan",
      "output": {
        "shape": "GetResponsePlanOutput"
      }
    },
    "GetTimelineEvent": {
      "documentation": "<p>Retrieves a timeline event based on its ID and incident record.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/getTimelineEvent",
        "responseCode": 200
      },
      "input": {
        "shape": "GetTimelineEventInput"
      },
      "name": "GetTimelineEvent",
      "output": {
        "shape": "GetTimelineEventOutput"
      }
    },
    "ListIncidentRecords": {
      "documentation": "<p>Lists all incident records in your account. Use this command to retrieve the Amazon Resource Name (ARN) of the incident record you want to update. </p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listIncidentRecords",
        "responseCode": 200
      },
      "input": {
        "shape": "ListIncidentRecordsInput"
      },
      "name": "ListIncidentRecords",
      "output": {
        "shape": "ListIncidentRecordsOutput"
      }
    },
    "ListRelatedItems": {
      "documentation": "<p>List all related items for an incident record.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listRelatedItems",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRelatedItemsInput"
      },
      "name": "ListRelatedItems",
      "output": {
        "shape": "ListRelatedItemsOutput"
      }
    },
    "ListReplicationSets": {
      "documentation": "<p>Lists details about the replication set configured in your account. </p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listReplicationSets",
        "responseCode": 200
      },
      "input": {
        "shape": "ListReplicationSetsInput"
      },
      "name": "ListReplicationSets",
      "output": {
        "shape": "ListReplicationSetsOutput"
      }
    },
    "ListResponsePlans": {
      "documentation": "<p>Lists all response plans in your account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listResponsePlans",
        "responseCode": 200
      },
      "input": {
        "shape": "ListResponsePlansInput"
      },
      "name": "ListResponsePlans",
      "output": {
        "shape": "ListResponsePlansOutput"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags that are attached to the specified response plan.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTimelineEvents": {
      "documentation": "<p>Lists timeline events for the specified incident record.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listTimelineEvents",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTimelineEventsInput"
      },
      "name": "ListTimelineEvents",
      "output": {
        "shape": "ListTimelineEventsOutput"
      }
    },
    "PutResourcePolicy": {
      "documentation": "<p>Adds a resource policy to the specified response plan. The resource policy is used to share the response plan using Resource Access Manager (RAM). For more information about cross-account sharing, see <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/xa.html\">Setting up cross-account functionality</a>.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/putResourcePolicy",
        "responseCode": 200
      },
      "input": {
        "shape": "PutResourcePolicyInput"
      },
      "name": "PutResourcePolicy",
      "output": {
        "shape": "PutResourcePolicyOutput"
      }
    },
    "StartIncident": {
      "documentation": "<p>Used to start an incident from CloudWatch alarms, EventBridge events, or manually. </p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/startIncident",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "StartIncidentInput"
      },
      "name": "StartIncident",
      "output": {
        "shape": "StartIncidentOutput"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds a tag to a response plan.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes a tag from a resource.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateDeletionProtection": {
      "documentation": "<p>Update deletion protection to either allow or deny deletion of the final Region in a replication set.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateDeletionProtection",
        "responseCode": 204
      },
      "input": {
        "shape": "UpdateDeletionProtectionInput"
      },
      "name": "UpdateDeletionProtection",
      "output": {
        "shape": "UpdateDeletionProtectionOutput"
      }
    },
    "UpdateIncidentRecord": {
      "documentation": "<p>Update the details of an incident record. You can use this operation to update an incident record from the defined chat channel. For more information about using actions in chat channels, see <a href=\"https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact\">Interacting through chat</a>.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateIncidentRecord",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateIncidentRecordInput"
      },
      "name": "UpdateIncidentRecord",
      "output": {
        "shape": "UpdateIncidentRecordOutput"
      }
    },
    "UpdateRelatedItems": {
      "documentation": "<p>Add or remove related items from the related items tab of an incident record.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateRelatedItems",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateRelatedItemsInput"
      },
      "name": "UpdateRelatedItems",
      "output": {
        "shape": "UpdateRelatedItemsOutput"
      }
    },
    "UpdateReplicationSet": {
      "documentation": "<p>Add or delete Regions from your replication set.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateReplicationSet",
        "responseCode": 204
      },
      "input": {
        "shape": "UpdateReplicationSetInput"
      },
      "name": "UpdateReplicationSet",
      "output": {
        "shape": "UpdateReplicationSetOutput"
      }
    },
    "UpdateResponsePlan": {
      "documentation": "<p>Updates the specified response plan.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateResponsePlan",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateResponsePlanInput"
      },
      "name": "UpdateResponsePlan",
      "output": {
        "shape": "UpdateResponsePlanOutput"
      }
    },
    "UpdateTimelineEvent": {
      "documentation": "<p>Updates a timeline event. You can update events of type <code>Custom Event</code>.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateTimelineEvent",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateTimelineEventInput"
      },
      "name": "UpdateTimelineEvent",
      "output": {
        "shape": "UpdateTimelineEventOutput"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You don't have sufficient access to perform this operation.</p>",
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Action": {
      "documentation": "<p>The action that starts at the beginning of an incident. The response plan defines the action.</p>",
      "members": {
        "ssmAutomation": {
          "documentation": "<p>The Systems Manager automation document to start as the runbook at the beginning of the incident.</p>",
          "shape": "SsmAutomation"
        }
      },
      "type": "structure",
      "union": true
    },
    "ActionsList": {
      "max": 1,
      "member": {
        "shape": "Action"
      },
      "min": 0,
      "type": "list"
    },
    "AddRegionAction": {
      "documentation": "<p>Defines the Amazon Web Services Region and KMS key to add to the replication set. </p>",
      "members": {
        "regionName": {
          "documentation": "<p>The Amazon Web Services Region name to add to the replication set.</p>",
          "shape": "RegionName"
        },
        "sseKmsKeyId": {
          "documentation": "<p>The KMS key ID to use to encrypt your replication set.</p>",
          "shape": "SseKmsKey"
        }
      },
      "required": [
        "regionName"
      ],
      "type": "structure"
    },
    "Arn": {
      "max": 1000,
      "min": 0,
      "pattern": "^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$",
      "type": "string"
    },
    "AttributeValueList": {
      "documentation": "<p>Use the AttributeValueList to filter by string or integer values.</p>",
      "members": {
        "integerValues": {
          "documentation": "<p>The list of integer values that the filter matches.</p>",
          "shape": "IntegerList"
        },
        "stringValues": {
          "documentation": "<p>The list of string values that the filter matches.</p>",
          "shape": "StringList"
        }
      },
      "type": "structure",
      "union": true
    },
    "AutomationExecution": {
      "documentation": "<p>The Systems Manager automation document process to start as the runbook at the beginning of the incident.</p>",
      "members": {
        "ssmExecutionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the automation process.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure",
      "union": true
    },
    "AutomationExecutionSet": {
      "max": 100,
      "member": {
        "shape": "AutomationExecution"
      },
      "min": 0,
      "type": "list"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "ChatChannel": {
      "documentation": "<p>The Chatbot chat channel used for collaboration during an incident.</p>",
      "members": {
        "chatbotSns": {
          "documentation": "<p>The Amazon SNS targets that Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the Amazon SNS topics. </p>",
          "shape": "ChatbotSnsConfigurationSet"
        },
        "empty": {
          "documentation": "<p>Used to remove the chat channel from an incident record or response plan.</p>",
          "shape": "EmptyChatChannel"
        }
      },
      "type": "structure",
      "union": true
    },
    "ChatbotSnsConfigurationSet": {
      "max": 5,
      "member": {
        "shape": "SnsArn"
      },
      "min": 1,
      "type": "list"
    },
    "ClientToken": {
      "max": 128,
      "min": 0,
      "type": "string"
    },
    "Condition": {
      "documentation": "<p>A conditional statement with which to compare a value, after a timestamp, before a timestamp, or equal to a string or integer. If multiple conditions are specified, the conditionals become an <code>AND</code>ed statement. If multiple values are specified for a conditional, the values are <code>OR</code>d.</p>",
      "members": {
        "after": {
          "documentation": "<p>After the specified timestamp.</p>",
          "shape": "Timestamp"
        },
        "before": {
          "documentation": "<p>Before the specified timestamp</p>",
          "shape": "Timestamp"
        },
        "equals": {
          "documentation": "<p>The value is equal to the provided string or integer. </p>",
          "shape": "AttributeValueList"
        }
      },
      "type": "structure",
      "union": true
    },
    "ConflictException": {
      "documentation": "<p>Updating or deleting a resource causes an inconsistent state.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "resourceIdentifier": {
          "documentation": "<p>The identifier of the requested resource</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>The resource type</p>",
          "shape": "ResourceType"
        },
        "retryAfter": {
          "documentation": "<p>If present in the output, the operation can be retried after this time</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "CreateReplicationSetInput": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "regions": {
          "documentation": "<p>The Regions that Incident Manager replicates your data to. You can have up to three Regions in your replication set.</p>",
          "shape": "RegionMapInput"
        }
      },
      "required": [
        "regions"
      ],
      "type": "structure"
    },
    "CreateReplicationSetOutput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set. </p>",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "CreateResponsePlanInput": {
      "members": {
        "actions": {
          "documentation": "<p>The actions that the response plan starts at the beginning of an incident.</p>",
          "shape": "ActionsList"
        },
        "chatChannel": {
          "documentation": "<p>The Chatbot chat channel used for collaboration during an incident.</p>",
          "shape": "ChatChannel"
        },
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "displayName": {
          "documentation": "<p>The long format of the response plan name. This field can contain spaces.</p>",
          "shape": "ResponsePlanDisplayName"
        },
        "engagements": {
          "documentation": "<p>The contacts and escalation plans that the response plan engages during an incident.</p>",
          "shape": "EngagementSet"
        },
        "incidentTemplate": {
          "documentation": "<p>Details used to create an incident when using this response plan.</p>",
          "shape": "IncidentTemplate"
        },
        "name": {
          "documentation": "<p>The short format name of the response plan. Can't include spaces.</p>",
          "shape": "ResponsePlanName"
        },
        "tags": {
          "documentation": "<p>A list of tags that you are adding to the response plan.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "incidentTemplate",
        "name"
      ],
      "type": "structure"
    },
    "CreateResponsePlanOutput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "CreateTimelineEventInput": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token ensuring that the action is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "eventData": {
          "documentation": "<p>A short description of the event.</p>",
          "shape": "EventData"
        },
        "eventTime": {
          "documentation": "<p>The time that the event occurred.</p>",
          "shape": "Timestamp"
        },
        "eventType": {
          "documentation": "<p>The type of the event. You can create timeline events of type <code>Custom Event</code>.</p>",
          "shape": "TimelineEventType"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record to which the event will be added.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventData",
        "eventTime",
        "eventType",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "CreateTimelineEventOutput": {
      "members": {
        "eventId": {
          "documentation": "<p>The ID of the event for easy reference later. </p>",
          "shape": "UUID"
        },
        "incidentRecordArn": {
          "documentation": "<p>The ARN of the incident record that you added the event to.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventId",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "DedupeString": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "DeleteIncidentRecordInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record you are deleting.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteIncidentRecordOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteRegionAction": {
      "documentation": "<p>Defines the information about the Amazon Web Services Region you're deleting from your replication set.</p>",
      "members": {
        "regionName": {
          "documentation": "<p>The name of the Amazon Web Services Region you're deleting from the replication set.</p>",
          "shape": "RegionName"
        }
      },
      "required": [
        "regionName"
      ],
      "type": "structure"
    },
    "DeleteReplicationSetInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set you're deleting.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteReplicationSetOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteResourcePolicyInput": {
      "members": {
        "policyId": {
          "documentation": "<p>The ID of the resource policy you're deleting.</p>",
          "shape": "PolicyId"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource you're deleting the policy from.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "policyId",
        "resourceArn"
      ],
      "type": "structure"
    },
    "DeleteResourcePolicyOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteResponsePlanInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteResponsePlanOutput": {
      "members": {},
      "type": "structure"
    },
    "DeleteTimelineEventInput": {
      "members": {
        "eventId": {
          "documentation": "<p>The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.</p>",
          "shape": "UUID"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that includes the timeline event.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventId",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "DeleteTimelineEventOutput": {
      "members": {},
      "type": "structure"
    },
    "DynamicSsmParameterValue": {
      "documentation": "<p>The dynamic SSM parameter value.</p>",
      "members": {
        "variable": {
          "documentation": "<p>Variable dynamic parameters. A parameter value is determined when an incident is created.</p>",
          "shape": "VariableType"
        }
      },
      "type": "structure",
      "union": true
    },
    "DynamicSsmParameters": {
      "key": {
        "shape": "DynamicSsmParametersKeyString"
      },
      "max": 200,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "DynamicSsmParameterValue"
      }
    },
    "DynamicSsmParametersKeyString": {
      "max": 50,
      "min": 1,
      "type": "string"
    },
    "EmptyChatChannel": {
      "documentation": "<p>Used to remove the chat channel from an incident record or response plan.</p>",
      "members": {},
      "type": "structure"
    },
    "EngagementSet": {
      "max": 5,
      "member": {
        "shape": "SsmContactsArn"
      },
      "min": 0,
      "type": "list"
    },
    "EventData": {
      "max": 6000,
      "min": 0,
      "type": "string"
    },
    "EventSummary": {
      "documentation": "<p>Details about a timeline event during an incident.</p>",
      "members": {
        "eventId": {
          "documentation": "<p>The timeline event ID.</p>",
          "shape": "UUID"
        },
        "eventTime": {
          "documentation": "<p>The time that the event occurred.</p>",
          "shape": "Timestamp"
        },
        "eventType": {
          "documentation": "<p>The type of event. The timeline event must be <code>Custom Event</code>.</p>",
          "shape": "TimelineEventType"
        },
        "eventUpdatedTime": {
          "documentation": "<p>The time that the timeline event was last updated.</p>",
          "shape": "Timestamp"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that the event happened during.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventId",
        "eventTime",
        "eventType",
        "eventUpdatedTime",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "EventSummaryList": {
      "max": 100,
      "member": {
        "shape": "EventSummary"
      },
      "min": 0,
      "type": "list"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "Filter": {
      "documentation": "<p>Filter the selection by using a condition.</p>",
      "members": {
        "condition": {
          "documentation": "<p>The condition accepts before or after a specified time, equal to a string, or equal to an integer.</p>",
          "shape": "Condition"
        },
        "key": {
          "documentation": "<p>The key that you're filtering on.</p>",
          "shape": "FilterKeyString"
        }
      },
      "required": [
        "condition",
        "key"
      ],
      "type": "structure"
    },
    "FilterKeyString": {
      "max": 50,
      "min": 0,
      "type": "string"
    },
    "FilterList": {
      "max": 5,
      "member": {
        "shape": "Filter"
      },
      "min": 0,
      "type": "list"
    },
    "GetIncidentRecordInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetIncidentRecordOutput": {
      "members": {
        "incidentRecord": {
          "documentation": "<p>Details the structure of the incident record.</p>",
          "shape": "IncidentRecord"
        }
      },
      "required": [
        "incidentRecord"
      ],
      "type": "structure"
    },
    "GetReplicationSetInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set you want to retrieve.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetReplicationSetOutput": {
      "members": {
        "replicationSet": {
          "documentation": "<p>Details of the replication set.</p>",
          "shape": "ReplicationSet"
        }
      },
      "required": [
        "replicationSet"
      ],
      "type": "structure"
    },
    "GetResourcePoliciesInput": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of resource policies to display per page of results.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan with the attached resource policy. </p>",
          "location": "querystring",
          "locationName": "resourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "GetResourcePoliciesOutput": {
      "members": {
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "resourcePolicies": {
          "documentation": "<p>Details about the resource policy attached to the response plan.</p>",
          "shape": "ResourcePolicyList"
        }
      },
      "required": [
        "resourcePolicies"
      ],
      "type": "structure"
    },
    "GetResponsePlanInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetResponsePlanOutput": {
      "members": {
        "actions": {
          "documentation": "<p>The actions that this response plan takes at the beginning of the incident.</p>",
          "shape": "ActionsList"
        },
        "arn": {
          "documentation": "<p>The ARN of the response plan.</p>",
          "shape": "Arn"
        },
        "chatChannel": {
          "documentation": "<p>The Chatbot chat channel used for collaboration during an incident.</p>",
          "shape": "ChatChannel"
        },
        "displayName": {
          "documentation": "<p>The long format name of the response plan. Can contain spaces.</p>",
          "shape": "ResponsePlanDisplayName"
        },
        "engagements": {
          "documentation": "<p>The contacts and escalation plans that the response plan engages during an incident.</p>",
          "shape": "EngagementSet"
        },
        "incidentTemplate": {
          "documentation": "<p>Details used to create the incident when using this response plan.</p>",
          "shape": "IncidentTemplate"
        },
        "name": {
          "documentation": "<p>The short format name of the response plan. The name can't contain spaces.</p>",
          "shape": "ResponsePlanName"
        }
      },
      "required": [
        "arn",
        "incidentTemplate",
        "name"
      ],
      "type": "structure"
    },
    "GetTimelineEventInput": {
      "members": {
        "eventId": {
          "documentation": "<p>The ID of the event. You can get an event's ID when you create it, or by using <code>ListTimelineEvents</code>.</p>",
          "location": "querystring",
          "locationName": "eventId",
          "shape": "UUID"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that includes the timeline event.</p>",
          "location": "querystring",
          "locationName": "incidentRecordArn",
          "shape": "Arn"
        }
      },
      "required": [
        "eventId",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "GetTimelineEventOutput": {
      "members": {
        "event": {
          "documentation": "<p>Details about the timeline event.</p>",
          "shape": "TimelineEvent"
        }
      },
      "required": [
        "event"
      ],
      "type": "structure"
    },
    "Impact": {
      "box": true,
      "max": 5,
      "min": 1,
      "type": "integer"
    },
    "IncidentRecord": {
      "documentation": "<p>The record of the incident that's created when an incident occurs.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record.</p>",
          "shape": "Arn"
        },
        "automationExecutions": {
          "documentation": "<p>The runbook, or automation document, that's run at the beginning of the incident.</p>",
          "shape": "AutomationExecutionSet"
        },
        "chatChannel": {
          "documentation": "<p>The chat channel used for collaboration during an incident.</p>",
          "shape": "ChatChannel"
        },
        "creationTime": {
          "documentation": "<p>The time that Incident Manager created the incident record.</p>",
          "shape": "Timestamp"
        },
        "dedupeString": {
          "documentation": "<p>The string Incident Manager uses to prevent duplicate incidents from being created by the same incident in the same account.</p>",
          "shape": "DedupeString"
        },
        "impact": {
          "documentation": "<p>The impact of the incident on customers and applications.</p>",
          "shape": "Impact"
        },
        "incidentRecordSource": {
          "documentation": "<p>Details about the action that started the incident.</p>",
          "shape": "IncidentRecordSource"
        },
        "lastModifiedBy": {
          "documentation": "<p>Who modified the incident most recently.</p>",
          "shape": "Arn"
        },
        "lastModifiedTime": {
          "documentation": "<p>The time at which the incident was most recently modified.</p>",
          "shape": "Timestamp"
        },
        "notificationTargets": {
          "documentation": "<p>The Amazon SNS targets that are notified when updates are made to an incident.</p>",
          "shape": "NotificationTargetSet"
        },
        "resolvedTime": {
          "documentation": "<p>The time at which the incident was resolved. This appears as a timeline event.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The current status of the incident.</p>",
          "shape": "IncidentRecordStatus"
        },
        "summary": {
          "documentation": "<p>The summary of the incident. The summary is a brief synopsis of what occurred, what's currently happening, and context of the incident.</p>",
          "shape": "IncidentSummary"
        },
        "title": {
          "documentation": "<p>The title of the incident.</p>",
          "shape": "IncidentTitle"
        }
      },
      "required": [
        "arn",
        "creationTime",
        "dedupeString",
        "impact",
        "incidentRecordSource",
        "lastModifiedBy",
        "lastModifiedTime",
        "status",
        "title"
      ],
      "type": "structure"
    },
    "IncidentRecordSource": {
      "documentation": "<p>Details about what created the incident record and when it was created.</p>",
      "members": {
        "createdBy": {
          "documentation": "<p>The principal that started the incident.</p>",
          "shape": "Arn"
        },
        "invokedBy": {
          "documentation": "<p>The service principal that assumed the role specified in <code>createdBy</code>. If no service principal assumed the role this will be left blank.</p>",
          "shape": "ServicePrincipal"
        },
        "resourceArn": {
          "documentation": "<p>The resource that caused the incident to be created.</p>",
          "shape": "Arn"
        },
        "source": {
          "documentation": "<p>The service that started the incident. This can be manually created from Incident Manager, automatically created using an Amazon CloudWatch alarm, or Amazon EventBridge event.</p>",
          "shape": "IncidentSource"
        }
      },
      "required": [
        "createdBy",
        "source"
      ],
      "type": "structure"
    },
    "IncidentRecordStatus": {
      "enum": [
        "OPEN",
        "RESOLVED"
      ],
      "type": "string"
    },
    "IncidentRecordSummary": {
      "documentation": "<p>Details describing an incident record.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident.</p>",
          "shape": "Arn"
        },
        "creationTime": {
          "documentation": "<p>The time the incident was created.</p>",
          "shape": "Timestamp"
        },
        "impact": {
          "documentation": "<p>Defines the impact to customers and applications.</p>",
          "shape": "Impact"
        },
        "incidentRecordSource": {
          "documentation": "<p>What caused Incident Manager to create the incident.</p>",
          "shape": "IncidentRecordSource"
        },
        "resolvedTime": {
          "documentation": "<p>The time the incident was resolved.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The current status of the incident.</p>",
          "shape": "IncidentRecordStatus"
        },
        "title": {
          "documentation": "<p>The title of the incident. This value is either provided by the response plan or overwritten on creation.</p>",
          "shape": "IncidentTitle"
        }
      },
      "required": [
        "arn",
        "creationTime",
        "impact",
        "incidentRecordSource",
        "status",
        "title"
      ],
      "type": "structure"
    },
    "IncidentRecordSummaryList": {
      "max": 100,
      "member": {
        "shape": "IncidentRecordSummary"
      },
      "min": 0,
      "type": "list"
    },
    "IncidentSource": {
      "max": 50,
      "min": 0,
      "type": "string"
    },
    "IncidentSummary": {
      "max": 4000,
      "min": 0,
      "type": "string"
    },
    "IncidentTemplate": {
      "documentation": "<p>Basic details used in creating a response plan. The response plan is then used to create an incident record.</p>",
      "members": {
        "dedupeString": {
          "documentation": "<p>Used to stop Incident Manager from creating multiple incident records for the same incident. </p>",
          "shape": "DedupeString"
        },
        "impact": {
          "documentation": "<p>The impact of the incident on your customers and applications. </p>",
          "shape": "Impact"
        },
        "incidentTags": {
          "documentation": "<p>Tags to apply to an incident when calling the <code>StartIncident</code> API action.</p>",
          "shape": "TagMap"
        },
        "notificationTargets": {
          "documentation": "<p>The Amazon SNS targets that are notified when updates are made to an incident.</p>",
          "shape": "NotificationTargetSet"
        },
        "summary": {
          "documentation": "<p>The summary of the incident. The summary is a brief synopsis of what occurred, what's currently happening, and context.</p>",
          "shape": "IncidentSummary"
        },
        "title": {
          "documentation": "<p>The title of the incident. </p>",
          "shape": "IncidentTitle"
        }
      },
      "required": [
        "impact",
        "title"
      ],
      "type": "structure"
    },
    "IncidentTitle": {
      "max": 200,
      "min": 0,
      "type": "string"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "IntegerList": {
      "max": 100,
      "member": {
        "shape": "Integer"
      },
      "min": 0,
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>The request processing has failed because of an unknown error, exception or failure.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ItemIdentifier": {
      "documentation": "<p>Details and type of a related item.</p>",
      "members": {
        "type": {
          "documentation": "<p>The type of related item. </p>",
          "shape": "ItemType"
        },
        "value": {
          "documentation": "<p>Details about the related item.</p>",
          "shape": "ItemValue"
        }
      },
      "required": [
        "type",
        "value"
      ],
      "type": "structure"
    },
    "ItemType": {
      "enum": [
        "ANALYSIS",
        "INCIDENT",
        "METRIC",
        "PARENT",
        "ATTACHMENT",
        "OTHER",
        "AUTOMATION",
        "INVOLVED_RESOURCE",
        "TASK"
      ],
      "type": "string"
    },
    "ItemValue": {
      "documentation": "<p>Describes a related item.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the related item, if the related item is an Amazon resource.</p>",
          "shape": "Arn"
        },
        "metricDefinition": {
          "documentation": "<p>The metric definition, if the related item is a metric in Amazon CloudWatch.</p>",
          "shape": "MetricDefinition"
        },
        "url": {
          "documentation": "<p>The URL, if the related item is a non-Amazon Web Services resource.</p>",
          "shape": "Url"
        }
      },
      "type": "structure",
      "union": true
    },
    "ListIncidentRecordsInput": {
      "members": {
        "filters": {
          "documentation": "<p>Filters the list of incident records through which you are searching. You can filter on the following keys:</p> <ul> <li> <p> <code>creationTime</code> </p> </li> <li> <p> <code>impact</code> </p> </li> <li> <p> <code>status</code> </p> </li> <li> <p> <code>createdBy</code> </p> </li> </ul> <p>Note the following when deciding how to use Filters:</p> <ul> <li> <p>If you don't specify a Filter, the response includes all incident records.</p> </li> <li> <p>If you specify more than one filter in a single request, the response returns incident records that match all filters.</p> </li> <li> <p>If you specify a filter with more than one value, the response returns incident records that match any of the values provided.</p> </li> </ul>",
          "shape": "FilterList"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListIncidentRecordsOutput": {
      "members": {
        "incidentRecordSummaries": {
          "documentation": "<p>The details of each listed incident record.</p>",
          "shape": "IncidentRecordSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "incidentRecordSummaries"
      ],
      "type": "structure"
    },
    "ListRelatedItemsInput": {
      "members": {
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record containing the listed related items.</p>",
          "shape": "Arn"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of related items per page.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "ListRelatedItemsOutput": {
      "members": {
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "relatedItems": {
          "documentation": "<p>Details about each related item.</p>",
          "shape": "RelatedItemList"
        }
      },
      "required": [
        "relatedItems"
      ],
      "type": "structure"
    },
    "ListReplicationSetsInput": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results per page. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListReplicationSetsOutput": {
      "members": {
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "replicationSetArns": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the list replication set.</p>",
          "shape": "ReplicationSetArnList"
        }
      },
      "required": [
        "replicationSetArns"
      ],
      "type": "structure"
    },
    "ListResponsePlansInput": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of response plans per page.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListResponsePlansOutput": {
      "members": {
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "responsePlanSummaries": {
          "documentation": "<p>Details of each response plan.</p>",
          "shape": "ResponsePlanSummaryList"
        }
      },
      "required": [
        "responsePlanSummaries"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>A list of tags for the response plan.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "tags"
      ],
      "type": "structure"
    },
    "ListTimelineEventsInput": {
      "members": {
        "filters": {
          "documentation": "<p>Filters the timeline events based on the provided conditional values. You can filter timeline events using the following keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p> <code>eventType</code> </p> </li> </ul> <p>Note the following when deciding how to use Filters:</p> <ul> <li> <p>If you don't specify a Filter, the response includes all timeline events.</p> </li> <li> <p>If you specify more than one filter in a single request, the response returns timeline events that match all filters.</p> </li> <li> <p>If you specify a filter with more than one value, the response returns timeline events that match any of the values provided.</p> </li> </ul>",
          "shape": "FilterList"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that includes the timeline event.</p>",
          "shape": "Arn"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results per page.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        },
        "sortBy": {
          "documentation": "<p>Sort by the specified key value pair.</p>",
          "shape": "TimelineEventSort"
        },
        "sortOrder": {
          "documentation": "<p>Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.</p>",
          "shape": "SortOrder"
        }
      },
      "required": [
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "ListTimelineEventsOutput": {
      "members": {
        "eventSummaries": {
          "documentation": "<p>Details about each event that occurred during the incident.</p>",
          "shape": "EventSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The pagination token to continue to the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "eventSummaries"
      ],
      "type": "structure"
    },
    "MaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "MetricDefinition": {
      "max": 4000,
      "min": 0,
      "type": "string"
    },
    "NextToken": {
      "max": 2000,
      "min": 0,
      "type": "string"
    },
    "NotificationTargetItem": {
      "documentation": "<p>The SNS targets that are notified when updates are made to an incident.</p>",
      "members": {
        "snsTopicArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the SNS topic.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure",
      "union": true
    },
    "NotificationTargetSet": {
      "max": 10,
      "member": {
        "shape": "NotificationTargetItem"
      },
      "min": 0,
      "type": "list"
    },
    "Policy": {
      "max": 4000,
      "min": 0,
      "type": "string"
    },
    "PolicyId": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "PutResourcePolicyInput": {
      "members": {
        "policy": {
          "documentation": "<p>Details of the resource policy.</p>",
          "shape": "Policy"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan you're adding the resource policy to.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "policy",
        "resourceArn"
      ],
      "type": "structure"
    },
    "PutResourcePolicyOutput": {
      "members": {
        "policyId": {
          "documentation": "<p>The ID of the resource policy.</p>",
          "shape": "PolicyId"
        }
      },
      "required": [
        "policyId"
      ],
      "type": "structure"
    },
    "RawData": {
      "max": 4000,
      "min": 0,
      "type": "string"
    },
    "RegionInfo": {
      "documentation": "<p>Information about a Amazon Web Services Region in your replication set.</p>",
      "members": {
        "sseKmsKeyId": {
          "documentation": "<p>The ID of the KMS key used to encrypt the data in this Amazon Web Services Region.</p>",
          "shape": "SseKmsKey"
        },
        "status": {
          "documentation": "<p>The status of the Amazon Web Services Region in the replication set.</p>",
          "shape": "RegionStatus"
        },
        "statusMessage": {
          "documentation": "<p>Information displayed about the status of the Amazon Web Services Region.</p>",
          "shape": "String"
        },
        "statusUpdateDateTime": {
          "documentation": "<p>The most recent date and time that Incident Manager updated the Amazon Web Services Region's status.</p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "status",
        "statusUpdateDateTime"
      ],
      "type": "structure"
    },
    "RegionInfoMap": {
      "key": {
        "shape": "RegionName"
      },
      "type": "map",
      "value": {
        "shape": "RegionInfo"
      }
    },
    "RegionMapInput": {
      "key": {
        "shape": "RegionName"
      },
      "max": 3,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "RegionMapInputValue"
      }
    },
    "RegionMapInputValue": {
      "documentation": "<p>The mapping between a Amazon Web Services Region and the key that's used to encrypt the data.</p>",
      "members": {
        "sseKmsKeyId": {
          "documentation": "<p>The KMS key used to encrypt the data in your replication set.</p>",
          "shape": "SseKmsKey"
        }
      },
      "type": "structure"
    },
    "RegionName": {
      "max": 20,
      "min": 0,
      "type": "string"
    },
    "RegionStatus": {
      "enum": [
        "ACTIVE",
        "CREATING",
        "DELETING",
        "FAILED"
      ],
      "type": "string"
    },
    "RelatedItem": {
      "documentation": "<p>Resources that responders use to triage and mitigate the incident.</p>",
      "members": {
        "identifier": {
          "documentation": "<p>Details about the related item.</p>",
          "shape": "ItemIdentifier"
        },
        "title": {
          "documentation": "<p>The title of the related item.</p>",
          "shape": "RelatedItemTitleString"
        }
      },
      "required": [
        "identifier"
      ],
      "type": "structure"
    },
    "RelatedItemList": {
      "max": 100,
      "member": {
        "shape": "RelatedItem"
      },
      "min": 0,
      "type": "list"
    },
    "RelatedItemTitleString": {
      "max": 200,
      "min": 0,
      "type": "string"
    },
    "RelatedItemsUpdate": {
      "documentation": "<p>Details about the related item you're adding.</p>",
      "members": {
        "itemToAdd": {
          "documentation": "<p>Details about the related item you're adding.</p>",
          "shape": "RelatedItem"
        },
        "itemToRemove": {
          "documentation": "<p>Details about the related item you're deleting.</p>",
          "shape": "ItemIdentifier"
        }
      },
      "type": "structure",
      "union": true
    },
    "ReplicationSet": {
      "documentation": "<p>The set of Amazon Web Services Region that your Incident Manager data will be replicated to and the KMS key used to encrypt the data. </p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set.</p>",
          "shape": "Arn"
        },
        "createdBy": {
          "documentation": "<p>Details about who created the replication set.</p>",
          "shape": "Arn"
        },
        "createdTime": {
          "documentation": "<p>When the replication set was created.</p>",
          "shape": "Timestamp"
        },
        "deletionProtected": {
          "documentation": "<p>Determines if the replication set deletion protection is enabled or not. If deletion protection is enabled, you can't delete the last Amazon Web Services Region in the replication set. </p>",
          "shape": "Boolean"
        },
        "lastModifiedBy": {
          "documentation": "<p>Who last modified the replication set.</p>",
          "shape": "Arn"
        },
        "lastModifiedTime": {
          "documentation": "<p>When the replication set was last updated.</p>",
          "shape": "Timestamp"
        },
        "regionMap": {
          "documentation": "<p>The map between each Amazon Web Services Region in your replication set and the KMS key that's used to encrypt the data in that Region.</p>",
          "shape": "RegionInfoMap"
        },
        "status": {
          "documentation": "<p>The status of the replication set. If the replication set is still pending, you can't use Incident Manager functionality.</p>",
          "shape": "ReplicationSetStatus"
        }
      },
      "required": [
        "createdBy",
        "createdTime",
        "deletionProtected",
        "lastModifiedBy",
        "lastModifiedTime",
        "regionMap",
        "status"
      ],
      "type": "structure"
    },
    "ReplicationSetArnList": {
      "member": {
        "shape": "Arn"
      },
      "type": "list"
    },
    "ReplicationSetStatus": {
      "enum": [
        "ACTIVE",
        "CREATING",
        "UPDATING",
        "DELETING",
        "FAILED"
      ],
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>Request references a resource which doesn't exist. </p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "resourceIdentifier": {
          "documentation": "<p>The identifier for the requested resource</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>The resource type</p>",
          "shape": "ResourceType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ResourcePolicy": {
      "documentation": "<p>The resource policy that allows Incident Manager to perform actions on resources on your behalf.</p>",
      "members": {
        "policyDocument": {
          "documentation": "<p>The JSON blob that describes the policy.</p>",
          "shape": "Policy"
        },
        "policyId": {
          "documentation": "<p>The ID of the resource policy.</p>",
          "shape": "PolicyId"
        },
        "ramResourceShareRegion": {
          "documentation": "<p>The Amazon Web Services Region that policy allows resources to be used in.</p>",
          "shape": "String"
        }
      },
      "required": [
        "policyDocument",
        "policyId",
        "ramResourceShareRegion"
      ],
      "type": "structure"
    },
    "ResourcePolicyList": {
      "max": 100,
      "member": {
        "shape": "ResourcePolicy"
      },
      "min": 0,
      "type": "list"
    },
    "ResourceType": {
      "enum": [
        "RESPONSE_PLAN",
        "INCIDENT_RECORD",
        "TIMELINE_EVENT",
        "REPLICATION_SET",
        "RESOURCE_POLICY"
      ],
      "type": "string"
    },
    "ResponsePlanDisplayName": {
      "max": 200,
      "min": 0,
      "type": "string"
    },
    "ResponsePlanName": {
      "max": 200,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_]*$",
      "type": "string"
    },
    "ResponsePlanSummary": {
      "documentation": "<p>Details of the response plan that are used when creating an incident.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "shape": "Arn"
        },
        "displayName": {
          "documentation": "<p>The human readable name of the response plan. This can include spaces.</p>",
          "shape": "ResponsePlanDisplayName"
        },
        "name": {
          "documentation": "<p>The name of the response plan. This can't include spaces.</p>",
          "shape": "ResponsePlanName"
        }
      },
      "required": [
        "arn",
        "name"
      ],
      "type": "structure"
    },
    "ResponsePlanSummaryList": {
      "max": 100,
      "member": {
        "shape": "ResponsePlanSummary"
      },
      "min": 0,
      "type": "list"
    },
    "RoleArn": {
      "max": 1000,
      "min": 0,
      "pattern": "^arn:aws(-cn|-us-gov)?:iam::([0-9]{12})?:role/.+$",
      "type": "string"
    },
    "ServiceCode": {
      "enum": [
        "ssm-incidents"
      ],
      "type": "string"
    },
    "ServicePrincipal": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>Request would cause a service quota to be exceeded.</p>",
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "quotaCode": {
          "documentation": "<p>Originating quota code</p>",
          "shape": "String"
        },
        "resourceIdentifier": {
          "documentation": "<p>The identifier for the requested resource</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>The resource type</p>",
          "shape": "ResourceType"
        },
        "serviceCode": {
          "documentation": "<p>Originating service code</p>",
          "shape": "ServiceCode"
        }
      },
      "required": [
        "message",
        "quotaCode",
        "serviceCode"
      ],
      "type": "structure"
    },
    "SnsArn": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "SortOrder": {
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "type": "string"
    },
    "SseKmsKey": {
      "max": 2048,
      "min": 0,
      "type": "string"
    },
    "SsmAutomation": {
      "documentation": "<p>Details about the Systems Manager automation document that will be used as a runbook during an incident.</p>",
      "members": {
        "documentName": {
          "documentation": "<p>The automation document's name.</p>",
          "shape": "SsmAutomationDocumentNameString"
        },
        "documentVersion": {
          "documentation": "<p>The automation document's version to use when running.</p>",
          "shape": "SsmAutomationDocumentVersionString"
        },
        "dynamicParameters": {
          "documentation": "<p>The key-value pair to resolve dynamic parameter values when processing a Systems Manager Automation runbook.</p>",
          "shape": "DynamicSsmParameters"
        },
        "parameters": {
          "documentation": "<p>The key-value pair parameters to use when running the automation document.</p>",
          "shape": "SsmParameters"
        },
        "roleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the role that the automation document will assume when running commands.</p>",
          "shape": "RoleArn"
        },
        "targetAccount": {
          "documentation": "<p>The account that the automation document will be run in. This can be in either the management account or an application account.</p>",
          "shape": "SsmTargetAccount"
        }
      },
      "required": [
        "documentName",
        "roleArn"
      ],
      "type": "structure"
    },
    "SsmAutomationDocumentNameString": {
      "pattern": "^[a-zA-Z0-9_\\-.:/]{3,128}$",
      "type": "string"
    },
    "SsmAutomationDocumentVersionString": {
      "max": 128,
      "min": 0,
      "type": "string"
    },
    "SsmContactsArn": {
      "max": 2048,
      "min": 0,
      "pattern": "^arn:aws(-cn|-us-gov)?:ssm-contacts:[a-z0-9-]*:([0-9]{12}):contact/[a-z0-9_-]+$",
      "type": "string"
    },
    "SsmParameterValues": {
      "max": 100,
      "member": {
        "shape": "SsmParameterValuesMemberString"
      },
      "min": 0,
      "type": "list"
    },
    "SsmParameterValuesMemberString": {
      "max": 512,
      "min": 0,
      "type": "string"
    },
    "SsmParameters": {
      "key": {
        "shape": "SsmParametersKeyString"
      },
      "max": 200,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "SsmParameterValues"
      }
    },
    "SsmParametersKeyString": {
      "max": 50,
      "min": 1,
      "type": "string"
    },
    "SsmTargetAccount": {
      "enum": [
        "RESPONSE_PLAN_OWNER_ACCOUNT",
        "IMPACTED_ACCOUNT"
      ],
      "type": "string"
    },
    "StartIncidentInput": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "impact": {
          "documentation": "<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class=\"title\"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, this typically relates to full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer might aren't impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren't currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>",
          "shape": "Impact"
        },
        "relatedItems": {
          "documentation": "<p>Add related items to the incident for other responders to use. Related items are AWS resources, external links, or files uploaded to an Amazon S3 bucket. </p>",
          "shape": "RelatedItemList"
        },
        "responsePlanArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan that pre-defines summary, chat channels, Amazon SNS topics, runbooks, title, and impact of the incident. </p>",
          "shape": "Arn"
        },
        "title": {
          "documentation": "<p>Provide a title for the incident. Providing a title overwrites the title provided by the response plan. </p>",
          "shape": "IncidentTitle"
        },
        "triggerDetails": {
          "documentation": "<p>Details of what created the incident record in Incident Manager.</p>",
          "shape": "TriggerDetails"
        }
      },
      "required": [
        "responsePlanArn"
      ],
      "type": "structure"
    },
    "StartIncidentOutput": {
      "members": {
        "incidentRecordArn": {
          "documentation": "<p>The ARN of the newly created incident record.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "max": 100,
      "member": {
        "shape": "StringListMemberString"
      },
      "min": 0,
      "type": "list"
    },
    "StringListMemberString": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[A-Za-z0-9 _=@:.+-/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagMapUpdate": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan you're adding the tags to.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>A list of tags that you are adding to the response plan.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "^[A-Za-z0-9 _=@:.+-/]*$",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        },
        "quotaCode": {
          "documentation": "<p>Originating quota code</p>",
          "shape": "String"
        },
        "serviceCode": {
          "documentation": "<p>Originating service code</p>",
          "shape": "ServiceCode"
        }
      },
      "required": [
        "message",
        "quotaCode",
        "serviceCode"
      ],
      "type": "structure"
    },
    "TimelineEvent": {
      "documentation": "<p>A significant event that happened during the incident. </p>",
      "members": {
        "eventData": {
          "documentation": "<p>A short description of the event.</p>",
          "shape": "EventData"
        },
        "eventId": {
          "documentation": "<p>The ID of the timeline event.</p>",
          "shape": "UUID"
        },
        "eventTime": {
          "documentation": "<p>The time that the event occurred.</p>",
          "shape": "Timestamp"
        },
        "eventType": {
          "documentation": "<p>The type of event that occurred. Currently Incident Manager supports only the <code>Custom Event</code> type.</p>",
          "shape": "TimelineEventType"
        },
        "eventUpdatedTime": {
          "documentation": "<p>The time that the timeline event was last updated.</p>",
          "shape": "Timestamp"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that the event occurred during.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventData",
        "eventId",
        "eventTime",
        "eventType",
        "eventUpdatedTime",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "TimelineEventSort": {
      "enum": [
        "EVENT_TIME"
      ],
      "type": "string"
    },
    "TimelineEventType": {
      "max": 100,
      "min": 0,
      "type": "string"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TriggerDetails": {
      "documentation": "<p>Details about what caused the incident to be created in Incident Manager.</p>",
      "members": {
        "rawData": {
          "documentation": "<p>Raw data passed from either Amazon EventBridge, Amazon CloudWatch, or Incident Manager when an incident is created.</p>",
          "shape": "RawData"
        },
        "source": {
          "documentation": "<p>Identifies the service that sourced the event. All events sourced from within Amazon Web Services begin with \"<code>aws.</code>\" Customer-generated events can have any value here, as long as it doesn't begin with \"<code>aws.</code>\" We recommend the use of Java package-name style reverse domain-name strings. </p>",
          "shape": "IncidentSource"
        },
        "timestamp": {
          "documentation": "<p>The time that the incident was detected.</p>",
          "shape": "Timestamp"
        },
        "triggerArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the source that detected the incident.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "source",
        "timestamp"
      ],
      "type": "structure"
    },
    "UUID": {
      "max": 50,
      "min": 0,
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan you're removing a tag from.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tagKeys": {
          "documentation": "<p>The name of the tag you're removing from the response plan.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateDeletionProtectionInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set you're updating.</p>",
          "shape": "Arn"
        },
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "deletionProtected": {
          "documentation": "<p>Details if deletion protection is enabled or disabled in your account.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "arn",
        "deletionProtected"
      ],
      "type": "structure"
    },
    "UpdateDeletionProtectionOutput": {
      "members": {},
      "type": "structure"
    },
    "UpdateIncidentRecordInput": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record you are updating.</p>",
          "shape": "Arn"
        },
        "chatChannel": {
          "documentation": "<p>The Chatbot chat channel where responders can collaborate.</p>",
          "shape": "ChatChannel"
        },
        "clientToken": {
          "documentation": "<p>A token that ensures that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "impact": {
          "documentation": "<p>Defines the impact of the incident to customers and applications. Providing an impact overwrites the impact provided by the response plan.</p> <p class=\"title\"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>1</code> - Critical impact, full application failure that impacts many to all customers. </p> </li> <li> <p> <code>2</code> - High impact, partial application failure with impact to many customers.</p> </li> <li> <p> <code>3</code> - Medium impact, the application is providing reduced service to customers.</p> </li> <li> <p> <code>4</code> - Low impact, customer aren't impacted by the problem yet.</p> </li> <li> <p> <code>5</code> - No impact, customers aren't currently impacted but urgent action is needed to avoid impact.</p> </li> </ul>",
          "shape": "Impact"
        },
        "notificationTargets": {
          "documentation": "<p>The Amazon SNS targets that are notified when updates are made to an incident.</p> <p>Using multiple SNS topics creates redundancy in the event that a Region is down during the incident.</p>",
          "shape": "NotificationTargetSet"
        },
        "status": {
          "documentation": "<p>The status of the incident. An incident can be <code>Open</code> or <code>Resolved</code>.</p>",
          "shape": "IncidentRecordStatus"
        },
        "summary": {
          "documentation": "<p>A longer description of what occurred during the incident.</p>",
          "shape": "IncidentSummary"
        },
        "title": {
          "documentation": "<p>A brief description of the incident.</p>",
          "shape": "IncidentTitle"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateIncidentRecordOutput": {
      "members": {},
      "type": "structure"
    },
    "UpdateRelatedItemsInput": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident record containing the related items you are updating.</p>",
          "shape": "Arn"
        },
        "relatedItemsUpdate": {
          "documentation": "<p>Details about the item you are adding or deleting.</p>",
          "shape": "RelatedItemsUpdate"
        }
      },
      "required": [
        "incidentRecordArn",
        "relatedItemsUpdate"
      ],
      "type": "structure"
    },
    "UpdateRelatedItemsOutput": {
      "members": {},
      "type": "structure"
    },
    "UpdateReplicationSetAction": {
      "documentation": "<p>Details used when updating the replication set.</p>",
      "members": {
        "addRegionAction": {
          "documentation": "<p>Details about the Amazon Web Services Region that you're adding to the replication set.</p>",
          "shape": "AddRegionAction"
        },
        "deleteRegionAction": {
          "documentation": "<p>Details about the Amazon Web Services Region that you're deleting to the replication set.</p>",
          "shape": "DeleteRegionAction"
        }
      },
      "type": "structure",
      "union": true
    },
    "UpdateReplicationSetInput": {
      "members": {
        "actions": {
          "documentation": "<p>An action to add or delete a Region.</p>",
          "shape": "UpdateReplicationSetInputActionsList"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the replication set you're updating.</p>",
          "shape": "Arn"
        },
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        }
      },
      "required": [
        "actions",
        "arn"
      ],
      "type": "structure"
    },
    "UpdateReplicationSetInputActionsList": {
      "max": 1,
      "member": {
        "shape": "UpdateReplicationSetAction"
      },
      "min": 1,
      "type": "list"
    },
    "UpdateReplicationSetOutput": {
      "members": {},
      "type": "structure"
    },
    "UpdateResponsePlanInput": {
      "members": {
        "actions": {
          "documentation": "<p>The actions that this response plan takes at the beginning of an incident.</p>",
          "shape": "ActionsList"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the response plan.</p>",
          "shape": "Arn"
        },
        "chatChannel": {
          "documentation": "<p>The Chatbot chat channel used for collaboration during an incident.</p> <p>Use the empty structure to remove the chat channel from the response plan.</p>",
          "shape": "ChatChannel"
        },
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "displayName": {
          "documentation": "<p>The long format name of the response plan. The display name can't contain spaces.</p>",
          "shape": "ResponsePlanDisplayName"
        },
        "engagements": {
          "documentation": "<p>The contacts and escalation plans that Incident Manager engages at the start of the incident.</p>",
          "shape": "EngagementSet"
        },
        "incidentTemplateDedupeString": {
          "documentation": "<p>The string Incident Manager uses to prevent duplicate incidents from being created by the same incident in the same account.</p>",
          "shape": "DedupeString"
        },
        "incidentTemplateImpact": {
          "documentation": "<p>Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.</p> <p class=\"title\"> <b>Possible impacts:</b> </p> <ul> <li> <p> <code>5</code> - Severe impact</p> </li> <li> <p> <code>4</code> - High impact</p> </li> <li> <p> <code>3</code> - Medium impact</p> </li> <li> <p> <code>2</code> - Low impact</p> </li> <li> <p> <code>1</code> - No impact</p> </li> </ul>",
          "shape": "Impact"
        },
        "incidentTemplateNotificationTargets": {
          "documentation": "<p>The Amazon SNS targets that are notified when updates are made to an incident.</p>",
          "shape": "NotificationTargetSet"
        },
        "incidentTemplateSummary": {
          "documentation": "<p>A brief summary of the incident. This typically contains what has happened, what's currently happening, and next steps.</p>",
          "shape": "IncidentSummary"
        },
        "incidentTemplateTags": {
          "documentation": "<p>Tags to apply to an incident when calling the <code>StartIncident</code> API action. To call this action, you must also have permission to call the <code>TagResource</code> API action for the incident record resource.</p>",
          "shape": "TagMapUpdate"
        },
        "incidentTemplateTitle": {
          "documentation": "<p>The short format name of the incident. The title can't contain spaces.</p>",
          "shape": "IncidentTitle"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "UpdateResponsePlanOutput": {
      "members": {},
      "type": "structure"
    },
    "UpdateTimelineEventInput": {
      "members": {
        "clientToken": {
          "documentation": "<p>A token ensuring that the operation is called only once with the specified details.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "eventData": {
          "documentation": "<p>A short description of the event.</p>",
          "shape": "EventData"
        },
        "eventId": {
          "documentation": "<p>The ID of the event you are updating. You can find this by using <code>ListTimelineEvents</code>.</p>",
          "shape": "UUID"
        },
        "eventTime": {
          "documentation": "<p>The time that the event occurred.</p>",
          "shape": "Timestamp"
        },
        "eventType": {
          "documentation": "<p>The type of the event. You can update events of type <code>Custom Event</code>.</p>",
          "shape": "TimelineEventType"
        },
        "incidentRecordArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the incident that includes the timeline event.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "eventId",
        "incidentRecordArn"
      ],
      "type": "structure"
    },
    "UpdateTimelineEventOutput": {
      "members": {},
      "type": "structure"
    },
    "Url": {
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an Amazon Web Services service.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ExceptionMessage"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "VariableType": {
      "enum": [
        "INCIDENT_RECORD_ARN",
        "INVOLVED_RESOURCES"
      ],
      "type": "string"
    }
  },
  "version": "2.0"
}
