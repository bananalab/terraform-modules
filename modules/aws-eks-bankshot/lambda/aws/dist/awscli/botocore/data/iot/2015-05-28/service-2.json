{
  "documentation": "<fullname>IoT</fullname> <p>IoT provides secure, bi-directional communication between Internet-connected devices (such as sensors, actuators, embedded devices, or smart appliances) and the Amazon Web Services cloud. You can discover your custom IoT-Data endpoint to communicate with, configure rules for data processing and integration with other services, organize resources associated with each device (Registry), configure logging, and create and manage policies and credentials to authenticate devices.</p> <p>The service endpoints that expose this API are listed in <a href=\"https://docs.aws.amazon.com/general/latest/gr/iot-core.html\">Amazon Web Services IoT Core Endpoints and Quotas</a>. You must use the endpoint for the region that has the resources you want to access.</p> <p>The service name used by <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Amazon Web Services Signature Version 4</a> to sign the request is: <i>execute-api</i>.</p> <p>For more information about how IoT works, see the <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/aws-iot-how-it-works.html\">Developer Guide</a>.</p> <p>For information about how to use the credentials provider for IoT, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/authorizing-direct-aws.html\">Authorizing Direct Calls to Amazon Web Services Services</a>.</p>",
  "metadata": {
    "apiVersion": "2015-05-28",
    "endpointPrefix": "iot",
    "protocol": "rest-json",
    "serviceFullName": "AWS IoT",
    "serviceId": "IoT",
    "signatureVersion": "v4",
    "signingName": "execute-api",
    "uid": "iot-2015-05-28"
  },
  "operations": {
    "AcceptCertificateTransfer": {
      "documentation": "<p>Accepts a pending certificate transfer. The default state of the certificate is INACTIVE.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AcceptCertificateTransfer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TransferAlreadyCompletedException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/accept-certificate-transfer/{certificateId}"
      },
      "input": {
        "shape": "AcceptCertificateTransferRequest"
      },
      "name": "AcceptCertificateTransfer"
    },
    "AddThingToBillingGroup": {
      "documentation": "<p>Adds a thing to a billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AddThingToBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/billing-groups/addThingToBillingGroup"
      },
      "input": {
        "shape": "AddThingToBillingGroupRequest"
      },
      "name": "AddThingToBillingGroup",
      "output": {
        "shape": "AddThingToBillingGroupResponse"
      }
    },
    "AddThingToThingGroup": {
      "documentation": "<p>Adds a thing to a thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AddThingToThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/thing-groups/addThingToThingGroup"
      },
      "input": {
        "shape": "AddThingToThingGroupRequest"
      },
      "name": "AddThingToThingGroup",
      "output": {
        "shape": "AddThingToThingGroupResponse"
      }
    },
    "AssociateTargetsWithJob": {
      "documentation": "<p>Associates a group with a continuous job. The following criteria must be met: </p> <ul> <li> <p>The job must have been created with the <code>targetSelection</code> field set to \"CONTINUOUS\".</p> </li> <li> <p>The job status must currently be \"IN_PROGRESS\".</p> </li> <li> <p>The total number of targets associated with a job must not exceed 100.</p> </li> </ul> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AssociateTargetsWithJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/jobs/{jobId}/targets"
      },
      "input": {
        "shape": "AssociateTargetsWithJobRequest"
      },
      "name": "AssociateTargetsWithJob",
      "output": {
        "shape": "AssociateTargetsWithJobResponse"
      }
    },
    "AttachPolicy": {
      "documentation": "<p>Attaches the specified policy to the specified principal (certificate or other credential).</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AttachPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/target-policies/{policyName}"
      },
      "input": {
        "shape": "AttachPolicyRequest"
      },
      "name": "AttachPolicy"
    },
    "AttachPrincipalPolicy": {
      "deprecated": true,
      "documentation": "<p>Attaches the specified policy to the specified principal (certificate or other credential).</p> <p> <b>Note:</b> This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use <a>AttachPolicy</a> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AttachPrincipalPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/principal-policies/{policyName}"
      },
      "input": {
        "shape": "AttachPrincipalPolicyRequest"
      },
      "name": "AttachPrincipalPolicy"
    },
    "AttachSecurityProfile": {
      "documentation": "<p>Associates a Device Defender security profile with a thing group or this account. Each thing group or account can have up to five security profiles associated with it.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AttachSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/security-profiles/{securityProfileName}/targets"
      },
      "input": {
        "shape": "AttachSecurityProfileRequest"
      },
      "name": "AttachSecurityProfile",
      "output": {
        "shape": "AttachSecurityProfileResponse"
      }
    },
    "AttachThingPrincipal": {
      "documentation": "<p>Attaches the specified principal to the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">AttachThingPrincipal</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/things/{thingName}/principals"
      },
      "input": {
        "shape": "AttachThingPrincipalRequest"
      },
      "name": "AttachThingPrincipal",
      "output": {
        "shape": "AttachThingPrincipalResponse"
      }
    },
    "CancelAuditMitigationActionsTask": {
      "documentation": "<p>Cancels a mitigation action task that is in progress. If the task is not in progress, an InvalidRequestException occurs.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelAuditMitigationActionsTask</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/audit/mitigationactions/tasks/{taskId}/cancel"
      },
      "input": {
        "shape": "CancelAuditMitigationActionsTaskRequest"
      },
      "name": "CancelAuditMitigationActionsTask",
      "output": {
        "shape": "CancelAuditMitigationActionsTaskResponse"
      }
    },
    "CancelAuditTask": {
      "documentation": "<p>Cancels an audit that is in progress. The audit can be either scheduled or on demand. If the audit isn't in progress, an \"InvalidRequestException\" occurs.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelAuditTask</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/audit/tasks/{taskId}/cancel"
      },
      "input": {
        "shape": "CancelAuditTaskRequest"
      },
      "name": "CancelAuditTask",
      "output": {
        "shape": "CancelAuditTaskResponse"
      }
    },
    "CancelCertificateTransfer": {
      "documentation": "<p>Cancels a pending transfer for the specified certificate.</p> <p> <b>Note</b> Only the transfer source account can use this operation to cancel a transfer. (Transfer destinations can use <a>RejectCertificateTransfer</a> instead.) After transfer, IoT returns the certificate to the source account in the INACTIVE state. After the destination account has accepted the transfer, the transfer cannot be cancelled.</p> <p>After a certificate transfer is cancelled, the status of the certificate changes from PENDING_TRANSFER to INACTIVE.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelCertificateTransfer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TransferAlreadyCompletedException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/cancel-certificate-transfer/{certificateId}"
      },
      "input": {
        "shape": "CancelCertificateTransferRequest"
      },
      "name": "CancelCertificateTransfer"
    },
    "CancelDetectMitigationActionsTask": {
      "documentation": "<p> Cancels a Device Defender ML Detect mitigation action. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelDetectMitigationActionsTask</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/detect/mitigationactions/tasks/{taskId}/cancel"
      },
      "input": {
        "shape": "CancelDetectMitigationActionsTaskRequest"
      },
      "name": "CancelDetectMitigationActionsTask",
      "output": {
        "shape": "CancelDetectMitigationActionsTaskResponse"
      }
    },
    "CancelJob": {
      "documentation": "<p>Cancels a job.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/jobs/{jobId}/cancel"
      },
      "input": {
        "shape": "CancelJobRequest"
      },
      "name": "CancelJob",
      "output": {
        "shape": "CancelJobResponse"
      }
    },
    "CancelJobExecution": {
      "documentation": "<p>Cancels the execution of a job for a given thing.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CancelJobExecution</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidStateTransitionException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "VersionConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/things/{thingName}/jobs/{jobId}/cancel"
      },
      "input": {
        "shape": "CancelJobExecutionRequest"
      },
      "name": "CancelJobExecution"
    },
    "ClearDefaultAuthorizer": {
      "documentation": "<p>Clears the default authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ClearDefaultAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/default-authorizer"
      },
      "input": {
        "shape": "ClearDefaultAuthorizerRequest"
      },
      "name": "ClearDefaultAuthorizer",
      "output": {
        "shape": "ClearDefaultAuthorizerResponse"
      }
    },
    "ConfirmTopicRuleDestination": {
      "documentation": "<p>Confirms a topic rule destination. When you create a rule requiring a destination, IoT sends a confirmation message to the endpoint or base address you specify. The message includes a token which you pass back when calling <code>ConfirmTopicRuleDestination</code> to confirm that you own or have access to the endpoint.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ConfirmTopicRuleDestination</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/confirmdestination/{confirmationToken+}"
      },
      "input": {
        "shape": "ConfirmTopicRuleDestinationRequest"
      },
      "name": "ConfirmTopicRuleDestination",
      "output": {
        "shape": "ConfirmTopicRuleDestinationResponse"
      }
    },
    "CreateAuditSuppression": {
      "documentation": "<p> Creates a Device Defender audit suppression. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateAuditSuppression</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/suppressions/create"
      },
      "input": {
        "shape": "CreateAuditSuppressionRequest"
      },
      "name": "CreateAuditSuppression",
      "output": {
        "shape": "CreateAuditSuppressionResponse"
      }
    },
    "CreateAuthorizer": {
      "documentation": "<p>Creates an authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/authorizer/{authorizerName}"
      },
      "input": {
        "shape": "CreateAuthorizerRequest"
      },
      "name": "CreateAuthorizer",
      "output": {
        "shape": "CreateAuthorizerResponse"
      }
    },
    "CreateBillingGroup": {
      "documentation": "<p>Creates a billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/billing-groups/{billingGroupName}"
      },
      "input": {
        "shape": "CreateBillingGroupRequest"
      },
      "name": "CreateBillingGroup",
      "output": {
        "shape": "CreateBillingGroupResponse"
      }
    },
    "CreateCertificateFromCsr": {
      "documentation": "<p>Creates an X.509 certificate using the specified certificate signing request.</p> <p> <b>Note:</b> The CSR must include a public key that is either an RSA key with a length of at least 2048 bits or an ECC key from NIST P-256, NIST P-384, or NIST P-512 curves. For supported certificates, consult <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms\"> Certificate signing algorithms supported by IoT</a>.</p> <p> <b>Note:</b> Reusing the same certificate signing request (CSR) results in a distinct certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateCertificateFromCsr</a> action.</p> <p>You can create multiple certificates in a batch by creating a directory, copying multiple .csr files into that directory, and then specifying that directory on the command line. The following commands show how to create a batch of certificates given a batch of CSRs.</p> <p>Assuming a set of CSRs are located inside of the directory my-csr-directory:</p> <p>On Linux and OS X, the command is:</p> <p>$ ls my-csr-directory/ | xargs -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>This command lists all of the CSRs in my-csr-directory and pipes each CSR file name to the aws iot create-certificate-from-csr Amazon Web Services CLI command to create a certificate for the corresponding CSR.</p> <p>The aws iot create-certificate-from-csr part of the command can also be run in parallel to speed up the certificate creation process:</p> <p>$ ls my-csr-directory/ | xargs -P 10 -I {} aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/{}</p> <p>On Windows PowerShell, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; ls -Name my-csr-directory | %{aws iot create-certificate-from-csr --certificate-signing-request file://my-csr-directory/$_}</p> <p>On a Windows command prompt, the command to create certificates for all CSRs in my-csr-directory is:</p> <p>&gt; forfiles /p my-csr-directory /c \"cmd /c aws iot create-certificate-from-csr --certificate-signing-request file://@path\"</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/certificates"
      },
      "input": {
        "shape": "CreateCertificateFromCsrRequest"
      },
      "name": "CreateCertificateFromCsr",
      "output": {
        "shape": "CreateCertificateFromCsrResponse"
      }
    },
    "CreateCustomMetric": {
      "documentation": "<p> Use this API to define a Custom Metric published by your devices to Device Defender. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateCustomMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/custom-metric/{metricName}"
      },
      "input": {
        "shape": "CreateCustomMetricRequest"
      },
      "name": "CreateCustomMetric",
      "output": {
        "shape": "CreateCustomMetricResponse"
      }
    },
    "CreateDimension": {
      "documentation": "<p>Create a dimension that you can use to limit the scope of a metric used in a security profile for IoT Device Defender. For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric only to MQTT topics whose name match the pattern specified in the dimension.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateDimension</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/dimensions/{name}"
      },
      "input": {
        "shape": "CreateDimensionRequest"
      },
      "name": "CreateDimension",
      "output": {
        "shape": "CreateDimensionResponse"
      }
    },
    "CreateDomainConfiguration": {
      "documentation": "<p>Creates a domain configuration.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateDomainConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "CertificateValidationException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domainConfigurations/{domainConfigurationName}"
      },
      "input": {
        "shape": "CreateDomainConfigurationRequest"
      },
      "name": "CreateDomainConfiguration",
      "output": {
        "shape": "CreateDomainConfigurationResponse"
      }
    },
    "CreateDynamicThingGroup": {
      "documentation": "<p>Creates a dynamic thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateDynamicThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/dynamic-thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "CreateDynamicThingGroupRequest"
      },
      "name": "CreateDynamicThingGroup",
      "output": {
        "shape": "CreateDynamicThingGroupResponse"
      }
    },
    "CreateFleetMetric": {
      "documentation": "<p>Creates a fleet metric.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateFleetMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/fleet-metric/{metricName}"
      },
      "input": {
        "shape": "CreateFleetMetricRequest"
      },
      "name": "CreateFleetMetric",
      "output": {
        "shape": "CreateFleetMetricResponse"
      }
    },
    "CreateJob": {
      "documentation": "<p>Creates a job.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/jobs/{jobId}"
      },
      "input": {
        "shape": "CreateJobRequest"
      },
      "name": "CreateJob",
      "output": {
        "shape": "CreateJobResponse"
      }
    },
    "CreateJobTemplate": {
      "documentation": "<p>Creates a job template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateJobTemplate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/job-templates/{jobTemplateId}"
      },
      "input": {
        "shape": "CreateJobTemplateRequest"
      },
      "name": "CreateJobTemplate",
      "output": {
        "shape": "CreateJobTemplateResponse"
      }
    },
    "CreateKeysAndCertificate": {
      "documentation": "<p>Creates a 2048-bit RSA key pair and issues an X.509 certificate using the issued public key. You can also call <code>CreateKeysAndCertificate</code> over MQTT from a device, for more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-wo-cert.html#provision-mqtt-api\">Provisioning MQTT API</a>.</p> <p> <b>Note</b> This is the only time IoT issues the private key for this certificate, so it is important to keep it in a secure location.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateKeysAndCertificate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/keys-and-certificate"
      },
      "input": {
        "shape": "CreateKeysAndCertificateRequest"
      },
      "name": "CreateKeysAndCertificate",
      "output": {
        "shape": "CreateKeysAndCertificateResponse"
      }
    },
    "CreateMitigationAction": {
      "documentation": "<p>Defines an action that can be applied to audit findings by using StartAuditMitigationActionsTask. Only certain types of mitigation actions can be applied to specific check names. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-mitigation-actions.html\">Mitigation actions</a>. Each mitigation action can apply only one type of change.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateMitigationAction</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/mitigationactions/actions/{actionName}"
      },
      "input": {
        "shape": "CreateMitigationActionRequest"
      },
      "name": "CreateMitigationAction",
      "output": {
        "shape": "CreateMitigationActionResponse"
      }
    },
    "CreateOTAUpdate": {
      "documentation": "<p>Creates an IoT OTA update on a target group of things or groups.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateOTAUpdate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/otaUpdates/{otaUpdateId}"
      },
      "input": {
        "shape": "CreateOTAUpdateRequest"
      },
      "name": "CreateOTAUpdate",
      "output": {
        "shape": "CreateOTAUpdateResponse"
      }
    },
    "CreatePolicy": {
      "documentation": "<p>Creates an IoT policy.</p> <p>The created policy is the default version for the policy. This operation creates a policy version with a version identifier of <b>1</b> and sets <b>1</b> as the policy's default version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreatePolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "MalformedPolicyException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/policies/{policyName}"
      },
      "input": {
        "shape": "CreatePolicyRequest"
      },
      "name": "CreatePolicy",
      "output": {
        "shape": "CreatePolicyResponse"
      }
    },
    "CreatePolicyVersion": {
      "documentation": "<p>Creates a new version of the specified IoT policy. To update a policy, create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must use <a>DeletePolicyVersion</a> to delete an existing version before you create a new one.</p> <p>Optionally, you can set the new version as the policy's default version. The default version is the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreatePolicyVersion</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "MalformedPolicyException"
        },
        {
          "shape": "VersionsLimitExceededException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/policies/{policyName}/version"
      },
      "input": {
        "shape": "CreatePolicyVersionRequest"
      },
      "name": "CreatePolicyVersion",
      "output": {
        "shape": "CreatePolicyVersionResponse"
      }
    },
    "CreateProvisioningClaim": {
      "documentation": "<p>Creates a provisioning claim.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateProvisioningClaim</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/provisioning-templates/{templateName}/provisioning-claim"
      },
      "input": {
        "shape": "CreateProvisioningClaimRequest"
      },
      "name": "CreateProvisioningClaim",
      "output": {
        "shape": "CreateProvisioningClaimResponse"
      }
    },
    "CreateProvisioningTemplate": {
      "documentation": "<p>Creates a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateProvisioningTemplate</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/provisioning-templates"
      },
      "input": {
        "shape": "CreateProvisioningTemplateRequest"
      },
      "name": "CreateProvisioningTemplate",
      "output": {
        "shape": "CreateProvisioningTemplateResponse"
      }
    },
    "CreateProvisioningTemplateVersion": {
      "documentation": "<p>Creates a new version of a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateProvisioningTemplateVersion</a> action.</p>",
      "errors": [
        {
          "shape": "VersionsLimitExceededException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/provisioning-templates/{templateName}/versions"
      },
      "input": {
        "shape": "CreateProvisioningTemplateVersionRequest"
      },
      "name": "CreateProvisioningTemplateVersion",
      "output": {
        "shape": "CreateProvisioningTemplateVersionResponse"
      }
    },
    "CreateRoleAlias": {
      "documentation": "<p>Creates a role alias.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateRoleAlias</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "shape": "CreateRoleAliasRequest"
      },
      "name": "CreateRoleAlias",
      "output": {
        "shape": "CreateRoleAliasResponse"
      }
    },
    "CreateScheduledAudit": {
      "documentation": "<p>Creates a scheduled audit that is run at a specified time interval.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateScheduledAudit</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "shape": "CreateScheduledAuditRequest"
      },
      "name": "CreateScheduledAudit",
      "output": {
        "shape": "CreateScheduledAuditResponse"
      }
    },
    "CreateSecurityProfile": {
      "documentation": "<p>Creates a Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "shape": "CreateSecurityProfileRequest"
      },
      "name": "CreateSecurityProfile",
      "output": {
        "shape": "CreateSecurityProfileResponse"
      }
    },
    "CreateStream": {
      "documentation": "<p>Creates a stream for delivering one or more large files in chunks over MQTT. A stream transports data bytes in chunks or blocks packaged as MQTT messages from a source like S3. You can have one or more files associated with a stream.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateStream</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/streams/{streamId}"
      },
      "input": {
        "shape": "CreateStreamRequest"
      },
      "name": "CreateStream",
      "output": {
        "shape": "CreateStreamResponse"
      }
    },
    "CreateThing": {
      "documentation": "<p>Creates a thing record in the registry. If this call is made multiple times using the same thing name and configuration, the call will succeed. If this call is made with the same thing name but different configuration a <code>ResourceAlreadyExistsException</code> is thrown.</p> <note> <p>This is a control plane operation. See <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html\">Authorization</a> for information about authorizing control plane actions.</p> </note> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateThing</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/things/{thingName}"
      },
      "input": {
        "shape": "CreateThingRequest"
      },
      "name": "CreateThing",
      "output": {
        "shape": "CreateThingResponse"
      }
    },
    "CreateThingGroup": {
      "documentation": "<p>Create a thing group.</p> <note> <p>This is a control plane operation. See <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-authorization.html\">Authorization</a> for information about authorizing control plane actions.</p> </note> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "CreateThingGroupRequest"
      },
      "name": "CreateThingGroup",
      "output": {
        "shape": "CreateThingGroupResponse"
      }
    },
    "CreateThingType": {
      "documentation": "<p>Creates a new thing type.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateThingType</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "shape": "CreateThingTypeRequest"
      },
      "name": "CreateThingType",
      "output": {
        "shape": "CreateThingTypeResponse"
      }
    },
    "CreateTopicRule": {
      "documentation": "<p>Creates a rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "SqlParseException"
        },
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/rules/{ruleName}"
      },
      "input": {
        "shape": "CreateTopicRuleRequest"
      },
      "name": "CreateTopicRule"
    },
    "CreateTopicRuleDestination": {
      "documentation": "<p>Creates a topic rule destination. The destination must be confirmed prior to use.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateTopicRuleDestination</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/destinations"
      },
      "input": {
        "shape": "CreateTopicRuleDestinationRequest"
      },
      "name": "CreateTopicRuleDestination",
      "output": {
        "shape": "CreateTopicRuleDestinationResponse"
      }
    },
    "DeleteAccountAuditConfiguration": {
      "documentation": "<p>Restores the default settings for Device Defender audits for this account. Any configuration data you entered is deleted and all audit checks are reset to disabled. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteAccountAuditConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/audit/configuration"
      },
      "input": {
        "shape": "DeleteAccountAuditConfigurationRequest"
      },
      "name": "DeleteAccountAuditConfiguration",
      "output": {
        "shape": "DeleteAccountAuditConfigurationResponse"
      }
    },
    "DeleteAuditSuppression": {
      "documentation": "<p> Deletes a Device Defender audit suppression. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteAuditSuppression</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/suppressions/delete"
      },
      "input": {
        "shape": "DeleteAuditSuppressionRequest"
      },
      "name": "DeleteAuditSuppression",
      "output": {
        "shape": "DeleteAuditSuppressionResponse"
      }
    },
    "DeleteAuthorizer": {
      "documentation": "<p>Deletes an authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/authorizer/{authorizerName}"
      },
      "input": {
        "shape": "DeleteAuthorizerRequest"
      },
      "name": "DeleteAuthorizer",
      "output": {
        "shape": "DeleteAuthorizerResponse"
      }
    },
    "DeleteBillingGroup": {
      "documentation": "<p>Deletes the billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/billing-groups/{billingGroupName}"
      },
      "input": {
        "shape": "DeleteBillingGroupRequest"
      },
      "name": "DeleteBillingGroup",
      "output": {
        "shape": "DeleteBillingGroupResponse"
      }
    },
    "DeleteCACertificate": {
      "documentation": "<p>Deletes a registered CA certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteCACertificate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/cacertificate/{caCertificateId}"
      },
      "input": {
        "shape": "DeleteCACertificateRequest"
      },
      "name": "DeleteCACertificate",
      "output": {
        "shape": "DeleteCACertificateResponse"
      }
    },
    "DeleteCertificate": {
      "documentation": "<p>Deletes the specified certificate.</p> <p>A certificate cannot be deleted if it has a policy or IoT thing attached to it or if its status is set to ACTIVE. To delete a certificate, first use the <a>DetachPolicy</a> action to detach all policies. Next, use the <a>UpdateCertificate</a> action to set the certificate to the INACTIVE status.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteCertificate</a> action.</p>",
      "errors": [
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/certificates/{certificateId}"
      },
      "input": {
        "shape": "DeleteCertificateRequest"
      },
      "name": "DeleteCertificate"
    },
    "DeleteCustomMetric": {
      "documentation": "<p> Deletes a Device Defender detect custom metric. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteCustomMetric</a> action.</p> <note> <p>Before you can delete a custom metric, you must first remove the custom metric from all security profiles it's a part of. The security profile associated with the custom metric can be found using the <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_ListSecurityProfiles.html\">ListSecurityProfiles</a> API with <code>metricName</code> set to your custom metric name.</p> </note>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/custom-metric/{metricName}"
      },
      "input": {
        "shape": "DeleteCustomMetricRequest"
      },
      "name": "DeleteCustomMetric",
      "output": {
        "shape": "DeleteCustomMetricResponse"
      }
    },
    "DeleteDimension": {
      "documentation": "<p>Removes the specified dimension from your Amazon Web Services accounts.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteDimension</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/dimensions/{name}"
      },
      "input": {
        "shape": "DeleteDimensionRequest"
      },
      "name": "DeleteDimension",
      "output": {
        "shape": "DeleteDimensionResponse"
      }
    },
    "DeleteDomainConfiguration": {
      "documentation": "<p>Deletes the specified domain configuration.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteDomainConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/domainConfigurations/{domainConfigurationName}"
      },
      "input": {
        "shape": "DeleteDomainConfigurationRequest"
      },
      "name": "DeleteDomainConfiguration",
      "output": {
        "shape": "DeleteDomainConfigurationResponse"
      }
    },
    "DeleteDynamicThingGroup": {
      "documentation": "<p>Deletes a dynamic thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteDynamicThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/dynamic-thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "DeleteDynamicThingGroupRequest"
      },
      "name": "DeleteDynamicThingGroup",
      "output": {
        "shape": "DeleteDynamicThingGroupResponse"
      }
    },
    "DeleteFleetMetric": {
      "documentation": "<p>Deletes the specified fleet metric. Returns successfully with no error if the deletion is successful or you specify a fleet metric that doesn't exist.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteFleetMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "VersionConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/fleet-metric/{metricName}"
      },
      "input": {
        "shape": "DeleteFleetMetricRequest"
      },
      "name": "DeleteFleetMetric"
    },
    "DeleteJob": {
      "documentation": "<p>Deletes a job and its related job executions.</p> <p>Deleting a job may take time, depending on the number of job executions created for the job and various other factors. While the job is being deleted, the status of the job will be shown as \"DELETION_IN_PROGRESS\". Attempting to delete or cancel a job whose status is already \"DELETION_IN_PROGRESS\" will result in an error.</p> <p>Only 10 jobs may have status \"DELETION_IN_PROGRESS\" at the same time, or a LimitExceededException will occur.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidStateTransitionException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/jobs/{jobId}"
      },
      "input": {
        "shape": "DeleteJobRequest"
      },
      "name": "DeleteJob"
    },
    "DeleteJobExecution": {
      "documentation": "<p>Deletes a job execution.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteJobExecution</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InvalidStateTransitionException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/things/{thingName}/jobs/{jobId}/executionNumber/{executionNumber}"
      },
      "input": {
        "shape": "DeleteJobExecutionRequest"
      },
      "name": "DeleteJobExecution"
    },
    "DeleteJobTemplate": {
      "documentation": "<p>Deletes the specified job template.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/job-templates/{jobTemplateId}"
      },
      "input": {
        "shape": "DeleteJobTemplateRequest"
      },
      "name": "DeleteJobTemplate"
    },
    "DeleteMitigationAction": {
      "documentation": "<p>Deletes a defined mitigation action from your Amazon Web Services accounts.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteMitigationAction</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/mitigationactions/actions/{actionName}"
      },
      "input": {
        "shape": "DeleteMitigationActionRequest"
      },
      "name": "DeleteMitigationAction",
      "output": {
        "shape": "DeleteMitigationActionResponse"
      }
    },
    "DeleteOTAUpdate": {
      "documentation": "<p>Delete an OTA update.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteOTAUpdate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "VersionConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/otaUpdates/{otaUpdateId}"
      },
      "input": {
        "shape": "DeleteOTAUpdateRequest"
      },
      "name": "DeleteOTAUpdate",
      "output": {
        "shape": "DeleteOTAUpdateResponse"
      }
    },
    "DeletePolicy": {
      "documentation": "<p>Deletes the specified policy.</p> <p>A policy cannot be deleted if it has non-default versions or it is attached to any certificate.</p> <p>To delete a policy, use the <a>DeletePolicyVersion</a> action to delete all non-default versions of the policy; use the <a>DetachPolicy</a> action to detach the policy from any certificate; and then use the DeletePolicy action to delete the policy.</p> <p>When a policy is deleted using DeletePolicy, its default version is deleted with it.</p> <note> <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after a policy is detached before it's ready to be deleted.</p> </note> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeletePolicy</a> action.</p>",
      "errors": [
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/policies/{policyName}"
      },
      "input": {
        "shape": "DeletePolicyRequest"
      },
      "name": "DeletePolicy"
    },
    "DeletePolicyVersion": {
      "documentation": "<p>Deletes the specified version of the specified policy. You cannot delete the default version of a policy using this action. To delete the default version of a policy, use <a>DeletePolicy</a>. To find out which version of a policy is marked as the default version, use ListPolicyVersions.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeletePolicyVersion</a> action.</p>",
      "errors": [
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "shape": "DeletePolicyVersionRequest"
      },
      "name": "DeletePolicyVersion"
    },
    "DeleteProvisioningTemplate": {
      "documentation": "<p>Deletes a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteProvisioningTemplate</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/provisioning-templates/{templateName}"
      },
      "input": {
        "shape": "DeleteProvisioningTemplateRequest"
      },
      "name": "DeleteProvisioningTemplate",
      "output": {
        "shape": "DeleteProvisioningTemplateResponse"
      }
    },
    "DeleteProvisioningTemplateVersion": {
      "documentation": "<p>Deletes a provisioning template version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteProvisioningTemplateVersion</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        },
        {
          "shape": "DeleteConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/provisioning-templates/{templateName}/versions/{versionId}"
      },
      "input": {
        "shape": "DeleteProvisioningTemplateVersionRequest"
      },
      "name": "DeleteProvisioningTemplateVersion",
      "output": {
        "shape": "DeleteProvisioningTemplateVersionResponse"
      }
    },
    "DeleteRegistrationCode": {
      "documentation": "<p>Deletes a CA certificate registration code.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteRegistrationCode</a> action.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/registrationcode"
      },
      "input": {
        "shape": "DeleteRegistrationCodeRequest"
      },
      "name": "DeleteRegistrationCode",
      "output": {
        "shape": "DeleteRegistrationCodeResponse"
      }
    },
    "DeleteRoleAlias": {
      "documentation": "<p>Deletes a role alias</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteRoleAlias</a> action.</p>",
      "errors": [
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "shape": "DeleteRoleAliasRequest"
      },
      "name": "DeleteRoleAlias",
      "output": {
        "shape": "DeleteRoleAliasResponse"
      }
    },
    "DeleteScheduledAudit": {
      "documentation": "<p>Deletes a scheduled audit.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteScheduledAudit</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "shape": "DeleteScheduledAuditRequest"
      },
      "name": "DeleteScheduledAudit",
      "output": {
        "shape": "DeleteScheduledAuditResponse"
      }
    },
    "DeleteSecurityProfile": {
      "documentation": "<p>Deletes a Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "VersionConflictException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "shape": "DeleteSecurityProfileRequest"
      },
      "name": "DeleteSecurityProfile",
      "output": {
        "shape": "DeleteSecurityProfileResponse"
      }
    },
    "DeleteStream": {
      "documentation": "<p>Deletes a stream.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteStream</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "DeleteConflictException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/streams/{streamId}"
      },
      "input": {
        "shape": "DeleteStreamRequest"
      },
      "name": "DeleteStream",
      "output": {
        "shape": "DeleteStreamResponse"
      }
    },
    "DeleteThing": {
      "documentation": "<p>Deletes the specified thing. Returns successfully with no error if the deletion is successful or you specify a thing that doesn't exist.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteThing</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/things/{thingName}"
      },
      "input": {
        "shape": "DeleteThingRequest"
      },
      "name": "DeleteThing",
      "output": {
        "shape": "DeleteThingResponse"
      }
    },
    "DeleteThingGroup": {
      "documentation": "<p>Deletes a thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "DeleteThingGroupRequest"
      },
      "name": "DeleteThingGroup",
      "output": {
        "shape": "DeleteThingGroupResponse"
      }
    },
    "DeleteThingType": {
      "documentation": "<p>Deletes the specified thing type. You cannot delete a thing type if it has things associated with it. To delete a thing type, first mark it as deprecated by calling <a>DeprecateThingType</a>, then remove any associated things by calling <a>UpdateThing</a> to change the thing type on any associated thing, and finally use <a>DeleteThingType</a> to delete the thing type.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteThingType</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "shape": "DeleteThingTypeRequest"
      },
      "name": "DeleteThingType",
      "output": {
        "shape": "DeleteThingTypeResponse"
      }
    },
    "DeleteTopicRule": {
      "documentation": "<p>Deletes the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/rules/{ruleName}"
      },
      "input": {
        "shape": "DeleteTopicRuleRequest"
      },
      "name": "DeleteTopicRule"
    },
    "DeleteTopicRuleDestination": {
      "documentation": "<p>Deletes a topic rule destination.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteTopicRuleDestination</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/destinations/{arn+}"
      },
      "input": {
        "shape": "DeleteTopicRuleDestinationRequest"
      },
      "name": "DeleteTopicRuleDestination",
      "output": {
        "shape": "DeleteTopicRuleDestinationResponse"
      }
    },
    "DeleteV2LoggingLevel": {
      "documentation": "<p>Deletes a logging level.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeleteV2LoggingLevel</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v2LoggingLevel"
      },
      "input": {
        "shape": "DeleteV2LoggingLevelRequest"
      },
      "name": "DeleteV2LoggingLevel"
    },
    "DeprecateThingType": {
      "documentation": "<p>Deprecates a thing type. You can not associate new things with deprecated thing type.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DeprecateThingType</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/thing-types/{thingTypeName}/deprecate"
      },
      "input": {
        "shape": "DeprecateThingTypeRequest"
      },
      "name": "DeprecateThingType",
      "output": {
        "shape": "DeprecateThingTypeResponse"
      }
    },
    "DescribeAccountAuditConfiguration": {
      "documentation": "<p>Gets information about the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeAccountAuditConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/configuration"
      },
      "input": {
        "shape": "DescribeAccountAuditConfigurationRequest"
      },
      "name": "DescribeAccountAuditConfiguration",
      "output": {
        "shape": "DescribeAccountAuditConfigurationResponse"
      }
    },
    "DescribeAuditFinding": {
      "documentation": "<p>Gets information about a single audit finding. Properties include the reason for noncompliance, the severity of the issue, and the start time when the audit that returned the finding.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeAuditFinding</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/findings/{findingId}"
      },
      "input": {
        "shape": "DescribeAuditFindingRequest"
      },
      "name": "DescribeAuditFinding",
      "output": {
        "shape": "DescribeAuditFindingResponse"
      }
    },
    "DescribeAuditMitigationActionsTask": {
      "documentation": "<p>Gets information about an audit mitigation task that is used to apply mitigation actions to a set of audit findings. Properties include the actions being applied, the audit checks to which they're being applied, the task status, and aggregated task statistics.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/mitigationactions/tasks/{taskId}"
      },
      "input": {
        "shape": "DescribeAuditMitigationActionsTaskRequest"
      },
      "name": "DescribeAuditMitigationActionsTask",
      "output": {
        "shape": "DescribeAuditMitigationActionsTaskResponse"
      }
    },
    "DescribeAuditSuppression": {
      "documentation": "<p> Gets information about a Device Defender audit suppression. </p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/suppressions/describe"
      },
      "input": {
        "shape": "DescribeAuditSuppressionRequest"
      },
      "name": "DescribeAuditSuppression",
      "output": {
        "shape": "DescribeAuditSuppressionResponse"
      }
    },
    "DescribeAuditTask": {
      "documentation": "<p>Gets information about a Device Defender audit.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeAuditTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/tasks/{taskId}"
      },
      "input": {
        "shape": "DescribeAuditTaskRequest"
      },
      "name": "DescribeAuditTask",
      "output": {
        "shape": "DescribeAuditTaskResponse"
      }
    },
    "DescribeAuthorizer": {
      "documentation": "<p>Describes an authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/authorizer/{authorizerName}"
      },
      "input": {
        "shape": "DescribeAuthorizerRequest"
      },
      "name": "DescribeAuthorizer",
      "output": {
        "shape": "DescribeAuthorizerResponse"
      }
    },
    "DescribeBillingGroup": {
      "documentation": "<p>Returns information about a billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/billing-groups/{billingGroupName}"
      },
      "input": {
        "shape": "DescribeBillingGroupRequest"
      },
      "name": "DescribeBillingGroup",
      "output": {
        "shape": "DescribeBillingGroupResponse"
      }
    },
    "DescribeCACertificate": {
      "documentation": "<p>Describes a registered CA certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeCACertificate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/cacertificate/{caCertificateId}"
      },
      "input": {
        "shape": "DescribeCACertificateRequest"
      },
      "name": "DescribeCACertificate",
      "output": {
        "shape": "DescribeCACertificateResponse"
      }
    },
    "DescribeCertificate": {
      "documentation": "<p>Gets information about the specified certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeCertificate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/certificates/{certificateId}"
      },
      "input": {
        "shape": "DescribeCertificateRequest"
      },
      "name": "DescribeCertificate",
      "output": {
        "shape": "DescribeCertificateResponse"
      }
    },
    "DescribeCustomMetric": {
      "documentation": "<p> Gets information about a Device Defender detect custom metric. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeCustomMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/custom-metric/{metricName}"
      },
      "input": {
        "shape": "DescribeCustomMetricRequest"
      },
      "name": "DescribeCustomMetric",
      "output": {
        "shape": "DescribeCustomMetricResponse"
      }
    },
    "DescribeDefaultAuthorizer": {
      "documentation": "<p>Describes the default authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeDefaultAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/default-authorizer"
      },
      "input": {
        "shape": "DescribeDefaultAuthorizerRequest"
      },
      "name": "DescribeDefaultAuthorizer",
      "output": {
        "shape": "DescribeDefaultAuthorizerResponse"
      }
    },
    "DescribeDetectMitigationActionsTask": {
      "documentation": "<p> Gets information about a Device Defender ML Detect mitigation action. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeDetectMitigationActionsTask</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/detect/mitigationactions/tasks/{taskId}"
      },
      "input": {
        "shape": "DescribeDetectMitigationActionsTaskRequest"
      },
      "name": "DescribeDetectMitigationActionsTask",
      "output": {
        "shape": "DescribeDetectMitigationActionsTaskResponse"
      }
    },
    "DescribeDimension": {
      "documentation": "<p>Provides details about a dimension that is defined in your Amazon Web Services accounts.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeDimension</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dimensions/{name}"
      },
      "input": {
        "shape": "DescribeDimensionRequest"
      },
      "name": "DescribeDimension",
      "output": {
        "shape": "DescribeDimensionResponse"
      }
    },
    "DescribeDomainConfiguration": {
      "documentation": "<p>Gets summary information about a domain configuration.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeDomainConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domainConfigurations/{domainConfigurationName}"
      },
      "input": {
        "shape": "DescribeDomainConfigurationRequest"
      },
      "name": "DescribeDomainConfiguration",
      "output": {
        "shape": "DescribeDomainConfigurationResponse"
      }
    },
    "DescribeEndpoint": {
      "documentation": "<p>Returns a unique endpoint specific to the Amazon Web Services account making the call.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeEndpoint</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/endpoint"
      },
      "input": {
        "shape": "DescribeEndpointRequest"
      },
      "name": "DescribeEndpoint",
      "output": {
        "shape": "DescribeEndpointResponse"
      }
    },
    "DescribeEventConfigurations": {
      "documentation": "<p>Describes event configurations.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeEventConfigurations</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/event-configurations"
      },
      "input": {
        "shape": "DescribeEventConfigurationsRequest"
      },
      "name": "DescribeEventConfigurations",
      "output": {
        "shape": "DescribeEventConfigurationsResponse"
      }
    },
    "DescribeFleetMetric": {
      "documentation": "<p>Gets information about the specified fleet metric.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeFleetMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/fleet-metric/{metricName}"
      },
      "input": {
        "shape": "DescribeFleetMetricRequest"
      },
      "name": "DescribeFleetMetric",
      "output": {
        "shape": "DescribeFleetMetricResponse"
      }
    },
    "DescribeIndex": {
      "documentation": "<p>Describes a search index.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeIndex</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/indices/{indexName}"
      },
      "input": {
        "shape": "DescribeIndexRequest"
      },
      "name": "DescribeIndex",
      "output": {
        "shape": "DescribeIndexResponse"
      }
    },
    "DescribeJob": {
      "documentation": "<p>Describes a job.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/jobs/{jobId}"
      },
      "input": {
        "shape": "DescribeJobRequest"
      },
      "name": "DescribeJob",
      "output": {
        "shape": "DescribeJobResponse"
      }
    },
    "DescribeJobExecution": {
      "documentation": "<p>Describes a job execution.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeJobExecution</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}/jobs/{jobId}"
      },
      "input": {
        "shape": "DescribeJobExecutionRequest"
      },
      "name": "DescribeJobExecution",
      "output": {
        "shape": "DescribeJobExecutionResponse"
      }
    },
    "DescribeJobTemplate": {
      "documentation": "<p>Returns information about a job template.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/job-templates/{jobTemplateId}"
      },
      "input": {
        "shape": "DescribeJobTemplateRequest"
      },
      "name": "DescribeJobTemplate",
      "output": {
        "shape": "DescribeJobTemplateResponse"
      }
    },
    "DescribeManagedJobTemplate": {
      "documentation": "<p>View details of a managed job template.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/managed-job-templates/{templateName}"
      },
      "input": {
        "shape": "DescribeManagedJobTemplateRequest"
      },
      "name": "DescribeManagedJobTemplate",
      "output": {
        "shape": "DescribeManagedJobTemplateResponse"
      }
    },
    "DescribeMitigationAction": {
      "documentation": "<p>Gets information about a mitigation action.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeMitigationAction</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/mitigationactions/actions/{actionName}"
      },
      "input": {
        "shape": "DescribeMitigationActionRequest"
      },
      "name": "DescribeMitigationAction",
      "output": {
        "shape": "DescribeMitigationActionResponse"
      }
    },
    "DescribeProvisioningTemplate": {
      "documentation": "<p>Returns information about a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeProvisioningTemplate</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/provisioning-templates/{templateName}"
      },
      "input": {
        "shape": "DescribeProvisioningTemplateRequest"
      },
      "name": "DescribeProvisioningTemplate",
      "output": {
        "shape": "DescribeProvisioningTemplateResponse"
      }
    },
    "DescribeProvisioningTemplateVersion": {
      "documentation": "<p>Returns information about a provisioning template version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeProvisioningTemplateVersion</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/provisioning-templates/{templateName}/versions/{versionId}"
      },
      "input": {
        "shape": "DescribeProvisioningTemplateVersionRequest"
      },
      "name": "DescribeProvisioningTemplateVersion",
      "output": {
        "shape": "DescribeProvisioningTemplateVersionResponse"
      }
    },
    "DescribeRoleAlias": {
      "documentation": "<p>Describes a role alias.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeRoleAlias</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "shape": "DescribeRoleAliasRequest"
      },
      "name": "DescribeRoleAlias",
      "output": {
        "shape": "DescribeRoleAliasResponse"
      }
    },
    "DescribeScheduledAudit": {
      "documentation": "<p>Gets information about a scheduled audit.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeScheduledAudit</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "shape": "DescribeScheduledAuditRequest"
      },
      "name": "DescribeScheduledAudit",
      "output": {
        "shape": "DescribeScheduledAuditResponse"
      }
    },
    "DescribeSecurityProfile": {
      "documentation": "<p>Gets information about a Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "shape": "DescribeSecurityProfileRequest"
      },
      "name": "DescribeSecurityProfile",
      "output": {
        "shape": "DescribeSecurityProfileResponse"
      }
    },
    "DescribeStream": {
      "documentation": "<p>Gets information about a stream.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeStream</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/streams/{streamId}"
      },
      "input": {
        "shape": "DescribeStreamRequest"
      },
      "name": "DescribeStream",
      "output": {
        "shape": "DescribeStreamResponse"
      }
    },
    "DescribeThing": {
      "documentation": "<p>Gets information about the specified thing.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeThing</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}"
      },
      "input": {
        "shape": "DescribeThingRequest"
      },
      "name": "DescribeThing",
      "output": {
        "shape": "DescribeThingResponse"
      }
    },
    "DescribeThingGroup": {
      "documentation": "<p>Describe a thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "DescribeThingGroupRequest"
      },
      "name": "DescribeThingGroup",
      "output": {
        "shape": "DescribeThingGroupResponse"
      }
    },
    "DescribeThingRegistrationTask": {
      "documentation": "<p>Describes a bulk thing provisioning task.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeThingRegistrationTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-registration-tasks/{taskId}"
      },
      "input": {
        "shape": "DescribeThingRegistrationTaskRequest"
      },
      "name": "DescribeThingRegistrationTask",
      "output": {
        "shape": "DescribeThingRegistrationTaskResponse"
      }
    },
    "DescribeThingType": {
      "documentation": "<p>Gets information about the specified thing type.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DescribeThingType</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-types/{thingTypeName}"
      },
      "input": {
        "shape": "DescribeThingTypeRequest"
      },
      "name": "DescribeThingType",
      "output": {
        "shape": "DescribeThingTypeResponse"
      }
    },
    "DetachPolicy": {
      "documentation": "<p>Detaches a policy from the specified target.</p> <note> <p>Because of the distributed nature of Amazon Web Services, it can take up to five minutes after a policy is detached before it's ready to be deleted.</p> </note> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DetachPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/target-policies/{policyName}"
      },
      "input": {
        "shape": "DetachPolicyRequest"
      },
      "name": "DetachPolicy"
    },
    "DetachPrincipalPolicy": {
      "deprecated": true,
      "documentation": "<p>Removes the specified policy from the specified certificate.</p> <p> <b>Note:</b> This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use <a>DetachPolicy</a> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DetachPrincipalPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/principal-policies/{policyName}"
      },
      "input": {
        "shape": "DetachPrincipalPolicyRequest"
      },
      "name": "DetachPrincipalPolicy"
    },
    "DetachSecurityProfile": {
      "documentation": "<p>Disassociates a Device Defender security profile from a thing group or from this account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DetachSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/security-profiles/{securityProfileName}/targets"
      },
      "input": {
        "shape": "DetachSecurityProfileRequest"
      },
      "name": "DetachSecurityProfile",
      "output": {
        "shape": "DetachSecurityProfileResponse"
      }
    },
    "DetachThingPrincipal": {
      "documentation": "<p>Detaches the specified principal from the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.</p> <note> <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p> </note> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DetachThingPrincipal</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/things/{thingName}/principals"
      },
      "input": {
        "shape": "DetachThingPrincipalRequest"
      },
      "name": "DetachThingPrincipal",
      "output": {
        "shape": "DetachThingPrincipalResponse"
      }
    },
    "DisableTopicRule": {
      "documentation": "<p>Disables the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">DisableTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/rules/{ruleName}/disable"
      },
      "input": {
        "shape": "DisableTopicRuleRequest"
      },
      "name": "DisableTopicRule"
    },
    "EnableTopicRule": {
      "documentation": "<p>Enables the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">EnableTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/rules/{ruleName}/enable"
      },
      "input": {
        "shape": "EnableTopicRuleRequest"
      },
      "name": "EnableTopicRule"
    },
    "GetBehaviorModelTrainingSummaries": {
      "documentation": "<p> Returns a Device Defender's ML Detect Security Profile training model's status. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetBehaviorModelTrainingSummaries</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/behavior-model-training/summaries"
      },
      "input": {
        "shape": "GetBehaviorModelTrainingSummariesRequest"
      },
      "name": "GetBehaviorModelTrainingSummaries",
      "output": {
        "shape": "GetBehaviorModelTrainingSummariesResponse"
      }
    },
    "GetBucketsAggregation": {
      "documentation": "<p>Aggregates on indexed data with search queries pertaining to particular fields. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetBucketsAggregation</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indices/buckets"
      },
      "input": {
        "shape": "GetBucketsAggregationRequest"
      },
      "name": "GetBucketsAggregation",
      "output": {
        "shape": "GetBucketsAggregationResponse"
      }
    },
    "GetCardinality": {
      "documentation": "<p>Returns the approximate count of unique values that match the query.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetCardinality</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indices/cardinality"
      },
      "input": {
        "shape": "GetCardinalityRequest"
      },
      "name": "GetCardinality",
      "output": {
        "shape": "GetCardinalityResponse"
      }
    },
    "GetEffectivePolicies": {
      "documentation": "<p>Gets a list of the policies that have an effect on the authorization behavior of the specified device when it connects to the IoT device gateway.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetEffectivePolicies</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/effective-policies"
      },
      "input": {
        "shape": "GetEffectivePoliciesRequest"
      },
      "name": "GetEffectivePolicies",
      "output": {
        "shape": "GetEffectivePoliciesResponse"
      }
    },
    "GetIndexingConfiguration": {
      "documentation": "<p>Gets the indexing configuration.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetIndexingConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/indexing/config"
      },
      "input": {
        "shape": "GetIndexingConfigurationRequest"
      },
      "name": "GetIndexingConfiguration",
      "output": {
        "shape": "GetIndexingConfigurationResponse"
      }
    },
    "GetJobDocument": {
      "documentation": "<p>Gets a job document.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetJobDocument</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/jobs/{jobId}/job-document"
      },
      "input": {
        "shape": "GetJobDocumentRequest"
      },
      "name": "GetJobDocument",
      "output": {
        "shape": "GetJobDocumentResponse"
      }
    },
    "GetLoggingOptions": {
      "documentation": "<p>Gets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>GetV2LoggingOptions</code> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetLoggingOptions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/loggingOptions"
      },
      "input": {
        "shape": "GetLoggingOptionsRequest"
      },
      "name": "GetLoggingOptions",
      "output": {
        "shape": "GetLoggingOptionsResponse"
      }
    },
    "GetOTAUpdate": {
      "documentation": "<p>Gets an OTA update.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetOTAUpdate</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/otaUpdates/{otaUpdateId}"
      },
      "input": {
        "shape": "GetOTAUpdateRequest"
      },
      "name": "GetOTAUpdate",
      "output": {
        "shape": "GetOTAUpdateResponse"
      }
    },
    "GetPercentiles": {
      "documentation": "<p>Groups the aggregated values that match the query into percentile groupings. The default percentile groupings are: 1,5,25,50,75,95,99, although you can specify your own when you call <code>GetPercentiles</code>. This function returns a value for each percentile group specified (or the default percentile groupings). The percentile group \"1\" contains the aggregated field value that occurs in approximately one percent of the values that match the query. The percentile group \"5\" contains the aggregated field value that occurs in approximately five percent of the values that match the query, and so on. The result is an approximation, the more values that match the query, the more accurate the percentile values.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetPercentiles</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indices/percentiles"
      },
      "input": {
        "shape": "GetPercentilesRequest"
      },
      "name": "GetPercentiles",
      "output": {
        "shape": "GetPercentilesResponse"
      }
    },
    "GetPolicy": {
      "documentation": "<p>Gets information about the specified policy with the policy document of the default version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/policies/{policyName}"
      },
      "input": {
        "shape": "GetPolicyRequest"
      },
      "name": "GetPolicy",
      "output": {
        "shape": "GetPolicyResponse"
      }
    },
    "GetPolicyVersion": {
      "documentation": "<p>Gets information about the specified policy version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetPolicyVersion</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "shape": "GetPolicyVersionRequest"
      },
      "name": "GetPolicyVersion",
      "output": {
        "shape": "GetPolicyVersionResponse"
      }
    },
    "GetRegistrationCode": {
      "documentation": "<p>Gets a registration code used to register a CA certificate with IoT.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetRegistrationCode</a> action.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/registrationcode"
      },
      "input": {
        "shape": "GetRegistrationCodeRequest"
      },
      "name": "GetRegistrationCode",
      "output": {
        "shape": "GetRegistrationCodeResponse"
      }
    },
    "GetStatistics": {
      "documentation": "<p>Returns the count, average, sum, minimum, maximum, sum of squares, variance, and standard deviation for the specified aggregated field. If the aggregation field is of type <code>String</code>, only the count statistic is returned.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetStatistics</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indices/statistics"
      },
      "input": {
        "shape": "GetStatisticsRequest"
      },
      "name": "GetStatistics",
      "output": {
        "shape": "GetStatisticsResponse"
      }
    },
    "GetTopicRule": {
      "documentation": "<p>Gets information about the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/rules/{ruleName}"
      },
      "input": {
        "shape": "GetTopicRuleRequest"
      },
      "name": "GetTopicRule",
      "output": {
        "shape": "GetTopicRuleResponse"
      }
    },
    "GetTopicRuleDestination": {
      "documentation": "<p>Gets information about a topic rule destination.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetTopicRuleDestination</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/destinations/{arn+}"
      },
      "input": {
        "shape": "GetTopicRuleDestinationRequest"
      },
      "name": "GetTopicRuleDestination",
      "output": {
        "shape": "GetTopicRuleDestinationResponse"
      }
    },
    "GetV2LoggingOptions": {
      "documentation": "<p>Gets the fine grained logging options.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">GetV2LoggingOptions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "NotConfiguredException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v2LoggingOptions"
      },
      "input": {
        "shape": "GetV2LoggingOptionsRequest"
      },
      "name": "GetV2LoggingOptions",
      "output": {
        "shape": "GetV2LoggingOptionsResponse"
      }
    },
    "ListActiveViolations": {
      "documentation": "<p>Lists the active violations for a given Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListActiveViolations</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/active-violations"
      },
      "input": {
        "shape": "ListActiveViolationsRequest"
      },
      "name": "ListActiveViolations",
      "output": {
        "shape": "ListActiveViolationsResponse"
      }
    },
    "ListAttachedPolicies": {
      "documentation": "<p>Lists the policies attached to the specified thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAttachedPolicies</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/attached-policies/{target}"
      },
      "input": {
        "shape": "ListAttachedPoliciesRequest"
      },
      "name": "ListAttachedPolicies",
      "output": {
        "shape": "ListAttachedPoliciesResponse"
      }
    },
    "ListAuditFindings": {
      "documentation": "<p>Lists the findings (results) of a Device Defender audit or of the audits performed during a specified time period. (Findings are retained for 90 days.)</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuditFindings</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/findings"
      },
      "input": {
        "shape": "ListAuditFindingsRequest"
      },
      "name": "ListAuditFindings",
      "output": {
        "shape": "ListAuditFindingsResponse"
      }
    },
    "ListAuditMitigationActionsExecutions": {
      "documentation": "<p>Gets the status of audit mitigation action tasks that were executed.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuditMitigationActionsExecutions</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/mitigationactions/executions"
      },
      "input": {
        "shape": "ListAuditMitigationActionsExecutionsRequest"
      },
      "name": "ListAuditMitigationActionsExecutions",
      "output": {
        "shape": "ListAuditMitigationActionsExecutionsResponse"
      }
    },
    "ListAuditMitigationActionsTasks": {
      "documentation": "<p>Gets a list of audit mitigation action tasks that match the specified filters.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuditMitigationActionsTasks</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/mitigationactions/tasks"
      },
      "input": {
        "shape": "ListAuditMitigationActionsTasksRequest"
      },
      "name": "ListAuditMitigationActionsTasks",
      "output": {
        "shape": "ListAuditMitigationActionsTasksResponse"
      }
    },
    "ListAuditSuppressions": {
      "documentation": "<p> Lists your Device Defender audit listings. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuditSuppressions</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/suppressions/list"
      },
      "input": {
        "shape": "ListAuditSuppressionsRequest"
      },
      "name": "ListAuditSuppressions",
      "output": {
        "shape": "ListAuditSuppressionsResponse"
      }
    },
    "ListAuditTasks": {
      "documentation": "<p>Lists the Device Defender audits that have been performed during a given time period.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuditTasks</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/tasks"
      },
      "input": {
        "shape": "ListAuditTasksRequest"
      },
      "name": "ListAuditTasks",
      "output": {
        "shape": "ListAuditTasksResponse"
      }
    },
    "ListAuthorizers": {
      "documentation": "<p>Lists the authorizers registered in your account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListAuthorizers</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/authorizers/"
      },
      "input": {
        "shape": "ListAuthorizersRequest"
      },
      "name": "ListAuthorizers",
      "output": {
        "shape": "ListAuthorizersResponse"
      }
    },
    "ListBillingGroups": {
      "documentation": "<p>Lists the billing groups you have created.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListBillingGroups</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/billing-groups"
      },
      "input": {
        "shape": "ListBillingGroupsRequest"
      },
      "name": "ListBillingGroups",
      "output": {
        "shape": "ListBillingGroupsResponse"
      }
    },
    "ListCACertificates": {
      "documentation": "<p>Lists the CA certificates registered for your Amazon Web Services account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListCACertificates</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/cacertificates"
      },
      "input": {
        "shape": "ListCACertificatesRequest"
      },
      "name": "ListCACertificates",
      "output": {
        "shape": "ListCACertificatesResponse"
      }
    },
    "ListCertificates": {
      "documentation": "<p>Lists the certificates registered in your Amazon Web Services account.</p> <p>The results are paginated with a default page size of 25. You can use the returned marker to retrieve additional results.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListCertificates</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/certificates"
      },
      "input": {
        "shape": "ListCertificatesRequest"
      },
      "name": "ListCertificates",
      "output": {
        "shape": "ListCertificatesResponse"
      }
    },
    "ListCertificatesByCA": {
      "documentation": "<p>List the device certificates signed by the specified CA certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListCertificatesByCA</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/certificates-by-ca/{caCertificateId}"
      },
      "input": {
        "shape": "ListCertificatesByCARequest"
      },
      "name": "ListCertificatesByCA",
      "output": {
        "shape": "ListCertificatesByCAResponse"
      }
    },
    "ListCustomMetrics": {
      "documentation": "<p> Lists your Device Defender detect custom metrics. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListCustomMetrics</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/custom-metrics"
      },
      "input": {
        "shape": "ListCustomMetricsRequest"
      },
      "name": "ListCustomMetrics",
      "output": {
        "shape": "ListCustomMetricsResponse"
      }
    },
    "ListDetectMitigationActionsExecutions": {
      "documentation": "<p> Lists mitigation actions executions for a Device Defender ML Detect Security Profile. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListDetectMitigationActionsExecutions</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/detect/mitigationactions/executions"
      },
      "input": {
        "shape": "ListDetectMitigationActionsExecutionsRequest"
      },
      "name": "ListDetectMitigationActionsExecutions",
      "output": {
        "shape": "ListDetectMitigationActionsExecutionsResponse"
      }
    },
    "ListDetectMitigationActionsTasks": {
      "documentation": "<p> List of Device Defender ML Detect mitigation actions tasks. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListDetectMitigationActionsTasks</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/detect/mitigationactions/tasks"
      },
      "input": {
        "shape": "ListDetectMitigationActionsTasksRequest"
      },
      "name": "ListDetectMitigationActionsTasks",
      "output": {
        "shape": "ListDetectMitigationActionsTasksResponse"
      }
    },
    "ListDimensions": {
      "documentation": "<p>List the set of dimensions that are defined for your Amazon Web Services accounts.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListDimensions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dimensions"
      },
      "input": {
        "shape": "ListDimensionsRequest"
      },
      "name": "ListDimensions",
      "output": {
        "shape": "ListDimensionsResponse"
      }
    },
    "ListDomainConfigurations": {
      "documentation": "<p>Gets a list of domain configurations for the user. This list is sorted alphabetically by domain configuration name.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListDomainConfigurations</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/domainConfigurations"
      },
      "input": {
        "shape": "ListDomainConfigurationsRequest"
      },
      "name": "ListDomainConfigurations",
      "output": {
        "shape": "ListDomainConfigurationsResponse"
      }
    },
    "ListFleetMetrics": {
      "documentation": "<p>Lists all your fleet metrics. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListFleetMetrics</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/fleet-metrics"
      },
      "input": {
        "shape": "ListFleetMetricsRequest"
      },
      "name": "ListFleetMetrics",
      "output": {
        "shape": "ListFleetMetricsResponse"
      }
    },
    "ListIndices": {
      "documentation": "<p>Lists the search indices.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListIndices</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/indices"
      },
      "input": {
        "shape": "ListIndicesRequest"
      },
      "name": "ListIndices",
      "output": {
        "shape": "ListIndicesResponse"
      }
    },
    "ListJobExecutionsForJob": {
      "documentation": "<p>Lists the job executions for a job.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListJobExecutionsForJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/jobs/{jobId}/things"
      },
      "input": {
        "shape": "ListJobExecutionsForJobRequest"
      },
      "name": "ListJobExecutionsForJob",
      "output": {
        "shape": "ListJobExecutionsForJobResponse"
      }
    },
    "ListJobExecutionsForThing": {
      "documentation": "<p>Lists the job executions for the specified thing.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListJobExecutionsForThing</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}/jobs"
      },
      "input": {
        "shape": "ListJobExecutionsForThingRequest"
      },
      "name": "ListJobExecutionsForThing",
      "output": {
        "shape": "ListJobExecutionsForThingResponse"
      }
    },
    "ListJobTemplates": {
      "documentation": "<p>Returns a list of job templates.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListJobTemplates</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/job-templates"
      },
      "input": {
        "shape": "ListJobTemplatesRequest"
      },
      "name": "ListJobTemplates",
      "output": {
        "shape": "ListJobTemplatesResponse"
      }
    },
    "ListJobs": {
      "documentation": "<p>Lists jobs.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListJobs</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/jobs"
      },
      "input": {
        "shape": "ListJobsRequest"
      },
      "name": "ListJobs",
      "output": {
        "shape": "ListJobsResponse"
      }
    },
    "ListManagedJobTemplates": {
      "documentation": "<p>Returns a list of managed job templates.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/managed-job-templates"
      },
      "input": {
        "shape": "ListManagedJobTemplatesRequest"
      },
      "name": "ListManagedJobTemplates",
      "output": {
        "shape": "ListManagedJobTemplatesResponse"
      }
    },
    "ListMetricValues": {
      "documentation": "<p>Lists the values reported for an IoT Device Defender metric (device-side metric, cloud-side metric, or custom metric) by the given thing during the specified time period.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/metric-values"
      },
      "input": {
        "shape": "ListMetricValuesRequest"
      },
      "name": "ListMetricValues",
      "output": {
        "shape": "ListMetricValuesResponse"
      }
    },
    "ListMitigationActions": {
      "documentation": "<p>Gets a list of all mitigation actions that match the specified filter criteria.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListMitigationActions</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/mitigationactions/actions"
      },
      "input": {
        "shape": "ListMitigationActionsRequest"
      },
      "name": "ListMitigationActions",
      "output": {
        "shape": "ListMitigationActionsResponse"
      }
    },
    "ListOTAUpdates": {
      "documentation": "<p>Lists OTA updates.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListOTAUpdates</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/otaUpdates"
      },
      "input": {
        "shape": "ListOTAUpdatesRequest"
      },
      "name": "ListOTAUpdates",
      "output": {
        "shape": "ListOTAUpdatesResponse"
      }
    },
    "ListOutgoingCertificates": {
      "documentation": "<p>Lists certificates that are being transferred but not yet accepted.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListOutgoingCertificates</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/certificates-out-going"
      },
      "input": {
        "shape": "ListOutgoingCertificatesRequest"
      },
      "name": "ListOutgoingCertificates",
      "output": {
        "shape": "ListOutgoingCertificatesResponse"
      }
    },
    "ListPolicies": {
      "documentation": "<p>Lists your policies.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListPolicies</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/policies"
      },
      "input": {
        "shape": "ListPoliciesRequest"
      },
      "name": "ListPolicies",
      "output": {
        "shape": "ListPoliciesResponse"
      }
    },
    "ListPolicyPrincipals": {
      "deprecated": true,
      "documentation": "<p>Lists the principals associated with the specified policy.</p> <p> <b>Note:</b> This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use <a>ListTargetsForPolicy</a> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListPolicyPrincipals</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/policy-principals"
      },
      "input": {
        "shape": "ListPolicyPrincipalsRequest"
      },
      "name": "ListPolicyPrincipals",
      "output": {
        "shape": "ListPolicyPrincipalsResponse"
      }
    },
    "ListPolicyVersions": {
      "documentation": "<p>Lists the versions of the specified policy and identifies the default version.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListPolicyVersions</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/policies/{policyName}/version"
      },
      "input": {
        "shape": "ListPolicyVersionsRequest"
      },
      "name": "ListPolicyVersions",
      "output": {
        "shape": "ListPolicyVersionsResponse"
      }
    },
    "ListPrincipalPolicies": {
      "deprecated": true,
      "documentation": "<p>Lists the policies attached to the specified principal. If you use an Cognito identity, the ID must be in <a href=\"https://docs.aws.amazon.com/cognitoidentity/latest/APIReference/API_GetCredentialsForIdentity.html#API_GetCredentialsForIdentity_RequestSyntax\">AmazonCognito Identity format</a>.</p> <p> <b>Note:</b> This action is deprecated and works as expected for backward compatibility, but we won't add enhancements. Use <a>ListAttachedPolicies</a> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListPrincipalPolicies</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/principal-policies"
      },
      "input": {
        "shape": "ListPrincipalPoliciesRequest"
      },
      "name": "ListPrincipalPolicies",
      "output": {
        "shape": "ListPrincipalPoliciesResponse"
      }
    },
    "ListPrincipalThings": {
      "documentation": "<p>Lists the things associated with the specified principal. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListPrincipalThings</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/principals/things"
      },
      "input": {
        "shape": "ListPrincipalThingsRequest"
      },
      "name": "ListPrincipalThings",
      "output": {
        "shape": "ListPrincipalThingsResponse"
      }
    },
    "ListProvisioningTemplateVersions": {
      "documentation": "<p>A list of provisioning template versions.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListProvisioningTemplateVersions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/provisioning-templates/{templateName}/versions"
      },
      "input": {
        "shape": "ListProvisioningTemplateVersionsRequest"
      },
      "name": "ListProvisioningTemplateVersions",
      "output": {
        "shape": "ListProvisioningTemplateVersionsResponse"
      }
    },
    "ListProvisioningTemplates": {
      "documentation": "<p>Lists the provisioning templates in your Amazon Web Services account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListProvisioningTemplates</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/provisioning-templates"
      },
      "input": {
        "shape": "ListProvisioningTemplatesRequest"
      },
      "name": "ListProvisioningTemplates",
      "output": {
        "shape": "ListProvisioningTemplatesResponse"
      }
    },
    "ListRoleAliases": {
      "documentation": "<p>Lists the role aliases registered in your account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListRoleAliases</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/role-aliases"
      },
      "input": {
        "shape": "ListRoleAliasesRequest"
      },
      "name": "ListRoleAliases",
      "output": {
        "shape": "ListRoleAliasesResponse"
      }
    },
    "ListScheduledAudits": {
      "documentation": "<p>Lists all of your scheduled audits.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListScheduledAudits</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/audit/scheduledaudits"
      },
      "input": {
        "shape": "ListScheduledAuditsRequest"
      },
      "name": "ListScheduledAudits",
      "output": {
        "shape": "ListScheduledAuditsResponse"
      }
    },
    "ListSecurityProfiles": {
      "documentation": "<p>Lists the Device Defender security profiles you've created. You can filter security profiles by dimension or custom metric.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListSecurityProfiles</a> action.</p> <note> <p> <code>dimensionName</code> and <code>metricName</code> cannot be used in the same request.</p> </note>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/security-profiles"
      },
      "input": {
        "shape": "ListSecurityProfilesRequest"
      },
      "name": "ListSecurityProfiles",
      "output": {
        "shape": "ListSecurityProfilesResponse"
      }
    },
    "ListSecurityProfilesForTarget": {
      "documentation": "<p>Lists the Device Defender security profiles attached to a target (thing group).</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListSecurityProfilesForTarget</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/security-profiles-for-target"
      },
      "input": {
        "shape": "ListSecurityProfilesForTargetRequest"
      },
      "name": "ListSecurityProfilesForTarget",
      "output": {
        "shape": "ListSecurityProfilesForTargetResponse"
      }
    },
    "ListStreams": {
      "documentation": "<p>Lists all of the streams in your Amazon Web Services account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListStreams</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/streams"
      },
      "input": {
        "shape": "ListStreamsRequest"
      },
      "name": "ListStreams",
      "output": {
        "shape": "ListStreamsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags (metadata) you have assigned to the resource.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListTagsForResource</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTargetsForPolicy": {
      "documentation": "<p>List targets for the specified policy.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListTargetsForPolicy</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/policy-targets/{policyName}"
      },
      "input": {
        "shape": "ListTargetsForPolicyRequest"
      },
      "name": "ListTargetsForPolicy",
      "output": {
        "shape": "ListTargetsForPolicyResponse"
      }
    },
    "ListTargetsForSecurityProfile": {
      "documentation": "<p>Lists the targets (thing groups) associated with a given Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListTargetsForSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/security-profiles/{securityProfileName}/targets"
      },
      "input": {
        "shape": "ListTargetsForSecurityProfileRequest"
      },
      "name": "ListTargetsForSecurityProfile",
      "output": {
        "shape": "ListTargetsForSecurityProfileResponse"
      }
    },
    "ListThingGroups": {
      "documentation": "<p>List the thing groups in your account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingGroups</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-groups"
      },
      "input": {
        "shape": "ListThingGroupsRequest"
      },
      "name": "ListThingGroups",
      "output": {
        "shape": "ListThingGroupsResponse"
      }
    },
    "ListThingGroupsForThing": {
      "documentation": "<p>List the thing groups to which the specified thing belongs.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingGroupsForThing</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}/thing-groups"
      },
      "input": {
        "shape": "ListThingGroupsForThingRequest"
      },
      "name": "ListThingGroupsForThing",
      "output": {
        "shape": "ListThingGroupsForThingResponse"
      }
    },
    "ListThingPrincipals": {
      "documentation": "<p>Lists the principals associated with the specified thing. A principal can be X.509 certificates, IAM users, groups, and roles, Amazon Cognito identities or federated identities.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingPrincipals</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things/{thingName}/principals"
      },
      "input": {
        "shape": "ListThingPrincipalsRequest"
      },
      "name": "ListThingPrincipals",
      "output": {
        "shape": "ListThingPrincipalsResponse"
      }
    },
    "ListThingRegistrationTaskReports": {
      "documentation": "<p>Information about the thing registration tasks.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-registration-tasks/{taskId}/reports"
      },
      "input": {
        "shape": "ListThingRegistrationTaskReportsRequest"
      },
      "name": "ListThingRegistrationTaskReports",
      "output": {
        "shape": "ListThingRegistrationTaskReportsResponse"
      }
    },
    "ListThingRegistrationTasks": {
      "documentation": "<p>List bulk thing provisioning tasks.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingRegistrationTasks</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-registration-tasks"
      },
      "input": {
        "shape": "ListThingRegistrationTasksRequest"
      },
      "name": "ListThingRegistrationTasks",
      "output": {
        "shape": "ListThingRegistrationTasksResponse"
      }
    },
    "ListThingTypes": {
      "documentation": "<p>Lists the existing thing types.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingTypes</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-types"
      },
      "input": {
        "shape": "ListThingTypesRequest"
      },
      "name": "ListThingTypes",
      "output": {
        "shape": "ListThingTypesResponse"
      }
    },
    "ListThings": {
      "documentation": "<p>Lists your things. Use the <b>attributeName</b> and <b>attributeValue</b> parameters to filter your things. For example, calling <code>ListThings</code> with attributeName=Color and attributeValue=Red retrieves all things in the registry that contain an attribute <b>Color</b> with the value <b>Red</b>. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThings</a> action.</p> <note> <p>You will not be charged for calling this API if an <code>Access denied</code> error is returned. You will also not be charged if no attributes or pagination token was provided in request and no pagination token and no results were returned.</p> </note>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/things"
      },
      "input": {
        "shape": "ListThingsRequest"
      },
      "name": "ListThings",
      "output": {
        "shape": "ListThingsResponse"
      }
    },
    "ListThingsInBillingGroup": {
      "documentation": "<p>Lists the things you have added to the given billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingsInBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/billing-groups/{billingGroupName}/things"
      },
      "input": {
        "shape": "ListThingsInBillingGroupRequest"
      },
      "name": "ListThingsInBillingGroup",
      "output": {
        "shape": "ListThingsInBillingGroupResponse"
      }
    },
    "ListThingsInThingGroup": {
      "documentation": "<p>Lists the things in the specified group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListThingsInThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/thing-groups/{thingGroupName}/things"
      },
      "input": {
        "shape": "ListThingsInThingGroupRequest"
      },
      "name": "ListThingsInThingGroup",
      "output": {
        "shape": "ListThingsInThingGroupResponse"
      }
    },
    "ListTopicRuleDestinations": {
      "documentation": "<p>Lists all the topic rule destinations in your Amazon Web Services account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListTopicRuleDestinations</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/destinations"
      },
      "input": {
        "shape": "ListTopicRuleDestinationsRequest"
      },
      "name": "ListTopicRuleDestinations",
      "output": {
        "shape": "ListTopicRuleDestinationsResponse"
      }
    },
    "ListTopicRules": {
      "documentation": "<p>Lists the rules for the specific topic.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListTopicRules</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/rules"
      },
      "input": {
        "shape": "ListTopicRulesRequest"
      },
      "name": "ListTopicRules",
      "output": {
        "shape": "ListTopicRulesResponse"
      }
    },
    "ListV2LoggingLevels": {
      "documentation": "<p>Lists logging levels.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListV2LoggingLevels</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "NotConfiguredException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v2LoggingLevel"
      },
      "input": {
        "shape": "ListV2LoggingLevelsRequest"
      },
      "name": "ListV2LoggingLevels",
      "output": {
        "shape": "ListV2LoggingLevelsResponse"
      }
    },
    "ListViolationEvents": {
      "documentation": "<p>Lists the Device Defender security profile violations discovered during the given time period. You can use filters to limit the results to those alerts issued for a particular security profile, behavior, or thing (device).</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ListViolationEvents</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/violation-events"
      },
      "input": {
        "shape": "ListViolationEventsRequest"
      },
      "name": "ListViolationEvents",
      "output": {
        "shape": "ListViolationEventsResponse"
      }
    },
    "PutVerificationStateOnViolation": {
      "documentation": "<p>Set a verification state and provide a description of that verification state on a violation (detect alarm).</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/violations/verification-state/{violationId}"
      },
      "input": {
        "shape": "PutVerificationStateOnViolationRequest"
      },
      "name": "PutVerificationStateOnViolation",
      "output": {
        "shape": "PutVerificationStateOnViolationResponse"
      }
    },
    "RegisterCACertificate": {
      "documentation": "<p>Registers a CA certificate with Amazon Web Services IoT Core. There is no limit to the number of CA certificates you can register in your Amazon Web Services account. You can register up to 10 CA certificates with the same <code>CA subject field</code> per Amazon Web Services account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RegisterCACertificate</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "RegistrationCodeValidationException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CertificateValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cacertificate"
      },
      "input": {
        "shape": "RegisterCACertificateRequest"
      },
      "name": "RegisterCACertificate",
      "output": {
        "shape": "RegisterCACertificateResponse"
      }
    },
    "RegisterCertificate": {
      "documentation": "<p>Registers a device certificate with IoT in the same <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode\">certificate mode</a> as the signing CA. If you have more than one CA certificate that has the same subject field, you must specify the CA certificate that was used to sign the device certificate being registered.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RegisterCertificate</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CertificateValidationException"
        },
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "CertificateConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/certificate/register"
      },
      "input": {
        "shape": "RegisterCertificateRequest"
      },
      "name": "RegisterCertificate",
      "output": {
        "shape": "RegisterCertificateResponse"
      }
    },
    "RegisterCertificateWithoutCA": {
      "documentation": "<p>Register a certificate that does not have a certificate authority (CA). For supported certificates, consult <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/x509-client-certs.html#x509-cert-algorithms\"> Certificate signing algorithms supported by IoT</a>. </p>",
      "errors": [
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "CertificateValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/certificate/register-no-ca"
      },
      "input": {
        "shape": "RegisterCertificateWithoutCARequest"
      },
      "name": "RegisterCertificateWithoutCA",
      "output": {
        "shape": "RegisterCertificateWithoutCAResponse"
      }
    },
    "RegisterThing": {
      "documentation": "<p>Provisions a thing in the device registry. RegisterThing calls other IoT control plane APIs. These calls might exceed your account level <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_iot\"> IoT Throttling Limits</a> and cause throttle errors. Please contact <a href=\"https://console.aws.amazon.com/support/home\">Amazon Web Services Customer Support</a> to raise your throttling limits if necessary.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RegisterThing</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        },
        {
          "shape": "ResourceRegistrationFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/things"
      },
      "input": {
        "shape": "RegisterThingRequest"
      },
      "name": "RegisterThing",
      "output": {
        "shape": "RegisterThingResponse"
      }
    },
    "RejectCertificateTransfer": {
      "documentation": "<p>Rejects a pending certificate transfer. After IoT rejects a certificate transfer, the certificate status changes from <b>PENDING_TRANSFER</b> to <b>INACTIVE</b>.</p> <p>To check for pending certificate transfers, call <a>ListCertificates</a> to enumerate your certificates.</p> <p>This operation can only be called by the transfer destination. After it is called, the certificate will be returned to the source's account in the INACTIVE state.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RejectCertificateTransfer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TransferAlreadyCompletedException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/reject-certificate-transfer/{certificateId}"
      },
      "input": {
        "shape": "RejectCertificateTransferRequest"
      },
      "name": "RejectCertificateTransfer"
    },
    "RemoveThingFromBillingGroup": {
      "documentation": "<p>Removes the given thing from the billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RemoveThingFromBillingGroup</a> action.</p> <note> <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p> </note>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/billing-groups/removeThingFromBillingGroup"
      },
      "input": {
        "shape": "RemoveThingFromBillingGroupRequest"
      },
      "name": "RemoveThingFromBillingGroup",
      "output": {
        "shape": "RemoveThingFromBillingGroupResponse"
      }
    },
    "RemoveThingFromThingGroup": {
      "documentation": "<p>Remove the specified thing from the specified group.</p> <p>You must specify either a <code>thingGroupArn</code> or a <code>thingGroupName</code> to identify the thing group and either a <code>thingArn</code> or a <code>thingName</code> to identify the thing to remove from the thing group. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">RemoveThingFromThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/thing-groups/removeThingFromThingGroup"
      },
      "input": {
        "shape": "RemoveThingFromThingGroupRequest"
      },
      "name": "RemoveThingFromThingGroup",
      "output": {
        "shape": "RemoveThingFromThingGroupResponse"
      }
    },
    "ReplaceTopicRule": {
      "documentation": "<p>Replaces the rule. You must specify all parameters for the new rule. Creating rules is an administrator-level action. Any user who has permission to create rules will be able to access data processed by the rule.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ReplaceTopicRule</a> action.</p>",
      "errors": [
        {
          "shape": "SqlParseException"
        },
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/rules/{ruleName}"
      },
      "input": {
        "shape": "ReplaceTopicRuleRequest"
      },
      "name": "ReplaceTopicRule"
    },
    "SearchIndex": {
      "documentation": "<p>The query search index.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SearchIndex</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indices/search"
      },
      "input": {
        "shape": "SearchIndexRequest"
      },
      "name": "SearchIndex",
      "output": {
        "shape": "SearchIndexResponse"
      }
    },
    "SetDefaultAuthorizer": {
      "documentation": "<p>Sets the default authorizer. This will be used if a websocket connection is made without specifying an authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SetDefaultAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/default-authorizer"
      },
      "input": {
        "shape": "SetDefaultAuthorizerRequest"
      },
      "name": "SetDefaultAuthorizer",
      "output": {
        "shape": "SetDefaultAuthorizerResponse"
      }
    },
    "SetDefaultPolicyVersion": {
      "documentation": "<p>Sets the specified version of the specified policy as the policy's default (operative) version. This action affects all certificates to which the policy is attached. To list the principals the policy is attached to, use the <a>ListPrincipalPolicies</a> action.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SetDefaultPolicyVersion</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/policies/{policyName}/version/{policyVersionId}"
      },
      "input": {
        "shape": "SetDefaultPolicyVersionRequest"
      },
      "name": "SetDefaultPolicyVersion"
    },
    "SetLoggingOptions": {
      "documentation": "<p>Sets the logging options.</p> <p>NOTE: use of this command is not recommended. Use <code>SetV2LoggingOptions</code> instead.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SetLoggingOptions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/loggingOptions"
      },
      "input": {
        "shape": "SetLoggingOptionsRequest"
      },
      "name": "SetLoggingOptions"
    },
    "SetV2LoggingLevel": {
      "documentation": "<p>Sets the logging level.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SetV2LoggingLevel</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "NotConfiguredException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v2LoggingLevel"
      },
      "input": {
        "shape": "SetV2LoggingLevelRequest"
      },
      "name": "SetV2LoggingLevel"
    },
    "SetV2LoggingOptions": {
      "documentation": "<p>Sets the logging options for the V2 logging service.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">SetV2LoggingOptions</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v2LoggingOptions"
      },
      "input": {
        "shape": "SetV2LoggingOptionsRequest"
      },
      "name": "SetV2LoggingOptions"
    },
    "StartAuditMitigationActionsTask": {
      "documentation": "<p>Starts a task that applies a set of mitigation actions to the specified target.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StartAuditMitigationActionsTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "TaskAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/mitigationactions/tasks/{taskId}"
      },
      "input": {
        "shape": "StartAuditMitigationActionsTaskRequest"
      },
      "name": "StartAuditMitigationActionsTask",
      "output": {
        "shape": "StartAuditMitigationActionsTaskResponse"
      }
    },
    "StartDetectMitigationActionsTask": {
      "documentation": "<p> Starts a Device Defender ML Detect mitigation actions task. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StartDetectMitigationActionsTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "TaskAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/detect/mitigationactions/tasks/{taskId}"
      },
      "input": {
        "shape": "StartDetectMitigationActionsTaskRequest"
      },
      "name": "StartDetectMitigationActionsTask",
      "output": {
        "shape": "StartDetectMitigationActionsTaskResponse"
      }
    },
    "StartOnDemandAuditTask": {
      "documentation": "<p>Starts an on-demand Device Defender audit.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StartOnDemandAuditTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/audit/tasks"
      },
      "input": {
        "shape": "StartOnDemandAuditTaskRequest"
      },
      "name": "StartOnDemandAuditTask",
      "output": {
        "shape": "StartOnDemandAuditTaskResponse"
      }
    },
    "StartThingRegistrationTask": {
      "documentation": "<p>Creates a bulk thing provisioning task.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StartThingRegistrationTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/thing-registration-tasks"
      },
      "input": {
        "shape": "StartThingRegistrationTaskRequest"
      },
      "name": "StartThingRegistrationTask",
      "output": {
        "shape": "StartThingRegistrationTaskResponse"
      }
    },
    "StopThingRegistrationTask": {
      "documentation": "<p>Cancels a bulk thing provisioning task.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">StopThingRegistrationTask</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/thing-registration-tasks/{taskId}/cancel"
      },
      "input": {
        "shape": "StopThingRegistrationTaskRequest"
      },
      "name": "StopThingRegistrationTask",
      "output": {
        "shape": "StopThingRegistrationTaskResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds to or modifies the tags of the given resource. Tags are metadata which can be used to manage a resource.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">TagResource</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "TestAuthorization": {
      "documentation": "<p>Tests if a specified principal is authorized to perform an IoT action on a specified resource. Use this to test and debug the authorization behavior of devices that connect to the IoT device gateway.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">TestAuthorization</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/test-authorization"
      },
      "input": {
        "shape": "TestAuthorizationRequest"
      },
      "name": "TestAuthorization",
      "output": {
        "shape": "TestAuthorizationResponse"
      }
    },
    "TestInvokeAuthorizer": {
      "documentation": "<p>Tests a custom authorization behavior by invoking a specified custom authorizer. Use this to test and debug the custom authorization behavior of devices that connect to the IoT device gateway.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">TestInvokeAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidResponseException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/authorizer/{authorizerName}/test"
      },
      "input": {
        "shape": "TestInvokeAuthorizerRequest"
      },
      "name": "TestInvokeAuthorizer",
      "output": {
        "shape": "TestInvokeAuthorizerResponse"
      }
    },
    "TransferCertificate": {
      "documentation": "<p>Transfers the specified certificate to the specified Amazon Web Services account.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">TransferCertificate</a> action.</p> <p>You can cancel the transfer until it is acknowledged by the recipient.</p> <p>No notification is sent to the transfer destination's account. It is up to the caller to notify the transfer target.</p> <p>The certificate being transferred must not be in the ACTIVE state. You can use the <a>UpdateCertificate</a> action to deactivate it.</p> <p>The certificate must not have any policies attached to it. You can use the <a>DetachPolicy</a> action to detach them.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "TransferConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/transfer-certificate/{certificateId}"
      },
      "input": {
        "shape": "TransferCertificateRequest"
      },
      "name": "TransferCertificate",
      "output": {
        "shape": "TransferCertificateResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes the given tags (metadata) from the resource.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UntagResource</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/untag"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAccountAuditConfiguration": {
      "documentation": "<p>Configures or reconfigures the Device Defender audit settings for this account. Settings include how audit notifications are sent and which audit checks are enabled or disabled.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateAccountAuditConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/audit/configuration"
      },
      "input": {
        "shape": "UpdateAccountAuditConfigurationRequest"
      },
      "name": "UpdateAccountAuditConfiguration",
      "output": {
        "shape": "UpdateAccountAuditConfigurationResponse"
      }
    },
    "UpdateAuditSuppression": {
      "documentation": "<p> Updates a Device Defender audit suppression. </p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/audit/suppressions/update"
      },
      "input": {
        "shape": "UpdateAuditSuppressionRequest"
      },
      "name": "UpdateAuditSuppression",
      "output": {
        "shape": "UpdateAuditSuppressionResponse"
      }
    },
    "UpdateAuthorizer": {
      "documentation": "<p>Updates an authorizer.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateAuthorizer</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/authorizer/{authorizerName}"
      },
      "input": {
        "shape": "UpdateAuthorizerRequest"
      },
      "name": "UpdateAuthorizer",
      "output": {
        "shape": "UpdateAuthorizerResponse"
      }
    },
    "UpdateBillingGroup": {
      "documentation": "<p>Updates information about the billing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateBillingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/billing-groups/{billingGroupName}"
      },
      "input": {
        "shape": "UpdateBillingGroupRequest"
      },
      "name": "UpdateBillingGroup",
      "output": {
        "shape": "UpdateBillingGroupResponse"
      }
    },
    "UpdateCACertificate": {
      "documentation": "<p>Updates a registered CA certificate.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateCACertificate</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/cacertificate/{caCertificateId}"
      },
      "input": {
        "shape": "UpdateCACertificateRequest"
      },
      "name": "UpdateCACertificate"
    },
    "UpdateCertificate": {
      "documentation": "<p>Updates the status of the specified certificate. This operation is idempotent.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateCertificate</a> action.</p> <p>Certificates must be in the ACTIVE state to authenticate devices that use a certificate to connect to IoT.</p> <p>Within a few minutes of updating a certificate from the ACTIVE state to any other state, IoT disconnects all devices that used that certificate to connect. Devices cannot use a certificate that is not in the ACTIVE state to reconnect.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "CertificateStateException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/certificates/{certificateId}"
      },
      "input": {
        "shape": "UpdateCertificateRequest"
      },
      "name": "UpdateCertificate"
    },
    "UpdateCustomMetric": {
      "documentation": "<p>Updates a Device Defender detect custom metric. </p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateCustomMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/custom-metric/{metricName}"
      },
      "input": {
        "shape": "UpdateCustomMetricRequest"
      },
      "name": "UpdateCustomMetric",
      "output": {
        "shape": "UpdateCustomMetricResponse"
      }
    },
    "UpdateDimension": {
      "documentation": "<p>Updates the definition for a dimension. You cannot change the type of a dimension after it is created (you can delete it and recreate it).</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateDimension</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/dimensions/{name}"
      },
      "input": {
        "shape": "UpdateDimensionRequest"
      },
      "name": "UpdateDimension",
      "output": {
        "shape": "UpdateDimensionResponse"
      }
    },
    "UpdateDomainConfiguration": {
      "documentation": "<p>Updates values stored in the domain configuration. Domain configurations for default endpoints can't be updated.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateDomainConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "CertificateValidationException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domainConfigurations/{domainConfigurationName}"
      },
      "input": {
        "shape": "UpdateDomainConfigurationRequest"
      },
      "name": "UpdateDomainConfiguration",
      "output": {
        "shape": "UpdateDomainConfigurationResponse"
      }
    },
    "UpdateDynamicThingGroup": {
      "documentation": "<p>Updates a dynamic thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateDynamicThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/dynamic-thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "UpdateDynamicThingGroupRequest"
      },
      "name": "UpdateDynamicThingGroup",
      "output": {
        "shape": "UpdateDynamicThingGroupResponse"
      }
    },
    "UpdateEventConfigurations": {
      "documentation": "<p>Updates the event configurations.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateEventConfigurations</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/event-configurations"
      },
      "input": {
        "shape": "UpdateEventConfigurationsRequest"
      },
      "name": "UpdateEventConfigurations",
      "output": {
        "shape": "UpdateEventConfigurationsResponse"
      }
    },
    "UpdateFleetMetric": {
      "documentation": "<p>Updates the data for a fleet metric.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateFleetMetric</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidQueryException"
        },
        {
          "shape": "InvalidAggregationException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "IndexNotReadyException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/fleet-metric/{metricName}"
      },
      "input": {
        "shape": "UpdateFleetMetricRequest"
      },
      "name": "UpdateFleetMetric"
    },
    "UpdateIndexingConfiguration": {
      "documentation": "<p>Updates the search configuration.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateIndexingConfiguration</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/indexing/config"
      },
      "input": {
        "shape": "UpdateIndexingConfigurationRequest"
      },
      "name": "UpdateIndexingConfiguration",
      "output": {
        "shape": "UpdateIndexingConfigurationResponse"
      }
    },
    "UpdateJob": {
      "documentation": "<p>Updates supported fields of the specified job.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateJob</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/jobs/{jobId}"
      },
      "input": {
        "shape": "UpdateJobRequest"
      },
      "name": "UpdateJob"
    },
    "UpdateMitigationAction": {
      "documentation": "<p>Updates the definition for the specified mitigation action.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateMitigationAction</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/mitigationactions/actions/{actionName}"
      },
      "input": {
        "shape": "UpdateMitigationActionRequest"
      },
      "name": "UpdateMitigationAction",
      "output": {
        "shape": "UpdateMitigationActionResponse"
      }
    },
    "UpdateProvisioningTemplate": {
      "documentation": "<p>Updates a provisioning template.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateProvisioningTemplate</a> action.</p>",
      "errors": [
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/provisioning-templates/{templateName}"
      },
      "input": {
        "shape": "UpdateProvisioningTemplateRequest"
      },
      "name": "UpdateProvisioningTemplate",
      "output": {
        "shape": "UpdateProvisioningTemplateResponse"
      }
    },
    "UpdateRoleAlias": {
      "documentation": "<p>Updates a role alias.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateRoleAlias</a> action.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/role-aliases/{roleAlias}"
      },
      "input": {
        "shape": "UpdateRoleAliasRequest"
      },
      "name": "UpdateRoleAlias",
      "output": {
        "shape": "UpdateRoleAliasResponse"
      }
    },
    "UpdateScheduledAudit": {
      "documentation": "<p>Updates a scheduled audit, including which checks are performed and how often the audit takes place.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateScheduledAudit</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/audit/scheduledaudits/{scheduledAuditName}"
      },
      "input": {
        "shape": "UpdateScheduledAuditRequest"
      },
      "name": "UpdateScheduledAudit",
      "output": {
        "shape": "UpdateScheduledAuditResponse"
      }
    },
    "UpdateSecurityProfile": {
      "documentation": "<p>Updates a Device Defender security profile.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateSecurityProfile</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/security-profiles/{securityProfileName}"
      },
      "input": {
        "shape": "UpdateSecurityProfileRequest"
      },
      "name": "UpdateSecurityProfile",
      "output": {
        "shape": "UpdateSecurityProfileResponse"
      }
    },
    "UpdateStream": {
      "documentation": "<p>Updates an existing stream. The stream version will be incremented by one.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateStream</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/streams/{streamId}"
      },
      "input": {
        "shape": "UpdateStreamRequest"
      },
      "name": "UpdateStream",
      "output": {
        "shape": "UpdateStreamResponse"
      }
    },
    "UpdateThing": {
      "documentation": "<p>Updates the data for a thing.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateThing</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/things/{thingName}"
      },
      "input": {
        "shape": "UpdateThingRequest"
      },
      "name": "UpdateThing",
      "output": {
        "shape": "UpdateThingResponse"
      }
    },
    "UpdateThingGroup": {
      "documentation": "<p>Update a thing group.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateThingGroup</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "VersionConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/thing-groups/{thingGroupName}"
      },
      "input": {
        "shape": "UpdateThingGroupRequest"
      },
      "name": "UpdateThingGroup",
      "output": {
        "shape": "UpdateThingGroupResponse"
      }
    },
    "UpdateThingGroupsForThing": {
      "documentation": "<p>Updates the groups to which the thing belongs.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateThingGroupsForThing</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/thing-groups/updateThingGroupsForThing"
      },
      "input": {
        "shape": "UpdateThingGroupsForThingRequest"
      },
      "name": "UpdateThingGroupsForThing",
      "output": {
        "shape": "UpdateThingGroupsForThingResponse"
      }
    },
    "UpdateTopicRuleDestination": {
      "documentation": "<p>Updates a topic rule destination. You use this to change the status, endpoint URL, or confirmation URL of the destination.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">UpdateTopicRuleDestination</a> action.</p>",
      "errors": [
        {
          "shape": "InternalException"
        },
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ConflictingResourceUpdateException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/destinations"
      },
      "input": {
        "shape": "UpdateTopicRuleDestinationRequest"
      },
      "name": "UpdateTopicRuleDestination",
      "output": {
        "shape": "UpdateTopicRuleDestinationResponse"
      }
    },
    "ValidateSecurityProfileBehaviors": {
      "documentation": "<p>Validates a Device Defender security profile behaviors specification.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">ValidateSecurityProfileBehaviors</a> action.</p>",
      "errors": [
        {
          "shape": "InvalidRequestException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/security-profile-behaviors/validate"
      },
      "input": {
        "shape": "ValidateSecurityProfileBehaviorsRequest"
      },
      "name": "ValidateSecurityProfileBehaviors",
      "output": {
        "shape": "ValidateSecurityProfileBehaviorsResponse"
      }
    }
  },
  "shapes": {
    "AbortAction": {
      "enum": [
        "CANCEL"
      ],
      "type": "string"
    },
    "AbortConfig": {
      "documentation": "<p>The criteria that determine when and how a job abort takes place.</p>",
      "members": {
        "criteriaList": {
          "documentation": "<p>The list of criteria that determine when and how to abort the job.</p>",
          "shape": "AbortCriteriaList"
        }
      },
      "required": [
        "criteriaList"
      ],
      "type": "structure"
    },
    "AbortCriteria": {
      "documentation": "<p>The criteria that determine when and how a job abort takes place.</p>",
      "members": {
        "action": {
          "documentation": "<p>The type of job action to take to initiate the job abort.</p>",
          "shape": "AbortAction"
        },
        "failureType": {
          "documentation": "<p>The type of job execution failures that can initiate a job abort.</p>",
          "shape": "JobExecutionFailureType"
        },
        "minNumberOfExecutedThings": {
          "documentation": "<p>The minimum number of things which must receive job execution notifications before the job can be aborted.</p>",
          "shape": "MinimumNumberOfExecutedThings"
        },
        "thresholdPercentage": {
          "documentation": "<p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p> <p>Amazon Web Services IoT Core supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>",
          "shape": "AbortThresholdPercentage"
        }
      },
      "required": [
        "failureType",
        "action",
        "thresholdPercentage",
        "minNumberOfExecutedThings"
      ],
      "type": "structure"
    },
    "AbortCriteriaList": {
      "member": {
        "shape": "AbortCriteria"
      },
      "min": 1,
      "type": "list"
    },
    "AbortThresholdPercentage": {
      "max": 100,
      "type": "double"
    },
    "AcceptCertificateTransferRequest": {
      "documentation": "<p>The input for the AcceptCertificateTransfer operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        },
        "setAsActive": {
          "documentation": "<p>Specifies whether the certificate is active.</p>",
          "location": "querystring",
          "locationName": "setAsActive",
          "shape": "SetAsActive"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "AcmCertificateArn": {
      "max": 2048,
      "min": 1,
      "pattern": "arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\\d{1}:\\d{12}:certificate/[a-zA-Z0-9/-]+",
      "type": "string"
    },
    "Action": {
      "documentation": "<p>Describes the actions associated with a rule.</p>",
      "members": {
        "cloudwatchAlarm": {
          "documentation": "<p>Change the state of a CloudWatch alarm.</p>",
          "shape": "CloudwatchAlarmAction"
        },
        "cloudwatchLogs": {
          "documentation": "<p>Send data to CloudWatch Logs.</p>",
          "shape": "CloudwatchLogsAction"
        },
        "cloudwatchMetric": {
          "documentation": "<p>Capture a CloudWatch metric.</p>",
          "shape": "CloudwatchMetricAction"
        },
        "dynamoDB": {
          "documentation": "<p>Write to a DynamoDB table.</p>",
          "shape": "DynamoDBAction"
        },
        "dynamoDBv2": {
          "documentation": "<p>Write to a DynamoDB table. This is a new version of the DynamoDB action. It allows you to write each attribute in an MQTT message payload into a separate DynamoDB column.</p>",
          "shape": "DynamoDBv2Action"
        },
        "elasticsearch": {
          "documentation": "<p>Write data to an Amazon OpenSearch Service domain.</p> <note> <p>The <code>Elasticsearch</code> action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the <code>OpenSearch</code> rule action instead. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html\">OpenSearchAction</a>.</p> </note>",
          "shape": "ElasticsearchAction"
        },
        "firehose": {
          "documentation": "<p>Write to an Amazon Kinesis Firehose stream.</p>",
          "shape": "FirehoseAction"
        },
        "http": {
          "documentation": "<p>Send data to an HTTPS endpoint.</p>",
          "shape": "HttpAction"
        },
        "iotAnalytics": {
          "documentation": "<p>Sends message data to an IoT Analytics channel.</p>",
          "shape": "IotAnalyticsAction"
        },
        "iotEvents": {
          "documentation": "<p>Sends an input to an IoT Events detector.</p>",
          "shape": "IotEventsAction"
        },
        "iotSiteWise": {
          "documentation": "<p>Sends data from the MQTT message that triggered the rule to IoT SiteWise asset properties.</p>",
          "shape": "IotSiteWiseAction"
        },
        "kafka": {
          "documentation": "<p>Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.</p>",
          "shape": "KafkaAction"
        },
        "kinesis": {
          "documentation": "<p>Write data to an Amazon Kinesis stream.</p>",
          "shape": "KinesisAction"
        },
        "lambda": {
          "documentation": "<p>Invoke a Lambda function.</p>",
          "shape": "LambdaAction"
        },
        "location": {
          "documentation": "<p>The Amazon Location Service rule action sends device location updates from an MQTT message to an Amazon Location tracker resource.</p>",
          "shape": "LocationAction"
        },
        "openSearch": {
          "documentation": "<p>Write data to an Amazon OpenSearch Service domain.</p>",
          "shape": "OpenSearchAction"
        },
        "republish": {
          "documentation": "<p>Publish to another MQTT topic.</p>",
          "shape": "RepublishAction"
        },
        "s3": {
          "documentation": "<p>Write to an Amazon S3 bucket.</p>",
          "shape": "S3Action"
        },
        "salesforce": {
          "documentation": "<p>Send a message to a Salesforce IoT Cloud Input Stream.</p>",
          "shape": "SalesforceAction"
        },
        "sns": {
          "documentation": "<p>Publish to an Amazon SNS topic.</p>",
          "shape": "SnsAction"
        },
        "sqs": {
          "documentation": "<p>Publish to an Amazon SQS queue.</p>",
          "shape": "SqsAction"
        },
        "stepFunctions": {
          "documentation": "<p>Starts execution of a Step Functions state machine.</p>",
          "shape": "StepFunctionsAction"
        },
        "timestream": {
          "documentation": "<p>The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html\">Timestream</a> topic rule action documentation.</p>",
          "shape": "TimestreamAction"
        }
      },
      "type": "structure"
    },
    "ActionList": {
      "max": 10,
      "member": {
        "shape": "Action"
      },
      "min": 0,
      "type": "list"
    },
    "ActionType": {
      "enum": [
        "PUBLISH",
        "SUBSCRIBE",
        "RECEIVE",
        "CONNECT"
      ],
      "type": "string"
    },
    "ActiveViolation": {
      "documentation": "<p>Information about an active Device Defender security profile behavior violation.</p>",
      "members": {
        "behavior": {
          "documentation": "<p>The behavior that is being violated.</p>",
          "shape": "Behavior"
        },
        "lastViolationTime": {
          "documentation": "<p>The time the most recent violation occurred.</p>",
          "shape": "Timestamp"
        },
        "lastViolationValue": {
          "documentation": "<p>The value of the metric (the measurement) that caused the most recent violation.</p>",
          "shape": "MetricValue"
        },
        "securityProfileName": {
          "documentation": "<p>The security profile with the behavior is in violation.</p>",
          "shape": "SecurityProfileName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing responsible for the active violation.</p>",
          "shape": "DeviceDefenderThingName"
        },
        "verificationState": {
          "documentation": "<p>The verification state of the violation (detect alarm).</p>",
          "shape": "VerificationState"
        },
        "verificationStateDescription": {
          "documentation": "<p>The description of the verification state of the violation.</p>",
          "shape": "VerificationStateDescription"
        },
        "violationEventAdditionalInfo": {
          "documentation": "<p> The details of a violation event. </p>",
          "shape": "ViolationEventAdditionalInfo"
        },
        "violationId": {
          "documentation": "<p>The ID of the active violation.</p>",
          "shape": "ViolationId"
        },
        "violationStartTime": {
          "documentation": "<p>The time the violation started.</p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "ActiveViolations": {
      "member": {
        "shape": "ActiveViolation"
      },
      "type": "list"
    },
    "AddThingToBillingGroupRequest": {
      "members": {
        "billingGroupArn": {
          "documentation": "<p>The ARN of the billing group.</p>",
          "shape": "BillingGroupArn"
        },
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p> <note> <p>This call is asynchronous. It might take several seconds for the detachment to propagate.</p> </note>",
          "shape": "BillingGroupName"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing to be added to the billing group.</p>",
          "shape": "ThingArn"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to be added to the billing group.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "AddThingToBillingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "AddThingToThingGroupRequest": {
      "members": {
        "overrideDynamicGroups": {
          "documentation": "<p>Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.</p>",
          "shape": "OverrideDynamicGroups"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing to add to a group.</p>",
          "shape": "ThingArn"
        },
        "thingGroupArn": {
          "documentation": "<p>The ARN of the group to which you are adding a thing.</p>",
          "shape": "ThingGroupArn"
        },
        "thingGroupName": {
          "documentation": "<p>The name of the group to which you are adding a thing.</p>",
          "shape": "ThingGroupName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to add to a group.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "AddThingToThingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "AddThingsToThingGroupParams": {
      "documentation": "<p>Parameters used when defining a mitigation action that move a set of things to a thing group.</p>",
      "members": {
        "overrideDynamicGroups": {
          "documentation": "<p>Specifies if this mitigation action can move the things that triggered the mitigation action even if they are part of one or more dynamic thing groups.</p>",
          "shape": "NullableBoolean"
        },
        "thingGroupNames": {
          "documentation": "<p>The list of groups to which you want to add the things that triggered the mitigation action. You can add a thing to a maximum of 10 groups, but you can't add a thing to more than one group in the same hierarchy.</p>",
          "shape": "ThingGroupNames"
        }
      },
      "required": [
        "thingGroupNames"
      ],
      "type": "structure"
    },
    "AdditionalMetricsToRetainList": {
      "member": {
        "shape": "BehaviorMetric"
      },
      "type": "list"
    },
    "AdditionalMetricsToRetainV2List": {
      "member": {
        "shape": "MetricToRetain"
      },
      "type": "list"
    },
    "AdditionalParameterMap": {
      "key": {
        "shape": "AttributeKey"
      },
      "type": "map",
      "value": {
        "shape": "Value"
      }
    },
    "AggregationField": {
      "min": 1,
      "type": "string"
    },
    "AggregationType": {
      "documentation": "<p>The type of aggregation queries.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the aggregation type.</p>",
          "shape": "AggregationTypeName"
        },
        "values": {
          "documentation": "<p>A list of the values of aggregation types.</p>",
          "shape": "AggregationTypeValues"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "AggregationTypeName": {
      "enum": [
        "Statistics",
        "Percentiles",
        "Cardinality"
      ],
      "type": "string"
    },
    "AggregationTypeValue": {
      "max": 12,
      "min": 1,
      "pattern": "[a-zA-Z0-9]+",
      "type": "string"
    },
    "AggregationTypeValues": {
      "member": {
        "shape": "AggregationTypeValue"
      },
      "type": "list"
    },
    "AlarmName": {
      "type": "string"
    },
    "AlertTarget": {
      "documentation": "<p>A structure containing the alert target ARN and the role ARN.</p>",
      "members": {
        "alertTargetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the notification target to which alerts are sent.</p>",
          "shape": "AlertTargetArn"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants permission to send alerts to the notification target.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "alertTargetArn",
        "roleArn"
      ],
      "type": "structure"
    },
    "AlertTargetArn": {
      "type": "string"
    },
    "AlertTargetType": {
      "documentation": "<p>The type of alert target: one of \"SNS\".</p>",
      "enum": [
        "SNS"
      ],
      "type": "string"
    },
    "AlertTargets": {
      "key": {
        "shape": "AlertTargetType"
      },
      "type": "map",
      "value": {
        "shape": "AlertTarget"
      }
    },
    "AllowAuthorizerOverride": {
      "type": "boolean"
    },
    "AllowAutoRegistration": {
      "type": "boolean"
    },
    "Allowed": {
      "documentation": "<p>Contains information that allowed the authorization.</p>",
      "members": {
        "policies": {
          "documentation": "<p>A list of policies that allowed the authentication.</p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "ApproximateSecondsBeforeTimedOut": {
      "type": "long"
    },
    "AscendingOrder": {
      "type": "boolean"
    },
    "AssetId": {
      "type": "string"
    },
    "AssetPropertyAlias": {
      "min": 1,
      "type": "string"
    },
    "AssetPropertyBooleanValue": {
      "type": "string"
    },
    "AssetPropertyDoubleValue": {
      "type": "string"
    },
    "AssetPropertyEntryId": {
      "type": "string"
    },
    "AssetPropertyId": {
      "type": "string"
    },
    "AssetPropertyIntegerValue": {
      "type": "string"
    },
    "AssetPropertyOffsetInNanos": {
      "type": "string"
    },
    "AssetPropertyQuality": {
      "type": "string"
    },
    "AssetPropertyStringValue": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "AssetPropertyTimeInSeconds": {
      "type": "string"
    },
    "AssetPropertyTimestamp": {
      "documentation": "<p>An asset property timestamp entry containing the following information.</p>",
      "members": {
        "offsetInNanos": {
          "documentation": "<p>Optional. A string that contains the nanosecond time offset. Accepts substitution templates.</p>",
          "shape": "AssetPropertyOffsetInNanos"
        },
        "timeInSeconds": {
          "documentation": "<p>A string that contains the time in seconds since epoch. Accepts substitution templates.</p>",
          "shape": "AssetPropertyTimeInSeconds"
        }
      },
      "required": [
        "timeInSeconds"
      ],
      "type": "structure"
    },
    "AssetPropertyValue": {
      "documentation": "<p>An asset property value entry containing the following information.</p>",
      "members": {
        "quality": {
          "documentation": "<p>Optional. A string that describes the quality of the value. Accepts substitution templates. Must be <code>GOOD</code>, <code>BAD</code>, or <code>UNCERTAIN</code>.</p>",
          "shape": "AssetPropertyQuality"
        },
        "timestamp": {
          "documentation": "<p>The asset property value timestamp.</p>",
          "shape": "AssetPropertyTimestamp"
        },
        "value": {
          "documentation": "<p>The value of the asset property.</p>",
          "shape": "AssetPropertyVariant"
        }
      },
      "required": [
        "value",
        "timestamp"
      ],
      "type": "structure"
    },
    "AssetPropertyValueList": {
      "member": {
        "shape": "AssetPropertyValue"
      },
      "min": 1,
      "type": "list"
    },
    "AssetPropertyVariant": {
      "documentation": "<p>Contains an asset property value (of a single type).</p>",
      "members": {
        "booleanValue": {
          "documentation": "<p>Optional. A string that contains the boolean value (<code>true</code> or <code>false</code>) of the value entry. Accepts substitution templates.</p>",
          "shape": "AssetPropertyBooleanValue"
        },
        "doubleValue": {
          "documentation": "<p>Optional. A string that contains the double value of the value entry. Accepts substitution templates.</p>",
          "shape": "AssetPropertyDoubleValue"
        },
        "integerValue": {
          "documentation": "<p>Optional. A string that contains the integer value of the value entry. Accepts substitution templates.</p>",
          "shape": "AssetPropertyIntegerValue"
        },
        "stringValue": {
          "documentation": "<p>Optional. The string value of the value entry. Accepts substitution templates.</p>",
          "shape": "AssetPropertyStringValue"
        }
      },
      "type": "structure"
    },
    "AssociateTargetsWithJobRequest": {
      "members": {
        "comment": {
          "documentation": "<p>An optional comment string describing why the job was associated with the targets.</p>",
          "shape": "Comment"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        },
        "targets": {
          "documentation": "<p>A list of thing group ARNs that define the targets of the job.</p>",
          "shape": "JobTargets"
        }
      },
      "required": [
        "targets",
        "jobId"
      ],
      "type": "structure"
    },
    "AssociateTargetsWithJobResponse": {
      "members": {
        "description": {
          "documentation": "<p>A short text description of the job.</p>",
          "shape": "JobDescription"
        },
        "jobArn": {
          "documentation": "<p>An ARN identifying the job.</p>",
          "shape": "JobArn"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "shape": "JobId"
        }
      },
      "type": "structure"
    },
    "AttachPolicyRequest": {
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy to attach.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "target": {
          "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/security-iam.html\">identity</a> to which the policy is attached. For example, a thing group or a certificate.</p>",
          "shape": "PolicyTarget"
        }
      },
      "required": [
        "policyName",
        "target"
      ],
      "type": "structure"
    },
    "AttachPrincipalPolicyRequest": {
      "documentation": "<p>The input for the AttachPrincipalPolicy operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "principal": {
          "documentation": "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
          "location": "header",
          "locationName": "x-amzn-iot-principal",
          "shape": "Principal"
        }
      },
      "required": [
        "policyName",
        "principal"
      ],
      "type": "structure"
    },
    "AttachSecurityProfileRequest": {
      "members": {
        "securityProfileName": {
          "documentation": "<p>The security profile that is attached.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        },
        "securityProfileTargetArn": {
          "documentation": "<p>The ARN of the target (thing group) to which the security profile is attached.</p>",
          "location": "querystring",
          "locationName": "securityProfileTargetArn",
          "shape": "SecurityProfileTargetArn"
        }
      },
      "required": [
        "securityProfileName",
        "securityProfileTargetArn"
      ],
      "type": "structure"
    },
    "AttachSecurityProfileResponse": {
      "members": {},
      "type": "structure"
    },
    "AttachThingPrincipalRequest": {
      "documentation": "<p>The input for the AttachThingPrincipal operation.</p>",
      "members": {
        "principal": {
          "documentation": "<p>The principal, which can be a certificate ARN (as returned from the CreateCertificate operation) or an Amazon Cognito ID.</p>",
          "location": "header",
          "locationName": "x-amzn-principal",
          "shape": "Principal"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName",
        "principal"
      ],
      "type": "structure"
    },
    "AttachThingPrincipalResponse": {
      "documentation": "<p>The output from the AttachThingPrincipal operation.</p>",
      "members": {},
      "type": "structure"
    },
    "AttributeKey": {
      "type": "string"
    },
    "AttributeName": {
      "max": 128,
      "pattern": "[a-zA-Z0-9_.,@/:#-]+",
      "type": "string"
    },
    "AttributePayload": {
      "documentation": "<p>The attribute payload.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>A JSON string containing up to three key-value pair in JSON format. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "shape": "Attributes"
        },
        "merge": {
          "documentation": "<p>Specifies whether the list of attributes provided in the <code>AttributePayload</code> is merged with the attributes stored in the registry, instead of overwriting them.</p> <p>To remove an attribute, call <code>UpdateThing</code> with an empty attribute value.</p> <note> <p>The <code>merge</code> attribute is only valid when calling <code>UpdateThing</code> or <code>UpdateThingGroup</code>.</p> </note>",
          "shape": "Flag"
        }
      },
      "type": "structure"
    },
    "AttributeValue": {
      "max": 800,
      "pattern": "[a-zA-Z0-9_.,@/:#-]*",
      "type": "string"
    },
    "Attributes": {
      "key": {
        "shape": "AttributeName"
      },
      "type": "map",
      "value": {
        "shape": "AttributeValue"
      }
    },
    "AttributesMap": {
      "key": {
        "shape": "AttributeKey"
      },
      "type": "map",
      "value": {
        "shape": "Value"
      }
    },
    "AuditCheckConfiguration": {
      "documentation": "<p>Which audit checks are enabled and disabled for this account.</p>",
      "members": {
        "enabled": {
          "documentation": "<p>True if this audit check is enabled for this account.</p>",
          "shape": "Enabled"
        }
      },
      "type": "structure"
    },
    "AuditCheckConfigurations": {
      "key": {
        "shape": "AuditCheckName"
      },
      "type": "map",
      "value": {
        "shape": "AuditCheckConfiguration"
      }
    },
    "AuditCheckDetails": {
      "documentation": "<p>Information about the audit check.</p>",
      "members": {
        "checkCompliant": {
          "documentation": "<p>True if the check is complete and found all resources compliant.</p>",
          "shape": "CheckCompliant"
        },
        "checkRunStatus": {
          "documentation": "<p>The completion status of this check. One of \"IN_PROGRESS\", \"WAITING_FOR_DATA_COLLECTION\", \"CANCELED\", \"COMPLETED_COMPLIANT\", \"COMPLETED_NON_COMPLIANT\", or \"FAILED\".</p>",
          "shape": "AuditCheckRunStatus"
        },
        "errorCode": {
          "documentation": "<p>The code of any error encountered when this check is performed during this audit. One of \"INSUFFICIENT_PERMISSIONS\" or \"AUDIT_CHECK_DISABLED\".</p>",
          "shape": "ErrorCode"
        },
        "message": {
          "documentation": "<p>The message associated with any error encountered when this check is performed during this audit.</p>",
          "shape": "ErrorMessage"
        },
        "nonCompliantResourcesCount": {
          "documentation": "<p>The number of resources that were found noncompliant during the check.</p>",
          "shape": "NonCompliantResourcesCount"
        },
        "suppressedNonCompliantResourcesCount": {
          "documentation": "<p> Describes how many of the non-compliant resources created during the evaluation of an audit check were marked as suppressed. </p>",
          "shape": "SuppressedNonCompliantResourcesCount"
        },
        "totalResourcesCount": {
          "documentation": "<p>The number of resources on which the check was performed.</p>",
          "shape": "TotalResourcesCount"
        }
      },
      "type": "structure"
    },
    "AuditCheckName": {
      "documentation": "<p>An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>",
      "type": "string"
    },
    "AuditCheckRunStatus": {
      "enum": [
        "IN_PROGRESS",
        "WAITING_FOR_DATA_COLLECTION",
        "CANCELED",
        "COMPLETED_COMPLIANT",
        "COMPLETED_NON_COMPLIANT",
        "FAILED"
      ],
      "type": "string"
    },
    "AuditCheckToActionsMapping": {
      "key": {
        "shape": "AuditCheckName"
      },
      "type": "map",
      "value": {
        "shape": "MitigationActionNameList"
      }
    },
    "AuditCheckToReasonCodeFilter": {
      "key": {
        "shape": "AuditCheckName"
      },
      "type": "map",
      "value": {
        "shape": "ReasonForNonComplianceCodes"
      }
    },
    "AuditDescription": {
      "max": 1000,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "AuditDetails": {
      "key": {
        "shape": "AuditCheckName"
      },
      "type": "map",
      "value": {
        "shape": "AuditCheckDetails"
      }
    },
    "AuditFinding": {
      "documentation": "<p>The findings (results) of the audit.</p>",
      "members": {
        "checkName": {
          "documentation": "<p>The audit check that generated this result.</p>",
          "shape": "AuditCheckName"
        },
        "findingId": {
          "documentation": "<p>A unique identifier for this set of audit findings. This identifier is used to apply mitigation tasks to one or more sets of findings.</p>",
          "shape": "FindingId"
        },
        "findingTime": {
          "documentation": "<p>The time the result (finding) was discovered.</p>",
          "shape": "Timestamp"
        },
        "isSuppressed": {
          "documentation": "<p> Indicates whether the audit finding was suppressed or not during reporting. </p>",
          "shape": "IsSuppressed"
        },
        "nonCompliantResource": {
          "documentation": "<p>The resource that was found to be noncompliant with the audit check.</p>",
          "shape": "NonCompliantResource"
        },
        "reasonForNonCompliance": {
          "documentation": "<p>The reason the resource was noncompliant.</p>",
          "shape": "ReasonForNonCompliance"
        },
        "reasonForNonComplianceCode": {
          "documentation": "<p>A code that indicates the reason that the resource was noncompliant.</p>",
          "shape": "ReasonForNonComplianceCode"
        },
        "relatedResources": {
          "documentation": "<p>The list of related resources.</p>",
          "shape": "RelatedResources"
        },
        "severity": {
          "documentation": "<p>The severity of the result (finding).</p>",
          "shape": "AuditFindingSeverity"
        },
        "taskId": {
          "documentation": "<p>The ID of the audit that generated this result (finding).</p>",
          "shape": "AuditTaskId"
        },
        "taskStartTime": {
          "documentation": "<p>The time the audit started.</p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "AuditFindingSeverity": {
      "enum": [
        "CRITICAL",
        "HIGH",
        "MEDIUM",
        "LOW"
      ],
      "type": "string"
    },
    "AuditFindings": {
      "member": {
        "shape": "AuditFinding"
      },
      "type": "list"
    },
    "AuditFrequency": {
      "enum": [
        "DAILY",
        "WEEKLY",
        "BIWEEKLY",
        "MONTHLY"
      ],
      "type": "string"
    },
    "AuditMitigationActionExecutionMetadata": {
      "documentation": "<p>Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.</p>",
      "members": {
        "actionId": {
          "documentation": "<p>The unique identifier for the mitigation action being applied by the task.</p>",
          "shape": "MitigationActionId"
        },
        "actionName": {
          "documentation": "<p>The friendly name of the mitigation action being applied by the task.</p>",
          "shape": "MitigationActionName"
        },
        "endTime": {
          "documentation": "<p>The date and time when the task was completed or canceled. Blank if the task is still running.</p>",
          "shape": "Timestamp"
        },
        "errorCode": {
          "documentation": "<p>If an error occurred, the code that indicates which type of error occurred.</p>",
          "shape": "ErrorCode"
        },
        "findingId": {
          "documentation": "<p>The unique identifier for the findings to which the task and associated mitigation action are applied.</p>",
          "shape": "FindingId"
        },
        "message": {
          "documentation": "<p>If an error occurred, a message that describes the error.</p>",
          "shape": "ErrorMessage"
        },
        "startTime": {
          "documentation": "<p>The date and time when the task was started.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The current status of the task being executed.</p>",
          "shape": "AuditMitigationActionsExecutionStatus"
        },
        "taskId": {
          "documentation": "<p>The unique identifier for the task that applies the mitigation action.</p>",
          "shape": "MitigationActionsTaskId"
        }
      },
      "type": "structure"
    },
    "AuditMitigationActionExecutionMetadataList": {
      "member": {
        "shape": "AuditMitigationActionExecutionMetadata"
      },
      "type": "list"
    },
    "AuditMitigationActionsExecutionStatus": {
      "enum": [
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "CANCELED",
        "SKIPPED",
        "PENDING"
      ],
      "type": "string"
    },
    "AuditMitigationActionsTaskMetadata": {
      "documentation": "<p>Information about an audit mitigation actions task that is returned by <code>ListAuditMitigationActionsTasks</code>.</p>",
      "members": {
        "startTime": {
          "documentation": "<p>The time at which the audit mitigation actions task was started.</p>",
          "shape": "Timestamp"
        },
        "taskId": {
          "documentation": "<p>The unique identifier for the task.</p>",
          "shape": "MitigationActionsTaskId"
        },
        "taskStatus": {
          "documentation": "<p>The current state of the audit mitigation actions task.</p>",
          "shape": "AuditMitigationActionsTaskStatus"
        }
      },
      "type": "structure"
    },
    "AuditMitigationActionsTaskMetadataList": {
      "member": {
        "shape": "AuditMitigationActionsTaskMetadata"
      },
      "type": "list"
    },
    "AuditMitigationActionsTaskStatistics": {
      "key": {
        "shape": "AuditCheckName"
      },
      "type": "map",
      "value": {
        "shape": "TaskStatisticsForAuditCheck"
      }
    },
    "AuditMitigationActionsTaskStatus": {
      "enum": [
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "CANCELED"
      ],
      "type": "string"
    },
    "AuditMitigationActionsTaskTarget": {
      "documentation": "<p>Used in MitigationActionParams, this information identifies the target findings to which the mitigation actions are applied. Only one entry appears.</p>",
      "members": {
        "auditCheckToReasonCodeFilter": {
          "documentation": "<p>Specifies a filter in the form of an audit check and set of reason codes that identify the findings from the audit to which the audit mitigation actions task apply.</p>",
          "shape": "AuditCheckToReasonCodeFilter"
        },
        "auditTaskId": {
          "documentation": "<p>If the task will apply a mitigation action to findings from a specific audit, this value uniquely identifies the audit.</p>",
          "shape": "AuditTaskId"
        },
        "findingIds": {
          "documentation": "<p>If the task will apply a mitigation action to one or more listed findings, this value uniquely identifies those findings.</p>",
          "shape": "FindingIds"
        }
      },
      "type": "structure"
    },
    "AuditNotificationTarget": {
      "documentation": "<p>Information about the targets to which audit notifications are sent.</p>",
      "members": {
        "enabled": {
          "documentation": "<p>True if notifications to the target are enabled.</p>",
          "shape": "Enabled"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants permission to send notifications to the target.</p>",
          "shape": "RoleArn"
        },
        "targetArn": {
          "documentation": "<p>The ARN of the target (SNS topic) to which audit notifications are sent.</p>",
          "shape": "TargetArn"
        }
      },
      "type": "structure"
    },
    "AuditNotificationTargetConfigurations": {
      "key": {
        "shape": "AuditNotificationType"
      },
      "type": "map",
      "value": {
        "shape": "AuditNotificationTarget"
      }
    },
    "AuditNotificationType": {
      "enum": [
        "SNS"
      ],
      "type": "string"
    },
    "AuditSuppression": {
      "documentation": "<p> Filters out specific findings of a Device Defender audit. </p>",
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "description": {
          "documentation": "<p> The description of the audit suppression. </p>",
          "shape": "AuditDescription"
        },
        "expirationDate": {
          "documentation": "<p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>",
          "shape": "Timestamp"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        },
        "suppressIndefinitely": {
          "documentation": "<p> Indicates whether a suppression should exist indefinitely or not. </p>",
          "shape": "SuppressIndefinitely"
        }
      },
      "required": [
        "checkName",
        "resourceIdentifier"
      ],
      "type": "structure"
    },
    "AuditSuppressionList": {
      "member": {
        "shape": "AuditSuppression"
      },
      "type": "list"
    },
    "AuditTaskId": {
      "max": 40,
      "min": 1,
      "pattern": "[a-zA-Z0-9\\-]+",
      "type": "string"
    },
    "AuditTaskMetadata": {
      "documentation": "<p>The audits that were performed.</p>",
      "members": {
        "taskId": {
          "documentation": "<p>The ID of this audit.</p>",
          "shape": "AuditTaskId"
        },
        "taskStatus": {
          "documentation": "<p>The status of this audit. One of \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\", or \"CANCELED\".</p>",
          "shape": "AuditTaskStatus"
        },
        "taskType": {
          "documentation": "<p>The type of this audit. One of \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</p>",
          "shape": "AuditTaskType"
        }
      },
      "type": "structure"
    },
    "AuditTaskMetadataList": {
      "member": {
        "shape": "AuditTaskMetadata"
      },
      "type": "list"
    },
    "AuditTaskStatus": {
      "enum": [
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "CANCELED"
      ],
      "type": "string"
    },
    "AuditTaskType": {
      "enum": [
        "ON_DEMAND_AUDIT_TASK",
        "SCHEDULED_AUDIT_TASK"
      ],
      "type": "string"
    },
    "AuthDecision": {
      "enum": [
        "ALLOWED",
        "EXPLICIT_DENY",
        "IMPLICIT_DENY"
      ],
      "type": "string"
    },
    "AuthInfo": {
      "documentation": "<p>A collection of authorization information.</p>",
      "members": {
        "actionType": {
          "documentation": "<p>The type of action for which the principal is being authorized.</p>",
          "shape": "ActionType"
        },
        "resources": {
          "documentation": "<p>The resources for which the principal is being authorized to perform the specified action.</p>",
          "shape": "Resources"
        }
      },
      "required": [
        "resources"
      ],
      "type": "structure"
    },
    "AuthInfos": {
      "max": 10,
      "member": {
        "shape": "AuthInfo"
      },
      "min": 1,
      "type": "list"
    },
    "AuthResult": {
      "documentation": "<p>The authorizer result.</p>",
      "members": {
        "allowed": {
          "documentation": "<p>The policies and statements that allowed the specified action.</p>",
          "shape": "Allowed"
        },
        "authDecision": {
          "documentation": "<p>The final authorization decision of this scenario. Multiple statements are taken into account when determining the authorization decision. An explicit deny statement can override multiple allow statements.</p>",
          "shape": "AuthDecision"
        },
        "authInfo": {
          "documentation": "<p>Authorization information.</p>",
          "shape": "AuthInfo"
        },
        "denied": {
          "documentation": "<p>The policies and statements that denied the specified action.</p>",
          "shape": "Denied"
        },
        "missingContextValues": {
          "documentation": "<p>Contains any missing context values found while evaluating policy.</p>",
          "shape": "MissingContextValues"
        }
      },
      "type": "structure"
    },
    "AuthResults": {
      "member": {
        "shape": "AuthResult"
      },
      "type": "list"
    },
    "AuthorizerArn": {
      "max": 2048,
      "type": "string"
    },
    "AuthorizerConfig": {
      "documentation": "<p>An object that specifies the authorization service for a domain.</p>",
      "members": {
        "allowAuthorizerOverride": {
          "box": true,
          "documentation": "<p>A Boolean that specifies whether the domain configuration's authorization service can be overridden.</p>",
          "shape": "AllowAuthorizerOverride"
        },
        "defaultAuthorizerName": {
          "documentation": "<p>The name of the authorization service for a domain configuration.</p>",
          "shape": "AuthorizerName"
        }
      },
      "type": "structure"
    },
    "AuthorizerDescription": {
      "documentation": "<p>The authorizer description.</p>",
      "members": {
        "authorizerArn": {
          "documentation": "<p>The authorizer ARN.</p>",
          "shape": "AuthorizerArn"
        },
        "authorizerFunctionArn": {
          "documentation": "<p>The authorizer's Lambda function ARN.</p>",
          "shape": "AuthorizerFunctionArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "shape": "AuthorizerName"
        },
        "creationDate": {
          "documentation": "<p>The UNIX timestamp of when the authorizer was created.</p>",
          "shape": "DateType"
        },
        "enableCachingForHttp": {
          "documentation": "<p>When <code>true</code>, the result from the authorizer\u2019s Lambda function is cached for the time specified in <code>refreshAfterInSeconds</code>. The cached result is used while the device reuses the same HTTP connection.</p>",
          "shape": "EnableCachingForHttp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The UNIX timestamp of when the authorizer was last updated.</p>",
          "shape": "DateType"
        },
        "signingDisabled": {
          "documentation": "<p>Specifies whether IoT validates the token signature in an authorization request.</p>",
          "shape": "BooleanKey"
        },
        "status": {
          "documentation": "<p>The status of the authorizer.</p>",
          "shape": "AuthorizerStatus"
        },
        "tokenKeyName": {
          "documentation": "<p>The key used to extract the token from the HTTP headers.</p>",
          "shape": "TokenKeyName"
        },
        "tokenSigningPublicKeys": {
          "documentation": "<p>The public keys used to validate the token signature returned by your custom authentication service.</p>",
          "shape": "PublicKeyMap"
        }
      },
      "type": "structure"
    },
    "AuthorizerFunctionArn": {
      "max": 2048,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "AuthorizerName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\w=,@-]+",
      "type": "string"
    },
    "AuthorizerStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "AuthorizerSummary": {
      "documentation": "<p>The authorizer summary.</p>",
      "members": {
        "authorizerArn": {
          "documentation": "<p>The authorizer ARN.</p>",
          "shape": "AuthorizerArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "shape": "AuthorizerName"
        }
      },
      "type": "structure"
    },
    "Authorizers": {
      "member": {
        "shape": "AuthorizerSummary"
      },
      "type": "list"
    },
    "AutoRegistrationStatus": {
      "enum": [
        "ENABLE",
        "DISABLE"
      ],
      "type": "string"
    },
    "Average": {
      "type": "double"
    },
    "AwsAccountId": {
      "max": 12,
      "min": 12,
      "pattern": "[0-9]+",
      "type": "string"
    },
    "AwsArn": {
      "type": "string"
    },
    "AwsIotJobArn": {
      "type": "string"
    },
    "AwsIotJobId": {
      "type": "string"
    },
    "AwsIotSqlVersion": {
      "type": "string"
    },
    "AwsJobAbortConfig": {
      "documentation": "<p>The criteria that determine when and how a job abort takes place.</p>",
      "members": {
        "abortCriteriaList": {
          "documentation": "<p>The list of criteria that determine when and how to abort the job.</p>",
          "shape": "AwsJobAbortCriteriaList"
        }
      },
      "required": [
        "abortCriteriaList"
      ],
      "type": "structure"
    },
    "AwsJobAbortCriteria": {
      "documentation": "<p>The criteria that determine when and how a job abort takes place.</p>",
      "members": {
        "action": {
          "documentation": "<p>The type of job action to take to initiate the job abort.</p>",
          "shape": "AwsJobAbortCriteriaAbortAction"
        },
        "failureType": {
          "documentation": "<p>The type of job execution failures that can initiate a job abort.</p>",
          "shape": "AwsJobAbortCriteriaFailureType"
        },
        "minNumberOfExecutedThings": {
          "documentation": "<p>The minimum number of things which must receive job execution notifications before the job can be aborted.</p>",
          "shape": "AwsJobAbortCriteriaMinimumNumberOfExecutedThings"
        },
        "thresholdPercentage": {
          "documentation": "<p>The minimum percentage of job execution failures that must occur to initiate the job abort.</p> <p>Amazon Web Services IoT Core supports up to two digits after the decimal (for example, 10.9 and 10.99, but not 10.999).</p>",
          "shape": "AwsJobAbortCriteriaAbortThresholdPercentage"
        }
      },
      "required": [
        "failureType",
        "action",
        "thresholdPercentage",
        "minNumberOfExecutedThings"
      ],
      "type": "structure"
    },
    "AwsJobAbortCriteriaAbortAction": {
      "enum": [
        "CANCEL"
      ],
      "type": "string"
    },
    "AwsJobAbortCriteriaAbortThresholdPercentage": {
      "max": 100,
      "type": "double"
    },
    "AwsJobAbortCriteriaFailureType": {
      "enum": [
        "FAILED",
        "REJECTED",
        "TIMED_OUT",
        "ALL"
      ],
      "type": "string"
    },
    "AwsJobAbortCriteriaList": {
      "member": {
        "shape": "AwsJobAbortCriteria"
      },
      "min": 1,
      "type": "list"
    },
    "AwsJobAbortCriteriaMinimumNumberOfExecutedThings": {
      "min": 1,
      "type": "integer"
    },
    "AwsJobExecutionsRolloutConfig": {
      "documentation": "<p>Configuration for the rollout of OTA updates.</p>",
      "members": {
        "exponentialRate": {
          "documentation": "<p>The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.</p>",
          "shape": "AwsJobExponentialRolloutRate"
        },
        "maximumPerMinute": {
          "documentation": "<p>The maximum number of OTA update job executions started per minute.</p>",
          "shape": "MaximumPerMinute"
        }
      },
      "type": "structure"
    },
    "AwsJobExponentialRolloutRate": {
      "documentation": "<p>The rate of increase for a job rollout. This parameter allows you to define an exponential rate increase for a job rollout.</p>",
      "members": {
        "baseRatePerMinute": {
          "documentation": "<p>The minimum number of things that will be notified of a pending job, per minute, at the start of the job rollout. This is the initial rate of the rollout.</p>",
          "shape": "AwsJobRolloutRatePerMinute"
        },
        "incrementFactor": {
          "documentation": "<p>The rate of increase for a job rollout. The number of things notified is multiplied by this factor.</p>",
          "shape": "AwsJobRolloutIncrementFactor"
        },
        "rateIncreaseCriteria": {
          "documentation": "<p>The criteria to initiate the increase in rate of rollout for a job.</p> <p>Amazon Web Services IoT Core supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>",
          "shape": "AwsJobRateIncreaseCriteria"
        }
      },
      "required": [
        "baseRatePerMinute",
        "incrementFactor",
        "rateIncreaseCriteria"
      ],
      "type": "structure"
    },
    "AwsJobPresignedUrlConfig": {
      "documentation": "<p>Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.</p>",
      "members": {
        "expiresInSec": {
          "documentation": "<p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 1800 seconds. Pre-signed URLs are generated when a request for the job document is received.</p>",
          "shape": "ExpiresInSeconds"
        }
      },
      "type": "structure"
    },
    "AwsJobRateIncreaseCriteria": {
      "documentation": "<p>The criteria to initiate the increase in rate of rollout for a job.</p>",
      "members": {
        "numberOfNotifiedThings": {
          "documentation": "<p>When this number of things have been notified, it will initiate an increase in the rollout rate.</p>",
          "shape": "AwsJobRateIncreaseCriteriaNumberOfThings"
        },
        "numberOfSucceededThings": {
          "documentation": "<p>When this number of things have succeeded in their job execution, it will initiate an increase in the rollout rate.</p>",
          "shape": "AwsJobRateIncreaseCriteriaNumberOfThings"
        }
      },
      "type": "structure"
    },
    "AwsJobRateIncreaseCriteriaNumberOfThings": {
      "min": 1,
      "type": "integer"
    },
    "AwsJobRolloutIncrementFactor": {
      "type": "double"
    },
    "AwsJobRolloutRatePerMinute": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "AwsJobTimeoutConfig": {
      "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.</p>",
      "members": {
        "inProgressTimeoutInMinutes": {
          "documentation": "<p>Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.</p>",
          "shape": "AwsJobTimeoutInProgressTimeoutInMinutes"
        }
      },
      "type": "structure"
    },
    "AwsJobTimeoutInProgressTimeoutInMinutes": {
      "type": "long"
    },
    "BatchMode": {
      "type": "boolean"
    },
    "Behavior": {
      "documentation": "<p>A Device Defender security profile behavior.</p>",
      "members": {
        "criteria": {
          "documentation": "<p>The criteria that determine if a device is behaving normally in regard to the <code>metric</code>.</p>",
          "shape": "BehaviorCriteria"
        },
        "metric": {
          "documentation": "<p>What is measured by the behavior.</p>",
          "shape": "BehaviorMetric"
        },
        "metricDimension": {
          "documentation": "<p>The dimension for a metric in your behavior. For example, using a <code>TOPIC_FILTER</code> dimension, you can narrow down the scope of the metric to only MQTT topics where the name matches the pattern specified in the dimension. This can't be used with custom metrics.</p>",
          "shape": "MetricDimension"
        },
        "name": {
          "documentation": "<p>The name you've given to the behavior.</p>",
          "shape": "BehaviorName"
        },
        "suppressAlerts": {
          "documentation": "<p> Suppresses alerts. </p>",
          "shape": "SuppressAlerts"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "BehaviorCriteria": {
      "documentation": "<p>The criteria by which the behavior is determined to be normal.</p>",
      "members": {
        "comparisonOperator": {
          "documentation": "<p>The operator that relates the thing measured (<code>metric</code>) to the criteria (containing a <code>value</code> or <code>statisticalThreshold</code>). Valid operators include:</p> <ul> <li> <p> <code>string-list</code>: <code>in-set</code> and <code>not-in-set</code> </p> </li> <li> <p> <code>number-list</code>: <code>in-set</code> and <code>not-in-set</code> </p> </li> <li> <p> <code>ip-address-list</code>: <code>in-cidr-set</code> and <code>not-in-cidr-set</code> </p> </li> <li> <p> <code>number</code>: <code>less-than</code>, <code>less-than-equals</code>, <code>greater-than</code>, and <code>greater-than-equals</code> </p> </li> </ul>",
          "shape": "ComparisonOperator"
        },
        "consecutiveDatapointsToAlarm": {
          "documentation": "<p>If a device is in violation of the behavior for the specified number of consecutive datapoints, an alarm occurs. If not specified, the default is 1.</p>",
          "shape": "ConsecutiveDatapointsToAlarm"
        },
        "consecutiveDatapointsToClear": {
          "documentation": "<p>If an alarm has occurred and the offending device is no longer in violation of the behavior for the specified number of consecutive datapoints, the alarm is cleared. If not specified, the default is 1.</p>",
          "shape": "ConsecutiveDatapointsToClear"
        },
        "durationSeconds": {
          "documentation": "<p>Use this to specify the time duration over which the behavior is evaluated, for those criteria that have a time dimension (for example, <code>NUM_MESSAGES_SENT</code>). For a <code>statisticalThreshhold</code> metric comparison, measurements from all devices are accumulated over this time duration before being used to calculate percentiles, and later, measurements from an individual device are also accumulated over this time duration before being given a percentile rank. Cannot be used with list-based metric datatypes.</p>",
          "shape": "DurationSeconds"
        },
        "mlDetectionConfig": {
          "documentation": "<p> The configuration of an ML Detect </p>",
          "shape": "MachineLearningDetectionConfig"
        },
        "statisticalThreshold": {
          "documentation": "<p>A statistical ranking (percentile)that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.</p>",
          "shape": "StatisticalThreshold"
        },
        "value": {
          "documentation": "<p>The value to be compared with the <code>metric</code>.</p>",
          "shape": "MetricValue"
        }
      },
      "type": "structure"
    },
    "BehaviorCriteriaType": {
      "enum": [
        "STATIC",
        "STATISTICAL",
        "MACHINE_LEARNING"
      ],
      "type": "string"
    },
    "BehaviorMetric": {
      "type": "string"
    },
    "BehaviorModelTrainingSummaries": {
      "member": {
        "shape": "BehaviorModelTrainingSummary"
      },
      "type": "list"
    },
    "BehaviorModelTrainingSummary": {
      "documentation": "<p> The summary of an ML Detect behavior model. </p>",
      "members": {
        "behaviorName": {
          "documentation": "<p> The name of the behavior. </p>",
          "shape": "BehaviorName"
        },
        "datapointsCollectionPercentage": {
          "documentation": "<p> The percentage of datapoints collected. </p>",
          "shape": "DataCollectionPercentage"
        },
        "lastModelRefreshDate": {
          "documentation": "<p> The date the model was last refreshed. </p>",
          "shape": "Timestamp"
        },
        "modelStatus": {
          "documentation": "<p> The status of the behavior model. </p>",
          "shape": "ModelStatus"
        },
        "securityProfileName": {
          "documentation": "<p> The name of the security profile. </p>",
          "shape": "SecurityProfileName"
        },
        "trainingDataCollectionStartDate": {
          "documentation": "<p> The date a training model started collecting data. </p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "BehaviorName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "Behaviors": {
      "max": 100,
      "member": {
        "shape": "Behavior"
      },
      "type": "list"
    },
    "BillingGroupArn": {
      "type": "string"
    },
    "BillingGroupDescription": {
      "max": 2028,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "BillingGroupId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9\\-]+",
      "type": "string"
    },
    "BillingGroupMetadata": {
      "documentation": "<p>Additional information about the billing group.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date the billing group was created.</p>",
          "shape": "CreationDate"
        }
      },
      "type": "structure"
    },
    "BillingGroupName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "BillingGroupNameAndArnList": {
      "member": {
        "shape": "GroupNameAndArn"
      },
      "type": "list"
    },
    "BillingGroupProperties": {
      "documentation": "<p>The properties of a billing group.</p>",
      "members": {
        "billingGroupDescription": {
          "documentation": "<p>The description of the billing group.</p>",
          "shape": "BillingGroupDescription"
        }
      },
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BooleanKey": {
      "type": "boolean"
    },
    "BooleanWrapperObject": {
      "type": "boolean"
    },
    "Bucket": {
      "documentation": "<p>A count of documents that meets a specific aggregation criteria.</p>",
      "members": {
        "count": {
          "documentation": "<p>The number of documents that have the value counted for the particular bucket.</p>",
          "shape": "Count"
        },
        "keyValue": {
          "documentation": "<p>The value counted for the particular bucket.</p>",
          "shape": "BucketKeyValue"
        }
      },
      "type": "structure"
    },
    "BucketKeyValue": {
      "type": "string"
    },
    "BucketName": {
      "type": "string"
    },
    "Buckets": {
      "member": {
        "shape": "Bucket"
      },
      "type": "list"
    },
    "BucketsAggregationType": {
      "documentation": "<p>The type of bucketed aggregation performed.</p>",
      "members": {
        "termsAggregation": {
          "documentation": "<p>Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.</p>",
          "shape": "TermsAggregation"
        }
      },
      "type": "structure"
    },
    "CACertificate": {
      "documentation": "<p>A CA certificate.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The ARN of the CA certificate.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the CA certificate.</p>",
          "shape": "CertificateId"
        },
        "creationDate": {
          "documentation": "<p>The date the CA certificate was created.</p>",
          "shape": "DateType"
        },
        "status": {
          "documentation": "<p>The status of the CA certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "shape": "CACertificateStatus"
        }
      },
      "type": "structure"
    },
    "CACertificateDescription": {
      "documentation": "<p>Describes a CA certificate.</p>",
      "members": {
        "autoRegistrationStatus": {
          "documentation": "<p>Whether the CA certificate configured for auto registration of device certificates. Valid values are \"ENABLE\" and \"DISABLE\"</p>",
          "shape": "AutoRegistrationStatus"
        },
        "certificateArn": {
          "documentation": "<p>The CA certificate ARN.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The CA certificate ID.</p>",
          "shape": "CertificateId"
        },
        "certificateMode": {
          "documentation": "<p>The mode of the CA. </p> <p>All the device certificates that are registered using this CA will be registered in the same mode as the CA. For more information about certificate mode for device certificates, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode\">certificate mode</a>.</p>",
          "shape": "CertificateMode"
        },
        "certificatePem": {
          "documentation": "<p>The CA certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "creationDate": {
          "documentation": "<p>The date the CA certificate was created.</p>",
          "shape": "DateType"
        },
        "customerVersion": {
          "documentation": "<p>The customer version of the CA certificate.</p>",
          "shape": "CustomerVersion"
        },
        "generationId": {
          "documentation": "<p>The generation ID of the CA certificate.</p>",
          "shape": "GenerationId"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date the CA certificate was last modified.</p>",
          "shape": "DateType"
        },
        "ownedBy": {
          "documentation": "<p>The owner of the CA certificate.</p>",
          "shape": "AwsAccountId"
        },
        "status": {
          "documentation": "<p>The status of a CA certificate.</p>",
          "shape": "CACertificateStatus"
        },
        "validity": {
          "documentation": "<p>When the CA certificate is valid.</p>",
          "shape": "CertificateValidity"
        }
      },
      "type": "structure"
    },
    "CACertificateStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "CACertificateUpdateAction": {
      "enum": [
        "DEACTIVATE"
      ],
      "type": "string"
    },
    "CACertificates": {
      "member": {
        "shape": "CACertificate"
      },
      "type": "list"
    },
    "CancelAuditMitigationActionsTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The unique identifier for the task that you want to cancel. </p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "CancelAuditMitigationActionsTaskResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelAuditTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The ID of the audit you want to cancel. You can only cancel an audit that is \"IN_PROGRESS\".</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "AuditTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "CancelAuditTaskResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelCertificateTransferRequest": {
      "documentation": "<p>The input for the CancelCertificateTransfer operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "CancelDetectMitigationActionsTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "CancelDetectMitigationActionsTaskResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelJobExecutionRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>(Optional) The expected current version of the job execution. Each time you update the job execution, its version is incremented. If the version of the job execution stored in Jobs does not match, the update is rejected with a VersionMismatch error, and an ErrorResponse that contains the current job execution status data is returned. (This makes it unnecessary to perform a separate DescribeJobExecution request in order to obtain the job execution status data.)</p>",
          "shape": "ExpectedVersion"
        },
        "force": {
          "documentation": "<p>(Optional) If <code>true</code> the job execution will be canceled if it has status IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set <code>force</code> to <code>true</code>, then an <code>InvalidStateTransitionException</code> will be thrown. The default is <code>false</code>.</p> <p>Canceling a job execution which is \"IN_PROGRESS\", will cause the device to be unable to update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p>",
          "location": "querystring",
          "locationName": "force",
          "shape": "ForceFlag"
        },
        "jobId": {
          "documentation": "<p>The ID of the job to be canceled.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "statusDetails": {
          "documentation": "<p>A collection of name/value pairs that describe the status of the job execution. If not specified, the statusDetails are unchanged. You can specify at most 10 name/value pairs.</p>",
          "shape": "DetailsMap"
        },
        "thingName": {
          "documentation": "<p>The name of the thing whose execution of the job will be canceled.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "jobId",
        "thingName"
      ],
      "type": "structure"
    },
    "CancelJobRequest": {
      "members": {
        "comment": {
          "documentation": "<p>An optional comment string describing why the job was canceled.</p>",
          "shape": "Comment"
        },
        "force": {
          "documentation": "<p>(Optional) If <code>true</code> job executions with status \"IN_PROGRESS\" and \"QUEUED\" are canceled, otherwise only job executions with status \"QUEUED\" are canceled. The default is <code>false</code>.</p> <p>Canceling a job which is \"IN_PROGRESS\", will cause a device which is executing the job to be unable to update the job execution status. Use caution and ensure that each device executing a job which is canceled is able to recover to a valid state.</p>",
          "location": "querystring",
          "locationName": "force",
          "shape": "ForceFlag"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "reasonCode": {
          "documentation": "<p>(Optional)A reason code string that explains why the job was canceled.</p>",
          "shape": "ReasonCode"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "CancelJobResponse": {
      "members": {
        "description": {
          "documentation": "<p>A short text description of the job.</p>",
          "shape": "JobDescription"
        },
        "jobArn": {
          "documentation": "<p>The job ARN.</p>",
          "shape": "JobArn"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "shape": "JobId"
        }
      },
      "type": "structure"
    },
    "CanceledChecksCount": {
      "type": "integer"
    },
    "CanceledFindingsCount": {
      "type": "long"
    },
    "CanceledThings": {
      "type": "integer"
    },
    "CannedAccessControlList": {
      "enum": [
        "private",
        "public-read",
        "public-read-write",
        "aws-exec-read",
        "authenticated-read",
        "bucket-owner-read",
        "bucket-owner-full-control",
        "log-delivery-write"
      ],
      "type": "string"
    },
    "Certificate": {
      "documentation": "<p>Information about a certificate.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The ARN of the certificate.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "shape": "CertificateId"
        },
        "certificateMode": {
          "documentation": "<p>The mode of the certificate.</p> <p> <code>DEFAULT</code>: A certificate in <code>DEFAULT</code> mode is either generated by Amazon Web Services IoT Core or registered with an issuer certificate authority (CA) in <code>DEFAULT</code> mode. Devices with certificates in <code>DEFAULT</code> mode aren't required to send the Server Name Indication (SNI) extension when connecting to Amazon Web Services IoT Core. However, to use features such as custom domains and VPC endpoints, we recommend that you use the SNI extension when connecting to Amazon Web Services IoT Core.</p> <p> <code>SNI_ONLY</code>: A certificate in <code>SNI_ONLY</code> mode is registered without an issuer CA. Devices with certificates in <code>SNI_ONLY</code> mode must send the SNI extension when connecting to Amazon Web Services IoT Core. </p>",
          "shape": "CertificateMode"
        },
        "creationDate": {
          "documentation": "<p>The date and time the certificate was created.</p>",
          "shape": "DateType"
        },
        "status": {
          "documentation": "<p>The status of the certificate.</p> <p>The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "shape": "CertificateStatus"
        }
      },
      "type": "structure"
    },
    "CertificateArn": {
      "type": "string"
    },
    "CertificateConflictException": {
      "documentation": "<p>Unable to verify the CA certificate used to sign the device certificate you are attempting to register. This is happens when you have registered more than one CA certificate that has the same subject field and public key.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "CertificateDescription": {
      "documentation": "<p>Describes a certificate.</p>",
      "members": {
        "caCertificateId": {
          "documentation": "<p>The certificate ID of the CA certificate used to sign this certificate.</p>",
          "shape": "CertificateId"
        },
        "certificateArn": {
          "documentation": "<p>The ARN of the certificate.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the certificate.</p>",
          "shape": "CertificateId"
        },
        "certificateMode": {
          "documentation": "<p>The mode of the certificate.</p> <p> <code>DEFAULT</code>: A certificate in <code>DEFAULT</code> mode is either generated by Amazon Web Services IoT Core or registered with an issuer certificate authority (CA) in <code>DEFAULT</code> mode. Devices with certificates in <code>DEFAULT</code> mode aren't required to send the Server Name Indication (SNI) extension when connecting to Amazon Web Services IoT Core. However, to use features such as custom domains and VPC endpoints, we recommend that you use the SNI extension when connecting to Amazon Web Services IoT Core.</p> <p> <code>SNI_ONLY</code>: A certificate in <code>SNI_ONLY</code> mode is registered without an issuer CA. Devices with certificates in <code>SNI_ONLY</code> mode must send the SNI extension when connecting to Amazon Web Services IoT Core. </p> <p>For more information about the value for SNI extension, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/transport-security.html\">Transport security in IoT</a>.</p>",
          "shape": "CertificateMode"
        },
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "creationDate": {
          "documentation": "<p>The date and time the certificate was created.</p>",
          "shape": "DateType"
        },
        "customerVersion": {
          "documentation": "<p>The customer version of the certificate.</p>",
          "shape": "CustomerVersion"
        },
        "generationId": {
          "documentation": "<p>The generation ID of the certificate.</p>",
          "shape": "GenerationId"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date and time the certificate was last modified.</p>",
          "shape": "DateType"
        },
        "ownedBy": {
          "documentation": "<p>The ID of the Amazon Web Services account that owns the certificate.</p>",
          "shape": "AwsAccountId"
        },
        "previousOwnedBy": {
          "documentation": "<p>The ID of the Amazon Web Services account of the previous owner of the certificate.</p>",
          "shape": "AwsAccountId"
        },
        "status": {
          "documentation": "<p>The status of the certificate.</p>",
          "shape": "CertificateStatus"
        },
        "transferData": {
          "documentation": "<p>The transfer data.</p>",
          "shape": "TransferData"
        },
        "validity": {
          "documentation": "<p>When the certificate is valid.</p>",
          "shape": "CertificateValidity"
        }
      },
      "type": "structure"
    },
    "CertificateId": {
      "max": 64,
      "min": 64,
      "pattern": "(0x)?[a-fA-F0-9]+",
      "type": "string"
    },
    "CertificateMode": {
      "enum": [
        "DEFAULT",
        "SNI_ONLY"
      ],
      "type": "string"
    },
    "CertificateName": {
      "type": "string"
    },
    "CertificatePathOnDevice": {
      "type": "string"
    },
    "CertificatePem": {
      "documentation": "<p>The PEM of a certificate.</p>",
      "max": 65536,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "CertificateSigningRequest": {
      "max": 4096,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "CertificateStateException": {
      "documentation": "<p>The certificate operation is not allowed.</p>",
      "error": {
        "httpStatusCode": 406
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "CertificateStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "REVOKED",
        "PENDING_TRANSFER",
        "REGISTER_INACTIVE",
        "PENDING_ACTIVATION"
      ],
      "type": "string"
    },
    "CertificateValidationException": {
      "documentation": "<p>The certificate is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Additional information about the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "CertificateValidity": {
      "documentation": "<p>When the certificate is valid.</p>",
      "members": {
        "notAfter": {
          "documentation": "<p>The certificate is not valid after this date.</p>",
          "shape": "DateType"
        },
        "notBefore": {
          "documentation": "<p>The certificate is not valid before this date.</p>",
          "shape": "DateType"
        }
      },
      "type": "structure"
    },
    "Certificates": {
      "member": {
        "shape": "Certificate"
      },
      "type": "list"
    },
    "ChannelName": {
      "type": "string"
    },
    "CheckCompliant": {
      "type": "boolean"
    },
    "Cidr": {
      "max": 43,
      "min": 2,
      "pattern": "[a-fA-F0-9:\\.\\/]+",
      "type": "string"
    },
    "Cidrs": {
      "member": {
        "shape": "Cidr"
      },
      "type": "list"
    },
    "ClearDefaultAuthorizerRequest": {
      "members": {},
      "type": "structure"
    },
    "ClearDefaultAuthorizerResponse": {
      "members": {},
      "type": "structure"
    },
    "ClientId": {
      "type": "string"
    },
    "ClientProperties": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "ClientRequestToken": {
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_]+$",
      "type": "string"
    },
    "CloudwatchAlarmAction": {
      "documentation": "<p>Describes an action that updates a CloudWatch alarm.</p>",
      "members": {
        "alarmName": {
          "documentation": "<p>The CloudWatch alarm name.</p>",
          "shape": "AlarmName"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that allows access to the CloudWatch alarm.</p>",
          "shape": "AwsArn"
        },
        "stateReason": {
          "documentation": "<p>The reason for the alarm change.</p>",
          "shape": "StateReason"
        },
        "stateValue": {
          "documentation": "<p>The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.</p>",
          "shape": "StateValue"
        }
      },
      "required": [
        "roleArn",
        "alarmName",
        "stateReason",
        "stateValue"
      ],
      "type": "structure"
    },
    "CloudwatchLogsAction": {
      "documentation": "<p>Describes an action that sends data to CloudWatch Logs.</p>",
      "members": {
        "logGroupName": {
          "documentation": "<p>The CloudWatch log group to which the action sends data.</p>",
          "shape": "LogGroupName"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that allows access to the CloudWatch log.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "roleArn",
        "logGroupName"
      ],
      "type": "structure"
    },
    "CloudwatchMetricAction": {
      "documentation": "<p>Describes an action that captures a CloudWatch metric.</p>",
      "members": {
        "metricName": {
          "documentation": "<p>The CloudWatch metric name.</p>",
          "shape": "String"
        },
        "metricNamespace": {
          "documentation": "<p>The CloudWatch metric namespace name.</p>",
          "shape": "String"
        },
        "metricTimestamp": {
          "documentation": "<p>An optional <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp\">Unix timestamp</a>.</p>",
          "shape": "String"
        },
        "metricUnit": {
          "documentation": "<p>The <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit\">metric unit</a> supported by CloudWatch.</p>",
          "shape": "String"
        },
        "metricValue": {
          "documentation": "<p>The CloudWatch metric value.</p>",
          "shape": "String"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that allows access to the CloudWatch metric.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "roleArn",
        "metricNamespace",
        "metricName",
        "metricValue",
        "metricUnit"
      ],
      "type": "structure"
    },
    "Code": {
      "type": "string"
    },
    "CodeSigning": {
      "documentation": "<p>Describes the method to use when code signing a file.</p>",
      "members": {
        "awsSignerJobId": {
          "documentation": "<p>The ID of the <code>AWSSignerJob</code> which was created to sign the file.</p>",
          "shape": "SigningJobId"
        },
        "customCodeSigning": {
          "documentation": "<p>A custom method for code signing a file.</p>",
          "shape": "CustomCodeSigning"
        },
        "startSigningJobParameter": {
          "documentation": "<p>Describes the code-signing job.</p>",
          "shape": "StartSigningJobParameter"
        }
      },
      "type": "structure"
    },
    "CodeSigningCertificateChain": {
      "documentation": "<p>Describes the certificate chain being used when code signing a file.</p>",
      "members": {
        "certificateName": {
          "documentation": "<p>The name of the certificate.</p>",
          "shape": "CertificateName"
        },
        "inlineDocument": {
          "documentation": "<p>A base64 encoded binary representation of the code signing certificate chain.</p>",
          "shape": "InlineDocument"
        }
      },
      "type": "structure"
    },
    "CodeSigningSignature": {
      "documentation": "<p>Describes the signature for a file.</p>",
      "members": {
        "inlineDocument": {
          "documentation": "<p>A base64 encoded binary representation of the code signing signature.</p>",
          "shape": "Signature"
        }
      },
      "type": "structure"
    },
    "CognitoIdentityPoolId": {
      "type": "string"
    },
    "Comment": {
      "max": 2028,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "ComparisonOperator": {
      "enum": [
        "less-than",
        "less-than-equals",
        "greater-than",
        "greater-than-equals",
        "in-cidr-set",
        "not-in-cidr-set",
        "in-port-set",
        "not-in-port-set",
        "in-set",
        "not-in-set"
      ],
      "type": "string"
    },
    "CompliantChecksCount": {
      "type": "integer"
    },
    "ConfidenceLevel": {
      "enum": [
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "type": "string"
    },
    "Configuration": {
      "documentation": "<p>Configuration.</p>",
      "members": {
        "Enabled": {
          "documentation": "<p>True to enable the configuration.</p>",
          "shape": "Enabled"
        }
      },
      "type": "structure"
    },
    "ConfirmTopicRuleDestinationRequest": {
      "members": {
        "confirmationToken": {
          "documentation": "<p>The token used to confirm ownership or access to the topic rule confirmation URL.</p>",
          "location": "uri",
          "locationName": "confirmationToken",
          "shape": "ConfirmationToken"
        }
      },
      "required": [
        "confirmationToken"
      ],
      "type": "structure"
    },
    "ConfirmTopicRuleDestinationResponse": {
      "members": {},
      "type": "structure"
    },
    "ConfirmationToken": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>A resource with the same name already exists.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ConflictingResourceUpdateException": {
      "documentation": "<p>A conflicting resource update exception. This exception is thrown when two pending updates cause a conflict.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ConnectivityTimestamp": {
      "type": "long"
    },
    "ConsecutiveDatapointsToAlarm": {
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "ConsecutiveDatapointsToClear": {
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "Count": {
      "type": "integer"
    },
    "CreateAuditSuppressionRequest": {
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "clientRequestToken": {
          "documentation": "<p> Each audit supression must have a unique client request token. If you try to create a new audit suppression with the same token as one that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "description": {
          "documentation": "<p> The description of the audit suppression. </p>",
          "shape": "AuditDescription"
        },
        "expirationDate": {
          "documentation": "<p> The epoch timestamp in seconds at which this suppression expires. </p>",
          "shape": "Timestamp"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        },
        "suppressIndefinitely": {
          "documentation": "<p> Indicates whether a suppression should exist indefinitely or not. </p>",
          "shape": "SuppressIndefinitely"
        }
      },
      "required": [
        "checkName",
        "resourceIdentifier",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "CreateAuditSuppressionResponse": {
      "members": {},
      "type": "structure"
    },
    "CreateAuthorizerRequest": {
      "members": {
        "authorizerFunctionArn": {
          "documentation": "<p>The ARN of the authorizer's Lambda function.</p>",
          "shape": "AuthorizerFunctionArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "location": "uri",
          "locationName": "authorizerName",
          "shape": "AuthorizerName"
        },
        "enableCachingForHttp": {
          "documentation": "<p>When <code>true</code>, the result from the authorizer\u2019s Lambda function is cached for clients that use persistent HTTP connections. The results are cached for the time specified by the Lambda function in <code>refreshAfterInSeconds</code>. This value does not affect authorization of clients that use MQTT connections.</p> <p>The default value is <code>false</code>.</p>",
          "shape": "EnableCachingForHttp"
        },
        "signingDisabled": {
          "documentation": "<p>Specifies whether IoT validates the token signature in an authorization request.</p>",
          "shape": "BooleanKey"
        },
        "status": {
          "documentation": "<p>The status of the create authorizer request.</p>",
          "shape": "AuthorizerStatus"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the custom authorizer.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        },
        "tokenKeyName": {
          "documentation": "<p>The name of the token key used to extract the token from the HTTP headers.</p>",
          "shape": "TokenKeyName"
        },
        "tokenSigningPublicKeys": {
          "documentation": "<p>The public keys used to verify the digital signature returned by your custom authentication service.</p>",
          "shape": "PublicKeyMap"
        }
      },
      "required": [
        "authorizerName",
        "authorizerFunctionArn"
      ],
      "type": "structure"
    },
    "CreateAuthorizerResponse": {
      "members": {
        "authorizerArn": {
          "documentation": "<p>The authorizer ARN.</p>",
          "shape": "AuthorizerArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer's name.</p>",
          "shape": "AuthorizerName"
        }
      },
      "type": "structure"
    },
    "CreateBillingGroupRequest": {
      "members": {
        "billingGroupName": {
          "documentation": "<p>The name you wish to give to the billing group.</p>",
          "location": "uri",
          "locationName": "billingGroupName",
          "shape": "BillingGroupName"
        },
        "billingGroupProperties": {
          "documentation": "<p>The properties of the billing group.</p>",
          "shape": "BillingGroupProperties"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the billing group.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "billingGroupName"
      ],
      "type": "structure"
    },
    "CreateBillingGroupResponse": {
      "members": {
        "billingGroupArn": {
          "documentation": "<p>The ARN of the billing group.</p>",
          "shape": "BillingGroupArn"
        },
        "billingGroupId": {
          "documentation": "<p>The ID of the billing group.</p>",
          "shape": "BillingGroupId"
        },
        "billingGroupName": {
          "documentation": "<p>The name you gave to the billing group.</p>",
          "shape": "BillingGroupName"
        }
      },
      "type": "structure"
    },
    "CreateCertificateFromCsrRequest": {
      "documentation": "<p>The input for the CreateCertificateFromCsr operation.</p>",
      "members": {
        "certificateSigningRequest": {
          "documentation": "<p>The certificate signing request (CSR).</p>",
          "shape": "CertificateSigningRequest"
        },
        "setAsActive": {
          "documentation": "<p>Specifies whether the certificate is active.</p>",
          "location": "querystring",
          "locationName": "setAsActive",
          "shape": "SetAsActive"
        }
      },
      "required": [
        "certificateSigningRequest"
      ],
      "type": "structure"
    },
    "CreateCertificateFromCsrResponse": {
      "documentation": "<p>The output from the CreateCertificateFromCsr operation.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the certificate. You can use the ARN as a principal for policy operations.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the certificate. Certificate management operations only take a certificateId.</p>",
          "shape": "CertificateId"
        },
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        }
      },
      "type": "structure"
    },
    "CreateCustomMetricRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Each custom metric must have a unique client request token. If you try to create a new custom metric that already exists with a different token, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request. </p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "displayName": {
          "documentation": "<p> The friendly name in the console for the custom metric. This name doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. You can update the friendly name after you define it.</p>",
          "shape": "CustomMetricDisplayName"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric. This will be used in the metric report submitted from the device/thing. The name can't begin with <code>aws:</code>. You can't change the name after you define it.</p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "MetricName"
        },
        "metricType": {
          "documentation": "<p> The type of the custom metric. </p> <important> <p>The type <code>number</code> only takes a single metric value as an input, but when you submit the metrics value in the DeviceMetrics report, you must pass it as an array with a single value.</p> </important>",
          "shape": "CustomMetricType"
        },
        "tags": {
          "documentation": "<p> Metadata that can be used to manage the custom metric. </p>",
          "shape": "TagList"
        }
      },
      "required": [
        "metricName",
        "metricType",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "CreateCustomMetricResponse": {
      "members": {
        "metricArn": {
          "documentation": "<p> The Amazon Resource Number (ARN) of the custom metric. For example, <code>arn:<i>aws-partition</i>:iot:<i>region</i>:<i>accountId</i>:custommetric/<i>metricName</i> </code> </p>",
          "shape": "CustomMetricArn"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric to be used in the metric report. </p>",
          "shape": "MetricName"
        }
      },
      "type": "structure"
    },
    "CreateDimensionRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Each dimension must have a unique client request token. If you try to create a new dimension with the same token as a dimension that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "name": {
          "documentation": "<p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "DimensionName"
        },
        "stringValues": {
          "documentation": "<p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, \"admin/#\").</p>",
          "shape": "DimensionStringValues"
        },
        "tags": {
          "documentation": "<p>Metadata that can be used to manage the dimension.</p>",
          "shape": "TagList"
        },
        "type": {
          "documentation": "<p>Specifies the type of dimension. Supported types: <code>TOPIC_FILTER.</code> </p>",
          "shape": "DimensionType"
        }
      },
      "required": [
        "name",
        "type",
        "stringValues",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "CreateDimensionResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the created dimension.</p>",
          "shape": "DimensionArn"
        },
        "name": {
          "documentation": "<p>A unique identifier for the dimension.</p>",
          "shape": "DimensionName"
        }
      },
      "type": "structure"
    },
    "CreateDomainConfigurationRequest": {
      "members": {
        "authorizerConfig": {
          "documentation": "<p>An object that specifies the authorization service for a domain.</p>",
          "shape": "AuthorizerConfig"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration. This value must be unique to a region.</p>",
          "location": "uri",
          "locationName": "domainConfigurationName",
          "shape": "DomainConfigurationName"
        },
        "domainName": {
          "documentation": "<p>The name of the domain.</p>",
          "shape": "DomainName"
        },
        "serverCertificateArns": {
          "documentation": "<p>The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for Amazon Web Services-managed domains.</p>",
          "shape": "ServerCertificateArns"
        },
        "serviceType": {
          "documentation": "<p>The type of service delivered by the endpoint.</p> <note> <p>Amazon Web Services IoT Core currently supports only the <code>DATA</code> service type.</p> </note>",
          "shape": "ServiceType"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the domain configuration.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        },
        "validationCertificateArn": {
          "documentation": "<p>The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for Amazon Web Services-managed domains.</p>",
          "shape": "AcmCertificateArn"
        }
      },
      "required": [
        "domainConfigurationName"
      ],
      "type": "structure"
    },
    "CreateDomainConfigurationResponse": {
      "members": {
        "domainConfigurationArn": {
          "documentation": "<p>The ARN of the domain configuration.</p>",
          "shape": "DomainConfigurationArn"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration.</p>",
          "shape": "DomainConfigurationName"
        }
      },
      "type": "structure"
    },
    "CreateDynamicThingGroupRequest": {
      "members": {
        "indexName": {
          "documentation": "<p>The dynamic thing group index name.</p> <note> <p>Currently one index is supported: <code>AWS_Things</code>.</p> </note>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The dynamic thing group search query string.</p> <p>See <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html\">Query Syntax</a> for information about query string syntax.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The dynamic thing group query version.</p> <note> <p>Currently one query version is supported: \"2017-09-30\". If not specified, the query version defaults to this value.</p> </note>",
          "shape": "QueryVersion"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the dynamic thing group.</p>",
          "shape": "TagList"
        },
        "thingGroupName": {
          "documentation": "<p>The dynamic thing group name to create.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        },
        "thingGroupProperties": {
          "documentation": "<p>The dynamic thing group properties.</p>",
          "shape": "ThingGroupProperties"
        }
      },
      "required": [
        "thingGroupName",
        "queryString"
      ],
      "type": "structure"
    },
    "CreateDynamicThingGroupResponse": {
      "members": {
        "indexName": {
          "documentation": "<p>The dynamic thing group index name.</p>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The dynamic thing group search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The dynamic thing group query version.</p>",
          "shape": "QueryVersion"
        },
        "thingGroupArn": {
          "documentation": "<p>The dynamic thing group ARN.</p>",
          "shape": "ThingGroupArn"
        },
        "thingGroupId": {
          "documentation": "<p>The dynamic thing group ID.</p>",
          "shape": "ThingGroupId"
        },
        "thingGroupName": {
          "documentation": "<p>The dynamic thing group name.</p>",
          "shape": "ThingGroupName"
        }
      },
      "type": "structure"
    },
    "CreateFleetMetricRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The field to aggregate.</p>",
          "shape": "AggregationField"
        },
        "aggregationType": {
          "documentation": "<p>The type of the aggregation query.</p>",
          "shape": "AggregationType"
        },
        "description": {
          "documentation": "<p>The fleet metric description.</p>",
          "shape": "FleetMetricDescription"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "metricName": {
          "documentation": "<p>The name of the fleet metric to create.</p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "FleetMetricName"
        },
        "period": {
          "documentation": "<p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>",
          "shape": "FleetMetricPeriod"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The query version.</p>",
          "shape": "QueryVersion"
        },
        "tags": {
          "documentation": "<p>Metadata, which can be used to manage the fleet metric.</p>",
          "shape": "TagList"
        },
        "unit": {
          "documentation": "<p>Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href=\"https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">CW metric</a>. Default to null.</p>",
          "shape": "FleetMetricUnit"
        }
      },
      "required": [
        "metricName",
        "queryString",
        "aggregationType",
        "period",
        "aggregationField"
      ],
      "type": "structure"
    },
    "CreateFleetMetricResponse": {
      "members": {
        "metricArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the new fleet metric.</p>",
          "shape": "FleetMetricArn"
        },
        "metricName": {
          "documentation": "<p>The name of the fleet metric to create.</p>",
          "shape": "FleetMetricName"
        }
      },
      "type": "structure"
    },
    "CreateJobRequest": {
      "members": {
        "abortConfig": {
          "documentation": "<p>Allows you to create the criteria to abort a job.</p>",
          "shape": "AbortConfig"
        },
        "description": {
          "documentation": "<p>A short text description of the job.</p>",
          "shape": "JobDescription"
        },
        "document": {
          "documentation": "<p>The job document. Required if you don't specify a value for <code>documentSource</code>.</p>",
          "shape": "JobDocument"
        },
        "documentParameters": {
          "documentation": "<p>Parameters of an Amazon Web Services managed template that you can specify to create the job document.</p> <note> <p> <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services managed templates. This parameter can't be used with custom job templates or to create jobs from them.</p> </note>",
          "shape": "ParameterMap"
        },
        "documentSource": {
          "documentation": "<p>An S3 link to the job document. Required if you don't specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>",
          "shape": "JobDocumentSource"
        },
        "jobExecutionsRetryConfig": {
          "documentation": "<p>Allows you to create the criteria to retry a job.</p>",
          "shape": "JobExecutionsRetryConfig"
        },
        "jobExecutionsRolloutConfig": {
          "documentation": "<p>Allows you to create a staged rollout of the job.</p>",
          "shape": "JobExecutionsRolloutConfig"
        },
        "jobId": {
          "documentation": "<p>A job identifier which must be unique for your Amazon Web Services account. We recommend using a UUID. Alpha-numeric characters, \"-\" and \"_\" are valid for use here.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "jobTemplateArn": {
          "documentation": "<p>The ARN of the job template used to create the job.</p>",
          "shape": "JobTemplateArn"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "shape": "NamespaceId"
        },
        "presignedUrlConfig": {
          "documentation": "<p>Configuration information for pre-signed S3 URLs.</p>",
          "shape": "PresignedUrlConfig"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the job.</p>",
          "shape": "TagList"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.</p> <note> <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets. By using continuous jobs, devices that join the group receive the job execution even after the job has been created.</p> </note>",
          "shape": "TargetSelection"
        },
        "targets": {
          "documentation": "<p>A list of things and thing groups to which the job should be sent.</p>",
          "shape": "JobTargets"
        },
        "timeoutConfig": {
          "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>.</p>",
          "shape": "TimeoutConfig"
        }
      },
      "required": [
        "jobId",
        "targets"
      ],
      "type": "structure"
    },
    "CreateJobResponse": {
      "members": {
        "description": {
          "documentation": "<p>The job description.</p>",
          "shape": "JobDescription"
        },
        "jobArn": {
          "documentation": "<p>The job ARN.</p>",
          "shape": "JobArn"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job.</p>",
          "shape": "JobId"
        }
      },
      "type": "structure"
    },
    "CreateJobTemplateRequest": {
      "members": {
        "abortConfig": {
          "shape": "AbortConfig"
        },
        "description": {
          "documentation": "<p>A description of the job document.</p>",
          "shape": "JobDescription"
        },
        "document": {
          "documentation": "<p>The job document. Required if you don't specify a value for <code>documentSource</code>.</p>",
          "shape": "JobDocument"
        },
        "documentSource": {
          "documentation": "<p>An S3 link to the job document to use in the template. Required if you don't specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>",
          "shape": "JobDocumentSource"
        },
        "jobArn": {
          "documentation": "<p>The ARN of the job to use as the basis for the job template.</p>",
          "shape": "JobArn"
        },
        "jobExecutionsRetryConfig": {
          "documentation": "<p>Allows you to create the criteria to retry a job.</p>",
          "shape": "JobExecutionsRetryConfig"
        },
        "jobExecutionsRolloutConfig": {
          "shape": "JobExecutionsRolloutConfig"
        },
        "jobTemplateId": {
          "documentation": "<p>A unique identifier for the job template. We recommend using a UUID. Alpha-numeric characters, \"-\", and \"_\" are valid for use here.</p>",
          "location": "uri",
          "locationName": "jobTemplateId",
          "shape": "JobTemplateId"
        },
        "presignedUrlConfig": {
          "shape": "PresignedUrlConfig"
        },
        "tags": {
          "documentation": "<p>Metadata that can be used to manage the job template.</p>",
          "shape": "TagList"
        },
        "timeoutConfig": {
          "shape": "TimeoutConfig"
        }
      },
      "required": [
        "jobTemplateId",
        "description"
      ],
      "type": "structure"
    },
    "CreateJobTemplateResponse": {
      "members": {
        "jobTemplateArn": {
          "documentation": "<p>The ARN of the job template.</p>",
          "shape": "JobTemplateArn"
        },
        "jobTemplateId": {
          "documentation": "<p>The unique identifier of the job template.</p>",
          "shape": "JobTemplateId"
        }
      },
      "type": "structure"
    },
    "CreateKeysAndCertificateRequest": {
      "documentation": "<p>The input for the CreateKeysAndCertificate operation.</p> <p>Requires permission to access the <a href=\"https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\">CreateKeysAndCertificateRequest</a> action.</p>",
      "members": {
        "setAsActive": {
          "documentation": "<p>Specifies whether the certificate is active.</p>",
          "location": "querystring",
          "locationName": "setAsActive",
          "shape": "SetAsActive"
        }
      },
      "type": "structure"
    },
    "CreateKeysAndCertificateResponse": {
      "documentation": "<p>The output of the CreateKeysAndCertificate operation.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The ARN of the certificate.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the certificate. IoT issues a default subject name for the certificate (for example, IoT Certificate).</p>",
          "shape": "CertificateId"
        },
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "keyPair": {
          "documentation": "<p>The generated key pair.</p>",
          "shape": "KeyPair"
        }
      },
      "type": "structure"
    },
    "CreateMitigationActionRequest": {
      "members": {
        "actionName": {
          "documentation": "<p>A friendly name for the action. Choose a friendly name that accurately describes the action (for example, <code>EnableLoggingAction</code>).</p>",
          "location": "uri",
          "locationName": "actionName",
          "shape": "MitigationActionName"
        },
        "actionParams": {
          "documentation": "<p>Defines the type of action and the parameters for that action.</p>",
          "shape": "MitigationActionParams"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that is used to apply the mitigation action.</p>",
          "shape": "RoleArn"
        },
        "tags": {
          "documentation": "<p>Metadata that can be used to manage the mitigation action.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "actionName",
        "roleArn",
        "actionParams"
      ],
      "type": "structure"
    },
    "CreateMitigationActionResponse": {
      "members": {
        "actionArn": {
          "documentation": "<p>The ARN for the new mitigation action.</p>",
          "shape": "MitigationActionArn"
        },
        "actionId": {
          "documentation": "<p>A unique identifier for the new mitigation action.</p>",
          "shape": "MitigationActionId"
        }
      },
      "type": "structure"
    },
    "CreateOTAUpdateRequest": {
      "members": {
        "additionalParameters": {
          "documentation": "<p>A list of additional OTA update parameters which are name-value pairs.</p>",
          "shape": "AdditionalParameterMap"
        },
        "awsJobAbortConfig": {
          "documentation": "<p>The criteria that determine when and how a job abort takes place.</p>",
          "shape": "AwsJobAbortConfig"
        },
        "awsJobExecutionsRolloutConfig": {
          "documentation": "<p>Configuration for the rollout of OTA updates.</p>",
          "shape": "AwsJobExecutionsRolloutConfig"
        },
        "awsJobPresignedUrlConfig": {
          "documentation": "<p>Configuration information for pre-signed URLs.</p>",
          "shape": "AwsJobPresignedUrlConfig"
        },
        "awsJobTimeoutConfig": {
          "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.</p>",
          "shape": "AwsJobTimeoutConfig"
        },
        "description": {
          "documentation": "<p>The description of the OTA update.</p>",
          "shape": "OTAUpdateDescription"
        },
        "files": {
          "documentation": "<p>The files to be streamed by the OTA update.</p>",
          "shape": "OTAUpdateFiles"
        },
        "otaUpdateId": {
          "documentation": "<p>The ID of the OTA update to be created.</p>",
          "location": "uri",
          "locationName": "otaUpdateId",
          "shape": "OTAUpdateId"
        },
        "protocols": {
          "documentation": "<p>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.</p>",
          "shape": "Protocols"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that grants Amazon Web Services IoT Core access to the Amazon S3, IoT jobs and Amazon Web Services Code Signing resources to create an OTA update job.</p>",
          "shape": "RoleArn"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage updates.</p>",
          "shape": "TagList"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.</p>",
          "shape": "TargetSelection"
        },
        "targets": {
          "documentation": "<p>The devices targeted to receive OTA updates.</p>",
          "shape": "Targets"
        }
      },
      "required": [
        "otaUpdateId",
        "targets",
        "files",
        "roleArn"
      ],
      "type": "structure"
    },
    "CreateOTAUpdateResponse": {
      "members": {
        "awsIotJobArn": {
          "documentation": "<p>The IoT job ARN associated with the OTA update.</p>",
          "shape": "AwsIotJobArn"
        },
        "awsIotJobId": {
          "documentation": "<p>The IoT job ID associated with the OTA update.</p>",
          "shape": "AwsIotJobId"
        },
        "otaUpdateArn": {
          "documentation": "<p>The OTA update ARN.</p>",
          "shape": "OTAUpdateArn"
        },
        "otaUpdateId": {
          "documentation": "<p>The OTA update ID.</p>",
          "shape": "OTAUpdateId"
        },
        "otaUpdateStatus": {
          "documentation": "<p>The OTA update status.</p>",
          "shape": "OTAUpdateStatus"
        }
      },
      "type": "structure"
    },
    "CreatePolicyRequest": {
      "documentation": "<p>The input for the CreatePolicy operation.</p>",
      "members": {
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy. <b>policyDocument</b> must have a minimum length of 1, with a maximum length of 2048, excluding whitespace.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the policy.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        }
      },
      "required": [
        "policyName",
        "policyDocument"
      ],
      "type": "structure"
    },
    "CreatePolicyResponse": {
      "documentation": "<p>The output from the CreatePolicy operation.</p>",
      "members": {
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "shape": "PolicyVersionId"
        }
      },
      "type": "structure"
    },
    "CreatePolicyVersionRequest": {
      "documentation": "<p>The input for the CreatePolicyVersion operation.</p>",
      "members": {
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy. Minimum length of 1. Maximum length of 2048, excluding whitespace.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "setAsDefault": {
          "documentation": "<p>Specifies whether the policy version is set as the default. When this parameter is true, the new policy version becomes the operative version (that is, the version that is in effect for the certificates to which the policy is attached).</p>",
          "location": "querystring",
          "locationName": "setAsDefault",
          "shape": "SetAsDefault"
        }
      },
      "required": [
        "policyName",
        "policyDocument"
      ],
      "type": "structure"
    },
    "CreatePolicyVersionResponse": {
      "documentation": "<p>The output of the CreatePolicyVersion operation.</p>",
      "members": {
        "isDefaultVersion": {
          "documentation": "<p>Specifies whether the policy version is the default.</p>",
          "shape": "IsDefaultVersion"
        },
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy.</p>",
          "shape": "PolicyDocument"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "shape": "PolicyVersionId"
        }
      },
      "type": "structure"
    },
    "CreateProvisioningClaimRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The name of the provisioning template to use.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "CreateProvisioningClaimResponse": {
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate.</p>",
          "shape": "CertificateId"
        },
        "certificatePem": {
          "documentation": "<p>The provisioning claim certificate.</p>",
          "shape": "CertificatePem"
        },
        "expiration": {
          "documentation": "<p>The provisioning claim expiration time.</p>",
          "shape": "DateType"
        },
        "keyPair": {
          "documentation": "<p>The provisioning claim key pair.</p>",
          "shape": "KeyPair"
        }
      },
      "type": "structure"
    },
    "CreateProvisioningTemplateRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the provisioning template.</p>",
          "shape": "TemplateDescription"
        },
        "enabled": {
          "documentation": "<p>True to enable the provisioning template, otherwise false.</p>",
          "shape": "Enabled"
        },
        "preProvisioningHook": {
          "documentation": "<p>Creates a pre-provisioning hook template. Only supports template of type <code>FLEET_PROVISIONING</code>. For more information about provisioning template types, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html#iot-CreateProvisioningTemplate-request-type\">type</a>.</p>",
          "shape": "ProvisioningHook"
        },
        "provisioningRoleArn": {
          "documentation": "<p>The role ARN for the role associated with the provisioning template. This IoT role grants permission to provision a device.</p>",
          "shape": "RoleArn"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        },
        "templateBody": {
          "documentation": "<p>The JSON formatted contents of the provisioning template.</p>",
          "shape": "TemplateBody"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        },
        "type": {
          "documentation": "<p>The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html\">Provisioning template</a>. </p>",
          "shape": "TemplateType"
        }
      },
      "required": [
        "templateName",
        "templateBody",
        "provisioningRoleArn"
      ],
      "type": "structure"
    },
    "CreateProvisioningTemplateResponse": {
      "members": {
        "defaultVersionId": {
          "documentation": "<p>The default version of the provisioning template.</p>",
          "shape": "TemplateVersionId"
        },
        "templateArn": {
          "documentation": "<p>The ARN that identifies the provisioning template.</p>",
          "shape": "TemplateArn"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        }
      },
      "type": "structure"
    },
    "CreateProvisioningTemplateVersionRequest": {
      "members": {
        "setAsDefault": {
          "documentation": "<p>Sets a fleet provision template version as the default version.</p>",
          "location": "querystring",
          "locationName": "setAsDefault",
          "shape": "SetAsDefault"
        },
        "templateBody": {
          "documentation": "<p>The JSON formatted contents of the provisioning template.</p>",
          "shape": "TemplateBody"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName",
        "templateBody"
      ],
      "type": "structure"
    },
    "CreateProvisioningTemplateVersionResponse": {
      "members": {
        "isDefaultVersion": {
          "documentation": "<p>True if the provisioning template version is the default version, otherwise false.</p>",
          "shape": "IsDefaultVersion"
        },
        "templateArn": {
          "documentation": "<p>The ARN that identifies the provisioning template.</p>",
          "shape": "TemplateArn"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        },
        "versionId": {
          "documentation": "<p>The version of the provisioning template.</p>",
          "shape": "TemplateVersionId"
        }
      },
      "type": "structure"
    },
    "CreateRoleAliasRequest": {
      "members": {
        "credentialDurationSeconds": {
          "documentation": "<p>How long (in seconds) the credentials will be valid. The default value is 3,600 seconds.</p> <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>",
          "shape": "CredentialDurationSeconds"
        },
        "roleAlias": {
          "documentation": "<p>The role alias that points to a role ARN. This allows you to change the role without having to update the device.</p>",
          "location": "uri",
          "locationName": "roleAlias",
          "shape": "RoleAlias"
        },
        "roleArn": {
          "documentation": "<p>The role ARN.</p>",
          "shape": "RoleArn"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the role alias.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        }
      },
      "required": [
        "roleAlias",
        "roleArn"
      ],
      "type": "structure"
    },
    "CreateRoleAliasResponse": {
      "members": {
        "roleAlias": {
          "documentation": "<p>The role alias.</p>",
          "shape": "RoleAlias"
        },
        "roleAliasArn": {
          "documentation": "<p>The role alias ARN.</p>",
          "shape": "RoleAliasArn"
        }
      },
      "type": "structure"
    },
    "CreateScheduledAuditRequest": {
      "members": {
        "dayOfMonth": {
          "documentation": "<p>The day of the month on which the scheduled audit takes place. This can be \"1\" through \"31\" or \"LAST\". This field is required if the \"frequency\" parameter is set to <code>MONTHLY</code>. If days 29 to 31 are specified, and the month doesn't have that many days, the audit takes place on the <code>LAST</code> day of the month.</p>",
          "shape": "DayOfMonth"
        },
        "dayOfWeek": {
          "documentation": "<p>The day of the week on which the scheduled audit takes place, either <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the <code>frequency</code> parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.</p>",
          "shape": "DayOfWeek"
        },
        "frequency": {
          "documentation": "<p>How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code> or <code>MONTHLY</code>. The start time of each audit is determined by the system.</p>",
          "shape": "AuditFrequency"
        },
        "scheduledAuditName": {
          "documentation": "<p>The name you want to give to the scheduled audit. (Max. 128 chars)</p>",
          "location": "uri",
          "locationName": "scheduledAuditName",
          "shape": "ScheduledAuditName"
        },
        "tags": {
          "documentation": "<p>Metadata that can be used to manage the scheduled audit.</p>",
          "shape": "TagList"
        },
        "targetCheckNames": {
          "documentation": "<p>Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>",
          "shape": "TargetAuditCheckNames"
        }
      },
      "required": [
        "frequency",
        "targetCheckNames",
        "scheduledAuditName"
      ],
      "type": "structure"
    },
    "CreateScheduledAuditResponse": {
      "members": {
        "scheduledAuditArn": {
          "documentation": "<p>The ARN of the scheduled audit.</p>",
          "shape": "ScheduledAuditArn"
        }
      },
      "type": "structure"
    },
    "CreateSecurityProfileRequest": {
      "members": {
        "additionalMetricsToRetain": {
          "deprecated": true,
          "deprecatedMessage": "Use additionalMetricsToRetainV2.",
          "documentation": "<p> <i>Please use <a>CreateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>",
          "shape": "AdditionalMetricsToRetainList"
        },
        "additionalMetricsToRetainV2": {
          "documentation": "<p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>",
          "shape": "AdditionalMetricsToRetainV2List"
        },
        "alertTargets": {
          "documentation": "<p>Specifies the destinations to which alerts are sent. (Alerts are always sent to the console.) Alerts are generated when a device (thing) violates a behavior.</p>",
          "shape": "AlertTargets"
        },
        "behaviors": {
          "documentation": "<p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>",
          "shape": "Behaviors"
        },
        "securityProfileDescription": {
          "documentation": "<p>A description of the security profile.</p>",
          "shape": "SecurityProfileDescription"
        },
        "securityProfileName": {
          "documentation": "<p>The name you are giving to the security profile.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        },
        "tags": {
          "documentation": "<p>Metadata that can be used to manage the security profile.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "securityProfileName"
      ],
      "type": "structure"
    },
    "CreateSecurityProfileResponse": {
      "members": {
        "securityProfileArn": {
          "documentation": "<p>The ARN of the security profile.</p>",
          "shape": "SecurityProfileArn"
        },
        "securityProfileName": {
          "documentation": "<p>The name you gave to the security profile.</p>",
          "shape": "SecurityProfileName"
        }
      },
      "type": "structure"
    },
    "CreateStreamRequest": {
      "members": {
        "description": {
          "documentation": "<p>A description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "files": {
          "documentation": "<p>The files to stream.</p>",
          "shape": "StreamFiles"
        },
        "roleArn": {
          "documentation": "<p>An IAM role that allows the IoT service principal to access your S3 files.</p>",
          "shape": "RoleArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "location": "uri",
          "locationName": "streamId",
          "shape": "StreamId"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage streams.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "streamId",
        "files",
        "roleArn"
      ],
      "type": "structure"
    },
    "CreateStreamResponse": {
      "members": {
        "description": {
          "documentation": "<p>A description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "streamArn": {
          "documentation": "<p>The stream ARN.</p>",
          "shape": "StreamArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "shape": "StreamId"
        },
        "streamVersion": {
          "documentation": "<p>The version of the stream.</p>",
          "shape": "StreamVersion"
        }
      },
      "type": "structure"
    },
    "CreateThingGroupRequest": {
      "members": {
        "parentGroupName": {
          "documentation": "<p>The name of the parent thing group.</p>",
          "shape": "ThingGroupName"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the thing group.</p>",
          "shape": "TagList"
        },
        "thingGroupName": {
          "documentation": "<p>The thing group name to create.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        },
        "thingGroupProperties": {
          "documentation": "<p>The thing group properties.</p>",
          "shape": "ThingGroupProperties"
        }
      },
      "required": [
        "thingGroupName"
      ],
      "type": "structure"
    },
    "CreateThingGroupResponse": {
      "members": {
        "thingGroupArn": {
          "documentation": "<p>The thing group ARN.</p>",
          "shape": "ThingGroupArn"
        },
        "thingGroupId": {
          "documentation": "<p>The thing group ID.</p>",
          "shape": "ThingGroupId"
        },
        "thingGroupName": {
          "documentation": "<p>The thing group name.</p>",
          "shape": "ThingGroupName"
        }
      },
      "type": "structure"
    },
    "CreateThingRequest": {
      "documentation": "<p>The input for the CreateThing operation.</p>",
      "members": {
        "attributePayload": {
          "documentation": "<p>The attribute payload, which consists of up to three name/value pairs in a JSON document. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"string1\\\":\\\"string2\\\"}}</code> </p>",
          "shape": "AttributePayload"
        },
        "billingGroupName": {
          "documentation": "<p>The name of the billing group the thing will be added to.</p>",
          "shape": "BillingGroupName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to create.</p> <p>You can't change a thing's name after you create it. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type associated with the new thing.</p>",
          "shape": "ThingTypeName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "CreateThingResponse": {
      "documentation": "<p>The output of the CreateThing operation.</p>",
      "members": {
        "thingArn": {
          "documentation": "<p>The ARN of the new thing.</p>",
          "shape": "ThingArn"
        },
        "thingId": {
          "documentation": "<p>The thing ID.</p>",
          "shape": "ThingId"
        },
        "thingName": {
          "documentation": "<p>The name of the new thing.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "CreateThingTypeRequest": {
      "documentation": "<p>The input for the CreateThingType operation.</p>",
      "members": {
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the thing type.</p>",
          "shape": "TagList"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "location": "uri",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        },
        "thingTypeProperties": {
          "documentation": "<p>The ThingTypeProperties for the thing type to create. It contains information about the new thing type including a description, and a list of searchable thing attribute names.</p>",
          "shape": "ThingTypeProperties"
        }
      },
      "required": [
        "thingTypeName"
      ],
      "type": "structure"
    },
    "CreateThingTypeResponse": {
      "documentation": "<p>The output of the CreateThingType operation.</p>",
      "members": {
        "thingTypeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the thing type.</p>",
          "shape": "ThingTypeArn"
        },
        "thingTypeId": {
          "documentation": "<p>The thing type ID.</p>",
          "shape": "ThingTypeId"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "shape": "ThingTypeName"
        }
      },
      "type": "structure"
    },
    "CreateTopicRuleDestinationRequest": {
      "members": {
        "destinationConfiguration": {
          "documentation": "<p>The topic rule destination configuration.</p>",
          "shape": "TopicRuleDestinationConfiguration"
        }
      },
      "required": [
        "destinationConfiguration"
      ],
      "type": "structure"
    },
    "CreateTopicRuleDestinationResponse": {
      "members": {
        "topicRuleDestination": {
          "documentation": "<p>The topic rule destination.</p>",
          "shape": "TopicRuleDestination"
        }
      },
      "type": "structure"
    },
    "CreateTopicRuleRequest": {
      "documentation": "<p>The input for the CreateTopicRule operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the topic rule.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: --tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "location": "header",
          "locationName": "x-amz-tagging",
          "shape": "String"
        },
        "topicRulePayload": {
          "documentation": "<p>The rule payload.</p>",
          "shape": "TopicRulePayload"
        }
      },
      "payload": "topicRulePayload",
      "required": [
        "ruleName",
        "topicRulePayload"
      ],
      "type": "structure"
    },
    "CreatedAtDate": {
      "type": "timestamp"
    },
    "CreationDate": {
      "type": "timestamp"
    },
    "CredentialDurationSeconds": {
      "max": 43200,
      "min": 900,
      "type": "integer"
    },
    "CustomCodeSigning": {
      "documentation": "<p>Describes a custom method used to code sign a file.</p>",
      "members": {
        "certificateChain": {
          "documentation": "<p>The certificate chain.</p>",
          "shape": "CodeSigningCertificateChain"
        },
        "hashAlgorithm": {
          "documentation": "<p>The hash algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>SHA256</code> or <code>SHA1</code>, so you can pass either of them based on which was used for generating the signature.</p>",
          "shape": "HashAlgorithm"
        },
        "signature": {
          "documentation": "<p>The signature for the file.</p>",
          "shape": "CodeSigningSignature"
        },
        "signatureAlgorithm": {
          "documentation": "<p>The signature algorithm used to code sign the file. You can use a string as the algorithm name if the target over-the-air (OTA) update devices are able to verify the signature that was generated using the same signature algorithm. For example, FreeRTOS uses <code>ECDSA</code> or <code>RSA</code>, so you can pass either of them based on which was used for generating the signature.</p>",
          "shape": "SignatureAlgorithm"
        }
      },
      "type": "structure"
    },
    "CustomMetricArn": {
      "type": "string"
    },
    "CustomMetricDisplayName": {
      "max": 128,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "CustomMetricType": {
      "enum": [
        "string-list",
        "ip-address-list",
        "number-list",
        "number"
      ],
      "type": "string"
    },
    "CustomerVersion": {
      "min": 1,
      "type": "integer"
    },
    "DataCollectionPercentage": {
      "max": 100,
      "min": 0,
      "type": "double"
    },
    "DateType": {
      "type": "timestamp"
    },
    "DayOfMonth": {
      "pattern": "^([1-9]|[12][0-9]|3[01])$|^LAST$",
      "type": "string"
    },
    "DayOfWeek": {
      "enum": [
        "SUN",
        "MON",
        "TUE",
        "WED",
        "THU",
        "FRI",
        "SAT"
      ],
      "type": "string"
    },
    "DeleteAccountAuditConfigurationRequest": {
      "members": {
        "deleteScheduledAudits": {
          "documentation": "<p>If true, all scheduled audits are deleted.</p>",
          "location": "querystring",
          "locationName": "deleteScheduledAudits",
          "shape": "DeleteScheduledAudits"
        }
      },
      "type": "structure"
    },
    "DeleteAccountAuditConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAdditionalMetricsToRetain": {
      "type": "boolean"
    },
    "DeleteAlertTargets": {
      "type": "boolean"
    },
    "DeleteAuditSuppressionRequest": {
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        }
      },
      "required": [
        "checkName",
        "resourceIdentifier"
      ],
      "type": "structure"
    },
    "DeleteAuditSuppressionResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAuthorizerRequest": {
      "members": {
        "authorizerName": {
          "documentation": "<p>The name of the authorizer to delete.</p>",
          "location": "uri",
          "locationName": "authorizerName",
          "shape": "AuthorizerName"
        }
      },
      "required": [
        "authorizerName"
      ],
      "type": "structure"
    },
    "DeleteAuthorizerResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteBehaviors": {
      "type": "boolean"
    },
    "DeleteBillingGroupRequest": {
      "members": {
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "location": "uri",
          "locationName": "billingGroupName",
          "shape": "BillingGroupName"
        },
        "expectedVersion": {
          "documentation": "<p>The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>DeleteBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        }
      },
      "required": [
        "billingGroupName"
      ],
      "type": "structure"
    },
    "DeleteBillingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteCACertificateRequest": {
      "documentation": "<p>Input for the DeleteCACertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate to delete. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "caCertificateId",
          "shape": "CertificateId"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "DeleteCACertificateResponse": {
      "documentation": "<p>The output for the DeleteCACertificate operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteCertificateRequest": {
      "documentation": "<p>The input for the DeleteCertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        },
        "forceDelete": {
          "documentation": "<p>Forces the deletion of a certificate if it is inactive and is not attached to an IoT thing.</p>",
          "location": "querystring",
          "locationName": "forceDelete",
          "shape": "ForceDelete"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "DeleteConflictException": {
      "documentation": "<p>You can't delete the resource because it is attached to one or more resources.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "DeleteCustomMetricRequest": {
      "members": {
        "metricName": {
          "documentation": "<p> The name of the custom metric. </p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "MetricName"
        }
      },
      "required": [
        "metricName"
      ],
      "type": "structure"
    },
    "DeleteCustomMetricResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteDimensionRequest": {
      "members": {
        "name": {
          "documentation": "<p>The unique identifier for the dimension that you want to delete.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "DimensionName"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "DeleteDimensionResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteDomainConfigurationRequest": {
      "members": {
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration to be deleted.</p>",
          "location": "uri",
          "locationName": "domainConfigurationName",
          "shape": "DomainConfigurationName"
        }
      },
      "required": [
        "domainConfigurationName"
      ],
      "type": "structure"
    },
    "DeleteDomainConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteDynamicThingGroupRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the dynamic thing group to delete.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "thingGroupName": {
          "documentation": "<p>The name of the dynamic thing group to delete.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        }
      },
      "required": [
        "thingGroupName"
      ],
      "type": "structure"
    },
    "DeleteDynamicThingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteFleetMetricRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the fleet metric to delete.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "metricName": {
          "documentation": "<p>The name of the fleet metric to delete.</p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "FleetMetricName"
        }
      },
      "required": [
        "metricName"
      ],
      "type": "structure"
    },
    "DeleteJobExecutionRequest": {
      "members": {
        "executionNumber": {
          "documentation": "<p>The ID of the job execution to be deleted. The <code>executionNumber</code> refers to the execution of a particular job on a particular device.</p> <p>Note that once a job execution is deleted, the <code>executionNumber</code> may be reused by IoT, so be sure you get and use the correct value here.</p>",
          "location": "uri",
          "locationName": "executionNumber",
          "shape": "ExecutionNumber"
        },
        "force": {
          "documentation": "<p>(Optional) When true, you can delete a job execution which is \"IN_PROGRESS\". Otherwise, you can only delete a job execution which is in a terminal state (\"SUCCEEDED\", \"FAILED\", \"REJECTED\", \"REMOVED\" or \"CANCELED\") or an exception will occur. The default is false.</p> <note> <p>Deleting a job execution which is \"IN_PROGRESS\", will cause the device to be unable to access job information or update the job execution status. Use caution and ensure that the device is able to recover to a valid state.</p> </note>",
          "location": "querystring",
          "locationName": "force",
          "shape": "ForceFlag"
        },
        "jobId": {
          "documentation": "<p>The ID of the job whose execution on a particular device will be deleted.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        },
        "thingName": {
          "documentation": "<p>The name of the thing whose job execution will be deleted.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "jobId",
        "thingName",
        "executionNumber"
      ],
      "type": "structure"
    },
    "DeleteJobRequest": {
      "members": {
        "force": {
          "documentation": "<p>(Optional) When true, you can delete a job which is \"IN_PROGRESS\". Otherwise, you can only delete a job which is in a terminal state (\"COMPLETED\" or \"CANCELED\") or an exception will occur. The default is false.</p> <note> <p>Deleting a job which is \"IN_PROGRESS\", will cause a device which is executing the job to be unable to access job information or update the job execution status. Use caution and ensure that each device executing a job which is deleted is able to recover to a valid state.</p> </note>",
          "location": "querystring",
          "locationName": "force",
          "shape": "ForceFlag"
        },
        "jobId": {
          "documentation": "<p>The ID of the job to be deleted.</p> <p>After a job deletion is completed, you may reuse this jobId when you create a new job. However, this is not recommended, and you must ensure that your devices are not using the jobId to refer to the deleted job.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "DeleteJobTemplateRequest": {
      "members": {
        "jobTemplateId": {
          "documentation": "<p>The unique identifier of the job template to delete.</p>",
          "location": "uri",
          "locationName": "jobTemplateId",
          "shape": "JobTemplateId"
        }
      },
      "required": [
        "jobTemplateId"
      ],
      "type": "structure"
    },
    "DeleteMitigationActionRequest": {
      "members": {
        "actionName": {
          "documentation": "<p>The name of the mitigation action that you want to delete.</p>",
          "location": "uri",
          "locationName": "actionName",
          "shape": "MitigationActionName"
        }
      },
      "required": [
        "actionName"
      ],
      "type": "structure"
    },
    "DeleteMitigationActionResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteOTAUpdateRequest": {
      "members": {
        "deleteStream": {
          "documentation": "<p>When true, the stream created by the OTAUpdate process is deleted when the OTA update is deleted. Ignored if the stream specified in the OTAUpdate is supplied by the user.</p>",
          "location": "querystring",
          "locationName": "deleteStream",
          "shape": "DeleteStream"
        },
        "forceDeleteAWSJob": {
          "documentation": "<p>When true, deletes the IoT job created by the OTAUpdate process even if it is \"IN_PROGRESS\". Otherwise, if the job is not in a terminal state (\"COMPLETED\" or \"CANCELED\") an exception will occur. The default is false.</p>",
          "location": "querystring",
          "locationName": "forceDeleteAWSJob",
          "shape": "ForceDeleteAWSJob"
        },
        "otaUpdateId": {
          "documentation": "<p>The ID of the OTA update to delete.</p>",
          "location": "uri",
          "locationName": "otaUpdateId",
          "shape": "OTAUpdateId"
        }
      },
      "required": [
        "otaUpdateId"
      ],
      "type": "structure"
    },
    "DeleteOTAUpdateResponse": {
      "members": {},
      "type": "structure"
    },
    "DeletePolicyRequest": {
      "documentation": "<p>The input for the DeletePolicy operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy to delete.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        }
      },
      "required": [
        "policyName"
      ],
      "type": "structure"
    },
    "DeletePolicyVersionRequest": {
      "documentation": "<p>The input for the DeletePolicyVersion operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "location": "uri",
          "locationName": "policyVersionId",
          "shape": "PolicyVersionId"
        }
      },
      "required": [
        "policyName",
        "policyVersionId"
      ],
      "type": "structure"
    },
    "DeleteProvisioningTemplateRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The name of the fleet provision template to delete.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "DeleteProvisioningTemplateResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteProvisioningTemplateVersionRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The name of the provisioning template version to delete.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        },
        "versionId": {
          "documentation": "<p>The provisioning template version ID to delete.</p>",
          "location": "uri",
          "locationName": "versionId",
          "shape": "TemplateVersionId"
        }
      },
      "required": [
        "templateName",
        "versionId"
      ],
      "type": "structure"
    },
    "DeleteProvisioningTemplateVersionResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteRegistrationCodeRequest": {
      "documentation": "<p>The input for the DeleteRegistrationCode operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteRegistrationCodeResponse": {
      "documentation": "<p>The output for the DeleteRegistrationCode operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteRoleAliasRequest": {
      "members": {
        "roleAlias": {
          "documentation": "<p>The role alias to delete.</p>",
          "location": "uri",
          "locationName": "roleAlias",
          "shape": "RoleAlias"
        }
      },
      "required": [
        "roleAlias"
      ],
      "type": "structure"
    },
    "DeleteRoleAliasResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteScheduledAuditRequest": {
      "members": {
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit you want to delete.</p>",
          "location": "uri",
          "locationName": "scheduledAuditName",
          "shape": "ScheduledAuditName"
        }
      },
      "required": [
        "scheduledAuditName"
      ],
      "type": "structure"
    },
    "DeleteScheduledAuditResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteScheduledAudits": {
      "type": "boolean"
    },
    "DeleteSecurityProfileRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the security profile to be deleted.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        }
      },
      "required": [
        "securityProfileName"
      ],
      "type": "structure"
    },
    "DeleteSecurityProfileResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteStream": {
      "type": "boolean"
    },
    "DeleteStreamRequest": {
      "members": {
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "location": "uri",
          "locationName": "streamId",
          "shape": "StreamId"
        }
      },
      "required": [
        "streamId"
      ],
      "type": "structure"
    },
    "DeleteStreamResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteThingGroupRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the thing group to delete.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "thingGroupName": {
          "documentation": "<p>The name of the thing group to delete.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        }
      },
      "required": [
        "thingGroupName"
      ],
      "type": "structure"
    },
    "DeleteThingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteThingRequest": {
      "documentation": "<p>The input for the DeleteThing operation.</p>",
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>DeleteThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to delete.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "DeleteThingResponse": {
      "documentation": "<p>The output of the DeleteThing operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteThingTypeRequest": {
      "documentation": "<p>The input for the DeleteThingType operation.</p>",
      "members": {
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "location": "uri",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        }
      },
      "required": [
        "thingTypeName"
      ],
      "type": "structure"
    },
    "DeleteThingTypeResponse": {
      "documentation": "<p>The output for the DeleteThingType operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeleteTopicRuleDestinationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the topic rule destination to delete.</p>",
          "location": "uri",
          "locationName": "arn",
          "shape": "AwsArn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "DeleteTopicRuleDestinationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteTopicRuleRequest": {
      "documentation": "<p>The input for the DeleteTopicRule operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        }
      },
      "required": [
        "ruleName"
      ],
      "type": "structure"
    },
    "DeleteV2LoggingLevelRequest": {
      "members": {
        "targetName": {
          "documentation": "<p>The name of the resource for which you are configuring logging.</p>",
          "location": "querystring",
          "locationName": "targetName",
          "shape": "LogTargetName"
        },
        "targetType": {
          "documentation": "<p>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</p>",
          "location": "querystring",
          "locationName": "targetType",
          "shape": "LogTargetType"
        }
      },
      "required": [
        "targetType",
        "targetName"
      ],
      "type": "structure"
    },
    "DeliveryStreamName": {
      "type": "string"
    },
    "Denied": {
      "documentation": "<p>Contains information that denied the authorization.</p>",
      "members": {
        "explicitDeny": {
          "documentation": "<p>Information that explicitly denies the authorization. </p>",
          "shape": "ExplicitDeny"
        },
        "implicitDeny": {
          "documentation": "<p>Information that implicitly denies the authorization. When a policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.</p>",
          "shape": "ImplicitDeny"
        }
      },
      "type": "structure"
    },
    "DeprecateThingTypeRequest": {
      "documentation": "<p>The input for the DeprecateThingType operation.</p>",
      "members": {
        "thingTypeName": {
          "documentation": "<p>The name of the thing type to deprecate.</p>",
          "location": "uri",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        },
        "undoDeprecate": {
          "documentation": "<p>Whether to undeprecate a deprecated thing type. If <b>true</b>, the thing type will not be deprecated anymore and you can associate it with things.</p>",
          "shape": "UndoDeprecate"
        }
      },
      "required": [
        "thingTypeName"
      ],
      "type": "structure"
    },
    "DeprecateThingTypeResponse": {
      "documentation": "<p>The output for the DeprecateThingType operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DeprecationDate": {
      "type": "timestamp"
    },
    "DescribeAccountAuditConfigurationRequest": {
      "members": {},
      "type": "structure"
    },
    "DescribeAccountAuditConfigurationResponse": {
      "members": {
        "auditCheckConfigurations": {
          "documentation": "<p>Which audit checks are enabled and disabled for this account.</p>",
          "shape": "AuditCheckConfigurations"
        },
        "auditNotificationTargetConfigurations": {
          "documentation": "<p>Information about the targets to which audit notifications are sent for this account.</p>",
          "shape": "AuditNotificationTargetConfigurations"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants permission to IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required.</p>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "DescribeAuditFindingRequest": {
      "members": {
        "findingId": {
          "documentation": "<p>A unique identifier for a single audit finding. You can use this identifier to apply mitigation actions to the finding.</p>",
          "location": "uri",
          "locationName": "findingId",
          "shape": "FindingId"
        }
      },
      "required": [
        "findingId"
      ],
      "type": "structure"
    },
    "DescribeAuditFindingResponse": {
      "members": {
        "finding": {
          "shape": "AuditFinding"
        }
      },
      "type": "structure"
    },
    "DescribeAuditMitigationActionsTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The unique identifier for the audit mitigation task.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "DescribeAuditMitigationActionsTaskResponse": {
      "members": {
        "actionsDefinition": {
          "documentation": "<p>Specifies the mitigation actions and their parameters that are applied as part of this task.</p>",
          "shape": "MitigationActionList"
        },
        "auditCheckToActionsMapping": {
          "documentation": "<p>Specifies the mitigation actions that should be applied to specific audit checks.</p>",
          "shape": "AuditCheckToActionsMapping"
        },
        "endTime": {
          "documentation": "<p>The date and time when the task was completed or canceled.</p>",
          "shape": "Timestamp"
        },
        "startTime": {
          "documentation": "<p>The date and time when the task was started.</p>",
          "shape": "Timestamp"
        },
        "target": {
          "documentation": "<p>Identifies the findings to which the mitigation actions are applied. This can be by audit checks, by audit task, or a set of findings.</p>",
          "shape": "AuditMitigationActionsTaskTarget"
        },
        "taskStatistics": {
          "documentation": "<p>Aggregate counts of the results when the mitigation tasks were applied to the findings for this audit mitigation actions task.</p>",
          "shape": "AuditMitigationActionsTaskStatistics"
        },
        "taskStatus": {
          "documentation": "<p>The current status of the task.</p>",
          "shape": "AuditMitigationActionsTaskStatus"
        }
      },
      "type": "structure"
    },
    "DescribeAuditSuppressionRequest": {
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        }
      },
      "required": [
        "checkName",
        "resourceIdentifier"
      ],
      "type": "structure"
    },
    "DescribeAuditSuppressionResponse": {
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "description": {
          "documentation": "<p> The description of the audit suppression. </p>",
          "shape": "AuditDescription"
        },
        "expirationDate": {
          "documentation": "<p> The epoch timestamp in seconds at which this suppression expires. </p>",
          "shape": "Timestamp"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        },
        "suppressIndefinitely": {
          "documentation": "<p> Indicates whether a suppression should exist indefinitely or not. </p>",
          "shape": "SuppressIndefinitely"
        }
      },
      "type": "structure"
    },
    "DescribeAuditTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The ID of the audit whose information you want to get.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "AuditTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "DescribeAuditTaskResponse": {
      "members": {
        "auditDetails": {
          "documentation": "<p>Detailed information about each check performed during this audit.</p>",
          "shape": "AuditDetails"
        },
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit (only if the audit was a scheduled audit).</p>",
          "shape": "ScheduledAuditName"
        },
        "taskStartTime": {
          "documentation": "<p>The time the audit started.</p>",
          "shape": "Timestamp"
        },
        "taskStatistics": {
          "documentation": "<p>Statistical information about the audit.</p>",
          "shape": "TaskStatistics"
        },
        "taskStatus": {
          "documentation": "<p>The status of the audit: one of \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\", or \"CANCELED\".</p>",
          "shape": "AuditTaskStatus"
        },
        "taskType": {
          "documentation": "<p>The type of audit: \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED_AUDIT_TASK\".</p>",
          "shape": "AuditTaskType"
        }
      },
      "type": "structure"
    },
    "DescribeAuthorizerRequest": {
      "members": {
        "authorizerName": {
          "documentation": "<p>The name of the authorizer to describe.</p>",
          "location": "uri",
          "locationName": "authorizerName",
          "shape": "AuthorizerName"
        }
      },
      "required": [
        "authorizerName"
      ],
      "type": "structure"
    },
    "DescribeAuthorizerResponse": {
      "members": {
        "authorizerDescription": {
          "documentation": "<p>The authorizer description.</p>",
          "shape": "AuthorizerDescription"
        }
      },
      "type": "structure"
    },
    "DescribeBillingGroupRequest": {
      "members": {
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "location": "uri",
          "locationName": "billingGroupName",
          "shape": "BillingGroupName"
        }
      },
      "required": [
        "billingGroupName"
      ],
      "type": "structure"
    },
    "DescribeBillingGroupResponse": {
      "members": {
        "billingGroupArn": {
          "documentation": "<p>The ARN of the billing group.</p>",
          "shape": "BillingGroupArn"
        },
        "billingGroupId": {
          "documentation": "<p>The ID of the billing group.</p>",
          "shape": "BillingGroupId"
        },
        "billingGroupMetadata": {
          "documentation": "<p>Additional information about the billing group.</p>",
          "shape": "BillingGroupMetadata"
        },
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "shape": "BillingGroupName"
        },
        "billingGroupProperties": {
          "documentation": "<p>The properties of the billing group.</p>",
          "shape": "BillingGroupProperties"
        },
        "version": {
          "documentation": "<p>The version of the billing group.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeCACertificateRequest": {
      "documentation": "<p>The input for the DescribeCACertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The CA certificate identifier.</p>",
          "location": "uri",
          "locationName": "caCertificateId",
          "shape": "CertificateId"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "DescribeCACertificateResponse": {
      "documentation": "<p>The output from the DescribeCACertificate operation.</p>",
      "members": {
        "certificateDescription": {
          "documentation": "<p>The CA certificate description.</p>",
          "shape": "CACertificateDescription"
        },
        "registrationConfig": {
          "documentation": "<p>Information about the registration configuration.</p>",
          "shape": "RegistrationConfig"
        }
      },
      "type": "structure"
    },
    "DescribeCertificateRequest": {
      "documentation": "<p>The input for the DescribeCertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "DescribeCertificateResponse": {
      "documentation": "<p>The output of the DescribeCertificate operation.</p>",
      "members": {
        "certificateDescription": {
          "documentation": "<p>The description of the certificate.</p>",
          "shape": "CertificateDescription"
        }
      },
      "type": "structure"
    },
    "DescribeCustomMetricRequest": {
      "members": {
        "metricName": {
          "documentation": "<p> The name of the custom metric. </p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "MetricName"
        }
      },
      "required": [
        "metricName"
      ],
      "type": "structure"
    },
    "DescribeCustomMetricResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p> The creation date of the custom metric in milliseconds since epoch. </p>",
          "shape": "Timestamp"
        },
        "displayName": {
          "documentation": "<p> Field represents a friendly name in the console for the custom metric; doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated. </p>",
          "shape": "CustomMetricDisplayName"
        },
        "lastModifiedDate": {
          "documentation": "<p> The time the custom metric was last modified in milliseconds since epoch. </p>",
          "shape": "Timestamp"
        },
        "metricArn": {
          "documentation": "<p> The Amazon Resource Number (ARN) of the custom metric. </p>",
          "shape": "CustomMetricArn"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric. </p>",
          "shape": "MetricName"
        },
        "metricType": {
          "documentation": "<p> The type of the custom metric. </p> <important> <p>The type <code>number</code> only takes a single metric value as an input, but while submitting the metrics value in the DeviceMetrics report, it must be passed as an array with a single value.</p> </important>",
          "shape": "CustomMetricType"
        }
      },
      "type": "structure"
    },
    "DescribeDefaultAuthorizerRequest": {
      "members": {},
      "type": "structure"
    },
    "DescribeDefaultAuthorizerResponse": {
      "members": {
        "authorizerDescription": {
          "documentation": "<p>The default authorizer's description.</p>",
          "shape": "AuthorizerDescription"
        }
      },
      "type": "structure"
    },
    "DescribeDetectMitigationActionsTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "DescribeDetectMitigationActionsTaskResponse": {
      "members": {
        "taskSummary": {
          "documentation": "<p> The description of a task. </p>",
          "shape": "DetectMitigationActionsTaskSummary"
        }
      },
      "type": "structure"
    },
    "DescribeDimensionRequest": {
      "members": {
        "name": {
          "documentation": "<p>The unique identifier for the dimension.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "DimensionName"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "DescribeDimensionResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the dimension.</p>",
          "shape": "DimensionArn"
        },
        "creationDate": {
          "documentation": "<p>The date the dimension was created.</p>",
          "shape": "Timestamp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date the dimension was last modified.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The unique identifier for the dimension.</p>",
          "shape": "DimensionName"
        },
        "stringValues": {
          "documentation": "<p>The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.</p>",
          "shape": "DimensionStringValues"
        },
        "type": {
          "documentation": "<p>The type of the dimension.</p>",
          "shape": "DimensionType"
        }
      },
      "type": "structure"
    },
    "DescribeDomainConfigurationRequest": {
      "members": {
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration.</p>",
          "location": "uri",
          "locationName": "domainConfigurationName",
          "shape": "ReservedDomainConfigurationName"
        }
      },
      "required": [
        "domainConfigurationName"
      ],
      "type": "structure"
    },
    "DescribeDomainConfigurationResponse": {
      "members": {
        "authorizerConfig": {
          "documentation": "<p>An object that specifies the authorization service for a domain.</p>",
          "shape": "AuthorizerConfig"
        },
        "domainConfigurationArn": {
          "documentation": "<p>The ARN of the domain configuration.</p>",
          "shape": "DomainConfigurationArn"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration.</p>",
          "shape": "ReservedDomainConfigurationName"
        },
        "domainConfigurationStatus": {
          "documentation": "<p>A Boolean value that specifies the current state of the domain configuration.</p>",
          "shape": "DomainConfigurationStatus"
        },
        "domainName": {
          "documentation": "<p>The name of the domain.</p>",
          "shape": "DomainName"
        },
        "domainType": {
          "documentation": "<p>The type of the domain.</p>",
          "shape": "DomainType"
        },
        "lastStatusChangeDate": {
          "documentation": "<p>The date and time the domain configuration's status was last changed.</p>",
          "shape": "DateType"
        },
        "serverCertificates": {
          "documentation": "<p>A list containing summary information about the server certificate included in the domain configuration.</p>",
          "shape": "ServerCertificates"
        },
        "serviceType": {
          "documentation": "<p>The type of service delivered by the endpoint.</p>",
          "shape": "ServiceType"
        }
      },
      "type": "structure"
    },
    "DescribeEndpointRequest": {
      "documentation": "<p>The input for the DescribeEndpoint operation.</p>",
      "members": {
        "endpointType": {
          "documentation": "<p>The endpoint type. Valid endpoint types include:</p> <ul> <li> <p> <code>iot:Data</code> - Returns a VeriSign signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Data-ATS</code> - Returns an ATS signed data endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:CredentialProvider</code> - Returns an IoT credentials provider API endpoint.</p> </li> </ul> <ul> <li> <p> <code>iot:Jobs</code> - Returns an IoT device management Jobs API endpoint.</p> </li> </ul> <p>We strongly recommend that customers use the newer <code>iot:Data-ATS</code> endpoint type to avoid issues related to the widespread distrust of Symantec certificate authorities.</p>",
          "location": "querystring",
          "locationName": "endpointType",
          "shape": "EndpointType"
        }
      },
      "type": "structure"
    },
    "DescribeEndpointResponse": {
      "documentation": "<p>The output from the DescribeEndpoint operation.</p>",
      "members": {
        "endpointAddress": {
          "documentation": "<p>The endpoint. The format of the endpoint is as follows: <i>identifier</i>.iot.<i>region</i>.amazonaws.com.</p>",
          "shape": "EndpointAddress"
        }
      },
      "type": "structure"
    },
    "DescribeEventConfigurationsRequest": {
      "members": {},
      "type": "structure"
    },
    "DescribeEventConfigurationsResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p>The creation date of the event configuration.</p>",
          "shape": "CreationDate"
        },
        "eventConfigurations": {
          "documentation": "<p>The event configurations.</p>",
          "shape": "EventConfigurations"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date the event configurations were last modified.</p>",
          "shape": "LastModifiedDate"
        }
      },
      "type": "structure"
    },
    "DescribeFleetMetricRequest": {
      "members": {
        "metricName": {
          "documentation": "<p>The name of the fleet metric to describe.</p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "FleetMetricName"
        }
      },
      "required": [
        "metricName"
      ],
      "type": "structure"
    },
    "DescribeFleetMetricResponse": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The field to aggregate.</p>",
          "shape": "AggregationField"
        },
        "aggregationType": {
          "documentation": "<p>The type of the aggregation query.</p>",
          "shape": "AggregationType"
        },
        "creationDate": {
          "documentation": "<p>The date when the fleet metric is created.</p>",
          "shape": "CreationDate"
        },
        "description": {
          "documentation": "<p>The fleet metric description.</p>",
          "shape": "FleetMetricDescription"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date when the fleet metric is last modified.</p>",
          "shape": "LastModifiedDate"
        },
        "metricArn": {
          "documentation": "<p>The ARN of the fleet metric to describe.</p>",
          "shape": "FleetMetricArn"
        },
        "metricName": {
          "documentation": "<p>The name of the fleet metric to describe.</p>",
          "shape": "FleetMetricName"
        },
        "period": {
          "documentation": "<p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>",
          "shape": "FleetMetricPeriod"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The query version.</p>",
          "shape": "QueryVersion"
        },
        "unit": {
          "documentation": "<p>Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href=\"https://docs.aws.amazon.com/https:/docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">CW metric</a>.</p>",
          "shape": "FleetMetricUnit"
        },
        "version": {
          "documentation": "<p>The version of the fleet metric.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeIndexRequest": {
      "members": {
        "indexName": {
          "documentation": "<p>The index name.</p>",
          "location": "uri",
          "locationName": "indexName",
          "shape": "IndexName"
        }
      },
      "required": [
        "indexName"
      ],
      "type": "structure"
    },
    "DescribeIndexResponse": {
      "members": {
        "indexName": {
          "documentation": "<p>The index name.</p>",
          "shape": "IndexName"
        },
        "indexStatus": {
          "documentation": "<p>The index status.</p>",
          "shape": "IndexStatus"
        },
        "schema": {
          "documentation": "<p>Contains a value that specifies the type of indexing performed. Valid values are:</p> <ul> <li> <p>REGISTRY \u2013 Your thing index contains only registry data.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry data and shadow data.</p> </li> <li> <p>REGISTRY_AND_CONNECTIVITY_STATUS - Your thing index contains registry data and thing connectivity status data.</p> </li> <li> <p>REGISTRY_AND_SHADOW_AND_CONNECTIVITY_STATUS - Your thing index contains registry data, shadow data, and thing connectivity status data.</p> </li> <li> <p>MULTI_INDEXING_MODE - Your thing index contains multiple data sources. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_GetIndexingConfiguration.html\">GetIndexingConfiguration</a>.</p> </li> </ul>",
          "shape": "IndexSchema"
        }
      },
      "type": "structure"
    },
    "DescribeJobExecutionRequest": {
      "members": {
        "executionNumber": {
          "documentation": "<p>A string (consisting of the digits \"0\" through \"9\" which is used to specify a particular job execution on a particular device.</p>",
          "location": "querystring",
          "locationName": "executionNumber",
          "shape": "ExecutionNumber"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "thingName": {
          "documentation": "<p>The name of the thing on which the job execution is running.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "jobId",
        "thingName"
      ],
      "type": "structure"
    },
    "DescribeJobExecutionResponse": {
      "members": {
        "execution": {
          "documentation": "<p>Information about the job execution.</p>",
          "shape": "JobExecution"
        }
      },
      "type": "structure"
    },
    "DescribeJobRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "DescribeJobResponse": {
      "members": {
        "documentSource": {
          "documentation": "<p>An S3 link to the job document.</p>",
          "shape": "JobDocumentSource"
        },
        "job": {
          "documentation": "<p>Information about the job.</p>",
          "shape": "Job"
        }
      },
      "type": "structure"
    },
    "DescribeJobTemplateRequest": {
      "members": {
        "jobTemplateId": {
          "documentation": "<p>The unique identifier of the job template.</p>",
          "location": "uri",
          "locationName": "jobTemplateId",
          "shape": "JobTemplateId"
        }
      },
      "required": [
        "jobTemplateId"
      ],
      "type": "structure"
    },
    "DescribeJobTemplateResponse": {
      "members": {
        "abortConfig": {
          "shape": "AbortConfig"
        },
        "createdAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job template was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>A description of the job template.</p>",
          "shape": "JobDescription"
        },
        "document": {
          "documentation": "<p>The job document.</p>",
          "shape": "JobDocument"
        },
        "documentSource": {
          "documentation": "<p>An S3 link to the job document.</p>",
          "shape": "JobDocumentSource"
        },
        "jobExecutionsRetryConfig": {
          "documentation": "<p>The configuration that determines how many retries are allowed for each failure type for a job.</p>",
          "shape": "JobExecutionsRetryConfig"
        },
        "jobExecutionsRolloutConfig": {
          "shape": "JobExecutionsRolloutConfig"
        },
        "jobTemplateArn": {
          "documentation": "<p>The ARN of the job template.</p>",
          "shape": "JobTemplateArn"
        },
        "jobTemplateId": {
          "documentation": "<p>The unique identifier of the job template.</p>",
          "shape": "JobTemplateId"
        },
        "presignedUrlConfig": {
          "shape": "PresignedUrlConfig"
        },
        "timeoutConfig": {
          "shape": "TimeoutConfig"
        }
      },
      "type": "structure"
    },
    "DescribeManagedJobTemplateRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The unique name of a managed job template, which is required.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "ManagedJobTemplateName"
        },
        "templateVersion": {
          "documentation": "<p>An optional parameter to specify version of a managed template. If not specified, the pre-defined default version is returned.</p>",
          "location": "querystring",
          "locationName": "templateVersion",
          "shape": "ManagedTemplateVersion"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "DescribeManagedJobTemplateResponse": {
      "members": {
        "description": {
          "documentation": "<p>The unique description of a managed template.</p>",
          "shape": "JobDescription"
        },
        "document": {
          "documentation": "<p>The document schema for a managed job template.</p>",
          "shape": "JobDocument"
        },
        "documentParameters": {
          "documentation": "<p>A map of key-value pairs that you can use as guidance to specify the inputs for creating a job from a managed template.</p> <note> <p> <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services managed templates. This parameter can't be used with custom job templates or to create jobs from them.</p> </note>",
          "shape": "DocumentParameters"
        },
        "environments": {
          "documentation": "<p>A list of environments that are supported with the managed job template.</p>",
          "shape": "Environments"
        },
        "templateArn": {
          "documentation": "<p>The unique Amazon Resource Name (ARN) of the managed template.</p>",
          "shape": "JobTemplateArn"
        },
        "templateName": {
          "documentation": "<p>The unique name of a managed template, such as <code>AWS-Reboot</code>.</p>",
          "shape": "ManagedJobTemplateName"
        },
        "templateVersion": {
          "documentation": "<p>The version for a managed template.</p>",
          "shape": "ManagedTemplateVersion"
        }
      },
      "type": "structure"
    },
    "DescribeMitigationActionRequest": {
      "members": {
        "actionName": {
          "documentation": "<p>The friendly name that uniquely identifies the mitigation action.</p>",
          "location": "uri",
          "locationName": "actionName",
          "shape": "MitigationActionName"
        }
      },
      "required": [
        "actionName"
      ],
      "type": "structure"
    },
    "DescribeMitigationActionResponse": {
      "members": {
        "actionArn": {
          "documentation": "<p>The ARN that identifies this migration action.</p>",
          "shape": "MitigationActionArn"
        },
        "actionId": {
          "documentation": "<p>A unique identifier for this action.</p>",
          "shape": "MitigationActionId"
        },
        "actionName": {
          "documentation": "<p>The friendly name that uniquely identifies the mitigation action.</p>",
          "shape": "MitigationActionName"
        },
        "actionParams": {
          "documentation": "<p>Parameters that control how the mitigation action is applied, specific to the type of mitigation action.</p>",
          "shape": "MitigationActionParams"
        },
        "actionType": {
          "documentation": "<p>The type of mitigation action.</p>",
          "shape": "MitigationActionType"
        },
        "creationDate": {
          "documentation": "<p>The date and time when the mitigation action was added to your Amazon Web Services accounts.</p>",
          "shape": "Timestamp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date and time when the mitigation action was last changed.</p>",
          "shape": "Timestamp"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role used to apply this action.</p>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "DescribeProvisioningTemplateRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "DescribeProvisioningTemplateResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p>The date when the provisioning template was created.</p>",
          "shape": "DateType"
        },
        "defaultVersionId": {
          "documentation": "<p>The default fleet template version ID.</p>",
          "shape": "TemplateVersionId"
        },
        "description": {
          "documentation": "<p>The description of the provisioning template.</p>",
          "shape": "TemplateDescription"
        },
        "enabled": {
          "documentation": "<p>True if the provisioning template is enabled, otherwise false.</p>",
          "shape": "Enabled"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date when the provisioning template was last modified.</p>",
          "shape": "DateType"
        },
        "preProvisioningHook": {
          "documentation": "<p>Gets information about a pre-provisioned hook.</p>",
          "shape": "ProvisioningHook"
        },
        "provisioningRoleArn": {
          "documentation": "<p>The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.</p>",
          "shape": "RoleArn"
        },
        "templateArn": {
          "documentation": "<p>The ARN of the provisioning template.</p>",
          "shape": "TemplateArn"
        },
        "templateBody": {
          "documentation": "<p>The JSON formatted contents of the provisioning template.</p>",
          "shape": "TemplateBody"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        },
        "type": {
          "documentation": "<p>The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html\">Provisioning template</a>. </p>",
          "shape": "TemplateType"
        }
      },
      "type": "structure"
    },
    "DescribeProvisioningTemplateVersionRequest": {
      "members": {
        "templateName": {
          "documentation": "<p>The template name.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        },
        "versionId": {
          "documentation": "<p>The provisioning template version ID.</p>",
          "location": "uri",
          "locationName": "versionId",
          "shape": "TemplateVersionId"
        }
      },
      "required": [
        "templateName",
        "versionId"
      ],
      "type": "structure"
    },
    "DescribeProvisioningTemplateVersionResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p>The date when the provisioning template version was created.</p>",
          "shape": "DateType"
        },
        "isDefaultVersion": {
          "documentation": "<p>True if the provisioning template version is the default version.</p>",
          "shape": "IsDefaultVersion"
        },
        "templateBody": {
          "documentation": "<p>The JSON formatted contents of the provisioning template version.</p>",
          "shape": "TemplateBody"
        },
        "versionId": {
          "documentation": "<p>The provisioning template version ID.</p>",
          "shape": "TemplateVersionId"
        }
      },
      "type": "structure"
    },
    "DescribeRoleAliasRequest": {
      "members": {
        "roleAlias": {
          "documentation": "<p>The role alias to describe.</p>",
          "location": "uri",
          "locationName": "roleAlias",
          "shape": "RoleAlias"
        }
      },
      "required": [
        "roleAlias"
      ],
      "type": "structure"
    },
    "DescribeRoleAliasResponse": {
      "members": {
        "roleAliasDescription": {
          "documentation": "<p>The role alias description.</p>",
          "shape": "RoleAliasDescription"
        }
      },
      "type": "structure"
    },
    "DescribeScheduledAuditRequest": {
      "members": {
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit whose information you want to get.</p>",
          "location": "uri",
          "locationName": "scheduledAuditName",
          "shape": "ScheduledAuditName"
        }
      },
      "required": [
        "scheduledAuditName"
      ],
      "type": "structure"
    },
    "DescribeScheduledAuditResponse": {
      "members": {
        "dayOfMonth": {
          "documentation": "<p>The day of the month on which the scheduled audit takes place. This is will be <code>1</code> through <code>31</code> or <code>LAST</code>. If days <code>29</code>-<code>31</code> are specified, and the month does not have that many days, the audit takes place on the <code>LAST</code> day of the month.</p>",
          "shape": "DayOfMonth"
        },
        "dayOfWeek": {
          "documentation": "<p>The day of the week on which the scheduled audit takes place, either one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>.</p>",
          "shape": "DayOfWeek"
        },
        "frequency": {
          "documentation": "<p>How often the scheduled audit takes place, either one of <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the system.</p>",
          "shape": "AuditFrequency"
        },
        "scheduledAuditArn": {
          "documentation": "<p>The ARN of the scheduled audit.</p>",
          "shape": "ScheduledAuditArn"
        },
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit.</p>",
          "shape": "ScheduledAuditName"
        },
        "targetCheckNames": {
          "documentation": "<p>Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>",
          "shape": "TargetAuditCheckNames"
        }
      },
      "type": "structure"
    },
    "DescribeSecurityProfileRequest": {
      "members": {
        "securityProfileName": {
          "documentation": "<p>The name of the security profile whose information you want to get.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        }
      },
      "required": [
        "securityProfileName"
      ],
      "type": "structure"
    },
    "DescribeSecurityProfileResponse": {
      "members": {
        "additionalMetricsToRetain": {
          "deprecated": true,
          "deprecatedMessage": "Use additionalMetricsToRetainV2.",
          "documentation": "<p> <i>Please use <a>DescribeSecurityProfileResponse$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's <code>behaviors</code>, but it is also retained for any metric specified here.</p>",
          "shape": "AdditionalMetricsToRetainList"
        },
        "additionalMetricsToRetainV2": {
          "documentation": "<p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here.</p>",
          "shape": "AdditionalMetricsToRetainV2List"
        },
        "alertTargets": {
          "documentation": "<p>Where the alerts are sent. (Alerts are always sent to the console.)</p>",
          "shape": "AlertTargets"
        },
        "behaviors": {
          "documentation": "<p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>",
          "shape": "Behaviors"
        },
        "creationDate": {
          "documentation": "<p>The time the security profile was created.</p>",
          "shape": "Timestamp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The time the security profile was last modified.</p>",
          "shape": "Timestamp"
        },
        "securityProfileArn": {
          "documentation": "<p>The ARN of the security profile.</p>",
          "shape": "SecurityProfileArn"
        },
        "securityProfileDescription": {
          "documentation": "<p>A description of the security profile (associated with the security profile when it was created or updated).</p>",
          "shape": "SecurityProfileDescription"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the security profile.</p>",
          "shape": "SecurityProfileName"
        },
        "version": {
          "documentation": "<p>The version of the security profile. A new version is generated whenever the security profile is updated.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeStreamRequest": {
      "members": {
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "location": "uri",
          "locationName": "streamId",
          "shape": "StreamId"
        }
      },
      "required": [
        "streamId"
      ],
      "type": "structure"
    },
    "DescribeStreamResponse": {
      "members": {
        "streamInfo": {
          "documentation": "<p>Information about the stream.</p>",
          "shape": "StreamInfo"
        }
      },
      "type": "structure"
    },
    "DescribeThingGroupRequest": {
      "members": {
        "thingGroupName": {
          "documentation": "<p>The name of the thing group.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        }
      },
      "required": [
        "thingGroupName"
      ],
      "type": "structure"
    },
    "DescribeThingGroupResponse": {
      "members": {
        "indexName": {
          "documentation": "<p>The dynamic thing group index name.</p>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The dynamic thing group search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The dynamic thing group query version.</p>",
          "shape": "QueryVersion"
        },
        "status": {
          "documentation": "<p>The dynamic thing group status.</p>",
          "shape": "DynamicGroupStatus"
        },
        "thingGroupArn": {
          "documentation": "<p>The thing group ARN.</p>",
          "shape": "ThingGroupArn"
        },
        "thingGroupId": {
          "documentation": "<p>The thing group ID.</p>",
          "shape": "ThingGroupId"
        },
        "thingGroupMetadata": {
          "documentation": "<p>Thing group metadata.</p>",
          "shape": "ThingGroupMetadata"
        },
        "thingGroupName": {
          "documentation": "<p>The name of the thing group.</p>",
          "shape": "ThingGroupName"
        },
        "thingGroupProperties": {
          "documentation": "<p>The thing group properties.</p>",
          "shape": "ThingGroupProperties"
        },
        "version": {
          "documentation": "<p>The version of the thing group.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeThingRegistrationTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The task ID.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "TaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "DescribeThingRegistrationTaskResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p>The task creation date.</p>",
          "shape": "CreationDate"
        },
        "failureCount": {
          "documentation": "<p>The number of things that failed to be provisioned.</p>",
          "shape": "Count"
        },
        "inputFileBucket": {
          "documentation": "<p>The S3 bucket that contains the input file.</p>",
          "shape": "RegistryS3BucketName"
        },
        "inputFileKey": {
          "documentation": "<p>The input file key.</p>",
          "shape": "RegistryS3KeyName"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date when the task was last modified.</p>",
          "shape": "LastModifiedDate"
        },
        "message": {
          "documentation": "<p>The message.</p>",
          "shape": "ErrorMessage"
        },
        "percentageProgress": {
          "documentation": "<p>The progress of the bulk provisioning task expressed as a percentage.</p>",
          "shape": "Percentage"
        },
        "roleArn": {
          "documentation": "<p>The role ARN that grants access to the input file bucket.</p>",
          "shape": "RoleArn"
        },
        "status": {
          "documentation": "<p>The status of the bulk thing provisioning task.</p>",
          "shape": "Status"
        },
        "successCount": {
          "documentation": "<p>The number of things successfully provisioned.</p>",
          "shape": "Count"
        },
        "taskId": {
          "documentation": "<p>The task ID.</p>",
          "shape": "TaskId"
        },
        "templateBody": {
          "documentation": "<p>The task's template.</p>",
          "shape": "TemplateBody"
        }
      },
      "type": "structure"
    },
    "DescribeThingRequest": {
      "documentation": "<p>The input for the DescribeThing operation.</p>",
      "members": {
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "DescribeThingResponse": {
      "documentation": "<p>The output from the DescribeThing operation.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>The thing attributes.</p>",
          "shape": "Attributes"
        },
        "billingGroupName": {
          "documentation": "<p>The name of the billing group the thing belongs to.</p>",
          "shape": "BillingGroupName"
        },
        "defaultClientId": {
          "documentation": "<p>The default MQTT client ID. For a typical device, the thing name is also used as the default MQTT client ID. Although we don\u2019t require a mapping between a thing's registry name and its use of MQTT client IDs, certificates, or shadow state, we recommend that you choose a thing name and use it as the MQTT client ID for the registry and the Device Shadow service.</p> <p>This lets you better organize your IoT fleet without removing the flexibility of the underlying device certificate model or shadows.</p>",
          "shape": "ClientId"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing to describe.</p>",
          "shape": "ThingArn"
        },
        "thingId": {
          "documentation": "<p>The ID of the thing to describe.</p>",
          "shape": "ThingId"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "shape": "ThingName"
        },
        "thingTypeName": {
          "documentation": "<p>The thing type name.</p>",
          "shape": "ThingTypeName"
        },
        "version": {
          "documentation": "<p>The current version of the thing record in the registry.</p> <note> <p>To avoid unintentional changes to the information in the registry, you can pass the version information in the <code>expectedVersion</code> parameter of the <code>UpdateThing</code> and <code>DeleteThing</code> calls.</p> </note>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeThingTypeRequest": {
      "documentation": "<p>The input for the DescribeThingType operation.</p>",
      "members": {
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "location": "uri",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        }
      },
      "required": [
        "thingTypeName"
      ],
      "type": "structure"
    },
    "DescribeThingTypeResponse": {
      "documentation": "<p>The output for the DescribeThingType operation.</p>",
      "members": {
        "thingTypeArn": {
          "documentation": "<p>The thing type ARN.</p>",
          "shape": "ThingTypeArn"
        },
        "thingTypeId": {
          "documentation": "<p>The thing type ID.</p>",
          "shape": "ThingTypeId"
        },
        "thingTypeMetadata": {
          "documentation": "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "shape": "ThingTypeMetadata"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "shape": "ThingTypeName"
        },
        "thingTypeProperties": {
          "documentation": "<p>The ThingTypeProperties contains information about the thing type including description, and a list of searchable thing attribute names.</p>",
          "shape": "ThingTypeProperties"
        }
      },
      "type": "structure"
    },
    "Description": {
      "type": "string"
    },
    "Destination": {
      "documentation": "<p>Describes the location of the updated firmware.</p>",
      "members": {
        "s3Destination": {
          "documentation": "<p>Describes the location in S3 of the updated firmware.</p>",
          "shape": "S3Destination"
        }
      },
      "type": "structure"
    },
    "DetachPolicyRequest": {
      "members": {
        "policyName": {
          "documentation": "<p>The policy to detach.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "target": {
          "documentation": "<p>The target from which the policy will be detached.</p>",
          "shape": "PolicyTarget"
        }
      },
      "required": [
        "policyName",
        "target"
      ],
      "type": "structure"
    },
    "DetachPrincipalPolicyRequest": {
      "documentation": "<p>The input for the DetachPrincipalPolicy operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy to detach.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "principal": {
          "documentation": "<p>The principal.</p> <p>Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>",
          "location": "header",
          "locationName": "x-amzn-iot-principal",
          "shape": "Principal"
        }
      },
      "required": [
        "policyName",
        "principal"
      ],
      "type": "structure"
    },
    "DetachSecurityProfileRequest": {
      "members": {
        "securityProfileName": {
          "documentation": "<p>The security profile that is detached.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        },
        "securityProfileTargetArn": {
          "documentation": "<p>The ARN of the thing group from which the security profile is detached.</p>",
          "location": "querystring",
          "locationName": "securityProfileTargetArn",
          "shape": "SecurityProfileTargetArn"
        }
      },
      "required": [
        "securityProfileName",
        "securityProfileTargetArn"
      ],
      "type": "structure"
    },
    "DetachSecurityProfileResponse": {
      "members": {},
      "type": "structure"
    },
    "DetachThingPrincipalRequest": {
      "documentation": "<p>The input for the DetachThingPrincipal operation.</p>",
      "members": {
        "principal": {
          "documentation": "<p>If the principal is a certificate, this value must be ARN of the certificate. If the principal is an Amazon Cognito identity, this value must be the ID of the Amazon Cognito identity.</p>",
          "location": "header",
          "locationName": "x-amzn-principal",
          "shape": "Principal"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName",
        "principal"
      ],
      "type": "structure"
    },
    "DetachThingPrincipalResponse": {
      "documentation": "<p>The output from the DetachThingPrincipal operation.</p>",
      "members": {},
      "type": "structure"
    },
    "DetailsKey": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "DetailsMap": {
      "key": {
        "shape": "DetailsKey"
      },
      "type": "map",
      "value": {
        "shape": "DetailsValue"
      }
    },
    "DetailsValue": {
      "min": 1,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "DetectMitigationActionExecution": {
      "documentation": "<p> Describes which mitigation actions should be executed. </p>",
      "members": {
        "actionName": {
          "documentation": "<p> The friendly name that uniquely identifies the mitigation action. </p>",
          "shape": "MitigationActionName"
        },
        "errorCode": {
          "documentation": "<p> The error code of a mitigation action. </p>",
          "shape": "DetectMitigationActionExecutionErrorCode"
        },
        "executionEndDate": {
          "documentation": "<p> The date a mitigation action ended. </p>",
          "shape": "Timestamp"
        },
        "executionStartDate": {
          "documentation": "<p> The date a mitigation action was started. </p>",
          "shape": "Timestamp"
        },
        "message": {
          "documentation": "<p> The message of a mitigation action. </p>",
          "shape": "ErrorMessage"
        },
        "status": {
          "documentation": "<p> The status of a mitigation action. </p>",
          "shape": "DetectMitigationActionExecutionStatus"
        },
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "shape": "MitigationActionsTaskId"
        },
        "thingName": {
          "documentation": "<p> The name of the thing. </p>",
          "shape": "DeviceDefenderThingName"
        },
        "violationId": {
          "documentation": "<p> The unique identifier of the violation. </p>",
          "shape": "ViolationId"
        }
      },
      "type": "structure"
    },
    "DetectMitigationActionExecutionErrorCode": {
      "type": "string"
    },
    "DetectMitigationActionExecutionList": {
      "member": {
        "shape": "DetectMitigationActionExecution"
      },
      "type": "list"
    },
    "DetectMitigationActionExecutionStatus": {
      "enum": [
        "IN_PROGRESS",
        "SUCCESSFUL",
        "FAILED",
        "SKIPPED"
      ],
      "type": "string"
    },
    "DetectMitigationActionsTaskStatistics": {
      "documentation": "<p> The statistics of a mitigation action task. </p>",
      "members": {
        "actionsExecuted": {
          "documentation": "<p> The actions that were performed. </p>",
          "shape": "GenericLongValue"
        },
        "actionsFailed": {
          "documentation": "<p> The actions that failed. </p>",
          "shape": "GenericLongValue"
        },
        "actionsSkipped": {
          "documentation": "<p> The actions that were skipped. </p>",
          "shape": "GenericLongValue"
        }
      },
      "type": "structure"
    },
    "DetectMitigationActionsTaskStatus": {
      "enum": [
        "IN_PROGRESS",
        "SUCCESSFUL",
        "FAILED",
        "CANCELED"
      ],
      "type": "string"
    },
    "DetectMitigationActionsTaskSummary": {
      "documentation": "<p> The summary of the mitigation action tasks. </p>",
      "members": {
        "actionsDefinition": {
          "documentation": "<p> The definition of the actions. </p>",
          "shape": "MitigationActionList"
        },
        "onlyActiveViolationsIncluded": {
          "documentation": "<p> Includes only active violations. </p>",
          "shape": "PrimitiveBoolean"
        },
        "suppressedAlertsIncluded": {
          "documentation": "<p> Includes suppressed alerts. </p>",
          "shape": "PrimitiveBoolean"
        },
        "target": {
          "documentation": "<p> Specifies the ML Detect findings to which the mitigation actions are applied. </p>",
          "shape": "DetectMitigationActionsTaskTarget"
        },
        "taskEndTime": {
          "documentation": "<p> The date the task ended. </p>",
          "shape": "Timestamp"
        },
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "shape": "MitigationActionsTaskId"
        },
        "taskStartTime": {
          "documentation": "<p> The date the task started. </p>",
          "shape": "Timestamp"
        },
        "taskStatistics": {
          "documentation": "<p> The statistics of a mitigation action task. </p>",
          "shape": "DetectMitigationActionsTaskStatistics"
        },
        "taskStatus": {
          "documentation": "<p> The status of the task. </p>",
          "shape": "DetectMitigationActionsTaskStatus"
        },
        "violationEventOccurrenceRange": {
          "documentation": "<p> Specifies the time period of which violation events occurred between. </p>",
          "shape": "ViolationEventOccurrenceRange"
        }
      },
      "type": "structure"
    },
    "DetectMitigationActionsTaskSummaryList": {
      "member": {
        "shape": "DetectMitigationActionsTaskSummary"
      },
      "type": "list"
    },
    "DetectMitigationActionsTaskTarget": {
      "documentation": "<p> The target of a mitigation action task. </p>",
      "members": {
        "behaviorName": {
          "documentation": "<p> The name of the behavior. </p>",
          "shape": "BehaviorName"
        },
        "securityProfileName": {
          "documentation": "<p> The name of the security profile. </p>",
          "shape": "SecurityProfileName"
        },
        "violationIds": {
          "documentation": "<p> The unique identifiers of the violations. </p>",
          "shape": "TargetViolationIdsForDetectMitigationActions"
        }
      },
      "type": "structure"
    },
    "DetectMitigationActionsToExecuteList": {
      "max": 5,
      "member": {
        "shape": "MitigationActionName"
      },
      "min": 1,
      "type": "list"
    },
    "DeviceCertificateUpdateAction": {
      "enum": [
        "DEACTIVATE"
      ],
      "type": "string"
    },
    "DeviceDefenderIndexingMode": {
      "enum": [
        "OFF",
        "VIOLATIONS"
      ],
      "type": "string"
    },
    "DeviceDefenderThingName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DimensionArn": {
      "type": "string"
    },
    "DimensionName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "DimensionNames": {
      "member": {
        "shape": "DimensionName"
      },
      "type": "list"
    },
    "DimensionStringValue": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "DimensionStringValues": {
      "max": 100,
      "member": {
        "shape": "DimensionStringValue"
      },
      "min": 1,
      "type": "list"
    },
    "DimensionType": {
      "enum": [
        "TOPIC_FILTER"
      ],
      "type": "string"
    },
    "DimensionValueOperator": {
      "enum": [
        "IN",
        "NOT_IN"
      ],
      "type": "string"
    },
    "DisableAllLogs": {
      "type": "boolean"
    },
    "DisableTopicRuleRequest": {
      "documentation": "<p>The input for the DisableTopicRuleRequest operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the rule to disable.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        }
      },
      "required": [
        "ruleName"
      ],
      "type": "structure"
    },
    "DisconnectReason": {
      "type": "string"
    },
    "DocumentParameter": {
      "documentation": "<p>A map of key-value pairs containing the patterns that need to be replaced in a managed template job document schema. You can use the description of each key as a guidance to specify the inputs during runtime when creating a job.</p> <note> <p> <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services managed templates. This parameter can't be used with custom job templates or to create jobs from them.</p> </note>",
      "members": {
        "description": {
          "documentation": "<p>Description of the map field containing the patterns that need to be replaced in a managed template job document schema.</p>",
          "shape": "JobDescription"
        },
        "example": {
          "documentation": "<p>An example illustrating a pattern that need to be replaced in a managed template job document schema.</p>",
          "shape": "Example"
        },
        "key": {
          "documentation": "<p>Key of the map field containing the patterns that need to be replaced in a managed template job document schema.</p>",
          "shape": "ParameterKey"
        },
        "optional": {
          "documentation": "<p>Specifies whether a pattern that needs to be replaced in a managed template job document schema is optional or required.</p>",
          "shape": "Optional"
        },
        "regex": {
          "documentation": "<p>A regular expression of the patterns that need to be replaced in a managed template job document schema.</p>",
          "shape": "Regex"
        }
      },
      "type": "structure"
    },
    "DocumentParameters": {
      "member": {
        "shape": "DocumentParameter"
      },
      "type": "list"
    },
    "DomainConfigurationArn": {
      "type": "string"
    },
    "DomainConfigurationName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\w.-]+",
      "type": "string"
    },
    "DomainConfigurationStatus": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "DomainConfigurationSummary": {
      "documentation": "<p>The summary of a domain configuration. A domain configuration specifies custom IoT-specific information about a domain. A domain configuration can be associated with an Amazon Web Services-managed domain (for example, dbc123defghijk.iot.us-west-2.amazonaws.com), a customer managed domain, or a default endpoint.</p> <ul> <li> <p>Data</p> </li> <li> <p>Jobs</p> </li> <li> <p>CredentialProvider</p> </li> </ul>",
      "members": {
        "domainConfigurationArn": {
          "documentation": "<p>The ARN of the domain configuration.</p>",
          "shape": "DomainConfigurationArn"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration. This value must be unique to a region.</p>",
          "shape": "ReservedDomainConfigurationName"
        },
        "serviceType": {
          "documentation": "<p>The type of service delivered by the endpoint.</p>",
          "shape": "ServiceType"
        }
      },
      "type": "structure"
    },
    "DomainConfigurations": {
      "member": {
        "shape": "DomainConfigurationSummary"
      },
      "type": "list"
    },
    "DomainName": {
      "max": 253,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "DomainType": {
      "enum": [
        "ENDPOINT",
        "AWS_MANAGED",
        "CUSTOMER_MANAGED"
      ],
      "type": "string"
    },
    "DurationSeconds": {
      "type": "integer"
    },
    "DynamicGroupStatus": {
      "enum": [
        "ACTIVE",
        "BUILDING",
        "REBUILDING"
      ],
      "type": "string"
    },
    "DynamoDBAction": {
      "documentation": "<p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>\"hashKeyValue\": \"${topic(3)}\"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>\"rangeKeyValue\": \"${timestamp()}\"</code> </p>",
      "members": {
        "hashKeyField": {
          "documentation": "<p>The hash key name.</p>",
          "shape": "HashKeyField"
        },
        "hashKeyType": {
          "documentation": "<p>The hash key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "shape": "DynamoKeyType"
        },
        "hashKeyValue": {
          "documentation": "<p>The hash key value.</p>",
          "shape": "HashKeyValue"
        },
        "operation": {
          "documentation": "<p>The type of operation to be performed. This follows the substitution template, so it can be <code>${operation}</code>, but the substitution must result in one of the following: <code>INSERT</code>, <code>UPDATE</code>, or <code>DELETE</code>.</p>",
          "shape": "DynamoOperation"
        },
        "payloadField": {
          "documentation": "<p>The action payload. This name can be customized.</p>",
          "shape": "PayloadField"
        },
        "rangeKeyField": {
          "documentation": "<p>The range key name.</p>",
          "shape": "RangeKeyField"
        },
        "rangeKeyType": {
          "documentation": "<p>The range key type. Valid values are \"STRING\" or \"NUMBER\"</p>",
          "shape": "DynamoKeyType"
        },
        "rangeKeyValue": {
          "documentation": "<p>The range key value.</p>",
          "shape": "RangeKeyValue"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "shape": "AwsArn"
        },
        "tableName": {
          "documentation": "<p>The name of the DynamoDB table.</p>",
          "shape": "TableName"
        }
      },
      "required": [
        "tableName",
        "roleArn",
        "hashKeyField",
        "hashKeyValue"
      ],
      "type": "structure"
    },
    "DynamoDBv2Action": {
      "documentation": "<p>Describes an action to write to a DynamoDB table.</p> <p>This DynamoDB action writes each attribute in the message payload into it's own column in the DynamoDB table.</p>",
      "members": {
        "putItem": {
          "documentation": "<p>Specifies the DynamoDB table to which the message data will be written. For example:</p> <p> <code>{ \"dynamoDBv2\": { \"roleArn\": \"aws:iam:12341251:my-role\" \"putItem\": { \"tableName\": \"my-table\" } } }</code> </p> <p>Each attribute in the message payload will be written to a separate column in the DynamoDB database.</p>",
          "shape": "PutItemInput"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access to the DynamoDB table.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "roleArn",
        "putItem"
      ],
      "type": "structure"
    },
    "DynamoKeyType": {
      "enum": [
        "STRING",
        "NUMBER"
      ],
      "type": "string"
    },
    "DynamoOperation": {
      "type": "string"
    },
    "EffectivePolicies": {
      "member": {
        "shape": "EffectivePolicy"
      },
      "type": "list"
    },
    "EffectivePolicy": {
      "documentation": "<p>The policy that has the effect on the authorization results.</p>",
      "members": {
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyDocument": {
          "documentation": "<p>The IAM policy document.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "shape": "PolicyName"
        }
      },
      "type": "structure"
    },
    "ElasticsearchAction": {
      "documentation": "<p>Describes an action that writes data to an Amazon OpenSearch Service domain.</p> <note> <p>The <code>Elasticsearch</code> action can only be used by existing rule actions. To create a new rule action or to update an existing rule action, use the <code>OpenSearch</code> rule action instead. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_OpenSearchAction.html\">OpenSearchAction</a>.</p> </note>",
      "members": {
        "endpoint": {
          "documentation": "<p>The endpoint of your OpenSearch domain.</p>",
          "shape": "ElasticsearchEndpoint"
        },
        "id": {
          "documentation": "<p>The unique identifier for the document you are storing.</p>",
          "shape": "ElasticsearchId"
        },
        "index": {
          "documentation": "<p>The index where you want to store your data.</p>",
          "shape": "ElasticsearchIndex"
        },
        "roleArn": {
          "documentation": "<p>The IAM role ARN that has access to OpenSearch.</p>",
          "shape": "AwsArn"
        },
        "type": {
          "documentation": "<p>The type of document you are storing.</p>",
          "shape": "ElasticsearchType"
        }
      },
      "required": [
        "roleArn",
        "endpoint",
        "index",
        "type",
        "id"
      ],
      "type": "structure"
    },
    "ElasticsearchEndpoint": {
      "pattern": "https?://.*",
      "type": "string"
    },
    "ElasticsearchId": {
      "type": "string"
    },
    "ElasticsearchIndex": {
      "type": "string"
    },
    "ElasticsearchType": {
      "type": "string"
    },
    "EnableCachingForHttp": {
      "type": "boolean"
    },
    "EnableIoTLoggingParams": {
      "documentation": "<p>Parameters used when defining a mitigation action that enable Amazon Web Services IoT Core logging.</p>",
      "members": {
        "logLevel": {
          "documentation": "<p>Specifies the type of information to be logged.</p>",
          "shape": "LogLevel"
        },
        "roleArnForLogging": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the IAM role used for logging.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "roleArnForLogging",
        "logLevel"
      ],
      "type": "structure"
    },
    "EnableTopicRuleRequest": {
      "documentation": "<p>The input for the EnableTopicRuleRequest operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the topic rule to enable.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        }
      },
      "required": [
        "ruleName"
      ],
      "type": "structure"
    },
    "Enabled": {
      "type": "boolean"
    },
    "EndpointAddress": {
      "type": "string"
    },
    "EndpointType": {
      "max": 128,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "Environment": {
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "Environments": {
      "member": {
        "shape": "Environment"
      },
      "type": "list"
    },
    "ErrorCode": {
      "type": "string"
    },
    "ErrorInfo": {
      "documentation": "<p>Error information.</p>",
      "members": {
        "code": {
          "documentation": "<p>The error code.</p>",
          "shape": "Code"
        },
        "message": {
          "documentation": "<p>The error message.</p>",
          "shape": "OTAUpdateErrorMessage"
        }
      },
      "type": "structure"
    },
    "ErrorMessage": {
      "max": 2048,
      "type": "string"
    },
    "EvaluationStatistic": {
      "pattern": "(p0|p0\\.1|p0\\.01|p1|p10|p50|p90|p99|p99\\.9|p99\\.99|p100)",
      "type": "string"
    },
    "EventConfigurations": {
      "key": {
        "shape": "EventType"
      },
      "type": "map",
      "value": {
        "shape": "Configuration"
      }
    },
    "EventType": {
      "enum": [
        "THING",
        "THING_GROUP",
        "THING_TYPE",
        "THING_GROUP_MEMBERSHIP",
        "THING_GROUP_HIERARCHY",
        "THING_TYPE_ASSOCIATION",
        "JOB",
        "JOB_EXECUTION",
        "POLICY",
        "CERTIFICATE",
        "CA_CERTIFICATE"
      ],
      "type": "string"
    },
    "Example": {
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "ExecutionNamePrefix": {
      "type": "string"
    },
    "ExecutionNumber": {
      "type": "long"
    },
    "ExpectedVersion": {
      "type": "long"
    },
    "ExpiresInSec": {
      "max": 3600,
      "min": 60,
      "type": "long"
    },
    "ExpiresInSeconds": {
      "type": "long"
    },
    "ExplicitDeny": {
      "documentation": "<p>Information that explicitly denies authorization.</p>",
      "members": {
        "policies": {
          "documentation": "<p>The policies that denied the authorization.</p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "ExponentialRolloutRate": {
      "documentation": "<p>Allows you to create an exponential rate of rollout for a job.</p>",
      "members": {
        "baseRatePerMinute": {
          "documentation": "<p>The minimum number of things that will be notified of a pending job, per minute at the start of job rollout. This parameter allows you to define the initial rate of rollout.</p>",
          "shape": "RolloutRatePerMinute"
        },
        "incrementFactor": {
          "documentation": "<p>The exponential factor to increase the rate of rollout for a job.</p> <p>Amazon Web Services IoT Core supports up to one digit after the decimal (for example, 1.5, but not 1.55).</p>",
          "shape": "IncrementFactor"
        },
        "rateIncreaseCriteria": {
          "documentation": "<p>The criteria to initiate the increase in rate of rollout for a job.</p>",
          "shape": "RateIncreaseCriteria"
        }
      },
      "required": [
        "baseRatePerMinute",
        "incrementFactor",
        "rateIncreaseCriteria"
      ],
      "type": "structure"
    },
    "FailedChecksCount": {
      "type": "integer"
    },
    "FailedFindingsCount": {
      "type": "long"
    },
    "FailedThings": {
      "type": "integer"
    },
    "Field": {
      "documentation": "<p>Describes the name and data type at a field.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the field.</p>",
          "shape": "FieldName"
        },
        "type": {
          "documentation": "<p>The data type of the field.</p>",
          "shape": "FieldType"
        }
      },
      "type": "structure"
    },
    "FieldName": {
      "type": "string"
    },
    "FieldType": {
      "enum": [
        "Number",
        "String",
        "Boolean"
      ],
      "type": "string"
    },
    "Fields": {
      "member": {
        "shape": "Field"
      },
      "type": "list"
    },
    "FileId": {
      "max": 255,
      "min": 0,
      "type": "integer"
    },
    "FileLocation": {
      "documentation": "<p>The location of the OTA update.</p>",
      "members": {
        "s3Location": {
          "documentation": "<p>The location of the updated firmware in S3.</p>",
          "shape": "S3Location"
        },
        "stream": {
          "documentation": "<p>The stream that contains the OTA update.</p>",
          "shape": "Stream"
        }
      },
      "type": "structure"
    },
    "FileName": {
      "type": "string"
    },
    "FileType": {
      "max": 255,
      "min": 0,
      "type": "integer"
    },
    "FindingId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "FindingIds": {
      "max": 25,
      "member": {
        "shape": "FindingId"
      },
      "min": 1,
      "type": "list"
    },
    "FirehoseAction": {
      "documentation": "<p>Describes an action that writes data to an Amazon Kinesis Firehose stream.</p>",
      "members": {
        "batchMode": {
          "documentation": "<p>Whether to deliver the Kinesis Data Firehose stream as a batch by using <a href=\"https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html\"> <code>PutRecordBatch</code> </a>. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule's SQL statement evaluates to an Array, each Array element forms one record in the <a href=\"https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecordBatch.html\"> <code>PutRecordBatch</code> </a> request. The resulting array can't have more than 500 records.</p>",
          "shape": "BatchMode"
        },
        "deliveryStreamName": {
          "documentation": "<p>The delivery stream name.</p>",
          "shape": "DeliveryStreamName"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that grants access to the Amazon Kinesis Firehose stream.</p>",
          "shape": "AwsArn"
        },
        "separator": {
          "documentation": "<p>A character separator that will be used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).</p>",
          "shape": "FirehoseSeparator"
        }
      },
      "required": [
        "roleArn",
        "deliveryStreamName"
      ],
      "type": "structure"
    },
    "FirehoseSeparator": {
      "pattern": "([\\n\\t])|(\\r\\n)|(,)",
      "type": "string"
    },
    "Flag": {
      "type": "boolean"
    },
    "FleetMetricArn": {
      "type": "string"
    },
    "FleetMetricDescription": {
      "max": 1024,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "FleetMetricName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_\\-\\.]+",
      "type": "string"
    },
    "FleetMetricNameAndArn": {
      "documentation": "<p>The name and ARN of a fleet metric.</p>",
      "members": {
        "metricArn": {
          "documentation": "<p>The fleet metric ARN.</p>",
          "shape": "FleetMetricArn"
        },
        "metricName": {
          "documentation": "<p>The fleet metric name.</p>",
          "shape": "FleetMetricName"
        }
      },
      "type": "structure"
    },
    "FleetMetricNameAndArnList": {
      "member": {
        "shape": "FleetMetricNameAndArn"
      },
      "type": "list"
    },
    "FleetMetricPeriod": {
      "max": 86400,
      "min": 60,
      "type": "integer"
    },
    "FleetMetricUnit": {
      "enum": [
        "Seconds",
        "Microseconds",
        "Milliseconds",
        "Bytes",
        "Kilobytes",
        "Megabytes",
        "Gigabytes",
        "Terabytes",
        "Bits",
        "Kilobits",
        "Megabits",
        "Gigabits",
        "Terabits",
        "Percent",
        "Count",
        "Bytes/Second",
        "Kilobytes/Second",
        "Megabytes/Second",
        "Gigabytes/Second",
        "Terabytes/Second",
        "Bits/Second",
        "Kilobits/Second",
        "Megabits/Second",
        "Gigabits/Second",
        "Terabits/Second",
        "Count/Second",
        "None"
      ],
      "type": "string"
    },
    "ForceDelete": {
      "type": "boolean"
    },
    "ForceDeleteAWSJob": {
      "type": "boolean"
    },
    "ForceFlag": {
      "type": "boolean"
    },
    "Forced": {
      "type": "boolean"
    },
    "FunctionArn": {
      "type": "string"
    },
    "GenerationId": {
      "type": "string"
    },
    "GenericLongValue": {
      "type": "long"
    },
    "GetBehaviorModelTrainingSummariesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> The maximum number of results to return at one time. The default is 10. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "TinyMaxResults"
        },
        "nextToken": {
          "documentation": "<p> The token for the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "securityProfileName": {
          "documentation": "<p> The name of the security profile. </p>",
          "location": "querystring",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        }
      },
      "type": "structure"
    },
    "GetBehaviorModelTrainingSummariesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p> A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. </p>",
          "shape": "NextToken"
        },
        "summaries": {
          "documentation": "<p> A list of all ML Detect behaviors and their model status for a given Security Profile. </p>",
          "shape": "BehaviorModelTrainingSummaries"
        }
      },
      "type": "structure"
    },
    "GetBucketsAggregationRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The aggregation field.</p>",
          "shape": "AggregationField"
        },
        "bucketsAggregationType": {
          "documentation": "<p>The basic control of the response shape and the bucket aggregation type to perform. </p>",
          "shape": "BucketsAggregationType"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The version of the query.</p>",
          "shape": "QueryVersion"
        }
      },
      "required": [
        "queryString",
        "aggregationField",
        "bucketsAggregationType"
      ],
      "type": "structure"
    },
    "GetBucketsAggregationResponse": {
      "members": {
        "buckets": {
          "documentation": "<p>The main part of the response with a list of buckets. Each bucket contains a <code>keyValue</code> and a <code>count</code>.</p> <p> <code>keyValue</code>: The aggregation field value counted for the particular bucket.</p> <p> <code>count</code>: The number of documents that have that value.</p>",
          "shape": "Buckets"
        },
        "totalCount": {
          "documentation": "<p>The total number of things that fit the query string criteria.</p>",
          "shape": "Count"
        }
      },
      "type": "structure"
    },
    "GetCardinalityRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The field to aggregate.</p>",
          "shape": "AggregationField"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The query version.</p>",
          "shape": "QueryVersion"
        }
      },
      "required": [
        "queryString"
      ],
      "type": "structure"
    },
    "GetCardinalityResponse": {
      "members": {
        "cardinality": {
          "documentation": "<p>The approximate count of unique values that match the query.</p>",
          "shape": "Count"
        }
      },
      "type": "structure"
    },
    "GetEffectivePoliciesRequest": {
      "members": {
        "cognitoIdentityPoolId": {
          "documentation": "<p>The Cognito identity pool ID.</p>",
          "shape": "CognitoIdentityPoolId"
        },
        "principal": {
          "documentation": "<p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>",
          "shape": "Principal"
        },
        "thingName": {
          "documentation": "<p>The thing name.</p>",
          "location": "querystring",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "GetEffectivePoliciesResponse": {
      "members": {
        "effectivePolicies": {
          "documentation": "<p>The effective policies.</p>",
          "shape": "EffectivePolicies"
        }
      },
      "type": "structure"
    },
    "GetIndexingConfigurationRequest": {
      "members": {},
      "type": "structure"
    },
    "GetIndexingConfigurationResponse": {
      "members": {
        "thingGroupIndexingConfiguration": {
          "documentation": "<p>The index configuration.</p>",
          "shape": "ThingGroupIndexingConfiguration"
        },
        "thingIndexingConfiguration": {
          "documentation": "<p>Thing indexing configuration.</p>",
          "shape": "ThingIndexingConfiguration"
        }
      },
      "type": "structure"
    },
    "GetJobDocumentRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "GetJobDocumentResponse": {
      "members": {
        "document": {
          "documentation": "<p>The job document content.</p>",
          "shape": "JobDocument"
        }
      },
      "type": "structure"
    },
    "GetLoggingOptionsRequest": {
      "documentation": "<p>The input for the GetLoggingOptions operation.</p>",
      "members": {},
      "type": "structure"
    },
    "GetLoggingOptionsResponse": {
      "documentation": "<p>The output from the GetLoggingOptions operation.</p>",
      "members": {
        "logLevel": {
          "documentation": "<p>The logging level.</p>",
          "shape": "LogLevel"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        }
      },
      "type": "structure"
    },
    "GetOTAUpdateRequest": {
      "members": {
        "otaUpdateId": {
          "documentation": "<p>The OTA update ID.</p>",
          "location": "uri",
          "locationName": "otaUpdateId",
          "shape": "OTAUpdateId"
        }
      },
      "required": [
        "otaUpdateId"
      ],
      "type": "structure"
    },
    "GetOTAUpdateResponse": {
      "members": {
        "otaUpdateInfo": {
          "documentation": "<p>The OTA update info.</p>",
          "shape": "OTAUpdateInfo"
        }
      },
      "type": "structure"
    },
    "GetPercentilesRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The field to aggregate.</p>",
          "shape": "AggregationField"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "percents": {
          "documentation": "<p>The percentile groups returned.</p>",
          "shape": "PercentList"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The query version.</p>",
          "shape": "QueryVersion"
        }
      },
      "required": [
        "queryString"
      ],
      "type": "structure"
    },
    "GetPercentilesResponse": {
      "members": {
        "percentiles": {
          "documentation": "<p>The percentile values of the aggregated fields.</p>",
          "shape": "Percentiles"
        }
      },
      "type": "structure"
    },
    "GetPolicyRequest": {
      "documentation": "<p>The input for the GetPolicy operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        }
      },
      "required": [
        "policyName"
      ],
      "type": "structure"
    },
    "GetPolicyResponse": {
      "documentation": "<p>The output from the GetPolicy operation.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date the policy was created.</p>",
          "shape": "DateType"
        },
        "defaultVersionId": {
          "documentation": "<p>The default policy version ID.</p>",
          "shape": "PolicyVersionId"
        },
        "generationId": {
          "documentation": "<p>The generation ID of the policy.</p>",
          "shape": "GenerationId"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date the policy was last modified.</p>",
          "shape": "DateType"
        },
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "shape": "PolicyName"
        }
      },
      "type": "structure"
    },
    "GetPolicyVersionRequest": {
      "documentation": "<p>The input for the GetPolicyVersion operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "location": "uri",
          "locationName": "policyVersionId",
          "shape": "PolicyVersionId"
        }
      },
      "required": [
        "policyName",
        "policyVersionId"
      ],
      "type": "structure"
    },
    "GetPolicyVersionResponse": {
      "documentation": "<p>The output from the GetPolicyVersion operation.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date the policy was created.</p>",
          "shape": "DateType"
        },
        "generationId": {
          "documentation": "<p>The generation ID of the policy version.</p>",
          "shape": "GenerationId"
        },
        "isDefaultVersion": {
          "documentation": "<p>Specifies whether the policy version is the default.</p>",
          "shape": "IsDefaultVersion"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date the policy was last modified.</p>",
          "shape": "DateType"
        },
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyDocument": {
          "documentation": "<p>The JSON document that describes the policy.</p>",
          "shape": "PolicyDocument"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "shape": "PolicyVersionId"
        }
      },
      "type": "structure"
    },
    "GetRegistrationCodeRequest": {
      "documentation": "<p>The input to the GetRegistrationCode operation.</p>",
      "members": {},
      "type": "structure"
    },
    "GetRegistrationCodeResponse": {
      "documentation": "<p>The output from the GetRegistrationCode operation.</p>",
      "members": {
        "registrationCode": {
          "documentation": "<p>The CA certificate registration code.</p>",
          "shape": "RegistrationCode"
        }
      },
      "type": "structure"
    },
    "GetStatisticsRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The aggregation field name.</p>",
          "shape": "AggregationField"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search. The default value is <code>AWS_Things</code>.</p>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The query used to search. You can specify \"*\" for the query string to get the count of all indexed things in your Amazon Web Services account.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The version of the query used to search.</p>",
          "shape": "QueryVersion"
        }
      },
      "required": [
        "queryString"
      ],
      "type": "structure"
    },
    "GetStatisticsResponse": {
      "members": {
        "statistics": {
          "documentation": "<p>The statistics returned by the Fleet Indexing service based on the query and aggregation field.</p>",
          "shape": "Statistics"
        }
      },
      "type": "structure"
    },
    "GetTopicRuleDestinationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the topic rule destination.</p>",
          "location": "uri",
          "locationName": "arn",
          "shape": "AwsArn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "GetTopicRuleDestinationResponse": {
      "members": {
        "topicRuleDestination": {
          "documentation": "<p>The topic rule destination.</p>",
          "shape": "TopicRuleDestination"
        }
      },
      "type": "structure"
    },
    "GetTopicRuleRequest": {
      "documentation": "<p>The input for the GetTopicRule operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        }
      },
      "required": [
        "ruleName"
      ],
      "type": "structure"
    },
    "GetTopicRuleResponse": {
      "documentation": "<p>The output from the GetTopicRule operation.</p>",
      "members": {
        "rule": {
          "documentation": "<p>The rule.</p>",
          "shape": "TopicRule"
        },
        "ruleArn": {
          "documentation": "<p>The rule ARN.</p>",
          "shape": "RuleArn"
        }
      },
      "type": "structure"
    },
    "GetV2LoggingOptionsRequest": {
      "members": {},
      "type": "structure"
    },
    "GetV2LoggingOptionsResponse": {
      "members": {
        "defaultLogLevel": {
          "documentation": "<p>The default log level.</p>",
          "shape": "LogLevel"
        },
        "disableAllLogs": {
          "documentation": "<p>Disables all logs.</p>",
          "shape": "DisableAllLogs"
        },
        "roleArn": {
          "documentation": "<p>The IAM role ARN IoT uses to write to your CloudWatch logs.</p>",
          "shape": "AwsArn"
        }
      },
      "type": "structure"
    },
    "GroupNameAndArn": {
      "documentation": "<p>The name and ARN of a group.</p>",
      "members": {
        "groupArn": {
          "documentation": "<p>The group ARN.</p>",
          "shape": "ThingGroupArn"
        },
        "groupName": {
          "documentation": "<p>The group name.</p>",
          "shape": "ThingGroupName"
        }
      },
      "type": "structure"
    },
    "HashAlgorithm": {
      "type": "string"
    },
    "HashKeyField": {
      "type": "string"
    },
    "HashKeyValue": {
      "type": "string"
    },
    "HeaderKey": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "HeaderList": {
      "max": 100,
      "member": {
        "shape": "HttpActionHeader"
      },
      "min": 0,
      "type": "list"
    },
    "HeaderValue": {
      "type": "string"
    },
    "HttpAction": {
      "documentation": "<p>Send data to an HTTPS endpoint.</p>",
      "members": {
        "auth": {
          "documentation": "<p>The authentication method to use when sending data to an HTTPS endpoint.</p>",
          "shape": "HttpAuthorization"
        },
        "confirmationUrl": {
          "documentation": "<p>The URL to which IoT sends a confirmation message. The value of the confirmation URL must be a prefix of the endpoint URL. If you do not specify a confirmation URL IoT uses the endpoint URL as the confirmation URL. If you use substitution templates in the confirmationUrl, you must create and enable topic rule destinations that match each possible value of the substitution template before traffic is allowed to your endpoint URL.</p>",
          "shape": "Url"
        },
        "headers": {
          "documentation": "<p>The HTTP headers to send with the message data.</p>",
          "shape": "HeaderList"
        },
        "url": {
          "documentation": "<p>The endpoint URL. If substitution templates are used in the URL, you must also specify a <code>confirmationUrl</code>. If this is a new destination, a new <code>TopicRuleDestination</code> is created if possible.</p>",
          "shape": "Url"
        }
      },
      "required": [
        "url"
      ],
      "type": "structure"
    },
    "HttpActionHeader": {
      "documentation": "<p>The HTTP action header.</p>",
      "members": {
        "key": {
          "documentation": "<p>The HTTP header key.</p>",
          "shape": "HeaderKey"
        },
        "value": {
          "documentation": "<p>The HTTP header value. Substitution templates are supported.</p>",
          "shape": "HeaderValue"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "structure"
    },
    "HttpAuthorization": {
      "documentation": "<p>The authorization method used to send messages.</p>",
      "members": {
        "sigv4": {
          "documentation": "<p>Use Sig V4 authorization. For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 Signing Process</a>.</p>",
          "shape": "SigV4Authorization"
        }
      },
      "type": "structure"
    },
    "HttpContext": {
      "documentation": "<p>Specifies the HTTP context to use for the test authorizer request.</p>",
      "members": {
        "headers": {
          "documentation": "<p>The header keys and values in an HTTP authorization request.</p>",
          "shape": "HttpHeaders"
        },
        "queryString": {
          "documentation": "<p>The query string keys and values in an HTTP authorization request.</p>",
          "shape": "HttpQueryString"
        }
      },
      "type": "structure"
    },
    "HttpHeaderName": {
      "max": 8192,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "HttpHeaderValue": {
      "max": 8192,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "HttpHeaders": {
      "key": {
        "shape": "HttpHeaderName"
      },
      "type": "map",
      "value": {
        "shape": "HttpHeaderValue"
      }
    },
    "HttpQueryString": {
      "max": 4096,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "HttpUrlDestinationConfiguration": {
      "documentation": "<p>HTTP URL destination configuration used by the topic rule's HTTP action.</p>",
      "members": {
        "confirmationUrl": {
          "documentation": "<p>The URL IoT uses to confirm ownership of or access to the topic rule destination URL.</p>",
          "shape": "Url"
        }
      },
      "required": [
        "confirmationUrl"
      ],
      "type": "structure"
    },
    "HttpUrlDestinationProperties": {
      "documentation": "<p>HTTP URL destination properties.</p>",
      "members": {
        "confirmationUrl": {
          "documentation": "<p>The URL used to confirm the HTTP topic rule destination URL.</p>",
          "shape": "Url"
        }
      },
      "type": "structure"
    },
    "HttpUrlDestinationSummary": {
      "documentation": "<p>Information about an HTTP URL destination.</p>",
      "members": {
        "confirmationUrl": {
          "documentation": "<p>The URL used to confirm ownership of or access to the HTTP topic rule destination URL.</p>",
          "shape": "Url"
        }
      },
      "type": "structure"
    },
    "ImplicitDeny": {
      "documentation": "<p>Information that implicitly denies authorization. When policy doesn't explicitly deny or allow an action on a resource it is considered an implicit deny.</p>",
      "members": {
        "policies": {
          "documentation": "<p>Policies that don't contain a matching allow or deny statement for the specified action on the specified resource. </p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "InProgressChecksCount": {
      "type": "integer"
    },
    "InProgressThings": {
      "type": "integer"
    },
    "InProgressTimeoutInMinutes": {
      "type": "long"
    },
    "IncrementFactor": {
      "max": 5,
      "min": 1.1,
      "type": "double"
    },
    "IndexName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "IndexNamesList": {
      "member": {
        "shape": "IndexName"
      },
      "type": "list"
    },
    "IndexNotReadyException": {
      "documentation": "<p>The index is not ready.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "IndexSchema": {
      "type": "string"
    },
    "IndexStatus": {
      "enum": [
        "ACTIVE",
        "BUILDING",
        "REBUILDING"
      ],
      "type": "string"
    },
    "IndexingFilter": {
      "documentation": "<p>Provides additional filters for specific data sources. Named shadow is the only data source that currently supports and requires a filter. To add named shadows to your fleet indexing configuration, set <code>namedShadowIndexingMode</code> to be <code>ON</code> and specify your shadow names in <code>filter</code>.</p>",
      "members": {
        "namedShadowNames": {
          "documentation": "<p>The shadow names that you select to index. The default maximum number of shadow names for indexing is 10. To increase the limit, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/iot_device_management.html#fleet-indexing-limits\">Amazon Web Services IoT Device Management Quotas</a> in the <i>Amazon Web Services General Reference</i>. </p>",
          "shape": "NamedShadowNamesFilter"
        }
      },
      "type": "structure"
    },
    "InlineDocument": {
      "type": "string"
    },
    "InputName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "InternalException": {
      "documentation": "<p>An unexpected error has occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InternalFailureException": {
      "documentation": "<p>An unexpected error has occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InternalServerException": {
      "documentation": "<p>Internal error from the service that indicates an unexpected error or that the service is unavailable.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidAggregationException": {
      "documentation": "<p>The aggregation is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidQueryException": {
      "documentation": "<p>The query is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidRequestException": {
      "documentation": "<p>The request is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidResponseException": {
      "documentation": "<p>The response is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidStateTransitionException": {
      "documentation": "<p>An attempt was made to change to an invalid state, for example by deleting a job or a job execution which is \"IN_PROGRESS\" without setting the <code>force</code> parameter.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "IotAnalyticsAction": {
      "documentation": "<p>Sends message data to an IoT Analytics channel.</p>",
      "members": {
        "batchMode": {
          "documentation": "<p>Whether to process the action as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is delivered as a separate message when passed by <a href=\"https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_BatchPutMessage.html\"> <code>BatchPutMessage</code> </a> to the IoT Analytics channel. The resulting array can't have more than 100 messages.</p>",
          "shape": "BatchMode"
        },
        "channelArn": {
          "documentation": "<p>(deprecated) The ARN of the IoT Analytics channel to which message data will be sent.</p>",
          "shape": "AwsArn"
        },
        "channelName": {
          "documentation": "<p>The name of the IoT Analytics channel to which message data will be sent.</p>",
          "shape": "ChannelName"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role which has a policy that grants IoT Analytics permission to send message data via IoT Analytics (iotanalytics:BatchPutMessage).</p>",
          "shape": "AwsArn"
        }
      },
      "type": "structure"
    },
    "IotEventsAction": {
      "documentation": "<p>Sends an input to an IoT Events detector.</p>",
      "members": {
        "batchMode": {
          "documentation": "<p>Whether to process the event actions as a batch. The default value is <code>false</code>.</p> <p>When <code>batchMode</code> is <code>true</code>, you can't specify a <code>messageId</code>. </p> <p>When <code>batchMode</code> is <code>true</code> and the rule SQL statement evaluates to an Array, each Array element is treated as a separate message when it's sent to IoT Events by calling <a href=\"https://docs.aws.amazon.com/iotevents/latest/apireference/API_iotevents-data_BatchPutMessage.html\"> <code>BatchPutMessage</code> </a>. The resulting array can't have more than 10 messages.</p>",
          "shape": "BatchMode"
        },
        "inputName": {
          "documentation": "<p>The name of the IoT Events input.</p>",
          "shape": "InputName"
        },
        "messageId": {
          "documentation": "<p>The ID of the message. The default <code>messageId</code> is a new UUID value.</p> <p>When <code>batchMode</code> is <code>true</code>, you can't specify a <code>messageId</code>--a new UUID value will be assigned.</p> <p>Assign a value to this property to ensure that only one input (message) with a given <code>messageId</code> will be processed by an IoT Events detector.</p>",
          "shape": "MessageId"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants IoT permission to send an input to an IoT Events detector. (\"Action\":\"iotevents:BatchPutMessage\").</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "inputName",
        "roleArn"
      ],
      "type": "structure"
    },
    "IotSiteWiseAction": {
      "documentation": "<p>Describes an action to send data from an MQTT message that triggered the rule to IoT SiteWise asset properties.</p>",
      "members": {
        "putAssetPropertyValueEntries": {
          "documentation": "<p>A list of asset property value entries.</p>",
          "shape": "PutAssetPropertyValueEntryList"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants IoT permission to send an asset property value to IoT SiteWise. (<code>\"Action\": \"iotsitewise:BatchPutAssetPropertyValue\"</code>). The trust policy can restrict access to specific asset hierarchy paths.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "putAssetPropertyValueEntries",
        "roleArn"
      ],
      "type": "structure"
    },
    "IsAuthenticated": {
      "type": "boolean"
    },
    "IsDefaultVersion": {
      "type": "boolean"
    },
    "IsDisabled": {
      "type": "boolean"
    },
    "IsSuppressed": {
      "type": "boolean"
    },
    "Job": {
      "documentation": "<p>The <code>Job</code> object contains details about a job.</p>",
      "members": {
        "abortConfig": {
          "documentation": "<p>Configuration for criteria to abort the job.</p>",
          "shape": "AbortConfig"
        },
        "comment": {
          "documentation": "<p>If the job was updated, describes the reason for the update.</p>",
          "shape": "Comment"
        },
        "completedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job was completed.</p>",
          "shape": "DateType"
        },
        "createdAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>A short text description of the job.</p>",
          "shape": "JobDescription"
        },
        "documentParameters": {
          "documentation": "<p>A key-value map that pairs the patterns that need to be replaced in a managed template job document schema. You can use the description of each key as a guidance to specify the inputs during runtime when creating a job.</p> <note> <p> <code>documentParameters</code> can only be used when creating jobs from Amazon Web Services managed templates. This parameter can't be used with custom job templates or to create jobs from them.</p> </note>",
          "shape": "ParameterMap"
        },
        "forceCanceled": {
          "documentation": "<p>Will be <code>true</code> if the job was canceled with the optional <code>force</code> parameter set to <code>true</code>.</p>",
          "shape": "Forced"
        },
        "isConcurrent": {
          "documentation": "<p>Indicates whether a job is concurrent. Will be true when a job is rolling out new job executions or canceling previously created executions, otherwise false.</p>",
          "shape": "BooleanWrapperObject"
        },
        "jobArn": {
          "documentation": "<p>An ARN identifying the job with format \"arn:aws:iot:region:account:job/jobId\".</p>",
          "shape": "JobArn"
        },
        "jobExecutionsRetryConfig": {
          "documentation": "<p>The configuration for the criteria to retry the job.</p>",
          "shape": "JobExecutionsRetryConfig"
        },
        "jobExecutionsRolloutConfig": {
          "documentation": "<p>Allows you to create a staged rollout of a job.</p>",
          "shape": "JobExecutionsRolloutConfig"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "shape": "JobId"
        },
        "jobProcessDetails": {
          "documentation": "<p>Details about the job process.</p>",
          "shape": "JobProcessDetails"
        },
        "jobTemplateArn": {
          "documentation": "<p>The ARN of the job template used to create the job.</p>",
          "shape": "JobTemplateArn"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job was last updated.</p>",
          "shape": "DateType"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "shape": "NamespaceId"
        },
        "presignedUrlConfig": {
          "documentation": "<p>Configuration for pre-signed S3 URLs.</p>",
          "shape": "PresignedUrlConfig"
        },
        "reasonCode": {
          "documentation": "<p>If the job was updated, provides the reason code for the update.</p>",
          "shape": "ReasonCode"
        },
        "status": {
          "documentation": "<p>The status of the job, one of <code>IN_PROGRESS</code>, <code>CANCELED</code>, <code>DELETION_IN_PROGRESS</code> or <code>COMPLETED</code>. </p>",
          "shape": "JobStatus"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a device when the thing representing the device is added to a target group, even after the job was completed by all things originally in the group. </p> <note> <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets. By using continuous jobs, devices that join the group receive the job execution even after the job has been created.</p> </note>",
          "shape": "TargetSelection"
        },
        "targets": {
          "documentation": "<p>A list of IoT things and thing groups to which the job should be sent.</p>",
          "shape": "JobTargets"
        },
        "timeoutConfig": {
          "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.</p>",
          "shape": "TimeoutConfig"
        }
      },
      "type": "structure"
    },
    "JobArn": {
      "type": "string"
    },
    "JobDescription": {
      "max": 2028,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "JobDocument": {
      "max": 32768,
      "type": "string"
    },
    "JobDocumentSource": {
      "max": 1350,
      "min": 1,
      "type": "string"
    },
    "JobExecution": {
      "documentation": "<p>The job execution object represents the execution of a job on a particular device.</p>",
      "members": {
        "approximateSecondsBeforeTimedOut": {
          "documentation": "<p>The estimated number of seconds that remain before the job execution status will be changed to <code>TIMED_OUT</code>. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The actual job execution timeout can occur up to 60 seconds later than the estimated duration. This value will not be included if the job execution has reached a terminal status.</p>",
          "shape": "ApproximateSecondsBeforeTimedOut"
        },
        "executionNumber": {
          "documentation": "<p>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on this particular device. It can be used in commands which return or update job execution information. </p>",
          "shape": "ExecutionNumber"
        },
        "forceCanceled": {
          "documentation": "<p>Will be <code>true</code> if the job execution was canceled with the optional <code>force</code> parameter set to <code>true</code>.</p>",
          "shape": "Forced"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to the job when it was created.</p>",
          "shape": "JobId"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution was last updated.</p>",
          "shape": "DateType"
        },
        "queuedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution was queued.</p>",
          "shape": "DateType"
        },
        "startedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution started.</p>",
          "shape": "DateType"
        },
        "status": {
          "documentation": "<p>The status of the job execution (IN_PROGRESS, QUEUED, FAILED, SUCCEEDED, TIMED_OUT, CANCELED, or REJECTED).</p>",
          "shape": "JobExecutionStatus"
        },
        "statusDetails": {
          "documentation": "<p>A collection of name/value pairs that describe the status of the job execution.</p>",
          "shape": "JobExecutionStatusDetails"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing on which the job execution is running.</p>",
          "shape": "ThingArn"
        },
        "versionNumber": {
          "documentation": "<p>The version of the job execution. Job execution versions are incremented each time they are updated by a device.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "JobExecutionFailureType": {
      "enum": [
        "FAILED",
        "REJECTED",
        "TIMED_OUT",
        "ALL"
      ],
      "type": "string"
    },
    "JobExecutionStatus": {
      "enum": [
        "QUEUED",
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED",
        "TIMED_OUT",
        "REJECTED",
        "REMOVED",
        "CANCELED"
      ],
      "type": "string"
    },
    "JobExecutionStatusDetails": {
      "documentation": "<p>Details of the job execution status.</p>",
      "members": {
        "detailsMap": {
          "documentation": "<p>The job execution status.</p>",
          "shape": "DetailsMap"
        }
      },
      "type": "structure"
    },
    "JobExecutionSummary": {
      "documentation": "<p>The job execution summary.</p>",
      "members": {
        "executionNumber": {
          "documentation": "<p>A string (consisting of the digits \"0\" through \"9\") which identifies this particular job execution on this particular device. It can be used later in commands which return or update job execution information.</p>",
          "shape": "ExecutionNumber"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution was last updated.</p>",
          "shape": "DateType"
        },
        "queuedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution was queued.</p>",
          "shape": "DateType"
        },
        "retryAttempt": {
          "documentation": "<p>The number that indicates how many retry attempts have been completed for this job on this device.</p>",
          "shape": "RetryAttempt"
        },
        "startedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job execution started.</p>",
          "shape": "DateType"
        },
        "status": {
          "documentation": "<p>The status of the job execution.</p>",
          "shape": "JobExecutionStatus"
        }
      },
      "type": "structure"
    },
    "JobExecutionSummaryForJob": {
      "documentation": "<p>Contains a summary of information about job executions for a specific job.</p>",
      "members": {
        "jobExecutionSummary": {
          "documentation": "<p>Contains a subset of information about a job execution.</p>",
          "shape": "JobExecutionSummary"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing on which the job execution is running.</p>",
          "shape": "ThingArn"
        }
      },
      "type": "structure"
    },
    "JobExecutionSummaryForJobList": {
      "member": {
        "shape": "JobExecutionSummaryForJob"
      },
      "type": "list"
    },
    "JobExecutionSummaryForThing": {
      "documentation": "<p>The job execution summary for a thing.</p>",
      "members": {
        "jobExecutionSummary": {
          "documentation": "<p>Contains a subset of information about a job execution.</p>",
          "shape": "JobExecutionSummary"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "shape": "JobId"
        }
      },
      "type": "structure"
    },
    "JobExecutionSummaryForThingList": {
      "member": {
        "shape": "JobExecutionSummaryForThing"
      },
      "type": "list"
    },
    "JobExecutionsRetryConfig": {
      "documentation": "<p>The configuration that determines how many retries are allowed for each failure type for a job.</p>",
      "members": {
        "criteriaList": {
          "documentation": "<p>The list of criteria that determines how many retries are allowed for each failure type for a job.</p>",
          "shape": "RetryCriteriaList"
        }
      },
      "required": [
        "criteriaList"
      ],
      "type": "structure"
    },
    "JobExecutionsRolloutConfig": {
      "documentation": "<p>Allows you to create a staged rollout of a job.</p>",
      "members": {
        "exponentialRate": {
          "documentation": "<p>The rate of increase for a job rollout. This parameter allows you to define an exponential rate for a job rollout.</p>",
          "shape": "ExponentialRolloutRate"
        },
        "maximumPerMinute": {
          "documentation": "<p>The maximum number of things that will be notified of a pending job, per minute. This parameter allows you to create a staged rollout.</p>",
          "shape": "MaxJobExecutionsPerMin"
        }
      },
      "type": "structure"
    },
    "JobId": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "JobProcessDetails": {
      "documentation": "<p>The job process details.</p>",
      "members": {
        "numberOfCanceledThings": {
          "documentation": "<p>The number of things that cancelled the job.</p>",
          "shape": "CanceledThings"
        },
        "numberOfFailedThings": {
          "documentation": "<p>The number of things that failed executing the job.</p>",
          "shape": "FailedThings"
        },
        "numberOfInProgressThings": {
          "documentation": "<p>The number of things currently executing the job.</p>",
          "shape": "InProgressThings"
        },
        "numberOfQueuedThings": {
          "documentation": "<p>The number of things that are awaiting execution of the job.</p>",
          "shape": "QueuedThings"
        },
        "numberOfRejectedThings": {
          "documentation": "<p>The number of things that rejected the job.</p>",
          "shape": "RejectedThings"
        },
        "numberOfRemovedThings": {
          "documentation": "<p>The number of things that are no longer scheduled to execute the job because they have been deleted or have been removed from the group that was a target of the job.</p>",
          "shape": "RemovedThings"
        },
        "numberOfSucceededThings": {
          "documentation": "<p>The number of things which successfully completed the job.</p>",
          "shape": "SucceededThings"
        },
        "numberOfTimedOutThings": {
          "documentation": "<p>The number of things whose job execution status is <code>TIMED_OUT</code>.</p>",
          "shape": "TimedOutThings"
        },
        "processingTargets": {
          "documentation": "<p>The target devices to which the job execution is being rolled out. This value will be null after the job execution has finished rolling out to all the target devices.</p>",
          "shape": "ProcessingTargetNameList"
        }
      },
      "type": "structure"
    },
    "JobStatus": {
      "enum": [
        "IN_PROGRESS",
        "CANCELED",
        "COMPLETED",
        "DELETION_IN_PROGRESS"
      ],
      "type": "string"
    },
    "JobSummary": {
      "documentation": "<p>The job summary.</p>",
      "members": {
        "completedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job completed.</p>",
          "shape": "DateType"
        },
        "createdAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job was created.</p>",
          "shape": "DateType"
        },
        "isConcurrent": {
          "documentation": "<p>Indicates whether a job is concurrent. Will be true when a job is rolling out new job executions or canceling previously created executions, otherwise false.</p>",
          "shape": "BooleanWrapperObject"
        },
        "jobArn": {
          "documentation": "<p>The job ARN.</p>",
          "shape": "JobArn"
        },
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "shape": "JobId"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job was last updated.</p>",
          "shape": "DateType"
        },
        "status": {
          "documentation": "<p>The job summary status.</p>",
          "shape": "JobStatus"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group.</p> <note> <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets. By using continuous jobs, devices that join the group receive the job execution even after the job has been created.</p> </note>",
          "shape": "TargetSelection"
        },
        "thingGroupId": {
          "documentation": "<p>The ID of the thing group.</p>",
          "shape": "ThingGroupId"
        }
      },
      "type": "structure"
    },
    "JobSummaryList": {
      "member": {
        "shape": "JobSummary"
      },
      "type": "list"
    },
    "JobTargets": {
      "member": {
        "shape": "TargetArn"
      },
      "min": 1,
      "type": "list"
    },
    "JobTemplateArn": {
      "max": 1600,
      "min": 1,
      "pattern": "^arn:[!-~]+$",
      "type": "string"
    },
    "JobTemplateId": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "JobTemplateSummary": {
      "documentation": "<p>An object that contains information about the job template.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The time, in seconds since the epoch, when the job template was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>A description of the job template.</p>",
          "shape": "JobDescription"
        },
        "jobTemplateArn": {
          "documentation": "<p>The ARN of the job template.</p>",
          "shape": "JobTemplateArn"
        },
        "jobTemplateId": {
          "documentation": "<p>The unique identifier of the job template.</p>",
          "shape": "JobTemplateId"
        }
      },
      "type": "structure"
    },
    "JobTemplateSummaryList": {
      "member": {
        "shape": "JobTemplateSummary"
      },
      "type": "list"
    },
    "JsonDocument": {
      "type": "string"
    },
    "KafkaAction": {
      "documentation": "<p>Send messages to an Amazon Managed Streaming for Apache Kafka (Amazon MSK) or self-managed Apache Kafka cluster.</p>",
      "members": {
        "clientProperties": {
          "documentation": "<p>Properties of the Apache Kafka producer client.</p>",
          "shape": "ClientProperties"
        },
        "destinationArn": {
          "documentation": "<p>The ARN of Kafka action's VPC <code>TopicRuleDestination</code>.</p>",
          "shape": "AwsArn"
        },
        "key": {
          "documentation": "<p>The Kafka message key.</p>",
          "shape": "String"
        },
        "partition": {
          "documentation": "<p>The Kafka message partition.</p>",
          "shape": "String"
        },
        "topic": {
          "documentation": "<p>The Kafka topic for messages to be sent to the Kafka broker.</p>",
          "shape": "String"
        }
      },
      "required": [
        "destinationArn",
        "topic",
        "clientProperties"
      ],
      "type": "structure"
    },
    "Key": {
      "type": "string"
    },
    "KeyName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "KeyPair": {
      "documentation": "<p>Describes a key pair.</p>",
      "members": {
        "PrivateKey": {
          "documentation": "<p>The private key.</p>",
          "shape": "PrivateKey"
        },
        "PublicKey": {
          "documentation": "<p>The public key.</p>",
          "shape": "PublicKey"
        }
      },
      "type": "structure"
    },
    "KeyValue": {
      "max": 5120,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "KinesisAction": {
      "documentation": "<p>Describes an action to write data to an Amazon Kinesis stream.</p>",
      "members": {
        "partitionKey": {
          "documentation": "<p>The partition key.</p>",
          "shape": "PartitionKey"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access to the Amazon Kinesis stream.</p>",
          "shape": "AwsArn"
        },
        "streamName": {
          "documentation": "<p>The name of the Amazon Kinesis stream.</p>",
          "shape": "StreamName"
        }
      },
      "required": [
        "roleArn",
        "streamName"
      ],
      "type": "structure"
    },
    "LambdaAction": {
      "documentation": "<p>Describes an action to invoke a Lambda function.</p>",
      "members": {
        "functionArn": {
          "documentation": "<p>The ARN of the Lambda function.</p>",
          "shape": "FunctionArn"
        }
      },
      "required": [
        "functionArn"
      ],
      "type": "structure"
    },
    "LaserMaxResults": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "LastModifiedDate": {
      "type": "timestamp"
    },
    "LastUpdatedAtDate": {
      "type": "timestamp"
    },
    "LimitExceededException": {
      "documentation": "<p>A limit has been exceeded.</p>",
      "error": {
        "httpStatusCode": 410
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ListActiveViolationsRequest": {
      "members": {
        "behaviorCriteriaType": {
          "documentation": "<p> The criteria for a behavior. </p>",
          "location": "querystring",
          "locationName": "behaviorCriteriaType",
          "shape": "BehaviorCriteriaType"
        },
        "listSuppressedAlerts": {
          "documentation": "<p> A list of all suppressed alerts. </p>",
          "location": "querystring",
          "locationName": "listSuppressedAlerts",
          "shape": "ListSuppressedAlerts"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the Device Defender security profile for which violations are listed.</p>",
          "location": "querystring",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing whose active violations are listed.</p>",
          "location": "querystring",
          "locationName": "thingName",
          "shape": "DeviceDefenderThingName"
        },
        "verificationState": {
          "documentation": "<p>The verification state of the violation (detect alarm).</p>",
          "location": "querystring",
          "locationName": "verificationState",
          "shape": "VerificationState"
        }
      },
      "type": "structure"
    },
    "ListActiveViolationsResponse": {
      "members": {
        "activeViolations": {
          "documentation": "<p>The list of active violations.</p>",
          "shape": "ActiveViolations"
        },
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAttachedPoliciesRequest": {
      "members": {
        "marker": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "recursive": {
          "documentation": "<p>When true, recursively list attached policies.</p>",
          "location": "querystring",
          "locationName": "recursive",
          "shape": "Recursive"
        },
        "target": {
          "documentation": "<p>The group or principal for which the policies will be listed. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>",
          "location": "uri",
          "locationName": "target",
          "shape": "PolicyTarget"
        }
      },
      "required": [
        "target"
      ],
      "type": "structure"
    },
    "ListAttachedPoliciesResponse": {
      "members": {
        "nextMarker": {
          "documentation": "<p>The token to retrieve the next set of results, or ``null`` if there are no more results.</p>",
          "shape": "Marker"
        },
        "policies": {
          "documentation": "<p>The policies.</p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "ListAuditFindingsRequest": {
      "members": {
        "checkName": {
          "documentation": "<p>A filter to limit results to the findings for the specified audit check.</p>",
          "shape": "AuditCheckName"
        },
        "endTime": {
          "documentation": "<p>A filter to limit results to those found before the specified time. You must specify either the startTime and endTime or the taskId, but not both.</p>",
          "shape": "Timestamp"
        },
        "listSuppressedFindings": {
          "documentation": "<p> Boolean flag indicating whether only the suppressed findings or the unsuppressed findings should be listed. If this parameter isn't provided, the response will list both suppressed and unsuppressed findings. </p>",
          "shape": "ListSuppressedFindings"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "resourceIdentifier": {
          "documentation": "<p>Information identifying the noncompliant resource.</p>",
          "shape": "ResourceIdentifier"
        },
        "startTime": {
          "documentation": "<p>A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.</p>",
          "shape": "Timestamp"
        },
        "taskId": {
          "documentation": "<p>A filter to limit results to the audit with the specified ID. You must specify either the taskId or the startTime and endTime, but not both.</p>",
          "shape": "AuditTaskId"
        }
      },
      "type": "structure"
    },
    "ListAuditFindingsResponse": {
      "members": {
        "findings": {
          "documentation": "<p>The findings (results) of the audit.</p>",
          "shape": "AuditFindings"
        },
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAuditMitigationActionsExecutionsRequest": {
      "members": {
        "actionStatus": {
          "documentation": "<p>Specify this filter to limit results to those with a specific status.</p>",
          "location": "querystring",
          "locationName": "actionStatus",
          "shape": "AuditMitigationActionsExecutionStatus"
        },
        "findingId": {
          "documentation": "<p>Specify this filter to limit results to those that were applied to a specific audit finding.</p>",
          "location": "querystring",
          "locationName": "findingId",
          "shape": "FindingId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "taskId": {
          "documentation": "<p>Specify this filter to limit results to actions for a specific audit mitigation actions task.</p>",
          "location": "querystring",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId",
        "findingId"
      ],
      "type": "structure"
    },
    "ListAuditMitigationActionsExecutionsResponse": {
      "members": {
        "actionsExecutions": {
          "documentation": "<p>A set of task execution results based on the input parameters. Details include the mitigation action applied, start time, and task status.</p>",
          "shape": "AuditMitigationActionExecutionMetadataList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAuditMitigationActionsTasksRequest": {
      "members": {
        "auditTaskId": {
          "documentation": "<p>Specify this filter to limit results to tasks that were applied to results for a specific audit.</p>",
          "location": "querystring",
          "locationName": "auditTaskId",
          "shape": "AuditTaskId"
        },
        "endTime": {
          "documentation": "<p>Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.</p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "findingId": {
          "documentation": "<p>Specify this filter to limit results to tasks that were applied to a specific audit finding.</p>",
          "location": "querystring",
          "locationName": "findingId",
          "shape": "FindingId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "startTime": {
          "documentation": "<p>Specify this filter to limit results to tasks that began on or after a specific date and time.</p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        },
        "taskStatus": {
          "documentation": "<p>Specify this filter to limit results to tasks that are in a specific state.</p>",
          "location": "querystring",
          "locationName": "taskStatus",
          "shape": "AuditMitigationActionsTaskStatus"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ListAuditMitigationActionsTasksResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "shape": "NextToken"
        },
        "tasks": {
          "documentation": "<p>The collection of audit mitigation tasks that matched the filter criteria.</p>",
          "shape": "AuditMitigationActionsTaskMetadataList"
        }
      },
      "type": "structure"
    },
    "ListAuditSuppressionsRequest": {
      "members": {
        "ascendingOrder": {
          "documentation": "<p> Determines whether suppressions are listed in ascending order by expiration date or not. If parameter isn't provided, <code>ascendingOrder=true</code>. </p>",
          "shape": "AscendingOrder"
        },
        "checkName": {
          "shape": "AuditCheckName"
        },
        "maxResults": {
          "documentation": "<p> The maximum number of results to return at one time. The default is 25. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The token for the next set of results. </p>",
          "shape": "NextToken"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        }
      },
      "type": "structure"
    },
    "ListAuditSuppressionsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p> A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. </p>",
          "shape": "NextToken"
        },
        "suppressions": {
          "documentation": "<p> List of audit suppressions. </p>",
          "shape": "AuditSuppressionList"
        }
      },
      "type": "structure"
    },
    "ListAuditTasksRequest": {
      "members": {
        "endTime": {
          "documentation": "<p>The end of the time period.</p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "startTime": {
          "documentation": "<p>The beginning of the time period. Audit information is retained for a limited time (90 days). Requesting a start time prior to what is retained results in an \"InvalidRequestException\".</p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        },
        "taskStatus": {
          "documentation": "<p>A filter to limit the output to audits with the specified completion status: can be one of \"IN_PROGRESS\", \"COMPLETED\", \"FAILED\", or \"CANCELED\".</p>",
          "location": "querystring",
          "locationName": "taskStatus",
          "shape": "AuditTaskStatus"
        },
        "taskType": {
          "documentation": "<p>A filter to limit the output to the specified type of audit: can be one of \"ON_DEMAND_AUDIT_TASK\" or \"SCHEDULED__AUDIT_TASK\".</p>",
          "location": "querystring",
          "locationName": "taskType",
          "shape": "AuditTaskType"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ListAuditTasksResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "tasks": {
          "documentation": "<p>The audits that were performed during the specified time period.</p>",
          "shape": "AuditTaskMetadataList"
        }
      },
      "type": "structure"
    },
    "ListAuthorizersRequest": {
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Return the list of authorizers in ascending alphabetical order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "status": {
          "documentation": "<p>The status of the list authorizers request.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "AuthorizerStatus"
        }
      },
      "type": "structure"
    },
    "ListAuthorizersResponse": {
      "members": {
        "authorizers": {
          "documentation": "<p>The authorizers.</p>",
          "shape": "Authorizers"
        },
        "nextMarker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "shape": "Marker"
        }
      },
      "type": "structure"
    },
    "ListBillingGroupsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "namePrefixFilter": {
          "documentation": "<p>Limit the results to billing groups whose names have the given prefix.</p>",
          "location": "querystring",
          "locationName": "namePrefixFilter",
          "shape": "BillingGroupName"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListBillingGroupsResponse": {
      "members": {
        "billingGroups": {
          "documentation": "<p>The list of billing groups.</p>",
          "shape": "BillingGroupNameAndArnList"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListCACertificatesRequest": {
      "documentation": "<p>Input for the ListCACertificates operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Determines the order of the results.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "location": "querystring",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "type": "structure"
    },
    "ListCACertificatesResponse": {
      "documentation": "<p>The output from the ListCACertificates operation.</p>",
      "members": {
        "certificates": {
          "documentation": "<p>The CA certificates registered in your Amazon Web Services account.</p>",
          "shape": "CACertificates"
        },
        "nextMarker": {
          "documentation": "<p>The current position within the list of CA certificates.</p>",
          "shape": "Marker"
        }
      },
      "type": "structure"
    },
    "ListCertificatesByCARequest": {
      "documentation": "<p>The input to the ListCertificatesByCA operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "caCertificateId": {
          "documentation": "<p>The ID of the CA certificate. This operation will list all registered device certificate that were signed by this CA certificate.</p>",
          "location": "uri",
          "locationName": "caCertificateId",
          "shape": "CertificateId"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        }
      },
      "required": [
        "caCertificateId"
      ],
      "type": "structure"
    },
    "ListCertificatesByCAResponse": {
      "documentation": "<p>The output of the ListCertificatesByCA operation.</p>",
      "members": {
        "certificates": {
          "documentation": "<p>The device certificates signed by the specified CA certificate.</p>",
          "shape": "Certificates"
        },
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "shape": "Marker"
        }
      },
      "type": "structure"
    },
    "ListCertificatesRequest": {
      "documentation": "<p>The input for the ListCertificates operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        }
      },
      "type": "structure"
    },
    "ListCertificatesResponse": {
      "documentation": "<p>The output of the ListCertificates operation.</p>",
      "members": {
        "certificates": {
          "documentation": "<p>The descriptions of the certificates.</p>",
          "shape": "Certificates"
        },
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "shape": "Marker"
        }
      },
      "type": "structure"
    },
    "ListCustomMetricsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p> The maximum number of results to return at one time. The default is 25. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The token for the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListCustomMetricsResponse": {
      "members": {
        "metricNames": {
          "documentation": "<p> The name of the custom metric. </p>",
          "shape": "MetricNames"
        },
        "nextToken": {
          "documentation": "<p> A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDetectMitigationActionsExecutionsRequest": {
      "members": {
        "endTime": {
          "documentation": "<p> The end of the time period for which ML Detect mitigation actions executions are returned. </p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "maxResults": {
          "documentation": "<p> The maximum number of results to return at one time. The default is 25. </p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The token for the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "startTime": {
          "documentation": "<p> A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both. </p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        },
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "location": "querystring",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        },
        "thingName": {
          "documentation": "<p> The name of the thing whose mitigation actions are listed. </p>",
          "location": "querystring",
          "locationName": "thingName",
          "shape": "DeviceDefenderThingName"
        },
        "violationId": {
          "documentation": "<p> The unique identifier of the violation. </p>",
          "location": "querystring",
          "locationName": "violationId",
          "shape": "ViolationId"
        }
      },
      "type": "structure"
    },
    "ListDetectMitigationActionsExecutionsResponse": {
      "members": {
        "actionsExecutions": {
          "documentation": "<p> List of actions executions. </p>",
          "shape": "DetectMitigationActionExecutionList"
        },
        "nextToken": {
          "documentation": "<p> A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDetectMitigationActionsTasksRequest": {
      "members": {
        "endTime": {
          "documentation": "<p> The end of the time period for which ML Detect mitigation actions tasks are returned. </p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p> The token for the next set of results. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "startTime": {
          "documentation": "<p> A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both. </p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ListDetectMitigationActionsTasksResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p> A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results. </p>",
          "shape": "NextToken"
        },
        "tasks": {
          "documentation": "<p> The collection of ML Detect mitigation tasks that matched the filter criteria. </p>",
          "shape": "DetectMitigationActionsTaskSummaryList"
        }
      },
      "type": "structure"
    },
    "ListDimensionsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to retrieve at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDimensionsResponse": {
      "members": {
        "dimensionNames": {
          "documentation": "<p>A list of the names of the defined dimensions. Use <code>DescribeDimension</code> to get details for a dimension.</p>",
          "shape": "DimensionNames"
        },
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDomainConfigurationsRequest": {
      "members": {
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "serviceType": {
          "documentation": "<p>The type of service delivered by the endpoint.</p>",
          "location": "querystring",
          "locationName": "serviceType",
          "shape": "ServiceType"
        }
      },
      "type": "structure"
    },
    "ListDomainConfigurationsResponse": {
      "members": {
        "domainConfigurations": {
          "documentation": "<p>A list of objects that contain summary information about the user's domain configurations.</p>",
          "shape": "DomainConfigurations"
        },
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "shape": "Marker"
        }
      },
      "type": "structure"
    },
    "ListFleetMetricsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <code>null</code> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListFleetMetricsResponse": {
      "members": {
        "fleetMetrics": {
          "documentation": "<p>The list of fleet metrics objects.</p>",
          "shape": "FleetMetricNameAndArnList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Will not be returned if the operation has returned all results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListIndicesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "QueryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token used to get the next set of results, or <code>null</code> if there are no additional results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListIndicesResponse": {
      "members": {
        "indexNames": {
          "documentation": "<p>The index names.</p>",
          "shape": "IndexNamesList"
        },
        "nextToken": {
          "documentation": "<p>The token used to get the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListJobExecutionsForJobRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "LaserMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "status": {
          "documentation": "<p>The status of the job.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "JobExecutionStatus"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "ListJobExecutionsForJobResponse": {
      "members": {
        "executionSummaries": {
          "documentation": "<p>A list of job execution summaries.</p>",
          "shape": "JobExecutionSummaryForJobList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListJobExecutionsForThingRequest": {
      "members": {
        "jobId": {
          "documentation": "<p>The unique identifier you assigned to this job when it was created.</p>",
          "location": "querystring",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "LaserMaxResults"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        },
        "nextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "status": {
          "documentation": "<p>An optional filter that lets you search for jobs that have the specified status.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "JobExecutionStatus"
        },
        "thingName": {
          "documentation": "<p>The thing name.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "ListJobExecutionsForThingResponse": {
      "members": {
        "executionSummaries": {
          "documentation": "<p>A list of job execution summaries.</p>",
          "shape": "JobExecutionSummaryForThingList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListJobTemplatesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in the list.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "LaserMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to use to return the next set of results in the list.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListJobTemplatesResponse": {
      "members": {
        "jobTemplates": {
          "documentation": "<p>A list of objects that contain information about the job templates.</p>",
          "shape": "JobTemplateSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListJobsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "LaserMaxResults"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        },
        "nextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "status": {
          "documentation": "<p>An optional filter that lets you search for jobs that have the specified status.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "JobStatus"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the job will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the job (SNAPSHOT). If continuous, the job may also be run on a thing when a change is detected in a target. For example, a job will run on a thing when the thing is added to a target group, even after the job was completed by all things originally in the group. </p> <note> <p>We recommend that you use continuous jobs instead of snapshot jobs for dynamic thing group targets. By using continuous jobs, devices that join the group receive the job execution even after the job has been created.</p> </note>",
          "location": "querystring",
          "locationName": "targetSelection",
          "shape": "TargetSelection"
        },
        "thingGroupId": {
          "documentation": "<p>A filter that limits the returned jobs to those for the specified group.</p>",
          "location": "querystring",
          "locationName": "thingGroupId",
          "shape": "ThingGroupId"
        },
        "thingGroupName": {
          "documentation": "<p>A filter that limits the returned jobs to those for the specified group.</p>",
          "location": "querystring",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        }
      },
      "type": "structure"
    },
    "ListJobsResponse": {
      "members": {
        "jobs": {
          "documentation": "<p>A list of jobs.</p>",
          "shape": "JobSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListManagedJobTemplatesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of entries that can be returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "LaserMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "templateName": {
          "documentation": "<p>An optional parameter for template name. If specified, only the versions of the managed job templates that have the specified template name will be returned.</p>",
          "location": "querystring",
          "locationName": "templateName",
          "shape": "ManagedJobTemplateName"
        }
      },
      "type": "structure"
    },
    "ListManagedJobTemplatesResponse": {
      "members": {
        "managedJobTemplates": {
          "documentation": "<p>A list of managed job templates that are returned.</p>",
          "shape": "ManagedJobTemplatesSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The token to retrieve the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListMetricValuesRequest": {
      "members": {
        "dimensionName": {
          "documentation": "<p>The dimension name.</p>",
          "location": "querystring",
          "locationName": "dimensionName",
          "shape": "DimensionName"
        },
        "dimensionValueOperator": {
          "documentation": "<p>The dimension value operator.</p>",
          "location": "querystring",
          "locationName": "dimensionValueOperator",
          "shape": "DimensionValueOperator"
        },
        "endTime": {
          "documentation": "<p>The end of the time period for which metric values are returned.</p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "metricName": {
          "documentation": "<p>The name of the security profile metric for which values are returned.</p>",
          "location": "querystring",
          "locationName": "metricName",
          "shape": "BehaviorMetric"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "startTime": {
          "documentation": "<p>The start of the time period for which metric values are returned.</p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        },
        "thingName": {
          "documentation": "<p>The name of the thing for which security profile metric values are returned.</p>",
          "location": "querystring",
          "locationName": "thingName",
          "shape": "DeviceDefenderThingName"
        }
      },
      "required": [
        "thingName",
        "metricName",
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ListMetricValuesResponse": {
      "members": {
        "metricDatumList": {
          "documentation": "<p>The data the thing reports for the metric during the specified time period.</p>",
          "shape": "MetricDatumList"
        },
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListMitigationActionsRequest": {
      "members": {
        "actionType": {
          "documentation": "<p>Specify a value to limit the result to mitigation actions with a specific action type.</p>",
          "location": "querystring",
          "locationName": "actionType",
          "shape": "MitigationActionType"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListMitigationActionsResponse": {
      "members": {
        "actionIdentifiers": {
          "documentation": "<p>A set of actions that matched the specified filter criteria.</p>",
          "shape": "MitigationActionIdentifierList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListOTAUpdatesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>A token used to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "otaUpdateStatus": {
          "documentation": "<p>The OTA update job status.</p>",
          "location": "querystring",
          "locationName": "otaUpdateStatus",
          "shape": "OTAUpdateStatus"
        }
      },
      "type": "structure"
    },
    "ListOTAUpdatesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token to use to get the next set of results.</p>",
          "shape": "NextToken"
        },
        "otaUpdates": {
          "documentation": "<p>A list of OTA update jobs.</p>",
          "shape": "OTAUpdatesSummary"
        }
      },
      "type": "structure"
    },
    "ListOutgoingCertificatesRequest": {
      "documentation": "<p>The input to the ListOutgoingCertificates operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If True, the results are returned in ascending order, based on the creation date.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        }
      },
      "type": "structure"
    },
    "ListOutgoingCertificatesResponse": {
      "documentation": "<p>The output from the ListOutgoingCertificates operation.</p>",
      "members": {
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "shape": "Marker"
        },
        "outgoingCertificates": {
          "documentation": "<p>The certificates that are being transferred but not yet accepted.</p>",
          "shape": "OutgoingCertificates"
        }
      },
      "type": "structure"
    },
    "ListPoliciesRequest": {
      "documentation": "<p>The input for the ListPolicies operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        }
      },
      "type": "structure"
    },
    "ListPoliciesResponse": {
      "documentation": "<p>The output from the ListPolicies operation.</p>",
      "members": {
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "shape": "Marker"
        },
        "policies": {
          "documentation": "<p>The descriptions of the policies.</p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "ListPolicyPrincipalsRequest": {
      "documentation": "<p>The input for the ListPolicyPrincipals operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If true, the results are returned in ascending creation order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "header",
          "locationName": "x-amzn-iot-policy",
          "shape": "PolicyName"
        }
      },
      "required": [
        "policyName"
      ],
      "type": "structure"
    },
    "ListPolicyPrincipalsResponse": {
      "documentation": "<p>The output from the ListPolicyPrincipals operation.</p>",
      "members": {
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "shape": "Marker"
        },
        "principals": {
          "documentation": "<p>The descriptions of the principals.</p>",
          "shape": "Principals"
        }
      },
      "type": "structure"
    },
    "ListPolicyVersionsRequest": {
      "documentation": "<p>The input for the ListPolicyVersions operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        }
      },
      "required": [
        "policyName"
      ],
      "type": "structure"
    },
    "ListPolicyVersionsResponse": {
      "documentation": "<p>The output from the ListPolicyVersions operation.</p>",
      "members": {
        "policyVersions": {
          "documentation": "<p>The policy versions.</p>",
          "shape": "PolicyVersions"
        }
      },
      "type": "structure"
    },
    "ListPrincipalPoliciesRequest": {
      "documentation": "<p>The input for the ListPrincipalPolicies operation.</p>",
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Specifies the order for results. If true, results are returned in ascending creation order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>The marker for the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The result page size.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "principal": {
          "documentation": "<p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>",
          "location": "header",
          "locationName": "x-amzn-iot-principal",
          "shape": "Principal"
        }
      },
      "required": [
        "principal"
      ],
      "type": "structure"
    },
    "ListPrincipalPoliciesResponse": {
      "documentation": "<p>The output from the ListPrincipalPolicies operation.</p>",
      "members": {
        "nextMarker": {
          "documentation": "<p>The marker for the next set of results, or null if there are no additional results.</p>",
          "shape": "Marker"
        },
        "policies": {
          "documentation": "<p>The policies.</p>",
          "shape": "Policies"
        }
      },
      "type": "structure"
    },
    "ListPrincipalThingsRequest": {
      "documentation": "<p>The input for the ListPrincipalThings operation.</p>",
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "principal": {
          "documentation": "<p>The principal.</p>",
          "location": "header",
          "locationName": "x-amzn-principal",
          "shape": "Principal"
        }
      },
      "required": [
        "principal"
      ],
      "type": "structure"
    },
    "ListPrincipalThingsResponse": {
      "documentation": "<p>The output from the ListPrincipalThings operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "things": {
          "documentation": "<p>The things.</p>",
          "shape": "ThingNameList"
        }
      },
      "type": "structure"
    },
    "ListProvisioningTemplateVersionsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>A token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "ListProvisioningTemplateVersionsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "versions": {
          "documentation": "<p>The list of provisioning template versions.</p>",
          "shape": "ProvisioningTemplateVersionListing"
        }
      },
      "type": "structure"
    },
    "ListProvisioningTemplatesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>A token to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListProvisioningTemplatesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "templates": {
          "documentation": "<p>A list of provisioning templates</p>",
          "shape": "ProvisioningTemplateListing"
        }
      },
      "type": "structure"
    },
    "ListRoleAliasesRequest": {
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Return the list of role aliases in ascending alphabetical order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "marker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        }
      },
      "type": "structure"
    },
    "ListRoleAliasesResponse": {
      "members": {
        "nextMarker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "shape": "Marker"
        },
        "roleAliases": {
          "documentation": "<p>The role aliases.</p>",
          "shape": "RoleAliases"
        }
      },
      "type": "structure"
    },
    "ListScheduledAuditsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time. The default is 25.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListScheduledAuditsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "scheduledAudits": {
          "documentation": "<p>The list of scheduled audits.</p>",
          "shape": "ScheduledAuditMetadataList"
        }
      },
      "type": "structure"
    },
    "ListSecurityProfilesForTargetRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "recursive": {
          "documentation": "<p>If true, return child groups too.</p>",
          "location": "querystring",
          "locationName": "recursive",
          "shape": "Recursive"
        },
        "securityProfileTargetArn": {
          "documentation": "<p>The ARN of the target (thing group) whose attached security profiles you want to get.</p>",
          "location": "querystring",
          "locationName": "securityProfileTargetArn",
          "shape": "SecurityProfileTargetArn"
        }
      },
      "required": [
        "securityProfileTargetArn"
      ],
      "type": "structure"
    },
    "ListSecurityProfilesForTargetResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "securityProfileTargetMappings": {
          "documentation": "<p>A list of security profiles and their associated targets.</p>",
          "shape": "SecurityProfileTargetMappings"
        }
      },
      "type": "structure"
    },
    "ListSecurityProfilesRequest": {
      "members": {
        "dimensionName": {
          "documentation": "<p>A filter to limit results to the security profiles that use the defined dimension. Cannot be used with <code>metricName</code> </p>",
          "location": "querystring",
          "locationName": "dimensionName",
          "shape": "DimensionName"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric. Cannot be used with <code>dimensionName</code>. </p>",
          "location": "querystring",
          "locationName": "metricName",
          "shape": "MetricName"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListSecurityProfilesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "securityProfileIdentifiers": {
          "documentation": "<p>A list of security profile identifiers (names and ARNs).</p>",
          "shape": "SecurityProfileIdentifiers"
        }
      },
      "type": "structure"
    },
    "ListStreamsRequest": {
      "members": {
        "ascendingOrder": {
          "documentation": "<p>Set to true to return the list of streams in ascending order.</p>",
          "location": "querystring",
          "locationName": "isAscendingOrder",
          "shape": "AscendingOrder"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at a time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>A token used to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListStreamsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token used to get the next set of results.</p>",
          "shape": "NextToken"
        },
        "streams": {
          "documentation": "<p>A list of streams.</p>",
          "shape": "StreamsSummary"
        }
      },
      "type": "structure"
    },
    "ListSuppressedAlerts": {
      "type": "boolean"
    },
    "ListSuppressedFindings": {
      "type": "boolean"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "querystring",
          "locationName": "resourceArn",
          "shape": "ResourceArn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "tags": {
          "documentation": "<p>The list of tags assigned to the resource.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTargetsForPolicyRequest": {
      "members": {
        "marker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "location": "querystring",
          "locationName": "marker",
          "shape": "Marker"
        },
        "pageSize": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "pageSize",
          "shape": "PageSize"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        }
      },
      "required": [
        "policyName"
      ],
      "type": "structure"
    },
    "ListTargetsForPolicyResponse": {
      "members": {
        "nextMarker": {
          "documentation": "<p>A marker used to get the next set of results.</p>",
          "shape": "Marker"
        },
        "targets": {
          "documentation": "<p>The policy targets.</p>",
          "shape": "PolicyTargets"
        }
      },
      "type": "structure"
    },
    "ListTargetsForSecurityProfileRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "securityProfileName": {
          "documentation": "<p>The security profile.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        }
      },
      "required": [
        "securityProfileName"
      ],
      "type": "structure"
    },
    "ListTargetsForSecurityProfileResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "securityProfileTargets": {
          "documentation": "<p>The thing groups to which the security profile is attached.</p>",
          "shape": "SecurityProfileTargets"
        }
      },
      "type": "structure"
    },
    "ListThingGroupsForThingRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "thingName": {
          "documentation": "<p>The thing name.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "ListThingGroupsForThingResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "thingGroups": {
          "documentation": "<p>The thing groups.</p>",
          "shape": "ThingGroupNameAndArnList"
        }
      },
      "type": "structure"
    },
    "ListThingGroupsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "namePrefixFilter": {
          "documentation": "<p>A filter that limits the results to those with the specified name prefix.</p>",
          "location": "querystring",
          "locationName": "namePrefixFilter",
          "shape": "ThingGroupName"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "parentGroup": {
          "documentation": "<p>A filter that limits the results to those with the specified parent group.</p>",
          "location": "querystring",
          "locationName": "parentGroup",
          "shape": "ThingGroupName"
        },
        "recursive": {
          "documentation": "<p>If true, return child groups as well.</p>",
          "location": "querystring",
          "locationName": "recursive",
          "shape": "RecursiveWithoutDefault"
        }
      },
      "type": "structure"
    },
    "ListThingGroupsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>",
          "shape": "NextToken"
        },
        "thingGroups": {
          "documentation": "<p>The thing groups.</p>",
          "shape": "ThingGroupNameAndArnList"
        }
      },
      "type": "structure"
    },
    "ListThingPrincipalsRequest": {
      "documentation": "<p>The input for the ListThingPrincipal operation.</p>",
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "ListThingPrincipalsResponse": {
      "documentation": "<p>The output from the ListThingPrincipals operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "principals": {
          "documentation": "<p>The principals associated with the thing.</p>",
          "shape": "Principals"
        }
      },
      "type": "structure"
    },
    "ListThingRegistrationTaskReportsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "reportType": {
          "documentation": "<p>The type of task report.</p>",
          "location": "querystring",
          "locationName": "reportType",
          "shape": "ReportType"
        },
        "taskId": {
          "documentation": "<p>The id of the task.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "TaskId"
        }
      },
      "required": [
        "taskId",
        "reportType"
      ],
      "type": "structure"
    },
    "ListThingRegistrationTaskReportsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "reportType": {
          "documentation": "<p>The type of task report.</p>",
          "shape": "ReportType"
        },
        "resourceLinks": {
          "documentation": "<p>Links to the task resources.</p>",
          "shape": "S3FileUrlList"
        }
      },
      "type": "structure"
    },
    "ListThingRegistrationTasksRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "status": {
          "documentation": "<p>The status of the bulk thing provisioning task.</p>",
          "location": "querystring",
          "locationName": "status",
          "shape": "Status"
        }
      },
      "type": "structure"
    },
    "ListThingRegistrationTasksResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "taskIds": {
          "documentation": "<p>A list of bulk thing provisioning task IDs.</p>",
          "shape": "TaskIdList"
        }
      },
      "type": "structure"
    },
    "ListThingTypesRequest": {
      "documentation": "<p>The input for the ListThingTypes operation.</p>",
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "location": "querystring",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        }
      },
      "type": "structure"
    },
    "ListThingTypesResponse": {
      "documentation": "<p>The output for the ListThingTypes operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Will not be returned if operation has returned all results.</p>",
          "shape": "NextToken"
        },
        "thingTypes": {
          "documentation": "<p>The thing types.</p>",
          "shape": "ThingTypeList"
        }
      },
      "type": "structure"
    },
    "ListThingsInBillingGroupRequest": {
      "members": {
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "location": "uri",
          "locationName": "billingGroupName",
          "shape": "BillingGroupName"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per request.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "billingGroupName"
      ],
      "type": "structure"
    },
    "ListThingsInBillingGroupResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>",
          "shape": "NextToken"
        },
        "things": {
          "documentation": "<p>A list of things in the billing group.</p>",
          "shape": "ThingNameList"
        }
      },
      "type": "structure"
    },
    "ListThingsInThingGroupRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "recursive": {
          "documentation": "<p>When true, list things in this thing group and in all child groups as well.</p>",
          "location": "querystring",
          "locationName": "recursive",
          "shape": "Recursive"
        },
        "thingGroupName": {
          "documentation": "<p>The thing group name.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        }
      },
      "required": [
        "thingGroupName"
      ],
      "type": "structure"
    },
    "ListThingsInThingGroupResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "things": {
          "documentation": "<p>The things in the specified thing group.</p>",
          "shape": "ThingNameList"
        }
      },
      "type": "structure"
    },
    "ListThingsRequest": {
      "documentation": "<p>The input for the ListThings operation.</p>",
      "members": {
        "attributeName": {
          "documentation": "<p>The attribute name used to search for things.</p>",
          "location": "querystring",
          "locationName": "attributeName",
          "shape": "AttributeName"
        },
        "attributeValue": {
          "documentation": "<p>The attribute value used to search for things.</p>",
          "location": "querystring",
          "locationName": "attributeValue",
          "shape": "AttributeValue"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return in this operation.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "RegistryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type used to search for things.</p>",
          "location": "querystring",
          "locationName": "thingTypeName",
          "shape": "ThingTypeName"
        },
        "usePrefixAttributeValue": {
          "documentation": "<p>When <code>true</code>, the action returns the thing resources with attribute values that start with the <code>attributeValue</code> provided.</p> <p>When <code>false</code>, or not present, the action returns only the thing resources with attribute values that match the entire <code>attributeValue</code> provided. </p>",
          "location": "querystring",
          "locationName": "usePrefixAttributeValue",
          "shape": "usePrefixAttributeValue"
        }
      },
      "type": "structure"
    },
    "ListThingsResponse": {
      "documentation": "<p>The output from the ListThings operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results. Will not be returned if operation has returned all results.</p>",
          "shape": "NextToken"
        },
        "things": {
          "documentation": "<p>The things.</p>",
          "shape": "ThingAttributeList"
        }
      },
      "type": "structure"
    },
    "ListTopicRuleDestinationsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "TopicRuleDestinationMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTopicRuleDestinationsResponse": {
      "members": {
        "destinationSummaries": {
          "documentation": "<p>Information about a topic rule destination.</p>",
          "shape": "TopicRuleDestinationSummaries"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTopicRulesRequest": {
      "documentation": "<p>The input for the ListTopicRules operation.</p>",
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "TopicRuleMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "ruleDisabled": {
          "documentation": "<p>Specifies whether the rule is disabled.</p>",
          "location": "querystring",
          "locationName": "ruleDisabled",
          "shape": "IsDisabled"
        },
        "topic": {
          "documentation": "<p>The topic.</p>",
          "location": "querystring",
          "locationName": "topic",
          "shape": "Topic"
        }
      },
      "type": "structure"
    },
    "ListTopicRulesResponse": {
      "documentation": "<p>The output from the ListTopicRules operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "rules": {
          "documentation": "<p>The rules.</p>",
          "shape": "TopicRuleList"
        }
      },
      "type": "structure"
    },
    "ListV2LoggingLevelsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "SkyfallMaxResults"
        },
        "nextToken": {
          "documentation": "<p>To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "targetType": {
          "documentation": "<p>The type of resource for which you are configuring logging. Must be <code>THING_Group</code>.</p>",
          "location": "querystring",
          "locationName": "targetType",
          "shape": "LogTargetType"
        }
      },
      "type": "structure"
    },
    "ListV2LoggingLevelsResponse": {
      "members": {
        "logTargetConfigurations": {
          "documentation": "<p>The logging configuration for a target.</p>",
          "shape": "LogTargetConfigurations"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next set of results, or <b>null</b> if there are no additional results.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListViolationEventsRequest": {
      "members": {
        "behaviorCriteriaType": {
          "documentation": "<p> The criteria for a behavior. </p>",
          "location": "querystring",
          "locationName": "behaviorCriteriaType",
          "shape": "BehaviorCriteriaType"
        },
        "endTime": {
          "documentation": "<p>The end time for the alerts to be listed.</p>",
          "location": "querystring",
          "locationName": "endTime",
          "shape": "Timestamp"
        },
        "listSuppressedAlerts": {
          "documentation": "<p> A list of all suppressed alerts. </p>",
          "location": "querystring",
          "locationName": "listSuppressedAlerts",
          "shape": "ListSuppressedAlerts"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "securityProfileName": {
          "documentation": "<p>A filter to limit results to those alerts generated by the specified security profile.</p>",
          "location": "querystring",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        },
        "startTime": {
          "documentation": "<p>The start time for the alerts to be listed.</p>",
          "location": "querystring",
          "locationName": "startTime",
          "shape": "Timestamp"
        },
        "thingName": {
          "documentation": "<p>A filter to limit results to those alerts caused by the specified thing.</p>",
          "location": "querystring",
          "locationName": "thingName",
          "shape": "DeviceDefenderThingName"
        },
        "verificationState": {
          "documentation": "<p>The verification state of the violation (detect alarm).</p>",
          "location": "querystring",
          "locationName": "verificationState",
          "shape": "VerificationState"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ListViolationEventsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>A token that can be used to retrieve the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "violationEvents": {
          "documentation": "<p>The security profile violation alerts issued for this account during the given time period, potentially filtered by security profile, behavior violated, or thing (device) violating.</p>",
          "shape": "ViolationEvents"
        }
      },
      "type": "structure"
    },
    "LocationAction": {
      "documentation": "<p>The Amazon Location rule action sends device location updates from an MQTT message to an Amazon Location tracker resource.</p>",
      "members": {
        "deviceId": {
          "documentation": "<p>The unique ID of the device providing the location data.</p>",
          "shape": "String"
        },
        "latitude": {
          "documentation": "<p>A string that evaluates to a double value that represents the latitude of the device's location.</p>",
          "shape": "String"
        },
        "longitude": {
          "documentation": "<p>A string that evaluates to a double value that represents the longitude of the device's location.</p>",
          "shape": "String"
        },
        "roleArn": {
          "documentation": "<p>The IAM role that grants permission to write to the Amazon Location resource.</p>",
          "shape": "AwsArn"
        },
        "timestamp": {
          "documentation": "<p>The time that the location data was sampled. The default value is the time the MQTT message was processed.</p>",
          "shape": "LocationTimestamp"
        },
        "trackerName": {
          "documentation": "<p>The name of the tracker resource in Amazon Location in which the location is updated.</p>",
          "shape": "String"
        }
      },
      "required": [
        "roleArn",
        "trackerName",
        "deviceId",
        "latitude",
        "longitude"
      ],
      "type": "structure"
    },
    "LocationTimestamp": {
      "documentation": "<p>Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value.</p>",
      "members": {
        "unit": {
          "documentation": "<p>The precision of the timestamp value that results from the expression described in <code>value</code>.</p> <p>Valid values: <code>SECONDS</code> | <code>MILLISECONDS</code> | <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is <code>MILLISECONDS</code>.</p>",
          "shape": "String"
        },
        "value": {
          "documentation": "<p>An expression that returns a long epoch time value.</p>",
          "shape": "String"
        }
      },
      "required": [
        "value"
      ],
      "type": "structure"
    },
    "LogGroupName": {
      "type": "string"
    },
    "LogLevel": {
      "enum": [
        "DEBUG",
        "INFO",
        "ERROR",
        "WARN",
        "DISABLED"
      ],
      "type": "string"
    },
    "LogTarget": {
      "documentation": "<p>A log target.</p>",
      "members": {
        "targetName": {
          "documentation": "<p>The target name.</p>",
          "shape": "LogTargetName"
        },
        "targetType": {
          "documentation": "<p>The target type.</p>",
          "shape": "LogTargetType"
        }
      },
      "required": [
        "targetType"
      ],
      "type": "structure"
    },
    "LogTargetConfiguration": {
      "documentation": "<p>The target configuration.</p>",
      "members": {
        "logLevel": {
          "documentation": "<p>The logging level.</p>",
          "shape": "LogLevel"
        },
        "logTarget": {
          "documentation": "<p>A log target</p>",
          "shape": "LogTarget"
        }
      },
      "type": "structure"
    },
    "LogTargetConfigurations": {
      "member": {
        "shape": "LogTargetConfiguration"
      },
      "type": "list"
    },
    "LogTargetName": {
      "type": "string"
    },
    "LogTargetType": {
      "enum": [
        "DEFAULT",
        "THING_GROUP",
        "CLIENT_ID",
        "SOURCE_IP",
        "PRINCIPAL_ID"
      ],
      "type": "string"
    },
    "LoggingOptionsPayload": {
      "documentation": "<p>Describes the logging options payload.</p>",
      "members": {
        "logLevel": {
          "documentation": "<p>The log level.</p>",
          "shape": "LogLevel"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "roleArn"
      ],
      "type": "structure"
    },
    "MachineLearningDetectionConfig": {
      "documentation": "<p> The configuration of an ML Detect Security Profile. </p>",
      "members": {
        "confidenceLevel": {
          "documentation": "<p> The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>. </p>",
          "shape": "ConfidenceLevel"
        }
      },
      "required": [
        "confidenceLevel"
      ],
      "type": "structure"
    },
    "MalformedPolicyException": {
      "documentation": "<p>The policy documentation is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ManagedJobTemplateName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ManagedJobTemplateSummary": {
      "documentation": "<p>An object that contains information about the managed template.</p>",
      "members": {
        "description": {
          "documentation": "<p>The description for a managed template.</p>",
          "shape": "JobDescription"
        },
        "environments": {
          "documentation": "<p>A list of environments that are supported with the managed job template.</p>",
          "shape": "Environments"
        },
        "templateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for a managed template.</p>",
          "shape": "JobTemplateArn"
        },
        "templateName": {
          "documentation": "<p>The unique Name for a managed template.</p>",
          "shape": "ManagedJobTemplateName"
        },
        "templateVersion": {
          "documentation": "<p>The version for a managed template.</p>",
          "shape": "ManagedTemplateVersion"
        }
      },
      "type": "structure"
    },
    "ManagedJobTemplatesSummaryList": {
      "member": {
        "shape": "ManagedJobTemplateSummary"
      },
      "type": "list"
    },
    "ManagedTemplateVersion": {
      "pattern": "^[1-9]+.[0-9]+",
      "type": "string"
    },
    "Marker": {
      "max": 1024,
      "pattern": "[A-Za-z0-9+/]+={0,2}",
      "type": "string"
    },
    "MaxBuckets": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "MaxJobExecutionsPerMin": {
      "min": 1,
      "type": "integer"
    },
    "MaxResults": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "Maximum": {
      "type": "double"
    },
    "MaximumPerMinute": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "max": 128,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "MessageFormat": {
      "enum": [
        "RAW",
        "JSON"
      ],
      "type": "string"
    },
    "MessageId": {
      "max": 128,
      "type": "string"
    },
    "MetricDatum": {
      "documentation": "<p>A metric.</p>",
      "members": {
        "timestamp": {
          "documentation": "<p>The time the metric value was reported.</p>",
          "shape": "Timestamp"
        },
        "value": {
          "documentation": "<p>The value reported for the metric.</p>",
          "shape": "MetricValue"
        }
      },
      "type": "structure"
    },
    "MetricDatumList": {
      "member": {
        "shape": "MetricDatum"
      },
      "type": "list"
    },
    "MetricDimension": {
      "documentation": "<p>The dimension of a metric.</p>",
      "members": {
        "dimensionName": {
          "documentation": "<p>A unique identifier for the dimension.</p>",
          "shape": "DimensionName"
        },
        "operator": {
          "documentation": "<p>Defines how the <code>dimensionValues</code> of a dimension are interpreted. For example, for dimension type TOPIC_FILTER, the <code>IN</code> operator, a message will be counted only if its topic matches one of the topic filters. With <code>NOT_IN</code> operator, a message will be counted only if it doesn't match any of the topic filters. The operator is optional: if it's not provided (is <code>null</code>), it will be interpreted as <code>IN</code>.</p>",
          "shape": "DimensionValueOperator"
        }
      },
      "required": [
        "dimensionName"
      ],
      "type": "structure"
    },
    "MetricName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "MetricNames": {
      "member": {
        "shape": "MetricName"
      },
      "type": "list"
    },
    "MetricToRetain": {
      "documentation": "<p>The metric you want to retain. Dimensions are optional.</p>",
      "members": {
        "metric": {
          "documentation": "<p>What is measured by the behavior.</p>",
          "shape": "BehaviorMetric"
        },
        "metricDimension": {
          "documentation": "<p>The dimension of a metric. This can't be used with custom metrics.</p>",
          "shape": "MetricDimension"
        }
      },
      "required": [
        "metric"
      ],
      "type": "structure"
    },
    "MetricValue": {
      "documentation": "<p>The value to be compared with the <code>metric</code>.</p>",
      "members": {
        "cidrs": {
          "documentation": "<p>If the <code>comparisonOperator</code> calls for a set of CIDRs, use this to specify that set to be compared with the <code>metric</code>.</p>",
          "shape": "Cidrs"
        },
        "count": {
          "documentation": "<p>If the <code>comparisonOperator</code> calls for a numeric value, use this to specify that numeric value to be compared with the <code>metric</code>.</p>",
          "shape": "UnsignedLong"
        },
        "number": {
          "documentation": "<p> The numeral value of a metric. </p>",
          "shape": "Number"
        },
        "numbers": {
          "documentation": "<p> The numeral values of a metric. </p>",
          "shape": "NumberList"
        },
        "ports": {
          "documentation": "<p>If the <code>comparisonOperator</code> calls for a set of ports, use this to specify that set to be compared with the <code>metric</code>.</p>",
          "shape": "Ports"
        },
        "strings": {
          "documentation": "<p> The string values of a metric. </p>",
          "shape": "StringList"
        }
      },
      "type": "structure"
    },
    "Minimum": {
      "type": "double"
    },
    "MinimumNumberOfExecutedThings": {
      "min": 1,
      "type": "integer"
    },
    "MissingContextValue": {
      "type": "string"
    },
    "MissingContextValues": {
      "member": {
        "shape": "MissingContextValue"
      },
      "type": "list"
    },
    "MitigationAction": {
      "documentation": "<p>Describes which changes should be applied as part of a mitigation action.</p>",
      "members": {
        "actionParams": {
          "documentation": "<p>The set of parameters for this mitigation action. The parameters vary, depending on the kind of action you apply.</p>",
          "shape": "MitigationActionParams"
        },
        "id": {
          "documentation": "<p>A unique identifier for the mitigation action.</p>",
          "shape": "MitigationActionId"
        },
        "name": {
          "documentation": "<p>A user-friendly name for the mitigation action.</p>",
          "shape": "MitigationActionName"
        },
        "roleArn": {
          "documentation": "<p>The IAM role ARN used to apply this mitigation action.</p>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "MitigationActionArn": {
      "type": "string"
    },
    "MitigationActionId": {
      "type": "string"
    },
    "MitigationActionIdentifier": {
      "documentation": "<p>Information that identifies a mitigation action. This information is returned by ListMitigationActions.</p>",
      "members": {
        "actionArn": {
          "documentation": "<p>The IAM role ARN used to apply this mitigation action.</p>",
          "shape": "MitigationActionArn"
        },
        "actionName": {
          "documentation": "<p>The friendly name of the mitigation action.</p>",
          "shape": "MitigationActionName"
        },
        "creationDate": {
          "documentation": "<p>The date when this mitigation action was created.</p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "MitigationActionIdentifierList": {
      "member": {
        "shape": "MitigationActionIdentifier"
      },
      "type": "list"
    },
    "MitigationActionList": {
      "member": {
        "shape": "MitigationAction"
      },
      "type": "list"
    },
    "MitigationActionName": {
      "max": 128,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "MitigationActionNameList": {
      "max": 5,
      "member": {
        "shape": "MitigationActionName"
      },
      "min": 1,
      "type": "list"
    },
    "MitigationActionParams": {
      "documentation": "<p>The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).</p>",
      "members": {
        "addThingsToThingGroupParams": {
          "documentation": "<p>Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.</p>",
          "shape": "AddThingsToThingGroupParams"
        },
        "enableIoTLoggingParams": {
          "documentation": "<p>Parameters to define a mitigation action that enables Amazon Web Services IoT Core logging at a specified level of detail.</p>",
          "shape": "EnableIoTLoggingParams"
        },
        "publishFindingToSnsParams": {
          "documentation": "<p>Parameters to define a mitigation action that publishes findings to Amazon Simple Notification Service (Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.</p>",
          "shape": "PublishFindingToSnsParams"
        },
        "replaceDefaultPolicyVersionParams": {
          "documentation": "<p>Parameters to define a mitigation action that adds a blank policy to restrict permissions.</p>",
          "shape": "ReplaceDefaultPolicyVersionParams"
        },
        "updateCACertificateParams": {
          "documentation": "<p>Parameters to define a mitigation action that changes the state of the CA certificate to inactive.</p>",
          "shape": "UpdateCACertificateParams"
        },
        "updateDeviceCertificateParams": {
          "documentation": "<p>Parameters to define a mitigation action that changes the state of the device certificate to inactive.</p>",
          "shape": "UpdateDeviceCertificateParams"
        }
      },
      "type": "structure"
    },
    "MitigationActionType": {
      "enum": [
        "UPDATE_DEVICE_CERTIFICATE",
        "UPDATE_CA_CERTIFICATE",
        "ADD_THINGS_TO_THING_GROUP",
        "REPLACE_DEFAULT_POLICY_VERSION",
        "ENABLE_IOT_LOGGING",
        "PUBLISH_FINDING_TO_SNS"
      ],
      "type": "string"
    },
    "MitigationActionsTaskId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "ModelStatus": {
      "enum": [
        "PENDING_BUILD",
        "ACTIVE",
        "EXPIRED"
      ],
      "type": "string"
    },
    "MqttClientId": {
      "max": 65535,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "MqttContext": {
      "documentation": "<p>Specifies the MQTT context to use for the test authorizer request</p>",
      "members": {
        "clientId": {
          "documentation": "<p>The value of the <code>clientId</code> key in an MQTT authorization request.</p>",
          "shape": "MqttClientId"
        },
        "password": {
          "documentation": "<p>The value of the <code>password</code> key in an MQTT authorization request.</p>",
          "shape": "MqttPassword"
        },
        "username": {
          "documentation": "<p>The value of the <code>username</code> key in an MQTT authorization request.</p>",
          "shape": "MqttUsername"
        }
      },
      "type": "structure"
    },
    "MqttPassword": {
      "max": 65535,
      "min": 1,
      "type": "blob"
    },
    "MqttUsername": {
      "max": 65535,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "NamedShadowIndexingMode": {
      "enum": [
        "OFF",
        "ON"
      ],
      "type": "string"
    },
    "NamedShadowNamesFilter": {
      "member": {
        "shape": "ShadowName"
      },
      "type": "list"
    },
    "NamespaceId": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "NextToken": {
      "type": "string"
    },
    "NonCompliantChecksCount": {
      "type": "integer"
    },
    "NonCompliantResource": {
      "documentation": "<p>Information about the resource that was noncompliant with the audit check.</p>",
      "members": {
        "additionalInfo": {
          "documentation": "<p>Other information about the noncompliant resource.</p>",
          "shape": "StringMap"
        },
        "resourceIdentifier": {
          "documentation": "<p>Information that identifies the noncompliant resource.</p>",
          "shape": "ResourceIdentifier"
        },
        "resourceType": {
          "documentation": "<p>The type of the noncompliant resource.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "NonCompliantResourcesCount": {
      "type": "long"
    },
    "NotConfiguredException": {
      "documentation": "<p>The resource is not configured.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "NullableBoolean": {
      "type": "boolean"
    },
    "Number": {
      "type": "double"
    },
    "NumberList": {
      "member": {
        "shape": "Number"
      },
      "type": "list"
    },
    "NumberOfRetries": {
      "max": 10,
      "min": 0,
      "type": "integer"
    },
    "NumberOfThings": {
      "min": 1,
      "type": "integer"
    },
    "OTAUpdateArn": {
      "type": "string"
    },
    "OTAUpdateDescription": {
      "max": 2028,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "OTAUpdateErrorMessage": {
      "type": "string"
    },
    "OTAUpdateFile": {
      "documentation": "<p>Describes a file to be associated with an OTA update.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>A list of name/attribute pairs.</p>",
          "shape": "AttributesMap"
        },
        "codeSigning": {
          "documentation": "<p>The code signing method of the file.</p>",
          "shape": "CodeSigning"
        },
        "fileLocation": {
          "documentation": "<p>The location of the updated firmware.</p>",
          "shape": "FileLocation"
        },
        "fileName": {
          "documentation": "<p>The name of the file.</p>",
          "shape": "FileName"
        },
        "fileType": {
          "documentation": "<p>An integer value you can include in the job document to allow your devices to identify the type of file received from the cloud.</p>",
          "shape": "FileType"
        },
        "fileVersion": {
          "documentation": "<p>The file version.</p>",
          "shape": "OTAUpdateFileVersion"
        }
      },
      "type": "structure"
    },
    "OTAUpdateFileVersion": {
      "type": "string"
    },
    "OTAUpdateFiles": {
      "max": 50,
      "member": {
        "shape": "OTAUpdateFile"
      },
      "min": 1,
      "type": "list"
    },
    "OTAUpdateId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "OTAUpdateInfo": {
      "documentation": "<p>Information about an OTA update.</p>",
      "members": {
        "additionalParameters": {
          "documentation": "<p>A collection of name/value pairs</p>",
          "shape": "AdditionalParameterMap"
        },
        "awsIotJobArn": {
          "documentation": "<p>The IoT job ARN associated with the OTA update.</p>",
          "shape": "AwsIotJobArn"
        },
        "awsIotJobId": {
          "documentation": "<p>The IoT job ID associated with the OTA update.</p>",
          "shape": "AwsIotJobId"
        },
        "awsJobExecutionsRolloutConfig": {
          "documentation": "<p>Configuration for the rollout of OTA updates.</p>",
          "shape": "AwsJobExecutionsRolloutConfig"
        },
        "awsJobPresignedUrlConfig": {
          "documentation": "<p>Configuration information for pre-signed URLs. Valid when <code>protocols</code> contains HTTP.</p>",
          "shape": "AwsJobPresignedUrlConfig"
        },
        "creationDate": {
          "documentation": "<p>The date when the OTA update was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>A description of the OTA update.</p>",
          "shape": "OTAUpdateDescription"
        },
        "errorInfo": {
          "documentation": "<p>Error information associated with the OTA update.</p>",
          "shape": "ErrorInfo"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date when the OTA update was last updated.</p>",
          "shape": "DateType"
        },
        "otaUpdateArn": {
          "documentation": "<p>The OTA update ARN.</p>",
          "shape": "OTAUpdateArn"
        },
        "otaUpdateFiles": {
          "documentation": "<p>A list of files associated with the OTA update.</p>",
          "shape": "OTAUpdateFiles"
        },
        "otaUpdateId": {
          "documentation": "<p>The OTA update ID.</p>",
          "shape": "OTAUpdateId"
        },
        "otaUpdateStatus": {
          "documentation": "<p>The status of the OTA update.</p>",
          "shape": "OTAUpdateStatus"
        },
        "protocols": {
          "documentation": "<p>The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.</p>",
          "shape": "Protocols"
        },
        "targetSelection": {
          "documentation": "<p>Specifies whether the OTA update will continue to run (CONTINUOUS), or will be complete after all those things specified as targets have completed the OTA update (SNAPSHOT). If continuous, the OTA update may also be run on a thing when a change is detected in a target. For example, an OTA update will run on a thing when the thing is added to a target group, even after the OTA update was completed by all things originally in the group. </p>",
          "shape": "TargetSelection"
        },
        "targets": {
          "documentation": "<p>The targets of the OTA update.</p>",
          "shape": "Targets"
        }
      },
      "type": "structure"
    },
    "OTAUpdateStatus": {
      "enum": [
        "CREATE_PENDING",
        "CREATE_IN_PROGRESS",
        "CREATE_COMPLETE",
        "CREATE_FAILED"
      ],
      "type": "string"
    },
    "OTAUpdateSummary": {
      "documentation": "<p>An OTA update summary.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date when the OTA update was created.</p>",
          "shape": "DateType"
        },
        "otaUpdateArn": {
          "documentation": "<p>The OTA update ARN.</p>",
          "shape": "OTAUpdateArn"
        },
        "otaUpdateId": {
          "documentation": "<p>The OTA update ID.</p>",
          "shape": "OTAUpdateId"
        }
      },
      "type": "structure"
    },
    "OTAUpdatesSummary": {
      "member": {
        "shape": "OTAUpdateSummary"
      },
      "type": "list"
    },
    "OpenSearchAction": {
      "documentation": "<p>Describes an action that writes data to an Amazon OpenSearch Service domain.</p>",
      "members": {
        "endpoint": {
          "documentation": "<p>The endpoint of your OpenSearch domain.</p>",
          "shape": "ElasticsearchEndpoint"
        },
        "id": {
          "documentation": "<p>The unique identifier for the document you are storing.</p>",
          "shape": "ElasticsearchId"
        },
        "index": {
          "documentation": "<p>The OpenSearch index where you want to store your data.</p>",
          "shape": "ElasticsearchIndex"
        },
        "roleArn": {
          "documentation": "<p>The IAM role ARN that has access to OpenSearch.</p>",
          "shape": "AwsArn"
        },
        "type": {
          "documentation": "<p>The type of document you are storing.</p>",
          "shape": "ElasticsearchType"
        }
      },
      "required": [
        "roleArn",
        "endpoint",
        "index",
        "type",
        "id"
      ],
      "type": "structure"
    },
    "Optional": {
      "type": "boolean"
    },
    "OptionalVersion": {
      "type": "long"
    },
    "OutgoingCertificate": {
      "documentation": "<p>A certificate that has been transferred but not yet accepted.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The certificate ARN.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The certificate ID.</p>",
          "shape": "CertificateId"
        },
        "creationDate": {
          "documentation": "<p>The certificate creation date.</p>",
          "shape": "DateType"
        },
        "transferDate": {
          "documentation": "<p>The date the transfer was initiated.</p>",
          "shape": "DateType"
        },
        "transferMessage": {
          "documentation": "<p>The transfer message.</p>",
          "shape": "Message"
        },
        "transferredTo": {
          "documentation": "<p>The Amazon Web Services account to which the transfer was made.</p>",
          "shape": "AwsAccountId"
        }
      },
      "type": "structure"
    },
    "OutgoingCertificates": {
      "member": {
        "shape": "OutgoingCertificate"
      },
      "type": "list"
    },
    "OverrideDynamicGroups": {
      "type": "boolean"
    },
    "PageSize": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "Parameter": {
      "max": 2048,
      "min": 0,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "ParameterKey": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "ParameterMap": {
      "key": {
        "shape": "ParameterKey"
      },
      "type": "map",
      "value": {
        "shape": "ParameterValue"
      }
    },
    "ParameterValue": {
      "max": 512,
      "min": 1,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "Parameters": {
      "key": {
        "shape": "Parameter"
      },
      "type": "map",
      "value": {
        "shape": "Value"
      }
    },
    "PartitionKey": {
      "type": "string"
    },
    "PayloadField": {
      "type": "string"
    },
    "PayloadVersion": {
      "max": 32,
      "min": 10,
      "pattern": "^[0-9-]+$",
      "type": "string"
    },
    "Percent": {
      "max": 100,
      "min": 0,
      "type": "double"
    },
    "PercentList": {
      "member": {
        "shape": "Percent"
      },
      "type": "list"
    },
    "PercentPair": {
      "documentation": "<p>Describes the percentile and percentile value.</p>",
      "members": {
        "percent": {
          "documentation": "<p>The percentile.</p>",
          "shape": "Percent"
        },
        "value": {
          "documentation": "<p>The value of the percentile.</p>",
          "shape": "PercentValue"
        }
      },
      "type": "structure"
    },
    "PercentValue": {
      "type": "double"
    },
    "Percentage": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "Percentiles": {
      "member": {
        "shape": "PercentPair"
      },
      "type": "list"
    },
    "Platform": {
      "type": "string"
    },
    "Policies": {
      "member": {
        "shape": "Policy"
      },
      "type": "list"
    },
    "Policy": {
      "documentation": "<p>Describes an IoT policy.</p>",
      "members": {
        "policyArn": {
          "documentation": "<p>The policy ARN.</p>",
          "shape": "PolicyArn"
        },
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "shape": "PolicyName"
        }
      },
      "type": "structure"
    },
    "PolicyArn": {
      "type": "string"
    },
    "PolicyDocument": {
      "max": 404600,
      "min": 0,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "PolicyDocuments": {
      "member": {
        "shape": "PolicyDocument"
      },
      "type": "list"
    },
    "PolicyName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\w+=,.@-]+",
      "type": "string"
    },
    "PolicyNames": {
      "member": {
        "shape": "PolicyName"
      },
      "type": "list"
    },
    "PolicyTarget": {
      "type": "string"
    },
    "PolicyTargets": {
      "member": {
        "shape": "PolicyTarget"
      },
      "type": "list"
    },
    "PolicyTemplateName": {
      "enum": [
        "BLANK_POLICY"
      ],
      "type": "string"
    },
    "PolicyVersion": {
      "documentation": "<p>Describes a policy version.</p>",
      "members": {
        "createDate": {
          "documentation": "<p>The date and time the policy was created.</p>",
          "shape": "DateType"
        },
        "isDefaultVersion": {
          "documentation": "<p>Specifies whether the policy version is the default.</p>",
          "shape": "IsDefaultVersion"
        },
        "versionId": {
          "documentation": "<p>The policy version ID.</p>",
          "shape": "PolicyVersionId"
        }
      },
      "type": "structure"
    },
    "PolicyVersionId": {
      "pattern": "[0-9]+",
      "type": "string"
    },
    "PolicyVersionIdentifier": {
      "documentation": "<p>Information about the version of the policy associated with the resource.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The name of the policy.</p>",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The ID of the version of the policy associated with the resource.</p>",
          "shape": "PolicyVersionId"
        }
      },
      "type": "structure"
    },
    "PolicyVersions": {
      "member": {
        "shape": "PolicyVersion"
      },
      "type": "list"
    },
    "Port": {
      "max": 65535,
      "min": 0,
      "type": "integer"
    },
    "Ports": {
      "member": {
        "shape": "Port"
      },
      "type": "list"
    },
    "Prefix": {
      "type": "string"
    },
    "PresignedUrlConfig": {
      "documentation": "<p>Configuration for pre-signed S3 URLs.</p>",
      "members": {
        "expiresInSec": {
          "documentation": "<p>How long (in seconds) pre-signed URLs are valid. Valid values are 60 - 3600, the default value is 3600 seconds. Pre-signed URLs are generated when Jobs receives an MQTT request for the job document.</p>",
          "shape": "ExpiresInSec"
        },
        "roleArn": {
          "documentation": "<p>The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.</p> <important> <p>For information about addressing the confused deputy problem, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/cross-service-confused-deputy-prevention.html\">cross-service confused deputy prevention</a> in the <i>Amazon Web Services IoT Core developer guide</i>.</p> </important>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "PrimitiveBoolean": {
      "type": "boolean"
    },
    "Principal": {
      "type": "string"
    },
    "PrincipalArn": {
      "type": "string"
    },
    "PrincipalId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9]+",
      "type": "string"
    },
    "Principals": {
      "member": {
        "shape": "PrincipalArn"
      },
      "type": "list"
    },
    "PrivateKey": {
      "min": 1,
      "sensitive": true,
      "type": "string"
    },
    "ProcessingTargetName": {
      "type": "string"
    },
    "ProcessingTargetNameList": {
      "member": {
        "shape": "ProcessingTargetName"
      },
      "type": "list"
    },
    "Protocol": {
      "enum": [
        "MQTT",
        "HTTP"
      ],
      "type": "string"
    },
    "Protocols": {
      "max": 2,
      "member": {
        "shape": "Protocol"
      },
      "min": 1,
      "type": "list"
    },
    "ProvisioningHook": {
      "documentation": "<p>Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.</p>",
      "members": {
        "payloadVersion": {
          "documentation": "<p>The payload that was sent to the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>",
          "shape": "PayloadVersion"
        },
        "targetArn": {
          "documentation": "<p>The ARN of the target function.</p> <p> <i>Note:</i> Only Lambda functions are currently supported.</p>",
          "shape": "TargetArn"
        }
      },
      "required": [
        "targetArn"
      ],
      "type": "structure"
    },
    "ProvisioningTemplateListing": {
      "member": {
        "shape": "ProvisioningTemplateSummary"
      },
      "type": "list"
    },
    "ProvisioningTemplateSummary": {
      "documentation": "<p>A summary of information about a provisioning template.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date when the provisioning template summary was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>The description of the provisioning template.</p>",
          "shape": "TemplateDescription"
        },
        "enabled": {
          "documentation": "<p>True if the fleet provision template is enabled, otherwise false.</p>",
          "shape": "Enabled"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date when the provisioning template summary was last modified.</p>",
          "shape": "DateType"
        },
        "templateArn": {
          "documentation": "<p>The ARN of the provisioning template.</p>",
          "shape": "TemplateArn"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        },
        "type": {
          "documentation": "<p>The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html\">Provisioning template</a>. </p>",
          "shape": "TemplateType"
        }
      },
      "type": "structure"
    },
    "ProvisioningTemplateVersionListing": {
      "member": {
        "shape": "ProvisioningTemplateVersionSummary"
      },
      "type": "list"
    },
    "ProvisioningTemplateVersionSummary": {
      "documentation": "<p>A summary of information about a fleet provision template version.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date when the provisioning template version was created</p>",
          "shape": "DateType"
        },
        "isDefaultVersion": {
          "documentation": "<p>True if the provisioning template version is the default version, otherwise false.</p>",
          "shape": "IsDefaultVersion"
        },
        "versionId": {
          "documentation": "<p>The ID of the fleet provisioning template version.</p>",
          "shape": "TemplateVersionId"
        }
      },
      "type": "structure"
    },
    "PublicKey": {
      "min": 1,
      "type": "string"
    },
    "PublicKeyMap": {
      "key": {
        "shape": "KeyName"
      },
      "type": "map",
      "value": {
        "shape": "KeyValue"
      }
    },
    "PublishFindingToSnsParams": {
      "documentation": "<p>Parameters to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.</p>",
      "members": {
        "topicArn": {
          "documentation": "<p>The ARN of the topic to which you want to publish the findings.</p>",
          "shape": "SnsTopicArn"
        }
      },
      "required": [
        "topicArn"
      ],
      "type": "structure"
    },
    "PutAssetPropertyValueEntry": {
      "documentation": "<p>An asset property value entry containing the following information.</p>",
      "members": {
        "assetId": {
          "documentation": "<p>The ID of the IoT SiteWise asset. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.</p>",
          "shape": "AssetId"
        },
        "entryId": {
          "documentation": "<p>Optional. A unique identifier for this entry that you can define to better track which message caused an error in case of failure. Accepts substitution templates. Defaults to a new UUID.</p>",
          "shape": "AssetPropertyEntryId"
        },
        "propertyAlias": {
          "documentation": "<p>The name of the property alias associated with your asset property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.</p>",
          "shape": "AssetPropertyAlias"
        },
        "propertyId": {
          "documentation": "<p>The ID of the asset's property. You must specify either a <code>propertyAlias</code> or both an <code>aliasId</code> and a <code>propertyId</code>. Accepts substitution templates.</p>",
          "shape": "AssetPropertyId"
        },
        "propertyValues": {
          "documentation": "<p>A list of property values to insert that each contain timestamp, quality, and value (TQV) information.</p>",
          "shape": "AssetPropertyValueList"
        }
      },
      "required": [
        "propertyValues"
      ],
      "type": "structure"
    },
    "PutAssetPropertyValueEntryList": {
      "member": {
        "shape": "PutAssetPropertyValueEntry"
      },
      "min": 1,
      "type": "list"
    },
    "PutItemInput": {
      "documentation": "<p>The input for the DynamoActionVS action that specifies the DynamoDB table to which the message data will be written.</p>",
      "members": {
        "tableName": {
          "documentation": "<p>The table where the message data will be written.</p>",
          "shape": "TableName"
        }
      },
      "required": [
        "tableName"
      ],
      "type": "structure"
    },
    "PutVerificationStateOnViolationRequest": {
      "members": {
        "verificationState": {
          "documentation": "<p>The verification state of the violation.</p>",
          "shape": "VerificationState"
        },
        "verificationStateDescription": {
          "documentation": "<p>The description of the verification state of the violation (detect alarm).</p>",
          "shape": "VerificationStateDescription"
        },
        "violationId": {
          "documentation": "<p>The violation ID.</p>",
          "location": "uri",
          "locationName": "violationId",
          "shape": "ViolationId"
        }
      },
      "required": [
        "violationId",
        "verificationState"
      ],
      "type": "structure"
    },
    "PutVerificationStateOnViolationResponse": {
      "members": {},
      "type": "structure"
    },
    "Qos": {
      "max": 1,
      "min": 0,
      "type": "integer"
    },
    "QueryMaxResults": {
      "max": 500,
      "min": 1,
      "type": "integer"
    },
    "QueryString": {
      "min": 1,
      "type": "string"
    },
    "QueryVersion": {
      "type": "string"
    },
    "QueueUrl": {
      "type": "string"
    },
    "QueuedThings": {
      "type": "integer"
    },
    "RangeKeyField": {
      "type": "string"
    },
    "RangeKeyValue": {
      "type": "string"
    },
    "RateIncreaseCriteria": {
      "documentation": "<p>Allows you to define a criteria to initiate the increase in rate of rollout for a job.</p>",
      "members": {
        "numberOfNotifiedThings": {
          "documentation": "<p>The threshold for number of notified things that will initiate the increase in rate of rollout.</p>",
          "shape": "NumberOfThings"
        },
        "numberOfSucceededThings": {
          "documentation": "<p>The threshold for number of succeeded things that will initiate the increase in rate of rollout.</p>",
          "shape": "NumberOfThings"
        }
      },
      "type": "structure"
    },
    "ReasonCode": {
      "max": 128,
      "pattern": "[\\p{Upper}\\p{Digit}_]+",
      "type": "string"
    },
    "ReasonForNonCompliance": {
      "type": "string"
    },
    "ReasonForNonComplianceCode": {
      "type": "string"
    },
    "ReasonForNonComplianceCodes": {
      "max": 25,
      "member": {
        "shape": "ReasonForNonComplianceCode"
      },
      "min": 1,
      "type": "list"
    },
    "Recursive": {
      "type": "boolean"
    },
    "RecursiveWithoutDefault": {
      "type": "boolean"
    },
    "Regex": {
      "type": "string"
    },
    "RegisterCACertificateRequest": {
      "documentation": "<p>The input to the RegisterCACertificate operation.</p>",
      "members": {
        "allowAutoRegistration": {
          "documentation": "<p>Allows this CA certificate to be used for auto registration of device certificates.</p>",
          "location": "querystring",
          "locationName": "allowAutoRegistration",
          "shape": "AllowAutoRegistration"
        },
        "caCertificate": {
          "documentation": "<p>The CA certificate.</p>",
          "shape": "CertificatePem"
        },
        "certificateMode": {
          "documentation": "<p>Describes the certificate mode in which the Certificate Authority (CA) will be registered. If the <code>verificationCertificate</code> field is not provided, set <code>certificateMode</code> to be <code>SNI_ONLY</code>. If the <code>verificationCertificate</code> field is provided, set <code>certificateMode</code> to be <code>DEFAULT</code>. When <code>certificateMode</code> is not provided, it defaults to <code>DEFAULT</code>. All the device certificates that are registered using this CA will be registered in the same certificate mode as the CA. For more information about certificate mode for device certificates, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode\"> certificate mode</a>. </p>",
          "shape": "CertificateMode"
        },
        "registrationConfig": {
          "documentation": "<p>Information about the registration configuration.</p>",
          "shape": "RegistrationConfig"
        },
        "setAsActive": {
          "documentation": "<p>A boolean value that specifies if the CA certificate is set to active.</p> <p>Valid values: <code>ACTIVE | INACTIVE</code> </p>",
          "location": "querystring",
          "locationName": "setAsActive",
          "shape": "SetAsActive"
        },
        "tags": {
          "documentation": "<p>Metadata which can be used to manage the CA certificate.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags \"key1=value1&amp;key2=value2...\"</p> <p>For the cli-input-json file use format: \"tags\": \"key1=value1&amp;key2=value2...\"</p> </note>",
          "shape": "TagList"
        },
        "verificationCertificate": {
          "documentation": "<p>The private key verification certificate. If <code>certificateMode</code> is <code>SNI_ONLY</code>, the <code>verificationCertificate</code> field must be empty. If <code>certificateMode</code> is <code>DEFAULT</code> or not provided, the <code>verificationCertificate</code> field must not be empty. </p>",
          "shape": "CertificatePem"
        }
      },
      "required": [
        "caCertificate"
      ],
      "type": "structure"
    },
    "RegisterCACertificateResponse": {
      "documentation": "<p>The output from the RegisterCACertificateResponse operation.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The CA certificate ARN.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The CA certificate identifier.</p>",
          "shape": "CertificateId"
        }
      },
      "type": "structure"
    },
    "RegisterCertificateRequest": {
      "documentation": "<p>The input to the RegisterCertificate operation.</p>",
      "members": {
        "caCertificatePem": {
          "documentation": "<p>The CA certificate used to sign the device certificate being registered.</p>",
          "shape": "CertificatePem"
        },
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "setAsActive": {
          "deprecated": true,
          "documentation": "<p>A boolean value that specifies if the certificate is set to active.</p> <p>Valid values: <code>ACTIVE | INACTIVE</code> </p>",
          "location": "querystring",
          "locationName": "setAsActive",
          "shape": "SetAsActiveFlag"
        },
        "status": {
          "documentation": "<p>The status of the register certificate request. Valid values that you can use include <code>ACTIVE</code>, <code>INACTIVE</code>, and <code>REVOKED</code>.</p>",
          "shape": "CertificateStatus"
        }
      },
      "required": [
        "certificatePem"
      ],
      "type": "structure"
    },
    "RegisterCertificateResponse": {
      "documentation": "<p>The output from the RegisterCertificate operation.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>The certificate ARN.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The certificate identifier.</p>",
          "shape": "CertificateId"
        }
      },
      "type": "structure"
    },
    "RegisterCertificateWithoutCARequest": {
      "members": {
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "status": {
          "documentation": "<p>The status of the register certificate request.</p>",
          "shape": "CertificateStatus"
        }
      },
      "required": [
        "certificatePem"
      ],
      "type": "structure"
    },
    "RegisterCertificateWithoutCAResponse": {
      "members": {
        "certificateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the registered certificate.</p>",
          "shape": "CertificateArn"
        },
        "certificateId": {
          "documentation": "<p>The ID of the registered certificate. (The last part of the certificate ARN contains the certificate ID.</p>",
          "shape": "CertificateId"
        }
      },
      "type": "structure"
    },
    "RegisterThingRequest": {
      "members": {
        "parameters": {
          "documentation": "<p>The parameters for provisioning a thing. See <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html\">Provisioning Templates</a> for more information.</p>",
          "shape": "Parameters"
        },
        "templateBody": {
          "documentation": "<p>The provisioning template. See <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/provision-w-cert.html\">Provisioning Devices That Have Device Certificates</a> for more information.</p>",
          "shape": "TemplateBody"
        }
      },
      "required": [
        "templateBody"
      ],
      "type": "structure"
    },
    "RegisterThingResponse": {
      "members": {
        "certificatePem": {
          "documentation": "<p>The certificate data, in PEM format.</p>",
          "shape": "CertificatePem"
        },
        "resourceArns": {
          "documentation": "<p>ARNs for the generated resources.</p>",
          "shape": "ResourceArns"
        }
      },
      "type": "structure"
    },
    "RegistrationCode": {
      "max": 64,
      "min": 64,
      "pattern": "(0x)?[a-fA-F0-9]+",
      "type": "string"
    },
    "RegistrationCodeValidationException": {
      "documentation": "<p>The registration code is invalid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Additional information about the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "RegistrationConfig": {
      "documentation": "<p>The registration configuration.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>The ARN of the role.</p>",
          "shape": "RoleArn"
        },
        "templateBody": {
          "documentation": "<p>The template body.</p>",
          "shape": "TemplateBody"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "shape": "TemplateName"
        }
      },
      "type": "structure"
    },
    "RegistryMaxResults": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "RegistryS3BucketName": {
      "max": 256,
      "min": 3,
      "pattern": "[a-zA-Z0-9._-]+",
      "type": "string"
    },
    "RegistryS3KeyName": {
      "max": 1024,
      "min": 1,
      "pattern": "[a-zA-Z0-9!_.*'()-\\/]+",
      "type": "string"
    },
    "RejectCertificateTransferRequest": {
      "documentation": "<p>The input for the RejectCertificateTransfer operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        },
        "rejectReason": {
          "documentation": "<p>The reason the certificate transfer was rejected.</p>",
          "shape": "Message"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "RejectedThings": {
      "type": "integer"
    },
    "RelatedResource": {
      "documentation": "<p>Information about a related resource.</p>",
      "members": {
        "additionalInfo": {
          "documentation": "<p>Other information about the resource.</p>",
          "shape": "StringMap"
        },
        "resourceIdentifier": {
          "documentation": "<p>Information that identifies the resource.</p>",
          "shape": "ResourceIdentifier"
        },
        "resourceType": {
          "documentation": "<p>The type of resource.</p>",
          "shape": "ResourceType"
        }
      },
      "type": "structure"
    },
    "RelatedResources": {
      "member": {
        "shape": "RelatedResource"
      },
      "type": "list"
    },
    "RemoveAuthorizerConfig": {
      "type": "boolean"
    },
    "RemoveAutoRegistration": {
      "type": "boolean"
    },
    "RemoveHook": {
      "type": "boolean"
    },
    "RemoveThingFromBillingGroupRequest": {
      "members": {
        "billingGroupArn": {
          "documentation": "<p>The ARN of the billing group.</p>",
          "shape": "BillingGroupArn"
        },
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "shape": "BillingGroupName"
        },
        "thingArn": {
          "documentation": "<p>The ARN of the thing to be removed from the billing group.</p>",
          "shape": "ThingArn"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to be removed from the billing group.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "RemoveThingFromBillingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "RemoveThingFromThingGroupRequest": {
      "members": {
        "thingArn": {
          "documentation": "<p>The ARN of the thing to remove from the group.</p>",
          "shape": "ThingArn"
        },
        "thingGroupArn": {
          "documentation": "<p>The group ARN.</p>",
          "shape": "ThingGroupArn"
        },
        "thingGroupName": {
          "documentation": "<p>The group name.</p>",
          "shape": "ThingGroupName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to remove from the group.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "RemoveThingFromThingGroupResponse": {
      "members": {},
      "type": "structure"
    },
    "RemoveThingType": {
      "type": "boolean"
    },
    "RemovedThings": {
      "type": "integer"
    },
    "ReplaceDefaultPolicyVersionParams": {
      "documentation": "<p>Parameters to define a mitigation action that adds a blank policy to restrict permissions.</p>",
      "members": {
        "templateName": {
          "documentation": "<p>The name of the template to be applied. The only supported value is <code>BLANK_POLICY</code>.</p>",
          "shape": "PolicyTemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "ReplaceTopicRuleRequest": {
      "documentation": "<p>The input for the ReplaceTopicRule operation.</p>",
      "members": {
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "location": "uri",
          "locationName": "ruleName",
          "shape": "RuleName"
        },
        "topicRulePayload": {
          "documentation": "<p>The rule payload.</p>",
          "shape": "TopicRulePayload"
        }
      },
      "payload": "topicRulePayload",
      "required": [
        "ruleName",
        "topicRulePayload"
      ],
      "type": "structure"
    },
    "ReportType": {
      "enum": [
        "ERRORS",
        "RESULTS"
      ],
      "type": "string"
    },
    "RepublishAction": {
      "documentation": "<p>Describes an action to republish to another topic.</p>",
      "members": {
        "qos": {
          "documentation": "<p>The Quality of Service (QoS) level to use when republishing messages. The default value is 0.</p>",
          "shape": "Qos"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        },
        "topic": {
          "documentation": "<p>The name of the MQTT topic.</p>",
          "shape": "TopicPattern"
        }
      },
      "required": [
        "roleArn",
        "topic"
      ],
      "type": "structure"
    },
    "ReservedDomainConfigurationName": {
      "max": 128,
      "min": 1,
      "pattern": "[\\w.:-]+",
      "type": "string"
    },
    "Resource": {
      "max": 2048,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "ResourceAlreadyExistsException": {
      "documentation": "<p>The resource already exists.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        },
        "resourceArn": {
          "documentation": "<p>The ARN of the resource that caused the exception.</p>",
          "shape": "resourceArn"
        },
        "resourceId": {
          "documentation": "<p>The ID of the resource that caused the exception.</p>",
          "shape": "resourceId"
        }
      },
      "type": "structure"
    },
    "ResourceArn": {
      "type": "string"
    },
    "ResourceArns": {
      "key": {
        "shape": "ResourceLogicalId"
      },
      "type": "map",
      "value": {
        "shape": "ResourceArn"
      }
    },
    "ResourceIdentifier": {
      "documentation": "<p>Information that identifies the noncompliant resource.</p>",
      "members": {
        "account": {
          "documentation": "<p>The account with which the resource is associated.</p>",
          "shape": "AwsAccountId"
        },
        "caCertificateId": {
          "documentation": "<p>The ID of the CA certificate used to authorize the certificate.</p>",
          "shape": "CertificateId"
        },
        "clientId": {
          "documentation": "<p>The client ID.</p>",
          "shape": "ClientId"
        },
        "cognitoIdentityPoolId": {
          "documentation": "<p>The ID of the Amazon Cognito identity pool.</p>",
          "shape": "CognitoIdentityPoolId"
        },
        "deviceCertificateId": {
          "documentation": "<p>The ID of the certificate attached to the resource.</p>",
          "shape": "CertificateId"
        },
        "iamRoleArn": {
          "documentation": "<p>The ARN of the IAM role that has overly permissive actions.</p>",
          "shape": "RoleArn"
        },
        "policyVersionIdentifier": {
          "documentation": "<p>The version of the policy associated with the resource.</p>",
          "shape": "PolicyVersionIdentifier"
        },
        "roleAliasArn": {
          "documentation": "<p>The ARN of the role alias that has overly permissive actions.</p>",
          "shape": "RoleAliasArn"
        }
      },
      "type": "structure"
    },
    "ResourceLogicalId": {
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceRegistrationFailureException": {
      "documentation": "<p>The resource registration failed.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceType": {
      "enum": [
        "DEVICE_CERTIFICATE",
        "CA_CERTIFICATE",
        "IOT_POLICY",
        "COGNITO_IDENTITY_POOL",
        "CLIENT_ID",
        "ACCOUNT_SETTINGS",
        "ROLE_ALIAS",
        "IAM_ROLE"
      ],
      "type": "string"
    },
    "Resources": {
      "member": {
        "shape": "Resource"
      },
      "type": "list"
    },
    "RetryAttempt": {
      "type": "integer"
    },
    "RetryCriteria": {
      "documentation": "<p>The criteria that determines how many retries are allowed for each failure type for a job.</p>",
      "members": {
        "failureType": {
          "documentation": "<p>The type of job execution failures that can initiate a job retry.</p>",
          "shape": "RetryableFailureType"
        },
        "numberOfRetries": {
          "documentation": "<p>The number of retries allowed for a failure type for the job.</p>",
          "shape": "NumberOfRetries"
        }
      },
      "required": [
        "failureType",
        "numberOfRetries"
      ],
      "type": "structure"
    },
    "RetryCriteriaList": {
      "max": 2,
      "member": {
        "shape": "RetryCriteria"
      },
      "min": 1,
      "type": "list"
    },
    "RetryableFailureType": {
      "enum": [
        "FAILED",
        "TIMED_OUT",
        "ALL"
      ],
      "type": "string"
    },
    "RoleAlias": {
      "max": 128,
      "min": 1,
      "pattern": "[\\w=,@-]+",
      "type": "string"
    },
    "RoleAliasArn": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "RoleAliasDescription": {
      "documentation": "<p>Role alias description.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The UNIX timestamp of when the role alias was created.</p>",
          "shape": "DateType"
        },
        "credentialDurationSeconds": {
          "documentation": "<p>The number of seconds for which the credential is valid.</p>",
          "shape": "CredentialDurationSeconds"
        },
        "lastModifiedDate": {
          "documentation": "<p>The UNIX timestamp of when the role alias was last modified.</p>",
          "shape": "DateType"
        },
        "owner": {
          "documentation": "<p>The role alias owner.</p>",
          "shape": "AwsAccountId"
        },
        "roleAlias": {
          "documentation": "<p>The role alias.</p>",
          "shape": "RoleAlias"
        },
        "roleAliasArn": {
          "documentation": "<p>The ARN of the role alias.</p>",
          "shape": "RoleAliasArn"
        },
        "roleArn": {
          "documentation": "<p>The role ARN.</p>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "RoleAliases": {
      "member": {
        "shape": "RoleAlias"
      },
      "type": "list"
    },
    "RoleArn": {
      "max": 2048,
      "min": 20,
      "type": "string"
    },
    "RolloutRatePerMinute": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "RuleArn": {
      "type": "string"
    },
    "RuleName": {
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9_]+$",
      "type": "string"
    },
    "S3Action": {
      "documentation": "<p>Describes an action to write data to an Amazon S3 bucket.</p>",
      "members": {
        "bucketName": {
          "documentation": "<p>The Amazon S3 bucket.</p>",
          "shape": "BucketName"
        },
        "cannedAcl": {
          "documentation": "<p>The Amazon S3 canned ACL that controls access to the object identified by the object key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl\">S3 canned ACLs</a>.</p>",
          "shape": "CannedAccessControlList"
        },
        "key": {
          "documentation": "<p>The object key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/list_amazons3.html\">Actions, resources, and condition keys for Amazon S3</a>.</p>",
          "shape": "Key"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "roleArn",
        "bucketName",
        "key"
      ],
      "type": "structure"
    },
    "S3Bucket": {
      "min": 1,
      "type": "string"
    },
    "S3Destination": {
      "documentation": "<p>Describes the location of updated firmware in S3.</p>",
      "members": {
        "bucket": {
          "documentation": "<p>The S3 bucket that contains the updated firmware.</p>",
          "shape": "S3Bucket"
        },
        "prefix": {
          "documentation": "<p>The S3 prefix.</p>",
          "shape": "Prefix"
        }
      },
      "type": "structure"
    },
    "S3FileUrl": {
      "max": 65535,
      "type": "string"
    },
    "S3FileUrlList": {
      "member": {
        "shape": "S3FileUrl"
      },
      "type": "list"
    },
    "S3Key": {
      "min": 1,
      "type": "string"
    },
    "S3Location": {
      "documentation": "<p>The S3 location.</p>",
      "members": {
        "bucket": {
          "documentation": "<p>The S3 bucket.</p>",
          "shape": "S3Bucket"
        },
        "key": {
          "documentation": "<p>The S3 key.</p>",
          "shape": "S3Key"
        },
        "version": {
          "documentation": "<p>The S3 bucket version.</p>",
          "shape": "S3Version"
        }
      },
      "type": "structure"
    },
    "S3Version": {
      "type": "string"
    },
    "SQL": {
      "type": "string"
    },
    "SalesforceAction": {
      "documentation": "<p>Describes an action to write a message to a Salesforce IoT Cloud Input Stream.</p>",
      "members": {
        "token": {
          "documentation": "<p>The token used to authenticate access to the Salesforce IoT Cloud Input Stream. The token is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "shape": "SalesforceToken"
        },
        "url": {
          "documentation": "<p>The URL exposed by the Salesforce IoT Cloud Input Stream. The URL is available from the Salesforce IoT Cloud platform after creation of the Input Stream.</p>",
          "shape": "SalesforceEndpoint"
        }
      },
      "required": [
        "token",
        "url"
      ],
      "type": "structure"
    },
    "SalesforceEndpoint": {
      "max": 2000,
      "pattern": "https://ingestion-[a-zA-Z0-9]{1,12}\\.[a-zA-Z0-9]+\\.((sfdc-matrix\\.net)|(sfdcnow\\.com))/streams/\\w{1,20}/\\w{1,20}/event",
      "type": "string"
    },
    "SalesforceToken": {
      "min": 40,
      "type": "string"
    },
    "ScheduledAuditArn": {
      "type": "string"
    },
    "ScheduledAuditMetadata": {
      "documentation": "<p>Information about the scheduled audit.</p>",
      "members": {
        "dayOfMonth": {
          "documentation": "<p>The day of the month on which the scheduled audit is run (if the <code>frequency</code> is \"MONTHLY\"). If days 29-31 are specified, and the month does not have that many days, the audit takes place on the \"LAST\" day of the month.</p>",
          "shape": "DayOfMonth"
        },
        "dayOfWeek": {
          "documentation": "<p>The day of the week on which the scheduled audit is run (if the <code>frequency</code> is \"WEEKLY\" or \"BIWEEKLY\").</p>",
          "shape": "DayOfWeek"
        },
        "frequency": {
          "documentation": "<p>How often the scheduled audit occurs.</p>",
          "shape": "AuditFrequency"
        },
        "scheduledAuditArn": {
          "documentation": "<p>The ARN of the scheduled audit.</p>",
          "shape": "ScheduledAuditArn"
        },
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit.</p>",
          "shape": "ScheduledAuditName"
        }
      },
      "type": "structure"
    },
    "ScheduledAuditMetadataList": {
      "member": {
        "shape": "ScheduledAuditMetadata"
      },
      "type": "list"
    },
    "ScheduledAuditName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "SearchIndexRequest": {
      "members": {
        "indexName": {
          "documentation": "<p>The search index name.</p>",
          "shape": "IndexName"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return at one time.</p>",
          "shape": "QueryMaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token used to get the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "queryString": {
          "documentation": "<p>The search query string. For more information about the search query syntax, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/query-syntax.html\">Query syntax</a>.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The query version.</p>",
          "shape": "QueryVersion"
        }
      },
      "required": [
        "queryString"
      ],
      "type": "structure"
    },
    "SearchIndexResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token used to get the next set of results, or <code>null</code> if there are no additional results.</p>",
          "shape": "NextToken"
        },
        "thingGroups": {
          "documentation": "<p>The thing groups that match the search query.</p>",
          "shape": "ThingGroupDocumentList"
        },
        "things": {
          "documentation": "<p>The things that match the search query.</p>",
          "shape": "ThingDocumentList"
        }
      },
      "type": "structure"
    },
    "SearchableAttributes": {
      "member": {
        "shape": "AttributeName"
      },
      "type": "list"
    },
    "Seconds": {
      "type": "integer"
    },
    "SecurityGroupId": {
      "type": "string"
    },
    "SecurityGroupList": {
      "member": {
        "shape": "SecurityGroupId"
      },
      "type": "list"
    },
    "SecurityProfileArn": {
      "type": "string"
    },
    "SecurityProfileDescription": {
      "max": 1000,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "SecurityProfileIdentifier": {
      "documentation": "<p>Identifying information for a Device Defender security profile.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the security profile.</p>",
          "shape": "SecurityProfileArn"
        },
        "name": {
          "documentation": "<p>The name you've given to the security profile.</p>",
          "shape": "SecurityProfileName"
        }
      },
      "required": [
        "name",
        "arn"
      ],
      "type": "structure"
    },
    "SecurityProfileIdentifiers": {
      "member": {
        "shape": "SecurityProfileIdentifier"
      },
      "type": "list"
    },
    "SecurityProfileName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "SecurityProfileTarget": {
      "documentation": "<p>A target to which an alert is sent when a security profile behavior is violated.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the security profile.</p>",
          "shape": "SecurityProfileTargetArn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "SecurityProfileTargetArn": {
      "type": "string"
    },
    "SecurityProfileTargetMapping": {
      "documentation": "<p>Information about a security profile and the target associated with it.</p>",
      "members": {
        "securityProfileIdentifier": {
          "documentation": "<p>Information that identifies the security profile.</p>",
          "shape": "SecurityProfileIdentifier"
        },
        "target": {
          "documentation": "<p>Information about the target (thing group) associated with the security profile.</p>",
          "shape": "SecurityProfileTarget"
        }
      },
      "type": "structure"
    },
    "SecurityProfileTargetMappings": {
      "member": {
        "shape": "SecurityProfileTargetMapping"
      },
      "type": "list"
    },
    "SecurityProfileTargets": {
      "member": {
        "shape": "SecurityProfileTarget"
      },
      "type": "list"
    },
    "ServerCertificateArns": {
      "max": 1,
      "member": {
        "shape": "AcmCertificateArn"
      },
      "min": 0,
      "type": "list"
    },
    "ServerCertificateStatus": {
      "enum": [
        "INVALID",
        "VALID"
      ],
      "type": "string"
    },
    "ServerCertificateStatusDetail": {
      "type": "string"
    },
    "ServerCertificateSummary": {
      "documentation": "<p>An object that contains information about a server certificate.</p>",
      "members": {
        "serverCertificateArn": {
          "documentation": "<p>The ARN of the server certificate.</p>",
          "shape": "AcmCertificateArn"
        },
        "serverCertificateStatus": {
          "documentation": "<p>The status of the server certificate.</p>",
          "shape": "ServerCertificateStatus"
        },
        "serverCertificateStatusDetail": {
          "documentation": "<p>Details that explain the status of the server certificate.</p>",
          "shape": "ServerCertificateStatusDetail"
        }
      },
      "type": "structure"
    },
    "ServerCertificates": {
      "member": {
        "shape": "ServerCertificateSummary"
      },
      "type": "list"
    },
    "ServerName": {
      "max": 253,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "ServiceName": {
      "type": "string"
    },
    "ServiceType": {
      "enum": [
        "DATA",
        "CREDENTIAL_PROVIDER",
        "JOBS"
      ],
      "type": "string"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is temporarily unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "SetAsActive": {
      "type": "boolean"
    },
    "SetAsActiveFlag": {
      "type": "boolean"
    },
    "SetAsDefault": {
      "type": "boolean"
    },
    "SetDefaultAuthorizerRequest": {
      "members": {
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "shape": "AuthorizerName"
        }
      },
      "required": [
        "authorizerName"
      ],
      "type": "structure"
    },
    "SetDefaultAuthorizerResponse": {
      "members": {
        "authorizerArn": {
          "documentation": "<p>The authorizer ARN.</p>",
          "shape": "AuthorizerArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "shape": "AuthorizerName"
        }
      },
      "type": "structure"
    },
    "SetDefaultPolicyVersionRequest": {
      "documentation": "<p>The input for the SetDefaultPolicyVersion operation.</p>",
      "members": {
        "policyName": {
          "documentation": "<p>The policy name.</p>",
          "location": "uri",
          "locationName": "policyName",
          "shape": "PolicyName"
        },
        "policyVersionId": {
          "documentation": "<p>The policy version ID.</p>",
          "location": "uri",
          "locationName": "policyVersionId",
          "shape": "PolicyVersionId"
        }
      },
      "required": [
        "policyName",
        "policyVersionId"
      ],
      "type": "structure"
    },
    "SetLoggingOptionsRequest": {
      "documentation": "<p>The input for the SetLoggingOptions operation.</p>",
      "members": {
        "loggingOptionsPayload": {
          "documentation": "<p>The logging options payload.</p>",
          "shape": "LoggingOptionsPayload"
        }
      },
      "payload": "loggingOptionsPayload",
      "required": [
        "loggingOptionsPayload"
      ],
      "type": "structure"
    },
    "SetV2LoggingLevelRequest": {
      "members": {
        "logLevel": {
          "documentation": "<p>The log level.</p>",
          "shape": "LogLevel"
        },
        "logTarget": {
          "documentation": "<p>The log target.</p>",
          "shape": "LogTarget"
        }
      },
      "required": [
        "logTarget",
        "logLevel"
      ],
      "type": "structure"
    },
    "SetV2LoggingOptionsRequest": {
      "members": {
        "defaultLogLevel": {
          "documentation": "<p>The default logging level.</p>",
          "shape": "LogLevel"
        },
        "disableAllLogs": {
          "documentation": "<p>If true all logs are disabled. The default is false.</p>",
          "shape": "DisableAllLogs"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that allows IoT to write to Cloudwatch logs.</p>",
          "shape": "AwsArn"
        }
      },
      "type": "structure"
    },
    "ShadowName": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "SigV4Authorization": {
      "documentation": "<p>For more information, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html\">Signature Version 4 signing process</a>.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>The ARN of the signing role.</p>",
          "shape": "AwsArn"
        },
        "serviceName": {
          "documentation": "<p>The service name to use while signing with Sig V4.</p>",
          "shape": "ServiceName"
        },
        "signingRegion": {
          "documentation": "<p>The signing region.</p>",
          "shape": "SigningRegion"
        }
      },
      "required": [
        "signingRegion",
        "serviceName",
        "roleArn"
      ],
      "type": "structure"
    },
    "Signature": {
      "type": "blob"
    },
    "SignatureAlgorithm": {
      "type": "string"
    },
    "SigningJobId": {
      "type": "string"
    },
    "SigningProfileName": {
      "type": "string"
    },
    "SigningProfileParameter": {
      "documentation": "<p>Describes the code-signing profile.</p>",
      "members": {
        "certificateArn": {
          "documentation": "<p>Certificate ARN.</p>",
          "shape": "CertificateArn"
        },
        "certificatePathOnDevice": {
          "documentation": "<p>The location of the code-signing certificate on your device.</p>",
          "shape": "CertificatePathOnDevice"
        },
        "platform": {
          "documentation": "<p>The hardware platform of your device.</p>",
          "shape": "Platform"
        }
      },
      "type": "structure"
    },
    "SigningRegion": {
      "type": "string"
    },
    "SkippedFindingsCount": {
      "type": "long"
    },
    "SkyfallMaxResults": {
      "max": 250,
      "min": 1,
      "type": "integer"
    },
    "SnsAction": {
      "documentation": "<p>Describes an action to publish to an Amazon SNS topic.</p>",
      "members": {
        "messageFormat": {
          "documentation": "<p>(Optional) The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\". The default value of the attribute is \"RAW\". SNS uses this setting to determine if the payload should be parsed and relevant platform-specific bits of the payload should be extracted. To read more about SNS message formats, see <a href=\"https://docs.aws.amazon.com/sns/latest/dg/json-formats.html\">https://docs.aws.amazon.com/sns/latest/dg/json-formats.html</a> refer to their official documentation.</p>",
          "shape": "MessageFormat"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        },
        "targetArn": {
          "documentation": "<p>The ARN of the SNS topic.</p>",
          "shape": "AwsArn"
        }
      },
      "required": [
        "targetArn",
        "roleArn"
      ],
      "type": "structure"
    },
    "SnsTopicArn": {
      "max": 350,
      "type": "string"
    },
    "SqlParseException": {
      "documentation": "<p>The Rule-SQL expression can't be parsed correctly.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "SqsAction": {
      "documentation": "<p>Describes an action to publish data to an Amazon SQS queue.</p>",
      "members": {
        "queueUrl": {
          "documentation": "<p>The URL of the Amazon SQS queue.</p>",
          "shape": "QueueUrl"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that grants access.</p>",
          "shape": "AwsArn"
        },
        "useBase64": {
          "documentation": "<p>Specifies whether to use Base64 encoding.</p>",
          "shape": "UseBase64"
        }
      },
      "required": [
        "roleArn",
        "queueUrl"
      ],
      "type": "structure"
    },
    "StartAuditMitigationActionsTaskRequest": {
      "members": {
        "auditCheckToActionsMapping": {
          "documentation": "<p>For an audit check, specifies which mitigation actions to apply. Those actions must be defined in your Amazon Web Services accounts.</p>",
          "shape": "AuditCheckToActionsMapping"
        },
        "clientRequestToken": {
          "documentation": "<p>Each audit mitigation task must have a unique client request token. If you try to start a new task with the same token as a task that already exists, an exception occurs. If you omit this value, a unique client request token is generated automatically.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "target": {
          "documentation": "<p>Specifies the audit findings to which the mitigation actions are applied. You can apply them to a type of audit check, to all findings from an audit, or to a specific set of findings.</p>",
          "shape": "AuditMitigationActionsTaskTarget"
        },
        "taskId": {
          "documentation": "<p>A unique identifier for the task. You can use this identifier to check the status of the task or to cancel it.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        }
      },
      "required": [
        "taskId",
        "target",
        "auditCheckToActionsMapping",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "StartAuditMitigationActionsTaskResponse": {
      "members": {
        "taskId": {
          "documentation": "<p>The unique identifier for the audit mitigation task. This matches the <code>taskId</code> that you specified in the request.</p>",
          "shape": "MitigationActionsTaskId"
        }
      },
      "type": "structure"
    },
    "StartDetectMitigationActionsTaskRequest": {
      "members": {
        "actions": {
          "documentation": "<p> The actions to be performed when a device has unexpected behavior. </p>",
          "shape": "DetectMitigationActionsToExecuteList"
        },
        "clientRequestToken": {
          "documentation": "<p> Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request. </p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "includeOnlyActiveViolations": {
          "documentation": "<p> Specifies to list only active violations. </p>",
          "shape": "NullableBoolean"
        },
        "includeSuppressedAlerts": {
          "documentation": "<p> Specifies to include suppressed alerts. </p>",
          "shape": "NullableBoolean"
        },
        "target": {
          "documentation": "<p> Specifies the ML Detect findings to which the mitigation actions are applied. </p>",
          "shape": "DetectMitigationActionsTaskTarget"
        },
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "MitigationActionsTaskId"
        },
        "violationEventOccurrenceRange": {
          "documentation": "<p> Specifies the time period of which violation events occurred between. </p>",
          "shape": "ViolationEventOccurrenceRange"
        }
      },
      "required": [
        "taskId",
        "target",
        "actions",
        "clientRequestToken"
      ],
      "type": "structure"
    },
    "StartDetectMitigationActionsTaskResponse": {
      "members": {
        "taskId": {
          "documentation": "<p> The unique identifier of the task. </p>",
          "shape": "MitigationActionsTaskId"
        }
      },
      "type": "structure"
    },
    "StartOnDemandAuditTaskRequest": {
      "members": {
        "targetCheckNames": {
          "documentation": "<p>Which checks are performed during the audit. The checks you specify must be enabled for your account or an exception occurs. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.</p>",
          "shape": "TargetAuditCheckNames"
        }
      },
      "required": [
        "targetCheckNames"
      ],
      "type": "structure"
    },
    "StartOnDemandAuditTaskResponse": {
      "members": {
        "taskId": {
          "documentation": "<p>The ID of the on-demand audit you started.</p>",
          "shape": "AuditTaskId"
        }
      },
      "type": "structure"
    },
    "StartSigningJobParameter": {
      "documentation": "<p>Information required to start a signing job.</p>",
      "members": {
        "destination": {
          "documentation": "<p>The location to write the code-signed file.</p>",
          "shape": "Destination"
        },
        "signingProfileName": {
          "documentation": "<p>The code-signing profile name.</p>",
          "shape": "SigningProfileName"
        },
        "signingProfileParameter": {
          "documentation": "<p>Describes the code-signing profile.</p>",
          "shape": "SigningProfileParameter"
        }
      },
      "type": "structure"
    },
    "StartThingRegistrationTaskRequest": {
      "members": {
        "inputFileBucket": {
          "documentation": "<p>The S3 bucket that contains the input file.</p>",
          "shape": "RegistryS3BucketName"
        },
        "inputFileKey": {
          "documentation": "<p>The name of input file within the S3 bucket. This file contains a newline delimited JSON file. Each line contains the parameter values to provision one device (thing).</p>",
          "shape": "RegistryS3KeyName"
        },
        "roleArn": {
          "documentation": "<p>The IAM role ARN that grants permission the input file.</p>",
          "shape": "RoleArn"
        },
        "templateBody": {
          "documentation": "<p>The provisioning template.</p>",
          "shape": "TemplateBody"
        }
      },
      "required": [
        "templateBody",
        "inputFileBucket",
        "inputFileKey",
        "roleArn"
      ],
      "type": "structure"
    },
    "StartThingRegistrationTaskResponse": {
      "members": {
        "taskId": {
          "documentation": "<p>The bulk thing provisioning task ID.</p>",
          "shape": "TaskId"
        }
      },
      "type": "structure"
    },
    "StateMachineName": {
      "type": "string"
    },
    "StateReason": {
      "type": "string"
    },
    "StateValue": {
      "type": "string"
    },
    "StatisticalThreshold": {
      "documentation": "<p>A statistical ranking (percentile) that indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.</p>",
      "members": {
        "statistic": {
          "documentation": "<p>The percentile that resolves to a threshold value by which compliance with a behavior is determined. Metrics are collected over the specified period (<code>durationSeconds</code>) from all reporting devices in your account and statistical ranks are calculated. Then, the measurements from a device are collected over the same period. If the accumulated measurements from the device fall above or below (<code>comparisonOperator</code>) the value associated with the percentile specified, then the device is considered to be in compliance with the behavior, otherwise a violation occurs.</p>",
          "shape": "EvaluationStatistic"
        }
      },
      "type": "structure"
    },
    "Statistics": {
      "documentation": "<p>A map of key-value pairs for all supported statistics. For issues with missing or unexpected values for this API, consult <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/fleet-indexing-troubleshooting.html\"> Fleet indexing troubleshooting guide</a>.</p>",
      "members": {
        "average": {
          "box": true,
          "documentation": "<p>The average of the aggregated field values.</p>",
          "shape": "Average"
        },
        "count": {
          "documentation": "<p>The count of things that match the query string criteria and contain a valid aggregation field value.</p>",
          "shape": "Count"
        },
        "maximum": {
          "box": true,
          "documentation": "<p>The maximum aggregated field value.</p>",
          "shape": "Maximum"
        },
        "minimum": {
          "box": true,
          "documentation": "<p>The minimum aggregated field value.</p>",
          "shape": "Minimum"
        },
        "stdDeviation": {
          "box": true,
          "documentation": "<p>The standard deviation of the aggregated field values.</p>",
          "shape": "StdDeviation"
        },
        "sum": {
          "box": true,
          "documentation": "<p>The sum of the aggregated field values.</p>",
          "shape": "Sum"
        },
        "sumOfSquares": {
          "box": true,
          "documentation": "<p>The sum of the squares of the aggregated field values.</p>",
          "shape": "SumOfSquares"
        },
        "variance": {
          "box": true,
          "documentation": "<p>The variance of the aggregated field values.</p>",
          "shape": "Variance"
        }
      },
      "type": "structure"
    },
    "Status": {
      "enum": [
        "InProgress",
        "Completed",
        "Failed",
        "Cancelled",
        "Cancelling"
      ],
      "type": "string"
    },
    "StdDeviation": {
      "type": "double"
    },
    "StepFunctionsAction": {
      "documentation": "<p>Starts execution of a Step Functions state machine.</p>",
      "members": {
        "executionNamePrefix": {
          "documentation": "<p>(Optional) A name will be given to the state machine execution consisting of this prefix followed by a UUID. Step Functions automatically creates a unique name for each state machine execution if one is not provided.</p>",
          "shape": "ExecutionNamePrefix"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants IoT permission to start execution of a state machine (\"Action\":\"states:StartExecution\").</p>",
          "shape": "AwsArn"
        },
        "stateMachineName": {
          "documentation": "<p>The name of the Step Functions state machine whose execution will be started.</p>",
          "shape": "StateMachineName"
        }
      },
      "required": [
        "stateMachineName",
        "roleArn"
      ],
      "type": "structure"
    },
    "StopThingRegistrationTaskRequest": {
      "members": {
        "taskId": {
          "documentation": "<p>The bulk thing provisioning task ID.</p>",
          "location": "uri",
          "locationName": "taskId",
          "shape": "TaskId"
        }
      },
      "required": [
        "taskId"
      ],
      "type": "structure"
    },
    "StopThingRegistrationTaskResponse": {
      "members": {},
      "type": "structure"
    },
    "Stream": {
      "documentation": "<p>Describes a group of files that can be streamed.</p>",
      "members": {
        "fileId": {
          "documentation": "<p>The ID of a file associated with a stream.</p>",
          "shape": "FileId"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "shape": "StreamId"
        }
      },
      "type": "structure"
    },
    "StreamArn": {
      "type": "string"
    },
    "StreamDescription": {
      "max": 2028,
      "pattern": "[^\\p{C}]+",
      "type": "string"
    },
    "StreamFile": {
      "documentation": "<p>Represents a file to stream.</p>",
      "members": {
        "fileId": {
          "documentation": "<p>The file ID.</p>",
          "shape": "FileId"
        },
        "s3Location": {
          "documentation": "<p>The location of the file in S3.</p>",
          "shape": "S3Location"
        }
      },
      "type": "structure"
    },
    "StreamFiles": {
      "max": 50,
      "member": {
        "shape": "StreamFile"
      },
      "min": 1,
      "type": "list"
    },
    "StreamId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "StreamInfo": {
      "documentation": "<p>Information about a stream.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The date when the stream was created.</p>",
          "shape": "DateType"
        },
        "description": {
          "documentation": "<p>The description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "files": {
          "documentation": "<p>The files to stream.</p>",
          "shape": "StreamFiles"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The date when the stream was last updated.</p>",
          "shape": "DateType"
        },
        "roleArn": {
          "documentation": "<p>An IAM role IoT assumes to access your S3 files.</p>",
          "shape": "RoleArn"
        },
        "streamArn": {
          "documentation": "<p>The stream ARN.</p>",
          "shape": "StreamArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "shape": "StreamId"
        },
        "streamVersion": {
          "documentation": "<p>The stream version.</p>",
          "shape": "StreamVersion"
        }
      },
      "type": "structure"
    },
    "StreamName": {
      "type": "string"
    },
    "StreamSummary": {
      "documentation": "<p>A summary of a stream.</p>",
      "members": {
        "description": {
          "documentation": "<p>A description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "streamArn": {
          "documentation": "<p>The stream ARN.</p>",
          "shape": "StreamArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "shape": "StreamId"
        },
        "streamVersion": {
          "documentation": "<p>The stream version.</p>",
          "shape": "StreamVersion"
        }
      },
      "type": "structure"
    },
    "StreamVersion": {
      "max": 65535,
      "min": 0,
      "type": "integer"
    },
    "StreamsSummary": {
      "member": {
        "shape": "StreamSummary"
      },
      "type": "list"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "stringValue"
      },
      "type": "list"
    },
    "StringMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "SubnetId": {
      "type": "string"
    },
    "SubnetIdList": {
      "member": {
        "shape": "SubnetId"
      },
      "type": "list"
    },
    "SucceededFindingsCount": {
      "type": "long"
    },
    "SucceededThings": {
      "type": "integer"
    },
    "Sum": {
      "type": "double"
    },
    "SumOfSquares": {
      "type": "double"
    },
    "SuppressAlerts": {
      "type": "boolean"
    },
    "SuppressIndefinitely": {
      "type": "boolean"
    },
    "SuppressedNonCompliantResourcesCount": {
      "type": "long"
    },
    "TableName": {
      "type": "string"
    },
    "Tag": {
      "documentation": "<p>A set of key/value pairs that are used to manage the resource.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The tag's key.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>The tag's value.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeyList": {
      "member": {
        "shape": "TagKey"
      },
      "type": "list"
    },
    "TagList": {
      "member": {
        "shape": "Tag"
      },
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "ResourceArn"
        },
        "tags": {
          "documentation": "<p>The new or modified tags for the resource.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "Target": {
      "type": "string"
    },
    "TargetArn": {
      "max": 2048,
      "type": "string"
    },
    "TargetAuditCheckNames": {
      "member": {
        "shape": "AuditCheckName"
      },
      "type": "list"
    },
    "TargetSelection": {
      "enum": [
        "CONTINUOUS",
        "SNAPSHOT"
      ],
      "type": "string"
    },
    "TargetViolationIdsForDetectMitigationActions": {
      "max": 25,
      "member": {
        "shape": "ViolationId"
      },
      "min": 1,
      "type": "list"
    },
    "Targets": {
      "member": {
        "shape": "Target"
      },
      "min": 1,
      "type": "list"
    },
    "TaskAlreadyExistsException": {
      "documentation": "<p> This exception occurs if you attempt to start a task with the same task-id as an existing task but with a different clientRequestToken. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "TaskId": {
      "max": 40,
      "type": "string"
    },
    "TaskIdList": {
      "member": {
        "shape": "TaskId"
      },
      "type": "list"
    },
    "TaskStatistics": {
      "documentation": "<p>Statistics for the checks performed during the audit.</p>",
      "members": {
        "canceledChecks": {
          "documentation": "<p>The number of checks that did not run because the audit was canceled.</p>",
          "shape": "CanceledChecksCount"
        },
        "compliantChecks": {
          "documentation": "<p>The number of checks that found compliant resources.</p>",
          "shape": "CompliantChecksCount"
        },
        "failedChecks": {
          "documentation": "<p>The number of checks.</p>",
          "shape": "FailedChecksCount"
        },
        "inProgressChecks": {
          "documentation": "<p>The number of checks in progress.</p>",
          "shape": "InProgressChecksCount"
        },
        "nonCompliantChecks": {
          "documentation": "<p>The number of checks that found noncompliant resources.</p>",
          "shape": "NonCompliantChecksCount"
        },
        "totalChecks": {
          "documentation": "<p>The number of checks in this audit.</p>",
          "shape": "TotalChecksCount"
        },
        "waitingForDataCollectionChecks": {
          "documentation": "<p>The number of checks waiting for data collection.</p>",
          "shape": "WaitingForDataCollectionChecksCount"
        }
      },
      "type": "structure"
    },
    "TaskStatisticsForAuditCheck": {
      "documentation": "<p>Provides summary counts of how many tasks for findings are in a particular state. This information is included in the response from DescribeAuditMitigationActionsTask.</p>",
      "members": {
        "canceledFindingsCount": {
          "documentation": "<p>The number of findings to which the mitigation action task was canceled when applied.</p>",
          "shape": "CanceledFindingsCount"
        },
        "failedFindingsCount": {
          "documentation": "<p>The number of findings for which at least one of the actions failed when applied.</p>",
          "shape": "FailedFindingsCount"
        },
        "skippedFindingsCount": {
          "documentation": "<p>The number of findings skipped because of filter conditions provided in the parameters to the command.</p>",
          "shape": "SkippedFindingsCount"
        },
        "succeededFindingsCount": {
          "documentation": "<p>The number of findings for which all mitigation actions succeeded when applied.</p>",
          "shape": "SucceededFindingsCount"
        },
        "totalFindingsCount": {
          "documentation": "<p>The total number of findings to which a task is being applied.</p>",
          "shape": "TotalFindingsCount"
        }
      },
      "type": "structure"
    },
    "TemplateArn": {
      "type": "string"
    },
    "TemplateBody": {
      "max": 10240,
      "min": 0,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "TemplateDescription": {
      "max": 500,
      "min": 0,
      "pattern": "[^\\p{C}]*",
      "type": "string"
    },
    "TemplateName": {
      "max": 36,
      "min": 1,
      "pattern": "^[0-9A-Za-z_-]+$",
      "type": "string"
    },
    "TemplateType": {
      "enum": [
        "FLEET_PROVISIONING",
        "JITP"
      ],
      "type": "string"
    },
    "TemplateVersionId": {
      "type": "integer"
    },
    "TermsAggregation": {
      "documentation": "<p>Performs an aggregation that will return a list of buckets. The list of buckets is a ranked list of the number of occurrences of an aggregation field value.</p>",
      "members": {
        "maxBuckets": {
          "documentation": "<p>The number of buckets to return in the response. Default to 10.</p>",
          "shape": "MaxBuckets"
        }
      },
      "type": "structure"
    },
    "TestAuthorizationRequest": {
      "members": {
        "authInfos": {
          "documentation": "<p>A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.</p>",
          "shape": "AuthInfos"
        },
        "clientId": {
          "documentation": "<p>The MQTT client ID.</p>",
          "location": "querystring",
          "locationName": "clientId",
          "shape": "ClientId"
        },
        "cognitoIdentityPoolId": {
          "documentation": "<p>The Cognito identity pool ID.</p>",
          "shape": "CognitoIdentityPoolId"
        },
        "policyNamesToAdd": {
          "documentation": "<p>When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.</p>",
          "shape": "PolicyNames"
        },
        "policyNamesToSkip": {
          "documentation": "<p>When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.</p>",
          "shape": "PolicyNames"
        },
        "principal": {
          "documentation": "<p>The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).</p>",
          "shape": "Principal"
        }
      },
      "required": [
        "authInfos"
      ],
      "type": "structure"
    },
    "TestAuthorizationResponse": {
      "members": {
        "authResults": {
          "documentation": "<p>The authentication results.</p>",
          "shape": "AuthResults"
        }
      },
      "type": "structure"
    },
    "TestInvokeAuthorizerRequest": {
      "members": {
        "authorizerName": {
          "documentation": "<p>The custom authorizer name.</p>",
          "location": "uri",
          "locationName": "authorizerName",
          "shape": "AuthorizerName"
        },
        "httpContext": {
          "documentation": "<p>Specifies a test HTTP authorization request.</p>",
          "shape": "HttpContext"
        },
        "mqttContext": {
          "documentation": "<p>Specifies a test MQTT authorization request.</p>",
          "shape": "MqttContext"
        },
        "tlsContext": {
          "documentation": "<p>Specifies a test TLS authorization request.</p>",
          "shape": "TlsContext"
        },
        "token": {
          "documentation": "<p>The token returned by your custom authentication service.</p>",
          "shape": "Token"
        },
        "tokenSignature": {
          "documentation": "<p>The signature made with the token and your custom authentication service's private key. This value must be Base-64-encoded.</p>",
          "shape": "TokenSignature"
        }
      },
      "required": [
        "authorizerName"
      ],
      "type": "structure"
    },
    "TestInvokeAuthorizerResponse": {
      "members": {
        "disconnectAfterInSeconds": {
          "documentation": "<p>The number of seconds after which the connection is terminated.</p>",
          "shape": "Seconds"
        },
        "isAuthenticated": {
          "documentation": "<p>True if the token is authenticated, otherwise false.</p>",
          "shape": "IsAuthenticated"
        },
        "policyDocuments": {
          "documentation": "<p>IAM policy documents.</p>",
          "shape": "PolicyDocuments"
        },
        "principalId": {
          "documentation": "<p>The principal ID.</p>",
          "shape": "PrincipalId"
        },
        "refreshAfterInSeconds": {
          "documentation": "<p>The number of seconds after which the temporary credentials are refreshed.</p>",
          "shape": "Seconds"
        }
      },
      "type": "structure"
    },
    "ThingArn": {
      "type": "string"
    },
    "ThingAttribute": {
      "documentation": "<p>The properties of the thing, including thing name, thing type name, and a list of thing attributes.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>A list of thing attributes which are name-value pairs.</p>",
          "shape": "Attributes"
        },
        "thingArn": {
          "documentation": "<p>The thing ARN.</p>",
          "shape": "ThingArn"
        },
        "thingName": {
          "documentation": "<p>The name of the thing.</p>",
          "shape": "ThingName"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type, if the thing has been associated with a type.</p>",
          "shape": "ThingTypeName"
        },
        "version": {
          "documentation": "<p>The version of the thing record in the registry.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "ThingAttributeList": {
      "member": {
        "shape": "ThingAttribute"
      },
      "type": "list"
    },
    "ThingConnectivity": {
      "documentation": "<p>The connectivity status of the thing.</p>",
      "members": {
        "connected": {
          "documentation": "<p>True if the thing is connected to the Amazon Web Services IoT Core service; false if it is not connected.</p>",
          "shape": "Boolean"
        },
        "disconnectReason": {
          "documentation": "<p>The reason why the client is disconnected. If the thing has been disconnected for approximately an hour, the <code>disconnectReason</code> value might be missing.</p>",
          "shape": "DisconnectReason"
        },
        "timestamp": {
          "documentation": "<p>The epoch time (in milliseconds) when the thing last connected or disconnected. If the thing has been disconnected for approximately an hour, the time value might be missing.</p>",
          "shape": "ConnectivityTimestamp"
        }
      },
      "type": "structure"
    },
    "ThingConnectivityIndexingMode": {
      "enum": [
        "OFF",
        "STATUS"
      ],
      "type": "string"
    },
    "ThingDocument": {
      "documentation": "<p>The thing search index document.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>The attributes.</p>",
          "shape": "Attributes"
        },
        "connectivity": {
          "documentation": "<p>Indicates whether the thing is connected to the Amazon Web Services IoT Core service.</p>",
          "shape": "ThingConnectivity"
        },
        "deviceDefender": {
          "documentation": "<p>Contains Device Defender data.</p> <p>For more information about Device Defender, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/device-defender.html\">Device Defender</a>. </p>",
          "shape": "JsonDocument"
        },
        "shadow": {
          "documentation": "<p>The unnamed shadow and named shadow.</p> <p>For more information about shadows, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html\">IoT Device Shadow service.</a> </p>",
          "shape": "JsonDocument"
        },
        "thingGroupNames": {
          "documentation": "<p>Thing group names.</p>",
          "shape": "ThingGroupNameList"
        },
        "thingId": {
          "documentation": "<p>The thing ID.</p>",
          "shape": "ThingId"
        },
        "thingName": {
          "documentation": "<p>The thing name.</p>",
          "shape": "ThingName"
        },
        "thingTypeName": {
          "documentation": "<p>The thing type name.</p>",
          "shape": "ThingTypeName"
        }
      },
      "type": "structure"
    },
    "ThingDocumentList": {
      "member": {
        "shape": "ThingDocument"
      },
      "type": "list"
    },
    "ThingGroupArn": {
      "type": "string"
    },
    "ThingGroupDescription": {
      "max": 2028,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "ThingGroupDocument": {
      "documentation": "<p>The thing group search index document.</p>",
      "members": {
        "attributes": {
          "documentation": "<p>The thing group attributes.</p>",
          "shape": "Attributes"
        },
        "parentGroupNames": {
          "documentation": "<p>Parent group names.</p>",
          "shape": "ThingGroupNameList"
        },
        "thingGroupDescription": {
          "documentation": "<p>The thing group description.</p>",
          "shape": "ThingGroupDescription"
        },
        "thingGroupId": {
          "documentation": "<p>The thing group ID.</p>",
          "shape": "ThingGroupId"
        },
        "thingGroupName": {
          "documentation": "<p>The thing group name.</p>",
          "shape": "ThingGroupName"
        }
      },
      "type": "structure"
    },
    "ThingGroupDocumentList": {
      "member": {
        "shape": "ThingGroupDocument"
      },
      "type": "list"
    },
    "ThingGroupId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9\\-]+",
      "type": "string"
    },
    "ThingGroupIndexingConfiguration": {
      "documentation": "<p>Thing group indexing configuration.</p>",
      "members": {
        "customFields": {
          "documentation": "<p>A list of thing group fields to index. This list cannot contain any managed fields. Use the GetIndexingConfiguration API to get a list of managed fields.</p> <p>Contains custom field names and their data type.</p>",
          "shape": "Fields"
        },
        "managedFields": {
          "documentation": "<p>Contains fields that are indexed and whose types are already known by the Fleet Indexing service.</p>",
          "shape": "Fields"
        },
        "thingGroupIndexingMode": {
          "documentation": "<p>Thing group indexing mode.</p>",
          "shape": "ThingGroupIndexingMode"
        }
      },
      "required": [
        "thingGroupIndexingMode"
      ],
      "type": "structure"
    },
    "ThingGroupIndexingMode": {
      "enum": [
        "OFF",
        "ON"
      ],
      "type": "string"
    },
    "ThingGroupList": {
      "member": {
        "shape": "ThingGroupName"
      },
      "type": "list"
    },
    "ThingGroupMetadata": {
      "documentation": "<p>Thing group metadata.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The UNIX timestamp of when the thing group was created.</p>",
          "shape": "CreationDate"
        },
        "parentGroupName": {
          "documentation": "<p>The parent thing group name.</p>",
          "shape": "ThingGroupName"
        },
        "rootToParentThingGroups": {
          "documentation": "<p>The root parent thing group.</p>",
          "shape": "ThingGroupNameAndArnList"
        }
      },
      "type": "structure"
    },
    "ThingGroupName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThingGroupNameAndArnList": {
      "member": {
        "shape": "GroupNameAndArn"
      },
      "type": "list"
    },
    "ThingGroupNameList": {
      "member": {
        "shape": "ThingGroupName"
      },
      "type": "list"
    },
    "ThingGroupNames": {
      "max": 10,
      "member": {
        "shape": "ThingGroupName"
      },
      "min": 1,
      "type": "list"
    },
    "ThingGroupProperties": {
      "documentation": "<p>Thing group properties.</p>",
      "members": {
        "attributePayload": {
          "documentation": "<p>The thing group attributes in JSON format.</p>",
          "shape": "AttributePayload"
        },
        "thingGroupDescription": {
          "documentation": "<p>The thing group description.</p>",
          "shape": "ThingGroupDescription"
        }
      },
      "type": "structure"
    },
    "ThingId": {
      "type": "string"
    },
    "ThingIndexingConfiguration": {
      "documentation": "<p>The thing indexing configuration. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html\">Managing Thing Indexing</a>.</p>",
      "members": {
        "customFields": {
          "documentation": "<p>Contains custom field names and their data type.</p>",
          "shape": "Fields"
        },
        "deviceDefenderIndexingMode": {
          "documentation": "<p>Device Defender indexing mode. Valid values are:</p> <ul> <li> <p>VIOLATIONS \u2013 Your thing index contains Device Defender violations. To enable Device Defender indexing, <i>deviceDefenderIndexingMode</i> must not be set to OFF.</p> </li> <li> <p>OFF - Device Defender indexing is disabled.</p> </li> </ul> <p>For more information about Device Defender violations, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/device-defender-detect.html\">Device Defender Detect.</a> </p>",
          "shape": "DeviceDefenderIndexingMode"
        },
        "filter": {
          "documentation": "<p>Provides additional filters for specific data sources. Named shadow is the only data source that currently supports and requires a filter. To add named shadows to your fleet indexing configuration, set <code>namedShadowIndexingMode</code> to be <code>ON</code> and specify your shadow names in <code>filter</code>.</p>",
          "shape": "IndexingFilter"
        },
        "managedFields": {
          "documentation": "<p>Contains fields that are indexed and whose types are already known by the Fleet Indexing service.</p>",
          "shape": "Fields"
        },
        "namedShadowIndexingMode": {
          "documentation": "<p>Named shadow indexing mode. Valid values are:</p> <ul> <li> <p>ON \u2013 Your thing index contains named shadow. To enable thing named shadow indexing, <i>namedShadowIndexingMode</i> must not be set to OFF.</p> </li> <li> <p>OFF - Named shadow indexing is disabled.</p> </li> </ul> <p>For more information about Shadows, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-device-shadows.html\">IoT Device Shadow service.</a> </p>",
          "shape": "NamedShadowIndexingMode"
        },
        "thingConnectivityIndexingMode": {
          "documentation": "<p>Thing connectivity indexing mode. Valid values are: </p> <ul> <li> <p>STATUS \u2013 Your thing index contains connectivity status. To enable thing connectivity indexing, <i>thingIndexMode</i> must not be set to OFF.</p> </li> <li> <p>OFF - Thing connectivity status indexing is disabled.</p> </li> </ul>",
          "shape": "ThingConnectivityIndexingMode"
        },
        "thingIndexingMode": {
          "documentation": "<p>Thing indexing mode. Valid values are:</p> <ul> <li> <p>REGISTRY \u2013 Your thing index contains registry data only.</p> </li> <li> <p>REGISTRY_AND_SHADOW - Your thing index contains registry and shadow data.</p> </li> <li> <p>OFF - Thing indexing is disabled.</p> </li> </ul>",
          "shape": "ThingIndexingMode"
        }
      },
      "required": [
        "thingIndexingMode"
      ],
      "type": "structure"
    },
    "ThingIndexingMode": {
      "enum": [
        "OFF",
        "REGISTRY",
        "REGISTRY_AND_SHADOW"
      ],
      "type": "string"
    },
    "ThingName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThingNameList": {
      "member": {
        "shape": "ThingName"
      },
      "type": "list"
    },
    "ThingTypeArn": {
      "type": "string"
    },
    "ThingTypeDefinition": {
      "documentation": "<p>The definition of the thing type, including thing type name and description.</p>",
      "members": {
        "thingTypeArn": {
          "documentation": "<p>The thing type ARN.</p>",
          "shape": "ThingTypeArn"
        },
        "thingTypeMetadata": {
          "documentation": "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when it was deprecated.</p>",
          "shape": "ThingTypeMetadata"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "shape": "ThingTypeName"
        },
        "thingTypeProperties": {
          "documentation": "<p>The ThingTypeProperties for the thing type.</p>",
          "shape": "ThingTypeProperties"
        }
      },
      "type": "structure"
    },
    "ThingTypeDescription": {
      "max": 2028,
      "pattern": "[\\p{Graph}\\x20]*",
      "type": "string"
    },
    "ThingTypeId": {
      "type": "string"
    },
    "ThingTypeList": {
      "member": {
        "shape": "ThingTypeDefinition"
      },
      "type": "list"
    },
    "ThingTypeMetadata": {
      "documentation": "<p>The ThingTypeMetadata contains additional information about the thing type including: creation date and time, a value indicating whether the thing type is deprecated, and a date and time when time was deprecated.</p>",
      "members": {
        "creationDate": {
          "documentation": "<p>The date and time when the thing type was created.</p>",
          "shape": "CreationDate"
        },
        "deprecated": {
          "documentation": "<p>Whether the thing type is deprecated. If <b>true</b>, no new things could be associated with this type.</p>",
          "shape": "Boolean"
        },
        "deprecationDate": {
          "documentation": "<p>The date and time when the thing type was deprecated.</p>",
          "shape": "DeprecationDate"
        }
      },
      "type": "structure"
    },
    "ThingTypeName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9:_-]+",
      "type": "string"
    },
    "ThingTypeProperties": {
      "documentation": "<p>The ThingTypeProperties contains information about the thing type including: a thing type description, and a list of searchable thing attribute names.</p>",
      "members": {
        "searchableAttributes": {
          "documentation": "<p>A list of searchable thing attribute names.</p>",
          "shape": "SearchableAttributes"
        },
        "thingTypeDescription": {
          "documentation": "<p>The description of the thing type.</p>",
          "shape": "ThingTypeDescription"
        }
      },
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "<p>The rate exceeds the limit.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "TimedOutThings": {
      "type": "integer"
    },
    "TimeoutConfig": {
      "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.</p>",
      "members": {
        "inProgressTimeoutInMinutes": {
          "documentation": "<p>Specifies the amount of time, in minutes, this device has to finish execution of this job. The timeout interval can be anywhere between 1 minute and 7 days (1 to 10080 minutes). The in progress timer can't be updated and will apply to all job executions for the job. Whenever a job execution remains in the IN_PROGRESS status for longer than this interval, the job execution will fail and switch to the terminal <code>TIMED_OUT</code> status.</p>",
          "shape": "InProgressTimeoutInMinutes"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TimestreamAction": {
      "documentation": "<p>The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html\">Timestream</a> topic rule action documentation.</p>",
      "members": {
        "databaseName": {
          "documentation": "<p>The name of an Amazon Timestream database.</p>",
          "shape": "TimestreamDatabaseName"
        },
        "dimensions": {
          "documentation": "<p>Metadata attributes of the time series that are written in each measure record.</p>",
          "shape": "TimestreamDimensionList"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the role that grants permission to write to the Amazon Timestream database table.</p>",
          "shape": "AwsArn"
        },
        "tableName": {
          "documentation": "<p>The name of the database table into which to write the measure records.</p>",
          "shape": "TimestreamTableName"
        },
        "timestamp": {
          "documentation": "<p>Specifies an application-defined value to replace the default value assigned to the Timestream record's timestamp in the <code>time</code> column.</p> <p>You can use this property to specify the value and the precision of the Timestream record's timestamp. You can specify a value from the message payload or a value computed by a substitution template.</p> <p>If omitted, the topic rule action assigns the timestamp, in milliseconds, at the time it processed the rule. </p>",
          "shape": "TimestreamTimestamp"
        }
      },
      "required": [
        "roleArn",
        "databaseName",
        "tableName",
        "dimensions"
      ],
      "type": "structure"
    },
    "TimestreamDatabaseName": {
      "type": "string"
    },
    "TimestreamDimension": {
      "documentation": "<p>Metadata attributes of the time series that are written in each measure record.</p>",
      "members": {
        "name": {
          "documentation": "<p>The metadata dimension name. This is the name of the column in the Amazon Timestream database table record.</p> <p>Dimensions cannot be named: <code>measure_name</code>, <code>measure_value</code>, or <code>time</code>. These names are reserved. Dimension names cannot start with <code>ts_</code> or <code>measure_value</code> and they cannot contain the colon (<code>:</code>) character.</p>",
          "shape": "TimestreamDimensionName"
        },
        "value": {
          "documentation": "<p>The value to write in this column of the database record.</p>",
          "shape": "TimestreamDimensionValue"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "structure"
    },
    "TimestreamDimensionList": {
      "max": 128,
      "member": {
        "shape": "TimestreamDimension"
      },
      "min": 1,
      "type": "list"
    },
    "TimestreamDimensionName": {
      "type": "string"
    },
    "TimestreamDimensionValue": {
      "type": "string"
    },
    "TimestreamTableName": {
      "type": "string"
    },
    "TimestreamTimestamp": {
      "documentation": "<p>Describes how to interpret an application-defined timestamp value from an MQTT message payload and the precision of that value.</p>",
      "members": {
        "unit": {
          "documentation": "<p>The precision of the timestamp value that results from the expression described in <code>value</code>.</p> <p>Valid values: <code>SECONDS</code> | <code>MILLISECONDS</code> | <code>MICROSECONDS</code> | <code>NANOSECONDS</code>. The default is <code>MILLISECONDS</code>.</p>",
          "shape": "TimestreamTimestampUnit"
        },
        "value": {
          "documentation": "<p>An expression that returns a long epoch time value.</p>",
          "shape": "TimestreamTimestampValue"
        }
      },
      "required": [
        "value",
        "unit"
      ],
      "type": "structure"
    },
    "TimestreamTimestampUnit": {
      "type": "string"
    },
    "TimestreamTimestampValue": {
      "type": "string"
    },
    "TinyMaxResults": {
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "TlsContext": {
      "documentation": "<p>Specifies the TLS context to use for the test authorizer request.</p>",
      "members": {
        "serverName": {
          "documentation": "<p>The value of the <code>serverName</code> key in a TLS authorization request.</p>",
          "shape": "ServerName"
        }
      },
      "type": "structure"
    },
    "Token": {
      "max": 6144,
      "min": 1,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "TokenKeyName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string"
    },
    "TokenSignature": {
      "max": 2560,
      "min": 1,
      "pattern": "[A-Za-z0-9+/]+={0,2}",
      "type": "string"
    },
    "Topic": {
      "type": "string"
    },
    "TopicPattern": {
      "type": "string"
    },
    "TopicRule": {
      "documentation": "<p>Describes a rule.</p>",
      "members": {
        "actions": {
          "documentation": "<p>The actions associated with the rule.</p>",
          "shape": "ActionList"
        },
        "awsIotSqlVersion": {
          "documentation": "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "shape": "AwsIotSqlVersion"
        },
        "createdAt": {
          "documentation": "<p>The date and time the rule was created.</p>",
          "shape": "CreatedAtDate"
        },
        "description": {
          "documentation": "<p>The description of the rule.</p>",
          "shape": "Description"
        },
        "errorAction": {
          "documentation": "<p>The action to perform when an error occurs.</p>",
          "shape": "Action"
        },
        "ruleDisabled": {
          "documentation": "<p>Specifies whether the rule is disabled.</p>",
          "shape": "IsDisabled"
        },
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "shape": "RuleName"
        },
        "sql": {
          "documentation": "<p>The SQL statement used to query the topic. When using a SQL query with multiple lines, be sure to escape the newline characters.</p>",
          "shape": "SQL"
        }
      },
      "type": "structure"
    },
    "TopicRuleDestination": {
      "documentation": "<p>A topic rule destination.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The topic rule destination URL.</p>",
          "shape": "AwsArn"
        },
        "createdAt": {
          "documentation": "<p>The date and time when the topic rule destination was created.</p>",
          "shape": "CreatedAtDate"
        },
        "httpUrlProperties": {
          "documentation": "<p>Properties of the HTTP URL.</p>",
          "shape": "HttpUrlDestinationProperties"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The date and time when the topic rule destination was last updated.</p>",
          "shape": "LastUpdatedAtDate"
        },
        "status": {
          "documentation": "<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>",
          "shape": "TopicRuleDestinationStatus"
        },
        "statusReason": {
          "documentation": "<p>Additional details or reason why the topic rule destination is in the current status.</p>",
          "shape": "String"
        },
        "vpcProperties": {
          "documentation": "<p>Properties of the virtual private cloud (VPC) connection.</p>",
          "shape": "VpcDestinationProperties"
        }
      },
      "type": "structure"
    },
    "TopicRuleDestinationConfiguration": {
      "documentation": "<p>Configuration of the topic rule destination.</p>",
      "members": {
        "httpUrlConfiguration": {
          "documentation": "<p>Configuration of the HTTP URL.</p>",
          "shape": "HttpUrlDestinationConfiguration"
        },
        "vpcConfiguration": {
          "documentation": "<p>Configuration of the virtual private cloud (VPC) connection.</p>",
          "shape": "VpcDestinationConfiguration"
        }
      },
      "type": "structure"
    },
    "TopicRuleDestinationMaxResults": {
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "TopicRuleDestinationStatus": {
      "enum": [
        "ENABLED",
        "IN_PROGRESS",
        "DISABLED",
        "ERROR",
        "DELETING"
      ],
      "type": "string"
    },
    "TopicRuleDestinationSummaries": {
      "member": {
        "shape": "TopicRuleDestinationSummary"
      },
      "type": "list"
    },
    "TopicRuleDestinationSummary": {
      "documentation": "<p>Information about the topic rule destination.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The topic rule destination ARN.</p>",
          "shape": "AwsArn"
        },
        "createdAt": {
          "documentation": "<p>The date and time when the topic rule destination was created.</p>",
          "shape": "CreatedAtDate"
        },
        "httpUrlSummary": {
          "documentation": "<p>Information about the HTTP URL.</p>",
          "shape": "HttpUrlDestinationSummary"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The date and time when the topic rule destination was last updated.</p>",
          "shape": "LastUpdatedAtDate"
        },
        "status": {
          "documentation": "<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>",
          "shape": "TopicRuleDestinationStatus"
        },
        "statusReason": {
          "documentation": "<p>The reason the topic rule destination is in the current status.</p>",
          "shape": "String"
        },
        "vpcDestinationSummary": {
          "documentation": "<p>Information about the virtual private cloud (VPC) connection.</p>",
          "shape": "VpcDestinationSummary"
        }
      },
      "type": "structure"
    },
    "TopicRuleList": {
      "member": {
        "shape": "TopicRuleListItem"
      },
      "type": "list"
    },
    "TopicRuleListItem": {
      "documentation": "<p>Describes a rule.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The date and time the rule was created.</p>",
          "shape": "CreatedAtDate"
        },
        "ruleArn": {
          "documentation": "<p>The rule ARN.</p>",
          "shape": "RuleArn"
        },
        "ruleDisabled": {
          "documentation": "<p>Specifies whether the rule is disabled.</p>",
          "shape": "IsDisabled"
        },
        "ruleName": {
          "documentation": "<p>The name of the rule.</p>",
          "shape": "RuleName"
        },
        "topicPattern": {
          "documentation": "<p>The pattern for the topic names that apply.</p>",
          "shape": "TopicPattern"
        }
      },
      "type": "structure"
    },
    "TopicRuleMaxResults": {
      "max": 10000,
      "min": 1,
      "type": "integer"
    },
    "TopicRulePayload": {
      "documentation": "<p>Describes a rule.</p>",
      "members": {
        "actions": {
          "documentation": "<p>The actions associated with the rule.</p>",
          "shape": "ActionList"
        },
        "awsIotSqlVersion": {
          "documentation": "<p>The version of the SQL rules engine to use when evaluating the rule.</p>",
          "shape": "AwsIotSqlVersion"
        },
        "description": {
          "documentation": "<p>The description of the rule.</p>",
          "shape": "Description"
        },
        "errorAction": {
          "documentation": "<p>The action to take when an error occurs.</p>",
          "shape": "Action"
        },
        "ruleDisabled": {
          "documentation": "<p>Specifies whether the rule is disabled.</p>",
          "shape": "IsDisabled"
        },
        "sql": {
          "documentation": "<p>The SQL statement used to query the topic. For more information, see <a href=\"https://docs.aws.amazon.com/iot/latest/developerguide/iot-sql-reference.html\">IoT SQL Reference</a> in the <i>IoT Developer Guide</i>.</p>",
          "shape": "SQL"
        }
      },
      "required": [
        "sql",
        "actions"
      ],
      "type": "structure"
    },
    "TotalChecksCount": {
      "type": "integer"
    },
    "TotalFindingsCount": {
      "type": "long"
    },
    "TotalResourcesCount": {
      "type": "long"
    },
    "TransferAlreadyCompletedException": {
      "documentation": "<p>You can't revert the certificate transfer because the transfer is already complete.</p>",
      "error": {
        "httpStatusCode": 410
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "TransferCertificateRequest": {
      "documentation": "<p>The input for the TransferCertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        },
        "targetAwsAccount": {
          "documentation": "<p>The Amazon Web Services account.</p>",
          "location": "querystring",
          "locationName": "targetAwsAccount",
          "shape": "AwsAccountId"
        },
        "transferMessage": {
          "documentation": "<p>The transfer message.</p>",
          "shape": "Message"
        }
      },
      "required": [
        "certificateId",
        "targetAwsAccount"
      ],
      "type": "structure"
    },
    "TransferCertificateResponse": {
      "documentation": "<p>The output from the TransferCertificate operation.</p>",
      "members": {
        "transferredCertificateArn": {
          "documentation": "<p>The ARN of the certificate.</p>",
          "shape": "CertificateArn"
        }
      },
      "type": "structure"
    },
    "TransferConflictException": {
      "documentation": "<p>You can't transfer the certificate because authorization policies are still attached.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "TransferData": {
      "documentation": "<p>Data used to transfer a certificate to an Amazon Web Services account.</p>",
      "members": {
        "acceptDate": {
          "documentation": "<p>The date the transfer was accepted.</p>",
          "shape": "DateType"
        },
        "rejectDate": {
          "documentation": "<p>The date the transfer was rejected.</p>",
          "shape": "DateType"
        },
        "rejectReason": {
          "documentation": "<p>The reason why the transfer was rejected.</p>",
          "shape": "Message"
        },
        "transferDate": {
          "documentation": "<p>The date the transfer took place.</p>",
          "shape": "DateType"
        },
        "transferMessage": {
          "documentation": "<p>The transfer message.</p>",
          "shape": "Message"
        }
      },
      "type": "structure"
    },
    "UnauthorizedException": {
      "documentation": "<p>You are not authorized to perform this operation.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "UndoDeprecate": {
      "type": "boolean"
    },
    "UnsignedLong": {
      "min": 0,
      "type": "long"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "ResourceArn"
        },
        "tagKeys": {
          "documentation": "<p>A list of the keys of the tags to be removed from the resource.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAccountAuditConfigurationRequest": {
      "members": {
        "auditCheckConfigurations": {
          "documentation": "<p>Specifies which audit checks are enabled and disabled for this account. Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are currently enabled.</p> <p>Some data collection might start immediately when certain checks are enabled. When a check is disabled, any data collected so far in relation to the check is deleted.</p> <p>You cannot disable a check if it's used by any scheduled audit. You must first delete the check from the scheduled audit or delete the scheduled audit itself.</p> <p>On the first call to <code>UpdateAccountAuditConfiguration</code>, this parameter is required and must specify at least one enabled check.</p>",
          "shape": "AuditCheckConfigurations"
        },
        "auditNotificationTargetConfigurations": {
          "documentation": "<p>Information about the targets to which audit notifications are sent.</p>",
          "shape": "AuditNotificationTargetConfigurations"
        },
        "roleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the role that grants permission to IoT to access information about your devices, policies, certificates, and other items as required when performing an audit.</p>",
          "shape": "RoleArn"
        }
      },
      "type": "structure"
    },
    "UpdateAccountAuditConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAuditSuppressionRequest": {
      "members": {
        "checkName": {
          "shape": "AuditCheckName"
        },
        "description": {
          "documentation": "<p> The description of the audit suppression. </p>",
          "shape": "AuditDescription"
        },
        "expirationDate": {
          "documentation": "<p> The expiration date (epoch timestamp in seconds) that you want the suppression to adhere to. </p>",
          "shape": "Timestamp"
        },
        "resourceIdentifier": {
          "shape": "ResourceIdentifier"
        },
        "suppressIndefinitely": {
          "documentation": "<p> Indicates whether a suppression should exist indefinitely or not. </p>",
          "shape": "SuppressIndefinitely"
        }
      },
      "required": [
        "checkName",
        "resourceIdentifier"
      ],
      "type": "structure"
    },
    "UpdateAuditSuppressionResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAuthorizerRequest": {
      "members": {
        "authorizerFunctionArn": {
          "documentation": "<p>The ARN of the authorizer's Lambda function.</p>",
          "shape": "AuthorizerFunctionArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "location": "uri",
          "locationName": "authorizerName",
          "shape": "AuthorizerName"
        },
        "enableCachingForHttp": {
          "documentation": "<p>When <code>true</code>, the result from the authorizer\u2019s Lambda function is cached for the time specified in <code>refreshAfterInSeconds</code>. The cached result is used while the device reuses the same HTTP connection.</p>",
          "shape": "EnableCachingForHttp"
        },
        "status": {
          "documentation": "<p>The status of the update authorizer request.</p>",
          "shape": "AuthorizerStatus"
        },
        "tokenKeyName": {
          "documentation": "<p>The key used to extract the token from the HTTP headers. </p>",
          "shape": "TokenKeyName"
        },
        "tokenSigningPublicKeys": {
          "documentation": "<p>The public keys used to verify the token signature.</p>",
          "shape": "PublicKeyMap"
        }
      },
      "required": [
        "authorizerName"
      ],
      "type": "structure"
    },
    "UpdateAuthorizerResponse": {
      "members": {
        "authorizerArn": {
          "documentation": "<p>The authorizer ARN.</p>",
          "shape": "AuthorizerArn"
        },
        "authorizerName": {
          "documentation": "<p>The authorizer name.</p>",
          "shape": "AuthorizerName"
        }
      },
      "type": "structure"
    },
    "UpdateBillingGroupRequest": {
      "members": {
        "billingGroupName": {
          "documentation": "<p>The name of the billing group.</p>",
          "location": "uri",
          "locationName": "billingGroupName",
          "shape": "BillingGroupName"
        },
        "billingGroupProperties": {
          "documentation": "<p>The properties of the billing group.</p>",
          "shape": "BillingGroupProperties"
        },
        "expectedVersion": {
          "documentation": "<p>The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "shape": "OptionalVersion"
        }
      },
      "required": [
        "billingGroupName",
        "billingGroupProperties"
      ],
      "type": "structure"
    },
    "UpdateBillingGroupResponse": {
      "members": {
        "version": {
          "documentation": "<p>The latest version of the billing group.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateCACertificateParams": {
      "documentation": "<p>Parameters to define a mitigation action that changes the state of the CA certificate to inactive.</p>",
      "members": {
        "action": {
          "documentation": "<p>The action that you want to apply to the CA certificate. The only supported value is <code>DEACTIVATE</code>.</p>",
          "shape": "CACertificateUpdateAction"
        }
      },
      "required": [
        "action"
      ],
      "type": "structure"
    },
    "UpdateCACertificateRequest": {
      "documentation": "<p>The input to the UpdateCACertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The CA certificate identifier.</p>",
          "location": "uri",
          "locationName": "caCertificateId",
          "shape": "CertificateId"
        },
        "newAutoRegistrationStatus": {
          "documentation": "<p>The new value for the auto registration status. Valid values are: \"ENABLE\" or \"DISABLE\".</p>",
          "location": "querystring",
          "locationName": "newAutoRegistrationStatus",
          "shape": "AutoRegistrationStatus"
        },
        "newStatus": {
          "documentation": "<p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "location": "querystring",
          "locationName": "newStatus",
          "shape": "CACertificateStatus"
        },
        "registrationConfig": {
          "documentation": "<p>Information about the registration configuration.</p>",
          "shape": "RegistrationConfig"
        },
        "removeAutoRegistration": {
          "documentation": "<p>If true, removes auto registration.</p>",
          "shape": "RemoveAutoRegistration"
        }
      },
      "required": [
        "certificateId"
      ],
      "type": "structure"
    },
    "UpdateCertificateRequest": {
      "documentation": "<p>The input for the UpdateCertificate operation.</p>",
      "members": {
        "certificateId": {
          "documentation": "<p>The ID of the certificate. (The last part of the certificate ARN contains the certificate ID.)</p>",
          "location": "uri",
          "locationName": "certificateId",
          "shape": "CertificateId"
        },
        "newStatus": {
          "documentation": "<p>The new status.</p> <p> <b>Note:</b> Setting the status to PENDING_TRANSFER or PENDING_ACTIVATION will result in an exception being thrown. PENDING_TRANSFER and PENDING_ACTIVATION are statuses used internally by IoT. They are not intended for developer use.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>",
          "location": "querystring",
          "locationName": "newStatus",
          "shape": "CertificateStatus"
        }
      },
      "required": [
        "certificateId",
        "newStatus"
      ],
      "type": "structure"
    },
    "UpdateCustomMetricRequest": {
      "members": {
        "displayName": {
          "documentation": "<p> Field represents a friendly name in the console for the custom metric, it doesn't have to be unique. Don't use this name as the metric identifier in the device metric report. Can be updated. </p>",
          "shape": "CustomMetricDisplayName"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric. Cannot be updated. </p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "MetricName"
        }
      },
      "required": [
        "metricName",
        "displayName"
      ],
      "type": "structure"
    },
    "UpdateCustomMetricResponse": {
      "members": {
        "creationDate": {
          "documentation": "<p> The creation date of the custom metric in milliseconds since epoch. </p>",
          "shape": "Timestamp"
        },
        "displayName": {
          "documentation": "<p> A friendly name in the console for the custom metric </p>",
          "shape": "CustomMetricDisplayName"
        },
        "lastModifiedDate": {
          "documentation": "<p> The time the custom metric was last modified in milliseconds since epoch. </p>",
          "shape": "Timestamp"
        },
        "metricArn": {
          "documentation": "<p> The Amazon Resource Number (ARN) of the custom metric. </p>",
          "shape": "CustomMetricArn"
        },
        "metricName": {
          "documentation": "<p> The name of the custom metric. </p>",
          "shape": "MetricName"
        },
        "metricType": {
          "documentation": "<p> The type of the custom metric. </p> <important> <p>The type <code>number</code> only takes a single metric value as an input, but while submitting the metrics value in the DeviceMetrics report, it must be passed as an array with a single value.</p> </important>",
          "shape": "CustomMetricType"
        }
      },
      "type": "structure"
    },
    "UpdateDeviceCertificateParams": {
      "documentation": "<p>Parameters to define a mitigation action that changes the state of the device certificate to inactive.</p>",
      "members": {
        "action": {
          "documentation": "<p>The action that you want to apply to the device certificate. The only supported value is <code>DEACTIVATE</code>.</p>",
          "shape": "DeviceCertificateUpdateAction"
        }
      },
      "required": [
        "action"
      ],
      "type": "structure"
    },
    "UpdateDimensionRequest": {
      "members": {
        "name": {
          "documentation": "<p>A unique identifier for the dimension. Choose something that describes the type and value to make it easy to remember what it does.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "DimensionName"
        },
        "stringValues": {
          "documentation": "<p>Specifies the value or list of values for the dimension. For <code>TOPIC_FILTER</code> dimensions, this is a pattern used to match the MQTT topic (for example, \"admin/#\").</p>",
          "shape": "DimensionStringValues"
        }
      },
      "required": [
        "name",
        "stringValues"
      ],
      "type": "structure"
    },
    "UpdateDimensionResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN)of the created dimension.</p>",
          "shape": "DimensionArn"
        },
        "creationDate": {
          "documentation": "<p>The date and time, in milliseconds since epoch, when the dimension was initially created.</p>",
          "shape": "Timestamp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The date and time, in milliseconds since epoch, when the dimension was most recently updated.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>A unique identifier for the dimension.</p>",
          "shape": "DimensionName"
        },
        "stringValues": {
          "documentation": "<p>The value or list of values used to scope the dimension. For example, for topic filters, this is the pattern used to match the MQTT topic name.</p>",
          "shape": "DimensionStringValues"
        },
        "type": {
          "documentation": "<p>The type of the dimension.</p>",
          "shape": "DimensionType"
        }
      },
      "type": "structure"
    },
    "UpdateDomainConfigurationRequest": {
      "members": {
        "authorizerConfig": {
          "documentation": "<p>An object that specifies the authorization service for a domain.</p>",
          "shape": "AuthorizerConfig"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration to be updated.</p>",
          "location": "uri",
          "locationName": "domainConfigurationName",
          "shape": "ReservedDomainConfigurationName"
        },
        "domainConfigurationStatus": {
          "documentation": "<p>The status to which the domain configuration should be updated.</p>",
          "shape": "DomainConfigurationStatus"
        },
        "removeAuthorizerConfig": {
          "documentation": "<p>Removes the authorization configuration from a domain.</p>",
          "shape": "RemoveAuthorizerConfig"
        }
      },
      "required": [
        "domainConfigurationName"
      ],
      "type": "structure"
    },
    "UpdateDomainConfigurationResponse": {
      "members": {
        "domainConfigurationArn": {
          "documentation": "<p>The ARN of the domain configuration that was updated.</p>",
          "shape": "DomainConfigurationArn"
        },
        "domainConfigurationName": {
          "documentation": "<p>The name of the domain configuration that was updated.</p>",
          "shape": "ReservedDomainConfigurationName"
        }
      },
      "type": "structure"
    },
    "UpdateDynamicThingGroupRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the dynamic thing group to update.</p>",
          "shape": "OptionalVersion"
        },
        "indexName": {
          "documentation": "<p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: <code>AWS_Things</code>.</p> </note>",
          "shape": "IndexName"
        },
        "queryString": {
          "documentation": "<p>The dynamic thing group search query string to update.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: \"2017-09-30\". If not specified, the query version defaults to this value.</p> </note>",
          "shape": "QueryVersion"
        },
        "thingGroupName": {
          "documentation": "<p>The name of the dynamic thing group to update.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        },
        "thingGroupProperties": {
          "documentation": "<p>The dynamic thing group properties to update.</p>",
          "shape": "ThingGroupProperties"
        }
      },
      "required": [
        "thingGroupName",
        "thingGroupProperties"
      ],
      "type": "structure"
    },
    "UpdateDynamicThingGroupResponse": {
      "members": {
        "version": {
          "documentation": "<p>The dynamic thing group version.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateEventConfigurationsRequest": {
      "members": {
        "eventConfigurations": {
          "documentation": "<p>The new event configuration values.</p>",
          "shape": "EventConfigurations"
        }
      },
      "type": "structure"
    },
    "UpdateEventConfigurationsResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateFleetMetricRequest": {
      "members": {
        "aggregationField": {
          "documentation": "<p>The field to aggregate.</p>",
          "shape": "AggregationField"
        },
        "aggregationType": {
          "documentation": "<p>The type of the aggregation query.</p>",
          "shape": "AggregationType"
        },
        "description": {
          "documentation": "<p>The description of the fleet metric.</p>",
          "shape": "FleetMetricDescription"
        },
        "expectedVersion": {
          "documentation": "<p>The expected version of the fleet metric record in the registry.</p>",
          "shape": "OptionalVersion"
        },
        "indexName": {
          "documentation": "<p>The name of the index to search.</p>",
          "shape": "IndexName"
        },
        "metricName": {
          "documentation": "<p>The name of the fleet metric to update.</p>",
          "location": "uri",
          "locationName": "metricName",
          "shape": "FleetMetricName"
        },
        "period": {
          "documentation": "<p>The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.</p>",
          "shape": "FleetMetricPeriod"
        },
        "queryString": {
          "documentation": "<p>The search query string.</p>",
          "shape": "QueryString"
        },
        "queryVersion": {
          "documentation": "<p>The version of the query.</p>",
          "shape": "QueryVersion"
        },
        "unit": {
          "documentation": "<p>Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html\">CW metric</a>.</p>",
          "shape": "FleetMetricUnit"
        }
      },
      "required": [
        "metricName",
        "indexName"
      ],
      "type": "structure"
    },
    "UpdateIndexingConfigurationRequest": {
      "members": {
        "thingGroupIndexingConfiguration": {
          "documentation": "<p>Thing group indexing configuration.</p>",
          "shape": "ThingGroupIndexingConfiguration"
        },
        "thingIndexingConfiguration": {
          "documentation": "<p>Thing indexing configuration.</p>",
          "shape": "ThingIndexingConfiguration"
        }
      },
      "type": "structure"
    },
    "UpdateIndexingConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateJobRequest": {
      "members": {
        "abortConfig": {
          "documentation": "<p>Allows you to create criteria to abort a job.</p>",
          "shape": "AbortConfig"
        },
        "description": {
          "documentation": "<p>A short text description of the job.</p>",
          "shape": "JobDescription"
        },
        "jobExecutionsRetryConfig": {
          "documentation": "<p>Allows you to create the criteria to retry a job.</p>",
          "shape": "JobExecutionsRetryConfig"
        },
        "jobExecutionsRolloutConfig": {
          "documentation": "<p>Allows you to create a staged rollout of the job.</p>",
          "shape": "JobExecutionsRolloutConfig"
        },
        "jobId": {
          "documentation": "<p>The ID of the job to be updated.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "JobId"
        },
        "namespaceId": {
          "documentation": "<p>The namespace used to indicate that a job is a customer-managed job.</p> <p>When you specify a value for this parameter, Amazon Web Services IoT Core sends jobs notifications to MQTT topics that contain the value in the following format.</p> <p> <code>$aws/things/<i>THING_NAME</i>/jobs/<i>JOB_ID</i>/notify-namespace-<i>NAMESPACE_ID</i>/</code> </p> <note> <p>The <code>namespaceId</code> feature is in public preview.</p> </note>",
          "location": "querystring",
          "locationName": "namespaceId",
          "shape": "NamespaceId"
        },
        "presignedUrlConfig": {
          "documentation": "<p>Configuration information for pre-signed S3 URLs.</p>",
          "shape": "PresignedUrlConfig"
        },
        "timeoutConfig": {
          "documentation": "<p>Specifies the amount of time each device has to finish its execution of the job. The timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the time expires, it will be automatically set to <code>TIMED_OUT</code>. </p>",
          "shape": "TimeoutConfig"
        }
      },
      "required": [
        "jobId"
      ],
      "type": "structure"
    },
    "UpdateMitigationActionRequest": {
      "members": {
        "actionName": {
          "documentation": "<p>The friendly name for the mitigation action. You cannot change the name by using <code>UpdateMitigationAction</code>. Instead, you must delete and recreate the mitigation action with the new name.</p>",
          "location": "uri",
          "locationName": "actionName",
          "shape": "MitigationActionName"
        },
        "actionParams": {
          "documentation": "<p>Defines the type of action and the parameters for that action.</p>",
          "shape": "MitigationActionParams"
        },
        "roleArn": {
          "documentation": "<p>The ARN of the IAM role that is used to apply the mitigation action.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "actionName"
      ],
      "type": "structure"
    },
    "UpdateMitigationActionResponse": {
      "members": {
        "actionArn": {
          "documentation": "<p>The ARN for the new mitigation action.</p>",
          "shape": "MitigationActionArn"
        },
        "actionId": {
          "documentation": "<p>A unique identifier for the mitigation action.</p>",
          "shape": "MitigationActionId"
        }
      },
      "type": "structure"
    },
    "UpdateProvisioningTemplateRequest": {
      "members": {
        "defaultVersionId": {
          "documentation": "<p>The ID of the default provisioning template version.</p>",
          "shape": "TemplateVersionId"
        },
        "description": {
          "documentation": "<p>The description of the provisioning template.</p>",
          "shape": "TemplateDescription"
        },
        "enabled": {
          "documentation": "<p>True to enable the provisioning template, otherwise false.</p>",
          "shape": "Enabled"
        },
        "preProvisioningHook": {
          "documentation": "<p>Updates the pre-provisioning hook template. Only supports template of type <code>FLEET_PROVISIONING</code>. For more information about provisioning template types, see <a href=\"https://docs.aws.amazon.com/iot/latest/apireference/API_CreateProvisioningTemplate.html#iot-CreateProvisioningTemplate-request-type\">type</a>.</p>",
          "shape": "ProvisioningHook"
        },
        "provisioningRoleArn": {
          "documentation": "<p>The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.</p>",
          "shape": "RoleArn"
        },
        "removePreProvisioningHook": {
          "documentation": "<p>Removes pre-provisioning hook template.</p>",
          "shape": "RemoveHook"
        },
        "templateName": {
          "documentation": "<p>The name of the provisioning template.</p>",
          "location": "uri",
          "locationName": "templateName",
          "shape": "TemplateName"
        }
      },
      "required": [
        "templateName"
      ],
      "type": "structure"
    },
    "UpdateProvisioningTemplateResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateRoleAliasRequest": {
      "members": {
        "credentialDurationSeconds": {
          "documentation": "<p>The number of seconds the credential will be valid.</p> <p>This value must be less than or equal to the maximum session duration of the IAM role that the role alias references.</p>",
          "shape": "CredentialDurationSeconds"
        },
        "roleAlias": {
          "documentation": "<p>The role alias to update.</p>",
          "location": "uri",
          "locationName": "roleAlias",
          "shape": "RoleAlias"
        },
        "roleArn": {
          "documentation": "<p>The role ARN.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "roleAlias"
      ],
      "type": "structure"
    },
    "UpdateRoleAliasResponse": {
      "members": {
        "roleAlias": {
          "documentation": "<p>The role alias.</p>",
          "shape": "RoleAlias"
        },
        "roleAliasArn": {
          "documentation": "<p>The role alias ARN.</p>",
          "shape": "RoleAliasArn"
        }
      },
      "type": "structure"
    },
    "UpdateScheduledAuditRequest": {
      "members": {
        "dayOfMonth": {
          "documentation": "<p>The day of the month on which the scheduled audit takes place. This can be <code>1</code> through <code>31</code> or <code>LAST</code>. This field is required if the <code>frequency</code> parameter is set to <code>MONTHLY</code>. If days 29-31 are specified, and the month does not have that many days, the audit takes place on the \"LAST\" day of the month.</p>",
          "shape": "DayOfMonth"
        },
        "dayOfWeek": {
          "documentation": "<p>The day of the week on which the scheduled audit takes place. This can be one of <code>SUN</code>, <code>MON</code>, <code>TUE</code>, <code>WED</code>, <code>THU</code>, <code>FRI</code>, or <code>SAT</code>. This field is required if the \"frequency\" parameter is set to <code>WEEKLY</code> or <code>BIWEEKLY</code>.</p>",
          "shape": "DayOfWeek"
        },
        "frequency": {
          "documentation": "<p>How often the scheduled audit takes place, either <code>DAILY</code>, <code>WEEKLY</code>, <code>BIWEEKLY</code>, or <code>MONTHLY</code>. The start time of each audit is determined by the system.</p>",
          "shape": "AuditFrequency"
        },
        "scheduledAuditName": {
          "documentation": "<p>The name of the scheduled audit. (Max. 128 chars)</p>",
          "location": "uri",
          "locationName": "scheduledAuditName",
          "shape": "ScheduledAuditName"
        },
        "targetCheckNames": {
          "documentation": "<p>Which checks are performed during the scheduled audit. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)</p>",
          "shape": "TargetAuditCheckNames"
        }
      },
      "required": [
        "scheduledAuditName"
      ],
      "type": "structure"
    },
    "UpdateScheduledAuditResponse": {
      "members": {
        "scheduledAuditArn": {
          "documentation": "<p>The ARN of the scheduled audit.</p>",
          "shape": "ScheduledAuditArn"
        }
      },
      "type": "structure"
    },
    "UpdateSecurityProfileRequest": {
      "members": {
        "additionalMetricsToRetain": {
          "deprecated": true,
          "deprecatedMessage": "Use additionalMetricsToRetainV2.",
          "documentation": "<p> <i>Please use <a>UpdateSecurityProfileRequest$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's <code>behaviors</code>, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>",
          "shape": "AdditionalMetricsToRetainList"
        },
        "additionalMetricsToRetainV2": {
          "documentation": "<p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>",
          "shape": "AdditionalMetricsToRetainV2List"
        },
        "alertTargets": {
          "documentation": "<p>Where the alerts are sent. (Alerts are always sent to the console.)</p>",
          "shape": "AlertTargets"
        },
        "behaviors": {
          "documentation": "<p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>",
          "shape": "Behaviors"
        },
        "deleteAdditionalMetricsToRetain": {
          "documentation": "<p>If true, delete all <code>additionalMetricsToRetain</code> defined for this security profile. If any <code>additionalMetricsToRetain</code> are defined in the current invocation, an exception occurs.</p>",
          "shape": "DeleteAdditionalMetricsToRetain"
        },
        "deleteAlertTargets": {
          "documentation": "<p>If true, delete all <code>alertTargets</code> defined for this security profile. If any <code>alertTargets</code> are defined in the current invocation, an exception occurs.</p>",
          "shape": "DeleteAlertTargets"
        },
        "deleteBehaviors": {
          "documentation": "<p>If true, delete all <code>behaviors</code> defined for this security profile. If any <code>behaviors</code> are defined in the current invocation, an exception occurs.</p>",
          "shape": "DeleteBehaviors"
        },
        "expectedVersion": {
          "documentation": "<p>The expected version of the security profile. A new version is generated whenever the security profile is updated. If you specify a value that is different from the actual version, a <code>VersionConflictException</code> is thrown.</p>",
          "location": "querystring",
          "locationName": "expectedVersion",
          "shape": "OptionalVersion"
        },
        "securityProfileDescription": {
          "documentation": "<p>A description of the security profile.</p>",
          "shape": "SecurityProfileDescription"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the security profile you want to update.</p>",
          "location": "uri",
          "locationName": "securityProfileName",
          "shape": "SecurityProfileName"
        }
      },
      "required": [
        "securityProfileName"
      ],
      "type": "structure"
    },
    "UpdateSecurityProfileResponse": {
      "members": {
        "additionalMetricsToRetain": {
          "deprecated": true,
          "deprecatedMessage": "Use additionalMetricsToRetainV2.",
          "documentation": "<p> <i>Please use <a>UpdateSecurityProfileResponse$additionalMetricsToRetainV2</a> instead.</i> </p> <p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the security profile's <code>behaviors</code>, but it is also retained for any metric specified here.</p>",
          "shape": "AdditionalMetricsToRetainList"
        },
        "additionalMetricsToRetainV2": {
          "documentation": "<p>A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here. Can be used with custom metrics; cannot be used with dimensions.</p>",
          "shape": "AdditionalMetricsToRetainV2List"
        },
        "alertTargets": {
          "documentation": "<p>Where the alerts are sent. (Alerts are always sent to the console.)</p>",
          "shape": "AlertTargets"
        },
        "behaviors": {
          "documentation": "<p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>",
          "shape": "Behaviors"
        },
        "creationDate": {
          "documentation": "<p>The time the security profile was created.</p>",
          "shape": "Timestamp"
        },
        "lastModifiedDate": {
          "documentation": "<p>The time the security profile was last modified.</p>",
          "shape": "Timestamp"
        },
        "securityProfileArn": {
          "documentation": "<p>The ARN of the security profile that was updated.</p>",
          "shape": "SecurityProfileArn"
        },
        "securityProfileDescription": {
          "documentation": "<p>The description of the security profile.</p>",
          "shape": "SecurityProfileDescription"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the security profile that was updated.</p>",
          "shape": "SecurityProfileName"
        },
        "version": {
          "documentation": "<p>The updated version of the security profile.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateStreamRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "files": {
          "documentation": "<p>The files associated with the stream.</p>",
          "shape": "StreamFiles"
        },
        "roleArn": {
          "documentation": "<p>An IAM role that allows the IoT service principal assumes to access your S3 files.</p>",
          "shape": "RoleArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "location": "uri",
          "locationName": "streamId",
          "shape": "StreamId"
        }
      },
      "required": [
        "streamId"
      ],
      "type": "structure"
    },
    "UpdateStreamResponse": {
      "members": {
        "description": {
          "documentation": "<p>A description of the stream.</p>",
          "shape": "StreamDescription"
        },
        "streamArn": {
          "documentation": "<p>The stream ARN.</p>",
          "shape": "StreamArn"
        },
        "streamId": {
          "documentation": "<p>The stream ID.</p>",
          "shape": "StreamId"
        },
        "streamVersion": {
          "documentation": "<p>The stream version.</p>",
          "shape": "StreamVersion"
        }
      },
      "type": "structure"
    },
    "UpdateThingGroupRequest": {
      "members": {
        "expectedVersion": {
          "documentation": "<p>The expected version of the thing group. If this does not match the version of the thing group being updated, the update will fail.</p>",
          "shape": "OptionalVersion"
        },
        "thingGroupName": {
          "documentation": "<p>The thing group to update.</p>",
          "location": "uri",
          "locationName": "thingGroupName",
          "shape": "ThingGroupName"
        },
        "thingGroupProperties": {
          "documentation": "<p>The thing group properties.</p>",
          "shape": "ThingGroupProperties"
        }
      },
      "required": [
        "thingGroupName",
        "thingGroupProperties"
      ],
      "type": "structure"
    },
    "UpdateThingGroupResponse": {
      "members": {
        "version": {
          "documentation": "<p>The version of the updated thing group.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateThingGroupsForThingRequest": {
      "members": {
        "overrideDynamicGroups": {
          "documentation": "<p>Override dynamic thing groups with static thing groups when 10-group limit is reached. If a thing belongs to 10 thing groups, and one or more of those groups are dynamic thing groups, adding a thing to a static group removes the thing from the last dynamic group.</p>",
          "shape": "OverrideDynamicGroups"
        },
        "thingGroupsToAdd": {
          "documentation": "<p>The groups to which the thing will be added.</p>",
          "shape": "ThingGroupList"
        },
        "thingGroupsToRemove": {
          "documentation": "<p>The groups from which the thing will be removed.</p>",
          "shape": "ThingGroupList"
        },
        "thingName": {
          "documentation": "<p>The thing whose group memberships will be updated.</p>",
          "shape": "ThingName"
        }
      },
      "type": "structure"
    },
    "UpdateThingGroupsForThingResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateThingRequest": {
      "documentation": "<p>The input for the UpdateThing operation.</p>",
      "members": {
        "attributePayload": {
          "documentation": "<p>A list of thing attributes, a JSON string containing name-value pairs. For example:</p> <p> <code>{\\\"attributes\\\":{\\\"name1\\\":\\\"value2\\\"}}</code> </p> <p>This data is used to add new attributes or update existing attributes.</p>",
          "shape": "AttributePayload"
        },
        "expectedVersion": {
          "documentation": "<p>The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.</p>",
          "shape": "OptionalVersion"
        },
        "removeThingType": {
          "documentation": "<p>Remove a thing type association. If <b>true</b>, the association is removed.</p>",
          "shape": "RemoveThingType"
        },
        "thingName": {
          "documentation": "<p>The name of the thing to update.</p> <p>You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.</p>",
          "location": "uri",
          "locationName": "thingName",
          "shape": "ThingName"
        },
        "thingTypeName": {
          "documentation": "<p>The name of the thing type.</p>",
          "shape": "ThingTypeName"
        }
      },
      "required": [
        "thingName"
      ],
      "type": "structure"
    },
    "UpdateThingResponse": {
      "documentation": "<p>The output from the UpdateThing operation.</p>",
      "members": {},
      "type": "structure"
    },
    "UpdateTopicRuleDestinationRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the topic rule destination.</p>",
          "shape": "AwsArn"
        },
        "status": {
          "documentation": "<p>The status of the topic rule destination. Valid values are:</p> <dl> <dt>IN_PROGRESS</dt> <dd> <p>A topic rule destination was created but has not been confirmed. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> <dt>ENABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is allowed. You can set <code>status</code> to <code>DISABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>DISABLED</dt> <dd> <p>Confirmation was completed, and traffic to this destination is not allowed. You can set <code>status</code> to <code>ENABLED</code> by calling <code>UpdateTopicRuleDestination</code>.</p> </dd> <dt>ERROR</dt> <dd> <p>Confirmation could not be completed, for example if the confirmation timed out. You can call <code>GetTopicRuleDestination</code> for details about the error. You can set <code>status</code> to <code>IN_PROGRESS</code> by calling <code>UpdateTopicRuleDestination</code>. Calling <code>UpdateTopicRuleDestination</code> causes a new confirmation challenge to be sent to your confirmation endpoint.</p> </dd> </dl>",
          "shape": "TopicRuleDestinationStatus"
        }
      },
      "required": [
        "arn",
        "status"
      ],
      "type": "structure"
    },
    "UpdateTopicRuleDestinationResponse": {
      "members": {},
      "type": "structure"
    },
    "Url": {
      "max": 2000,
      "type": "string"
    },
    "UseBase64": {
      "type": "boolean"
    },
    "Valid": {
      "type": "boolean"
    },
    "ValidateSecurityProfileBehaviorsRequest": {
      "members": {
        "behaviors": {
          "documentation": "<p>Specifies the behaviors that, when violated by a device (thing), cause an alert.</p>",
          "shape": "Behaviors"
        }
      },
      "required": [
        "behaviors"
      ],
      "type": "structure"
    },
    "ValidateSecurityProfileBehaviorsResponse": {
      "members": {
        "valid": {
          "documentation": "<p>True if the behaviors were valid.</p>",
          "shape": "Valid"
        },
        "validationErrors": {
          "documentation": "<p>The list of any errors found in the behaviors.</p>",
          "shape": "ValidationErrors"
        }
      },
      "type": "structure"
    },
    "ValidationError": {
      "documentation": "<p>Information about an error found in a behavior specification.</p>",
      "members": {
        "errorMessage": {
          "documentation": "<p>The description of an error found in the behaviors.</p>",
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ValidationErrors": {
      "member": {
        "shape": "ValidationError"
      },
      "type": "list"
    },
    "Value": {
      "max": 4096,
      "min": 0,
      "pattern": "[\\s\\S]*",
      "type": "string"
    },
    "Variance": {
      "type": "double"
    },
    "VerificationState": {
      "enum": [
        "FALSE_POSITIVE",
        "BENIGN_POSITIVE",
        "TRUE_POSITIVE",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "VerificationStateDescription": {
      "max": 1000,
      "pattern": "[^\\p{Cntrl}]*",
      "type": "string"
    },
    "Version": {
      "type": "long"
    },
    "VersionConflictException": {
      "documentation": "<p>An exception thrown when the version of an entity specified with the <code>expectedVersion</code> parameter does not match the latest version in the system.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "VersionNumber": {
      "type": "long"
    },
    "VersionsLimitExceededException": {
      "documentation": "<p>The number of policy versions exceeds the limit.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>The message for the exception.</p>",
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ViolationEvent": {
      "documentation": "<p>Information about a Device Defender security profile behavior violation.</p>",
      "members": {
        "behavior": {
          "documentation": "<p>The behavior that was violated.</p>",
          "shape": "Behavior"
        },
        "metricValue": {
          "documentation": "<p>The value of the metric (the measurement).</p>",
          "shape": "MetricValue"
        },
        "securityProfileName": {
          "documentation": "<p>The name of the security profile whose behavior was violated.</p>",
          "shape": "SecurityProfileName"
        },
        "thingName": {
          "documentation": "<p>The name of the thing responsible for the violation event.</p>",
          "shape": "DeviceDefenderThingName"
        },
        "verificationState": {
          "documentation": "<p>The verification state of the violation (detect alarm).</p>",
          "shape": "VerificationState"
        },
        "verificationStateDescription": {
          "documentation": "<p>The description of the verification state of the violation.</p>",
          "shape": "VerificationStateDescription"
        },
        "violationEventAdditionalInfo": {
          "documentation": "<p> The details of a violation event. </p>",
          "shape": "ViolationEventAdditionalInfo"
        },
        "violationEventTime": {
          "documentation": "<p>The time the violation event occurred.</p>",
          "shape": "Timestamp"
        },
        "violationEventType": {
          "documentation": "<p>The type of violation event.</p>",
          "shape": "ViolationEventType"
        },
        "violationId": {
          "documentation": "<p>The ID of the violation event.</p>",
          "shape": "ViolationId"
        }
      },
      "type": "structure"
    },
    "ViolationEventAdditionalInfo": {
      "documentation": "<p> The details of a violation event. </p>",
      "members": {
        "confidenceLevel": {
          "documentation": "<p> The sensitivity of anomalous behavior evaluation. Can be <code>Low</code>, <code>Medium</code>, or <code>High</code>. </p>",
          "shape": "ConfidenceLevel"
        }
      },
      "type": "structure"
    },
    "ViolationEventOccurrenceRange": {
      "documentation": "<p> Specifies the time period of which violation events occurred between. </p>",
      "members": {
        "endTime": {
          "documentation": "<p> The end date and time of a time period in which violation events occurred. </p>",
          "shape": "Timestamp"
        },
        "startTime": {
          "documentation": "<p> The start date and time of a time period in which violation events occurred. </p>",
          "shape": "Timestamp"
        }
      },
      "required": [
        "startTime",
        "endTime"
      ],
      "type": "structure"
    },
    "ViolationEventType": {
      "enum": [
        "in-alarm",
        "alarm-cleared",
        "alarm-invalidated"
      ],
      "type": "string"
    },
    "ViolationEvents": {
      "member": {
        "shape": "ViolationEvent"
      },
      "type": "list"
    },
    "ViolationId": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9\\-]+",
      "type": "string"
    },
    "VpcDestinationConfiguration": {
      "documentation": "<p>The configuration information for a virtual private cloud (VPC) destination.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>",
          "shape": "AwsArn"
        },
        "securityGroups": {
          "documentation": "<p>The security groups of the VPC destination.</p>",
          "shape": "SecurityGroupList"
        },
        "subnetIds": {
          "documentation": "<p>The subnet IDs of the VPC destination.</p>",
          "shape": "SubnetIdList"
        },
        "vpcId": {
          "documentation": "<p>The ID of the VPC.</p>",
          "shape": "VpcId"
        }
      },
      "required": [
        "subnetIds",
        "vpcId",
        "roleArn"
      ],
      "type": "structure"
    },
    "VpcDestinationProperties": {
      "documentation": "<p>The properties of a virtual private cloud (VPC) destination.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>",
          "shape": "AwsArn"
        },
        "securityGroups": {
          "documentation": "<p>The security groups of the VPC destination.</p>",
          "shape": "SecurityGroupList"
        },
        "subnetIds": {
          "documentation": "<p>The subnet IDs of the VPC destination.</p>",
          "shape": "SubnetIdList"
        },
        "vpcId": {
          "documentation": "<p>The ID of the VPC.</p>",
          "shape": "VpcId"
        }
      },
      "type": "structure"
    },
    "VpcDestinationSummary": {
      "documentation": "<p>The summary of a virtual private cloud (VPC) destination.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>The ARN of a role that has permission to create and attach to elastic network interfaces (ENIs).</p>",
          "shape": "AwsArn"
        },
        "securityGroups": {
          "documentation": "<p>The security groups of the VPC destination.</p>",
          "shape": "SecurityGroupList"
        },
        "subnetIds": {
          "documentation": "<p>The subnet IDs of the VPC destination.</p>",
          "shape": "SubnetIdList"
        },
        "vpcId": {
          "documentation": "<p>The ID of the VPC.</p>",
          "shape": "VpcId"
        }
      },
      "type": "structure"
    },
    "VpcId": {
      "type": "string"
    },
    "WaitingForDataCollectionChecksCount": {
      "type": "integer"
    },
    "errorMessage": {
      "type": "string"
    },
    "resourceArn": {
      "type": "string"
    },
    "resourceId": {
      "type": "string"
    },
    "stringValue": {
      "type": "string"
    },
    "usePrefixAttributeValue": {
      "type": "boolean"
    }
  },
  "version": "2.0"
}
