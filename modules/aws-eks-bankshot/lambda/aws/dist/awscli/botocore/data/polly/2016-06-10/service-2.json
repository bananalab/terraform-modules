{
  "documentation": "<p>Amazon Polly is a web service that makes it easy to synthesize speech from text.</p> <p>The Amazon Polly service provides API operations for synthesizing high-quality speech from plain text and Speech Synthesis Markup Language (SSML), along with managing pronunciations lexicons that enable you to get the best results for your application domain.</p>",
  "metadata": {
    "apiVersion": "2016-06-10",
    "endpointPrefix": "polly",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Polly",
    "serviceId": "Polly",
    "signatureVersion": "v4",
    "uid": "polly-2016-06-10"
  },
  "operations": {
    "DeleteLexicon": {
      "documentation": "<p>Deletes the specified pronunciation lexicon stored in an Amazon Web Services Region. A lexicon which has been deleted is not available for speech synthesis, nor is it possible to retrieve it using either the <code>GetLexicon</code> or <code>ListLexicon</code> APIs.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "errors": [
        {
          "shape": "LexiconNotFoundException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/v1/lexicons/{LexiconName}",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteLexiconInput"
      },
      "name": "DeleteLexicon",
      "output": {
        "shape": "DeleteLexiconOutput"
      }
    },
    "DescribeVoices": {
      "documentation": "<p>Returns the list of voices that are available for use when requesting speech synthesis. Each voice speaks a specified language, is either male or female, and is identified by an ID, which is the ASCII version of the voice name. </p> <p>When synthesizing speech ( <code>SynthesizeSpeech</code> ), you provide the voice ID for the voice you want from the list of voices returned by <code>DescribeVoices</code>.</p> <p>For example, you want your news reader application to read news in a specific language, but giving a user the option to choose the voice. Using the <code>DescribeVoices</code> operation you can provide the user with a list of available voices to select from.</p> <p> You can optionally specify a language code to filter the available voices. For example, if you specify <code>en-US</code>, the operation returns a list of all available US English voices. </p> <p>This operation requires permissions to perform the <code>polly:DescribeVoices</code> action.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/voices",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeVoicesInput"
      },
      "name": "DescribeVoices",
      "output": {
        "shape": "DescribeVoicesOutput"
      }
    },
    "GetLexicon": {
      "documentation": "<p>Returns the content of the specified pronunciation lexicon stored in an Amazon Web Services Region. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "errors": [
        {
          "shape": "LexiconNotFoundException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/lexicons/{LexiconName}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetLexiconInput"
      },
      "name": "GetLexicon",
      "output": {
        "shape": "GetLexiconOutput"
      }
    },
    "GetSpeechSynthesisTask": {
      "documentation": "<p>Retrieves a specific SpeechSynthesisTask object based on its TaskID. This object contains information about the given speech synthesis task, including the status of the task, and a link to the S3 bucket containing the output of the task.</p>",
      "errors": [
        {
          "shape": "InvalidTaskIdException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "SynthesisTaskNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/synthesisTasks/{TaskId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSpeechSynthesisTaskInput"
      },
      "name": "GetSpeechSynthesisTask",
      "output": {
        "shape": "GetSpeechSynthesisTaskOutput"
      }
    },
    "ListLexicons": {
      "documentation": "<p>Returns a list of pronunciation lexicons stored in an Amazon Web Services Region. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/lexicons",
        "responseCode": 200
      },
      "input": {
        "shape": "ListLexiconsInput"
      },
      "name": "ListLexicons",
      "output": {
        "shape": "ListLexiconsOutput"
      }
    },
    "ListSpeechSynthesisTasks": {
      "documentation": "<p>Returns a list of SpeechSynthesisTask objects ordered by their creation date. This operation can filter the tasks by their status, for example, allowing users to list only tasks that are completed.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/v1/synthesisTasks",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSpeechSynthesisTasksInput"
      },
      "name": "ListSpeechSynthesisTasks",
      "output": {
        "shape": "ListSpeechSynthesisTasksOutput"
      }
    },
    "PutLexicon": {
      "documentation": "<p>Stores a pronunciation lexicon in an Amazon Web Services Region. If a lexicon with the same name already exists in the region, it is overwritten by the new lexicon. Lexicon operations have eventual consistency, therefore, it might take some time before the lexicon is available to the SynthesizeSpeech operation.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "errors": [
        {
          "shape": "InvalidLexiconException"
        },
        {
          "shape": "UnsupportedPlsAlphabetException"
        },
        {
          "shape": "UnsupportedPlsLanguageException"
        },
        {
          "shape": "LexiconSizeExceededException"
        },
        {
          "shape": "MaxLexemeLengthExceededException"
        },
        {
          "shape": "MaxLexiconsNumberExceededException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/v1/lexicons/{LexiconName}",
        "responseCode": 200
      },
      "input": {
        "shape": "PutLexiconInput"
      },
      "name": "PutLexicon",
      "output": {
        "shape": "PutLexiconOutput"
      }
    },
    "StartSpeechSynthesisTask": {
      "documentation": "<p>Allows the creation of an asynchronous synthesis task, by starting a new <code>SpeechSynthesisTask</code>. This operation requires all the standard information needed for speech synthesis, plus the name of an Amazon S3 bucket for the service to store the output of the synthesis task and two optional parameters (<code>OutputS3KeyPrefix</code> and <code>SnsTopicArn</code>). Once the synthesis task is created, this operation will return a <code>SpeechSynthesisTask</code> object, which will include an identifier of this task as well as the current status. The <code>SpeechSynthesisTask</code> object is available for 72 hours after starting the asynchronous synthesis task.</p>",
      "errors": [
        {
          "shape": "TextLengthExceededException"
        },
        {
          "shape": "InvalidS3BucketException"
        },
        {
          "shape": "InvalidS3KeyException"
        },
        {
          "shape": "InvalidSampleRateException"
        },
        {
          "shape": "InvalidSnsTopicArnException"
        },
        {
          "shape": "InvalidSsmlException"
        },
        {
          "shape": "EngineNotSupportedException"
        },
        {
          "shape": "LexiconNotFoundException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "MarksNotSupportedForFormatException"
        },
        {
          "shape": "SsmlMarksNotSupportedForTextTypeException"
        },
        {
          "shape": "LanguageNotSupportedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/synthesisTasks",
        "responseCode": 200
      },
      "input": {
        "shape": "StartSpeechSynthesisTaskInput"
      },
      "name": "StartSpeechSynthesisTask",
      "output": {
        "shape": "StartSpeechSynthesisTaskOutput"
      }
    },
    "SynthesizeSpeech": {
      "documentation": "<p>Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes. SSML input must be valid, well-formed SSML. Some alphabets might not be available with all the voices (for example, Cyrillic might not be read at all by English voices) unless phoneme mapping is used. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/how-text-to-speech-works.html\">How it Works</a>.</p>",
      "errors": [
        {
          "shape": "TextLengthExceededException"
        },
        {
          "shape": "InvalidSampleRateException"
        },
        {
          "shape": "InvalidSsmlException"
        },
        {
          "shape": "LexiconNotFoundException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "MarksNotSupportedForFormatException"
        },
        {
          "shape": "SsmlMarksNotSupportedForTextTypeException"
        },
        {
          "shape": "LanguageNotSupportedException"
        },
        {
          "shape": "EngineNotSupportedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/v1/speech",
        "responseCode": 200
      },
      "input": {
        "shape": "SynthesizeSpeechInput"
      },
      "name": "SynthesizeSpeech",
      "output": {
        "shape": "SynthesizeSpeechOutput"
      }
    }
  },
  "shapes": {
    "Alphabet": {
      "type": "string"
    },
    "AudioStream": {
      "streaming": true,
      "type": "blob"
    },
    "ContentType": {
      "type": "string"
    },
    "DateTime": {
      "type": "timestamp"
    },
    "DeleteLexiconInput": {
      "members": {
        "Name": {
          "documentation": "<p>The name of the lexicon to delete. Must be an existing lexicon in the region.</p>",
          "location": "uri",
          "locationName": "LexiconName",
          "shape": "LexiconName"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "DeleteLexiconOutput": {
      "members": {},
      "type": "structure"
    },
    "DescribeVoicesInput": {
      "members": {
        "Engine": {
          "documentation": "<p>Specifies the engine (<code>standard</code> or <code>neural</code>) used by Amazon Polly when processing input text for speech synthesis. </p>",
          "location": "querystring",
          "locationName": "Engine",
          "shape": "Engine"
        },
        "IncludeAdditionalLanguageCodes": {
          "documentation": "<p>Boolean value indicating whether to return any bilingual voices that use the specified language as an additional language. For instance, if you request all languages that use US English (es-US), and there is an Italian voice that speaks both Italian (it-IT) and US English, that voice will be included if you specify <code>yes</code> but not if you specify <code>no</code>.</p>",
          "location": "querystring",
          "locationName": "IncludeAdditionalLanguageCodes",
          "shape": "IncludeAdditionalLanguageCodes"
        },
        "LanguageCode": {
          "documentation": "<p> The language identification tag (ISO 639 code for the language name-ISO 3166 country code) for filtering the list of voices returned. If you don't specify this optional parameter, all available voices are returned. </p>",
          "location": "querystring",
          "locationName": "LanguageCode",
          "shape": "LanguageCode"
        },
        "NextToken": {
          "documentation": "<p>An opaque pagination token returned from the previous <code>DescribeVoices</code> operation. If present, this indicates where to continue the listing.</p>",
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeVoicesOutput": {
      "members": {
        "NextToken": {
          "documentation": "<p>The pagination token to use in the next request to continue the listing of voices. <code>NextToken</code> is returned only if the response is truncated.</p>",
          "shape": "NextToken"
        },
        "Voices": {
          "documentation": "<p>A list of voices with their properties.</p>",
          "shape": "VoiceList"
        }
      },
      "type": "structure"
    },
    "Engine": {
      "enum": [
        "standard",
        "neural"
      ],
      "type": "string"
    },
    "EngineList": {
      "member": {
        "shape": "Engine"
      },
      "type": "list"
    },
    "EngineNotSupportedException": {
      "documentation": "<p>This engine is not compatible with the voice that you have designated. Choose a new voice that is compatible with the engine or change the engine and restart the operation.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ErrorMessage": {
      "type": "string"
    },
    "Gender": {
      "enum": [
        "Female",
        "Male"
      ],
      "type": "string"
    },
    "GetLexiconInput": {
      "members": {
        "Name": {
          "documentation": "<p>Name of the lexicon.</p>",
          "location": "uri",
          "locationName": "LexiconName",
          "shape": "LexiconName"
        }
      },
      "required": [
        "Name"
      ],
      "type": "structure"
    },
    "GetLexiconOutput": {
      "members": {
        "Lexicon": {
          "documentation": "<p>Lexicon object that provides name and the string content of the lexicon. </p>",
          "shape": "Lexicon"
        },
        "LexiconAttributes": {
          "documentation": "<p>Metadata of the lexicon, including phonetic alphabetic used, language code, lexicon ARN, number of lexemes defined in the lexicon, and size of lexicon in bytes.</p>",
          "shape": "LexiconAttributes"
        }
      },
      "type": "structure"
    },
    "GetSpeechSynthesisTaskInput": {
      "members": {
        "TaskId": {
          "documentation": "<p>The Amazon Polly generated identifier for a speech synthesis task.</p>",
          "location": "uri",
          "locationName": "TaskId",
          "shape": "TaskId"
        }
      },
      "required": [
        "TaskId"
      ],
      "type": "structure"
    },
    "GetSpeechSynthesisTaskOutput": {
      "members": {
        "SynthesisTask": {
          "documentation": "<p>SynthesisTask object that provides information from the requested task, including output format, creation time, task status, and so on.</p>",
          "shape": "SynthesisTask"
        }
      },
      "type": "structure"
    },
    "IncludeAdditionalLanguageCodes": {
      "type": "boolean"
    },
    "InvalidLexiconException": {
      "documentation": "<p>Amazon Polly can't find the specified lexicon. Verify that the lexicon's name is spelled correctly, and then try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidNextTokenException": {
      "documentation": "<p>The NextToken is invalid. Verify that it's spelled correctly, and then try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidS3BucketException": {
      "documentation": "<p>The provided Amazon S3 bucket name is invalid. Please check your input with S3 bucket naming requirements and try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidS3KeyException": {
      "documentation": "<p>The provided Amazon S3 key prefix is invalid. Please provide a valid S3 object key name.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidSampleRateException": {
      "documentation": "<p>The specified sample rate is not valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidSnsTopicArnException": {
      "documentation": "<p>The provided SNS topic ARN is invalid. Please provide a valid SNS topic ARN and try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidSsmlException": {
      "documentation": "<p>The SSML you provided is invalid. Verify the SSML syntax, spelling of tags and values, and then try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidTaskIdException": {
      "documentation": "<p>The provided Task ID is not valid. Please provide a valid Task ID and try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "LanguageCode": {
      "enum": [
        "arb",
        "cmn-CN",
        "cy-GB",
        "da-DK",
        "de-DE",
        "en-AU",
        "en-GB",
        "en-GB-WLS",
        "en-IN",
        "en-US",
        "es-ES",
        "es-MX",
        "es-US",
        "fr-CA",
        "fr-FR",
        "is-IS",
        "it-IT",
        "ja-JP",
        "hi-IN",
        "ko-KR",
        "nb-NO",
        "nl-NL",
        "pl-PL",
        "pt-BR",
        "pt-PT",
        "ro-RO",
        "ru-RU",
        "sv-SE",
        "tr-TR",
        "en-NZ",
        "en-ZA",
        "ca-ES",
        "de-AT",
        "yue-CN"
      ],
      "type": "string"
    },
    "LanguageCodeList": {
      "member": {
        "shape": "LanguageCode"
      },
      "type": "list"
    },
    "LanguageName": {
      "type": "string"
    },
    "LanguageNotSupportedException": {
      "documentation": "<p>The language specified is not currently supported by Amazon Polly in this capacity.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "LastModified": {
      "type": "timestamp"
    },
    "LexemesCount": {
      "type": "integer"
    },
    "Lexicon": {
      "documentation": "<p>Provides lexicon name and lexicon content in string format. For more information, see <a href=\"https://www.w3.org/TR/pronunciation-lexicon/\">Pronunciation Lexicon Specification (PLS) Version 1.0</a>.</p>",
      "members": {
        "Content": {
          "documentation": "<p>Lexicon content in string format. The content of a lexicon must be in PLS format.</p>",
          "shape": "LexiconContent"
        },
        "Name": {
          "documentation": "<p>Name of the lexicon.</p>",
          "shape": "LexiconName"
        }
      },
      "type": "structure"
    },
    "LexiconArn": {
      "type": "string"
    },
    "LexiconAttributes": {
      "documentation": "<p>Contains metadata describing the lexicon such as the number of lexemes, language code, and so on. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/managing-lexicons.html\">Managing Lexicons</a>.</p>",
      "members": {
        "Alphabet": {
          "documentation": "<p>Phonetic alphabet used in the lexicon. Valid values are <code>ipa</code> and <code>x-sampa</code>.</p>",
          "shape": "Alphabet"
        },
        "LanguageCode": {
          "documentation": "<p>Language code that the lexicon applies to. A lexicon with a language code such as \"en\" would be applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so on.</p>",
          "shape": "LanguageCode"
        },
        "LastModified": {
          "documentation": "<p>Date lexicon was last modified (a timestamp value).</p>",
          "shape": "LastModified"
        },
        "LexemesCount": {
          "documentation": "<p>Number of lexemes in the lexicon.</p>",
          "shape": "LexemesCount"
        },
        "LexiconArn": {
          "documentation": "<p>Amazon Resource Name (ARN) of the lexicon.</p>",
          "shape": "LexiconArn"
        },
        "Size": {
          "documentation": "<p>Total size of the lexicon, in characters.</p>",
          "shape": "Size"
        }
      },
      "type": "structure"
    },
    "LexiconContent": {
      "sensitive": true,
      "type": "string"
    },
    "LexiconDescription": {
      "documentation": "<p>Describes the content of the lexicon.</p>",
      "members": {
        "Attributes": {
          "documentation": "<p>Provides lexicon metadata.</p>",
          "shape": "LexiconAttributes"
        },
        "Name": {
          "documentation": "<p>Name of the lexicon.</p>",
          "shape": "LexiconName"
        }
      },
      "type": "structure"
    },
    "LexiconDescriptionList": {
      "member": {
        "shape": "LexiconDescription"
      },
      "type": "list"
    },
    "LexiconName": {
      "pattern": "[0-9A-Za-z]{1,20}",
      "type": "string"
    },
    "LexiconNameList": {
      "max": 5,
      "member": {
        "shape": "LexiconName"
      },
      "type": "list"
    },
    "LexiconNotFoundException": {
      "documentation": "<p>Amazon Polly can't find the specified lexicon. This could be caused by a lexicon that is missing, its name is misspelled or specifying a lexicon that is in a different region.</p> <p>Verify that the lexicon exists, is in the region (see <a>ListLexicons</a>) and that you spelled its name is spelled correctly. Then try again.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "LexiconSizeExceededException": {
      "documentation": "<p>The maximum size of the specified lexicon would be exceeded by this operation.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "ListLexiconsInput": {
      "members": {
        "NextToken": {
          "documentation": "<p>An opaque pagination token returned from previous <code>ListLexicons</code> operation. If present, indicates where to continue the list of lexicons.</p>",
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListLexiconsOutput": {
      "members": {
        "Lexicons": {
          "documentation": "<p>A list of lexicon names and attributes.</p>",
          "shape": "LexiconDescriptionList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token to use in the next request to continue the listing of lexicons. <code>NextToken</code> is returned only if the response is truncated.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListSpeechSynthesisTasksInput": {
      "members": {
        "MaxResults": {
          "documentation": "<p>Maximum number of speech synthesis tasks returned in a List operation.</p>",
          "location": "querystring",
          "locationName": "MaxResults",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The pagination token to use in the next request to continue the listing of speech synthesis tasks. </p>",
          "location": "querystring",
          "locationName": "NextToken",
          "shape": "NextToken"
        },
        "Status": {
          "documentation": "<p>Status of the speech synthesis tasks returned in a List operation</p>",
          "location": "querystring",
          "locationName": "Status",
          "shape": "TaskStatus"
        }
      },
      "type": "structure"
    },
    "ListSpeechSynthesisTasksOutput": {
      "members": {
        "NextToken": {
          "documentation": "<p>An opaque pagination token returned from the previous List operation in this request. If present, this indicates where to continue the listing.</p>",
          "shape": "NextToken"
        },
        "SynthesisTasks": {
          "documentation": "<p>List of SynthesisTask objects that provides information from the specified task in the list request, including output format, creation time, task status, and so on.</p>",
          "shape": "SynthesisTasks"
        }
      },
      "type": "structure"
    },
    "MarksNotSupportedForFormatException": {
      "documentation": "<p>Speech marks are not supported for the <code>OutputFormat</code> selected. Speech marks are only available for content in <code>json</code> format.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "MaxLexemeLengthExceededException": {
      "documentation": "<p>The maximum size of the lexeme would be exceeded by this operation.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "MaxLexiconsNumberExceededException": {
      "documentation": "<p>The maximum number of lexicons would be exceeded by this operation.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "NextToken": {
      "max": 4096,
      "min": 0,
      "type": "string"
    },
    "OutputFormat": {
      "enum": [
        "json",
        "mp3",
        "ogg_vorbis",
        "pcm"
      ],
      "type": "string"
    },
    "OutputS3BucketName": {
      "pattern": "^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$",
      "type": "string"
    },
    "OutputS3KeyPrefix": {
      "pattern": "^[0-9a-zA-Z\\/\\!\\-_\\.\\*\\'\\(\\):;\\$@=+\\,\\?&]{0,800}$",
      "type": "string"
    },
    "OutputUri": {
      "type": "string"
    },
    "PutLexiconInput": {
      "members": {
        "Content": {
          "documentation": "<p>Content of the PLS lexicon as string data.</p>",
          "shape": "LexiconContent"
        },
        "Name": {
          "documentation": "<p>Name of the lexicon. The name must follow the regular express format [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric string up to 20 characters long. </p>",
          "location": "uri",
          "locationName": "LexiconName",
          "shape": "LexiconName"
        }
      },
      "required": [
        "Name",
        "Content"
      ],
      "type": "structure"
    },
    "PutLexiconOutput": {
      "members": {},
      "type": "structure"
    },
    "RequestCharacters": {
      "type": "integer"
    },
    "SampleRate": {
      "type": "string"
    },
    "ServiceFailureException": {
      "documentation": "<p>An unknown condition has caused a service failure.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Size": {
      "type": "integer"
    },
    "SnsTopicArn": {
      "pattern": "^arn:aws(-(cn|iso(-b)?|us-gov))?:sns:[a-z0-9_-]{1,50}:\\d{12}:[a-zA-Z0-9_-]{1,256}$",
      "type": "string"
    },
    "SpeechMarkType": {
      "enum": [
        "sentence",
        "ssml",
        "viseme",
        "word"
      ],
      "type": "string"
    },
    "SpeechMarkTypeList": {
      "max": 4,
      "member": {
        "shape": "SpeechMarkType"
      },
      "type": "list"
    },
    "SsmlMarksNotSupportedForTextTypeException": {
      "documentation": "<p>SSML speech marks are not supported for plain text-type input.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "StartSpeechSynthesisTaskInput": {
      "members": {
        "Engine": {
          "documentation": "<p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.</p>",
          "shape": "Engine"
        },
        "LanguageCode": {
          "documentation": "<p>Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html\">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>",
          "shape": "LanguageCode"
        },
        "LexiconNames": {
          "documentation": "<p>List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. </p>",
          "shape": "LexiconNameList"
        },
        "OutputFormat": {
          "documentation": "<p>The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p>",
          "shape": "OutputFormat"
        },
        "OutputS3BucketName": {
          "documentation": "<p>Amazon S3 bucket name to which the output file will be saved.</p>",
          "shape": "OutputS3BucketName"
        },
        "OutputS3KeyPrefix": {
          "documentation": "<p>The Amazon S3 key prefix for the output speech file.</p>",
          "shape": "OutputS3KeyPrefix"
        },
        "SampleRate": {
          "documentation": "<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are \"8000\", \"16000\", \"22050\", and \"24000\". The default value for standard voices is \"22050\". The default value for neural voices is \"24000\".</p> <p>Valid values for pcm are \"8000\" and \"16000\" The default value is \"16000\". </p>",
          "shape": "SampleRate"
        },
        "SnsTopicArn": {
          "documentation": "<p>ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.</p>",
          "shape": "SnsTopicArn"
        },
        "SpeechMarkTypes": {
          "documentation": "<p>The type of speech marks returned for the input text.</p>",
          "shape": "SpeechMarkTypeList"
        },
        "Text": {
          "documentation": "<p>The input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text. </p>",
          "shape": "Text"
        },
        "TextType": {
          "documentation": "<p>Specifies whether the input text is plain text or SSML. The default value is plain text. </p>",
          "shape": "TextType"
        },
        "VoiceId": {
          "documentation": "<p>Voice ID to use for the synthesis. </p>",
          "shape": "VoiceId"
        }
      },
      "required": [
        "OutputFormat",
        "OutputS3BucketName",
        "Text",
        "VoiceId"
      ],
      "type": "structure"
    },
    "StartSpeechSynthesisTaskOutput": {
      "members": {
        "SynthesisTask": {
          "documentation": "<p>SynthesisTask object that provides information and attributes about a newly submitted speech synthesis task.</p>",
          "shape": "SynthesisTask"
        }
      },
      "type": "structure"
    },
    "SynthesisTask": {
      "documentation": "<p>SynthesisTask object that provides information about a speech synthesis task.</p>",
      "members": {
        "CreationTime": {
          "documentation": "<p>Timestamp for the time the synthesis task was started.</p>",
          "shape": "DateTime"
        },
        "Engine": {
          "documentation": "<p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.</p>",
          "shape": "Engine"
        },
        "LanguageCode": {
          "documentation": "<p>Optional language code for a synthesis task. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html\">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>",
          "shape": "LanguageCode"
        },
        "LexiconNames": {
          "documentation": "<p>List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. </p>",
          "shape": "LexiconNameList"
        },
        "OutputFormat": {
          "documentation": "<p>The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p>",
          "shape": "OutputFormat"
        },
        "OutputUri": {
          "documentation": "<p>Pathway for the output speech file.</p>",
          "shape": "OutputUri"
        },
        "RequestCharacters": {
          "documentation": "<p>Number of billable characters synthesized.</p>",
          "shape": "RequestCharacters"
        },
        "SampleRate": {
          "documentation": "<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are \"8000\", \"16000\", \"22050\", and \"24000\". The default value for standard voices is \"22050\". The default value for neural voices is \"24000\".</p> <p>Valid values for pcm are \"8000\" and \"16000\" The default value is \"16000\". </p>",
          "shape": "SampleRate"
        },
        "SnsTopicArn": {
          "documentation": "<p>ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.</p>",
          "shape": "SnsTopicArn"
        },
        "SpeechMarkTypes": {
          "documentation": "<p>The type of speech marks returned for the input text.</p>",
          "shape": "SpeechMarkTypeList"
        },
        "TaskId": {
          "documentation": "<p>The Amazon Polly generated identifier for a speech synthesis task.</p>",
          "shape": "TaskId"
        },
        "TaskStatus": {
          "documentation": "<p>Current status of the individual speech synthesis task.</p>",
          "shape": "TaskStatus"
        },
        "TaskStatusReason": {
          "documentation": "<p>Reason for the current status of a specific speech synthesis task, including errors if the task has failed.</p>",
          "shape": "TaskStatusReason"
        },
        "TextType": {
          "documentation": "<p>Specifies whether the input text is plain text or SSML. The default value is plain text. </p>",
          "shape": "TextType"
        },
        "VoiceId": {
          "documentation": "<p>Voice ID to use for the synthesis. </p>",
          "shape": "VoiceId"
        }
      },
      "type": "structure"
    },
    "SynthesisTaskNotFoundException": {
      "documentation": "<p>The Speech Synthesis task with requested Task ID cannot be found.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "SynthesisTasks": {
      "member": {
        "shape": "SynthesisTask"
      },
      "type": "list"
    },
    "SynthesizeSpeechInput": {
      "members": {
        "Engine": {
          "documentation": "<p>Specifies the engine (<code>standard</code> or <code>neural</code>) for Amazon Polly to use when processing input text for speech synthesis. For information on Amazon Polly voices and which voices are available in standard-only, NTTS-only, and both standard and NTTS formats, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/voicelist.html\">Available Voices</a>.</p> <p> <b>NTTS-only voices</b> </p> <p>When using NTTS-only voices such as Kevin (en-US), this parameter is required and must be set to <code>neural</code>. If the engine is not specified, or is set to <code>standard</code>, this will result in an error. </p> <p>Type: String</p> <p>Valid Values: <code>standard</code> | <code>neural</code> </p> <p>Required: Yes</p> <p> <b>Standard voices</b> </p> <p>For standard voices, this is not required; the engine parameter defaults to <code>standard</code>. If the engine is not specified, or is set to <code>standard</code> and an NTTS-only voice is selected, this will result in an error. </p>",
          "shape": "Engine"
        },
        "LanguageCode": {
          "documentation": "<p>Optional language code for the Synthesize Speech request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN). </p> <p>If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html\">DescribeVoices</a> operation for the <code>LanguageCode</code> parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.</p>",
          "shape": "LanguageCode"
        },
        "LexiconNames": {
          "documentation": "<p>List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice. For information about storing lexicons, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_PutLexicon.html\">PutLexicon</a>.</p>",
          "shape": "LexiconNameList"
        },
        "OutputFormat": {
          "documentation": "<p> The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json. </p> <p>When pcm is used, the content returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format. </p>",
          "shape": "OutputFormat"
        },
        "SampleRate": {
          "documentation": "<p>The audio frequency specified in Hz.</p> <p>The valid values for mp3 and ogg_vorbis are \"8000\", \"16000\", \"22050\", and \"24000\". The default value for standard voices is \"22050\". The default value for neural voices is \"24000\".</p> <p>Valid values for pcm are \"8000\" and \"16000\" The default value is \"16000\". </p>",
          "shape": "SampleRate"
        },
        "SpeechMarkTypes": {
          "documentation": "<p>The type of speech marks returned for the input text.</p>",
          "shape": "SpeechMarkTypeList"
        },
        "Text": {
          "documentation": "<p> Input text to synthesize. If you specify <code>ssml</code> as the <code>TextType</code>, follow the SSML format for the input text. </p>",
          "shape": "Text"
        },
        "TextType": {
          "documentation": "<p> Specifies whether the input text is plain text or SSML. The default value is plain text. For more information, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/ssml.html\">Using SSML</a>.</p>",
          "shape": "TextType"
        },
        "VoiceId": {
          "documentation": "<p> Voice ID to use for the synthesis. You can get a list of available voice IDs by calling the <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html\">DescribeVoices</a> operation. </p>",
          "shape": "VoiceId"
        }
      },
      "required": [
        "OutputFormat",
        "Text",
        "VoiceId"
      ],
      "type": "structure"
    },
    "SynthesizeSpeechOutput": {
      "members": {
        "AudioStream": {
          "documentation": "<p> Stream containing the synthesized speech. </p>",
          "shape": "AudioStream"
        },
        "ContentType": {
          "documentation": "<p> Specifies the type audio stream. This should reflect the <code>OutputFormat</code> parameter in your request. </p> <ul> <li> <p> If you request <code>mp3</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/mpeg. </p> </li> <li> <p> If you request <code>ogg_vorbis</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/ogg. </p> </li> <li> <p> If you request <code>pcm</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is audio/pcm in a signed 16-bit, 1 channel (mono), little-endian format. </p> </li> <li> <p>If you request <code>json</code> as the <code>OutputFormat</code>, the <code>ContentType</code> returned is application/x-json-stream.</p> </li> </ul> <p> </p>",
          "location": "header",
          "locationName": "Content-Type",
          "shape": "ContentType"
        },
        "RequestCharacters": {
          "documentation": "<p>Number of characters synthesized.</p>",
          "location": "header",
          "locationName": "x-amzn-RequestCharacters",
          "shape": "RequestCharacters"
        }
      },
      "payload": "AudioStream",
      "type": "structure"
    },
    "TaskId": {
      "pattern": "^[a-zA-Z0-9_-]{1,100}$",
      "type": "string"
    },
    "TaskStatus": {
      "enum": [
        "scheduled",
        "inProgress",
        "completed",
        "failed"
      ],
      "type": "string"
    },
    "TaskStatusReason": {
      "type": "string"
    },
    "Text": {
      "type": "string"
    },
    "TextLengthExceededException": {
      "documentation": "<p>The value of the \"Text\" parameter is longer than the accepted limits. For the <code>SynthesizeSpeech</code> API, the limit for input text is a maximum of 6000 characters total, of which no more than 3000 can be billed characters. For the <code>StartSpeechSynthesisTask</code> API, the maximum is 200,000 characters, of which no more than 100,000 can be billed characters. SSML tags are not counted as billed characters.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "TextType": {
      "enum": [
        "ssml",
        "text"
      ],
      "type": "string"
    },
    "UnsupportedPlsAlphabetException": {
      "documentation": "<p>The alphabet specified by the lexicon is not a supported alphabet. Valid values are <code>x-sampa</code> and <code>ipa</code>.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "UnsupportedPlsLanguageException": {
      "documentation": "<p>The language specified in the lexicon is unsupported. For a list of supported languages, see <a href=\"https://docs.aws.amazon.com/polly/latest/dg/API_LexiconAttributes.html\">Lexicon Attributes</a>.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "ErrorMessage"
        }
      },
      "type": "structure"
    },
    "Voice": {
      "documentation": "<p>Description of the voice.</p>",
      "members": {
        "AdditionalLanguageCodes": {
          "documentation": "<p>Additional codes for languages available for the specified voice in addition to its default language. </p> <p>For example, the default language for Aditi is Indian English (en-IN) because it was first used for that language. Since Aditi is bilingual and fluent in both Indian English and Hindi, this parameter would show the code <code>hi-IN</code>.</p>",
          "shape": "LanguageCodeList"
        },
        "Gender": {
          "documentation": "<p>Gender of the voice.</p>",
          "shape": "Gender"
        },
        "Id": {
          "documentation": "<p>Amazon Polly assigned voice ID. This is the ID that you specify when calling the <code>SynthesizeSpeech</code> operation.</p>",
          "shape": "VoiceId"
        },
        "LanguageCode": {
          "documentation": "<p>Language code of the voice.</p>",
          "shape": "LanguageCode"
        },
        "LanguageName": {
          "documentation": "<p>Human readable name of the language in English.</p>",
          "shape": "LanguageName"
        },
        "Name": {
          "documentation": "<p>Name of the voice (for example, Salli, Kendra, etc.). This provides a human readable voice name that you might display in your application.</p>",
          "shape": "VoiceName"
        },
        "SupportedEngines": {
          "documentation": "<p>Specifies which engines (<code>standard</code> or <code>neural</code>) that are supported by a given voice.</p>",
          "shape": "EngineList"
        }
      },
      "type": "structure"
    },
    "VoiceId": {
      "enum": [
        "Aditi",
        "Amy",
        "Astrid",
        "Bianca",
        "Brian",
        "Camila",
        "Carla",
        "Carmen",
        "Celine",
        "Chantal",
        "Conchita",
        "Cristiano",
        "Dora",
        "Emma",
        "Enrique",
        "Ewa",
        "Filiz",
        "Gabrielle",
        "Geraint",
        "Giorgio",
        "Gwyneth",
        "Hans",
        "Ines",
        "Ivy",
        "Jacek",
        "Jan",
        "Joanna",
        "Joey",
        "Justin",
        "Karl",
        "Kendra",
        "Kevin",
        "Kimberly",
        "Lea",
        "Liv",
        "Lotte",
        "Lucia",
        "Lupe",
        "Mads",
        "Maja",
        "Marlene",
        "Mathieu",
        "Matthew",
        "Maxim",
        "Mia",
        "Miguel",
        "Mizuki",
        "Naja",
        "Nicole",
        "Olivia",
        "Penelope",
        "Raveena",
        "Ricardo",
        "Ruben",
        "Russell",
        "Salli",
        "Seoyeon",
        "Takumi",
        "Tatyana",
        "Vicki",
        "Vitoria",
        "Zeina",
        "Zhiyu",
        "Aria",
        "Ayanda",
        "Arlet",
        "Hannah",
        "Arthur",
        "Daniel",
        "Liam",
        "Pedro",
        "Kajal",
        "Hiujin"
      ],
      "type": "string"
    },
    "VoiceList": {
      "member": {
        "shape": "Voice"
      },
      "type": "list"
    },
    "VoiceName": {
      "type": "string"
    }
  },
  "version": "2.0"
}
