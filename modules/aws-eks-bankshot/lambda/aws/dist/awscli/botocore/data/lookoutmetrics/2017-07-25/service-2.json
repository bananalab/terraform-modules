{
  "documentation": "<p>This is the <i>Amazon Lookout for Metrics API Reference</i>. For an introduction to the service with tutorials for getting started, visit <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev\">Amazon Lookout for Metrics Developer Guide</a>.</p>",
  "metadata": {
    "apiVersion": "2017-07-25",
    "endpointPrefix": "lookoutmetrics",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "LookoutMetrics",
    "serviceFullName": "Amazon Lookout for Metrics",
    "serviceId": "LookoutMetrics",
    "signatureVersion": "v4",
    "signingName": "lookoutmetrics",
    "uid": "lookoutmetrics-2017-07-25"
  },
  "operations": {
    "ActivateAnomalyDetector": {
      "documentation": "<p>Activates an anomaly detector.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ActivateAnomalyDetector"
      },
      "input": {
        "shape": "ActivateAnomalyDetectorRequest"
      },
      "name": "ActivateAnomalyDetector",
      "output": {
        "shape": "ActivateAnomalyDetectorResponse"
      }
    },
    "BackTestAnomalyDetector": {
      "documentation": "<p>Runs a backtest for anomaly detection for the specified resource.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/BackTestAnomalyDetector"
      },
      "input": {
        "shape": "BackTestAnomalyDetectorRequest"
      },
      "name": "BackTestAnomalyDetector",
      "output": {
        "shape": "BackTestAnomalyDetectorResponse"
      }
    },
    "CreateAlert": {
      "documentation": "<p>Creates an alert for an anomaly detector.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/CreateAlert"
      },
      "input": {
        "shape": "CreateAlertRequest"
      },
      "name": "CreateAlert",
      "output": {
        "shape": "CreateAlertResponse"
      }
    },
    "CreateAnomalyDetector": {
      "documentation": "<p>Creates an anomaly detector.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/CreateAnomalyDetector"
      },
      "input": {
        "shape": "CreateAnomalyDetectorRequest"
      },
      "name": "CreateAnomalyDetector",
      "output": {
        "shape": "CreateAnomalyDetectorResponse"
      }
    },
    "CreateMetricSet": {
      "documentation": "<p>Creates a dataset.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/CreateMetricSet"
      },
      "input": {
        "shape": "CreateMetricSetRequest"
      },
      "name": "CreateMetricSet",
      "output": {
        "shape": "CreateMetricSetResponse"
      }
    },
    "DeactivateAnomalyDetector": {
      "documentation": "<p>Deactivates an anomaly detector.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DeactivateAnomalyDetector"
      },
      "input": {
        "shape": "DeactivateAnomalyDetectorRequest"
      },
      "name": "DeactivateAnomalyDetector",
      "output": {
        "shape": "DeactivateAnomalyDetectorResponse"
      }
    },
    "DeleteAlert": {
      "documentation": "<p>Deletes an alert.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DeleteAlert"
      },
      "input": {
        "shape": "DeleteAlertRequest"
      },
      "name": "DeleteAlert",
      "output": {
        "shape": "DeleteAlertResponse"
      }
    },
    "DeleteAnomalyDetector": {
      "documentation": "<p>Deletes a detector. Deleting an anomaly detector will delete all of its corresponding resources including any configured datasets and alerts.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DeleteAnomalyDetector"
      },
      "input": {
        "shape": "DeleteAnomalyDetectorRequest"
      },
      "name": "DeleteAnomalyDetector",
      "output": {
        "shape": "DeleteAnomalyDetectorResponse"
      }
    },
    "DescribeAlert": {
      "documentation": "<p>Describes an alert.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DescribeAlert"
      },
      "input": {
        "shape": "DescribeAlertRequest"
      },
      "name": "DescribeAlert",
      "output": {
        "shape": "DescribeAlertResponse"
      }
    },
    "DescribeAnomalyDetectionExecutions": {
      "documentation": "<p>Returns information about the status of the specified anomaly detection jobs.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DescribeAnomalyDetectionExecutions"
      },
      "input": {
        "shape": "DescribeAnomalyDetectionExecutionsRequest"
      },
      "name": "DescribeAnomalyDetectionExecutions",
      "output": {
        "shape": "DescribeAnomalyDetectionExecutionsResponse"
      }
    },
    "DescribeAnomalyDetector": {
      "documentation": "<p>Describes a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DescribeAnomalyDetector"
      },
      "input": {
        "shape": "DescribeAnomalyDetectorRequest"
      },
      "name": "DescribeAnomalyDetector",
      "output": {
        "shape": "DescribeAnomalyDetectorResponse"
      }
    },
    "DescribeMetricSet": {
      "documentation": "<p>Describes a dataset.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DescribeMetricSet"
      },
      "input": {
        "shape": "DescribeMetricSetRequest"
      },
      "name": "DescribeMetricSet",
      "output": {
        "shape": "DescribeMetricSetResponse"
      }
    },
    "DetectMetricSetConfig": {
      "documentation": "<p>Detects an Amazon S3 dataset's file format, interval, and offset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/DetectMetricSetConfig"
      },
      "input": {
        "shape": "DetectMetricSetConfigRequest"
      },
      "name": "DetectMetricSetConfig",
      "output": {
        "shape": "DetectMetricSetConfigResponse"
      }
    },
    "GetAnomalyGroup": {
      "documentation": "<p>Returns details about a group of anomalous metrics.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/GetAnomalyGroup"
      },
      "input": {
        "shape": "GetAnomalyGroupRequest"
      },
      "name": "GetAnomalyGroup",
      "output": {
        "shape": "GetAnomalyGroupResponse"
      }
    },
    "GetDataQualityMetrics": {
      "documentation": "<p>Returns details about the requested data quality metrics.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/GetDataQualityMetrics"
      },
      "input": {
        "shape": "GetDataQualityMetricsRequest"
      },
      "name": "GetDataQualityMetrics",
      "output": {
        "shape": "GetDataQualityMetricsResponse"
      }
    },
    "GetFeedback": {
      "documentation": "<p>Get feedback for an anomaly group.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/GetFeedback"
      },
      "input": {
        "shape": "GetFeedbackRequest"
      },
      "name": "GetFeedback",
      "output": {
        "shape": "GetFeedbackResponse"
      }
    },
    "GetSampleData": {
      "documentation": "<p>Returns a selection of sample records from an Amazon S3 datasource.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/GetSampleData"
      },
      "input": {
        "shape": "GetSampleDataRequest"
      },
      "name": "GetSampleData",
      "output": {
        "shape": "GetSampleDataResponse"
      }
    },
    "ListAlerts": {
      "documentation": "<p>Lists the alerts attached to a detector.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListAlerts"
      },
      "input": {
        "shape": "ListAlertsRequest"
      },
      "name": "ListAlerts",
      "output": {
        "shape": "ListAlertsResponse"
      }
    },
    "ListAnomalyDetectors": {
      "documentation": "<p>Lists the detectors in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListAnomalyDetectors"
      },
      "input": {
        "shape": "ListAnomalyDetectorsRequest"
      },
      "name": "ListAnomalyDetectors",
      "output": {
        "shape": "ListAnomalyDetectorsResponse"
      }
    },
    "ListAnomalyGroupRelatedMetrics": {
      "documentation": "<p>Returns a list of measures that are potential causes or effects of an anomaly group.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListAnomalyGroupRelatedMetrics"
      },
      "input": {
        "shape": "ListAnomalyGroupRelatedMetricsRequest"
      },
      "name": "ListAnomalyGroupRelatedMetrics",
      "output": {
        "shape": "ListAnomalyGroupRelatedMetricsResponse"
      }
    },
    "ListAnomalyGroupSummaries": {
      "documentation": "<p>Returns a list of anomaly groups.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListAnomalyGroupSummaries"
      },
      "input": {
        "shape": "ListAnomalyGroupSummariesRequest"
      },
      "name": "ListAnomalyGroupSummaries",
      "output": {
        "shape": "ListAnomalyGroupSummariesResponse"
      }
    },
    "ListAnomalyGroupTimeSeries": {
      "documentation": "<p>Gets a list of anomalous metrics for a measure in an anomaly group.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListAnomalyGroupTimeSeries"
      },
      "input": {
        "shape": "ListAnomalyGroupTimeSeriesRequest"
      },
      "name": "ListAnomalyGroupTimeSeries",
      "output": {
        "shape": "ListAnomalyGroupTimeSeriesResponse"
      }
    },
    "ListMetricSets": {
      "documentation": "<p>Lists the datasets in the current AWS Region.</p> <p>Amazon Lookout for Metrics API actions are eventually consistent. If you do a read operation on a resource immediately after creating or modifying it, use retries to allow time for the write operation to complete.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/ListMetricSets"
      },
      "input": {
        "shape": "ListMetricSetsRequest"
      },
      "name": "ListMetricSets",
      "output": {
        "shape": "ListMetricSetsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Gets a list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> for a detector, dataset, or alert.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "PutFeedback": {
      "documentation": "<p>Add feedback for an anomalous metric.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/PutFeedback"
      },
      "input": {
        "shape": "PutFeedbackRequest"
      },
      "name": "PutFeedback",
      "output": {
        "shape": "PutFeedbackResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> to a detector, dataset, or alert.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> from a detector, dataset, or alert.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAlert": {
      "documentation": "<p>Make changes to an existing alert.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/UpdateAlert"
      },
      "input": {
        "shape": "UpdateAlertRequest"
      },
      "name": "UpdateAlert",
      "output": {
        "shape": "UpdateAlertResponse"
      }
    },
    "UpdateAnomalyDetector": {
      "documentation": "<p>Updates a detector. After activation, you can only change a detector's ingestion delay and description.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/UpdateAnomalyDetector"
      },
      "input": {
        "shape": "UpdateAnomalyDetectorRequest"
      },
      "name": "UpdateAnomalyDetector",
      "output": {
        "shape": "UpdateAnomalyDetectorResponse"
      }
    },
    "UpdateMetricSet": {
      "documentation": "<p>Updates a dataset.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "TooManyRequestsException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/UpdateMetricSet"
      },
      "input": {
        "shape": "UpdateMetricSetRequest"
      },
      "name": "UpdateMetricSet",
      "output": {
        "shape": "UpdateMetricSetResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient permissions to perform this action.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "Action": {
      "documentation": "<p>A configuration that specifies the action to perform when anomalies are detected.</p>",
      "members": {
        "LambdaConfiguration": {
          "documentation": "<p>A configuration for an AWS Lambda channel.</p>",
          "shape": "LambdaConfiguration"
        },
        "SNSConfiguration": {
          "documentation": "<p>A configuration for an Amazon SNS channel.</p>",
          "shape": "SNSConfiguration"
        }
      },
      "type": "structure"
    },
    "ActivateAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the anomaly detector.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "ActivateAnomalyDetectorResponse": {
      "members": {},
      "type": "structure"
    },
    "AggregationFunction": {
      "enum": [
        "AVG",
        "SUM"
      ],
      "type": "string"
    },
    "Alert": {
      "documentation": "<p>A configuration for Amazon SNS-integrated notifications.</p>",
      "members": {
        "Action": {
          "documentation": "<p>Action that will be triggered when there is an alert.</p>",
          "shape": "Action"
        },
        "AlertArn": {
          "documentation": "<p>The ARN of the alert.</p>",
          "shape": "Arn"
        },
        "AlertDescription": {
          "documentation": "<p>A description of the alert.</p>",
          "shape": "AlertDescription"
        },
        "AlertFilters": {
          "documentation": "<p>The configuration of the alert filters, containing MetricList and DimensionFilter.</p>",
          "shape": "AlertFilters"
        },
        "AlertName": {
          "documentation": "<p>The name of the alert.</p>",
          "shape": "AlertName"
        },
        "AlertSensitivityThreshold": {
          "documentation": "<p>The minimum severity for an anomaly to trigger the alert.</p>",
          "shape": "SensitivityThreshold"
        },
        "AlertStatus": {
          "documentation": "<p>The status of the alert.</p>",
          "shape": "AlertStatus"
        },
        "AlertType": {
          "documentation": "<p>The type of the alert.</p>",
          "shape": "AlertType"
        },
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to which the alert is attached.</p>",
          "shape": "Arn"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the alert was created.</p>",
          "shape": "Timestamp"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the alert was last modified.</p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "AlertDescription": {
      "max": 256,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "AlertFilters": {
      "documentation": "<p>The configuration of the alert filters.</p>",
      "members": {
        "DimensionFilterList": {
          "documentation": "<p>The list of DimensionFilter objects that are used for dimension-based filtering.</p>",
          "shape": "DimensionFilterList"
        },
        "MetricList": {
          "documentation": "<p>The list of measures that you want to get alerts for.</p>",
          "shape": "MetricNameList"
        }
      },
      "type": "structure"
    },
    "AlertName": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "AlertStatus": {
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "type": "string"
    },
    "AlertSummary": {
      "documentation": "<p>Provides a summary of an alert's configuration.</p>",
      "members": {
        "AlertArn": {
          "documentation": "<p>The ARN of the alert.</p>",
          "shape": "Arn"
        },
        "AlertName": {
          "documentation": "<p>The name of the alert.</p>",
          "shape": "AlertName"
        },
        "AlertSensitivityThreshold": {
          "documentation": "<p>The minimum severity for an anomaly to trigger the alert.</p>",
          "shape": "SensitivityThreshold"
        },
        "AlertStatus": {
          "documentation": "<p>The status of the alert.</p>",
          "shape": "AlertStatus"
        },
        "AlertType": {
          "documentation": "<p>The type of the alert.</p>",
          "shape": "AlertType"
        },
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to which the alert is attached.</p>",
          "shape": "Arn"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the alert was created.</p>",
          "shape": "Timestamp"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the alert was last modified.</p>",
          "shape": "Timestamp"
        },
        "Tags": {
          "documentation": "<p>The alert's <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a>.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "AlertSummaryList": {
      "member": {
        "shape": "AlertSummary"
      },
      "type": "list"
    },
    "AlertType": {
      "enum": [
        "SNS",
        "LAMBDA"
      ],
      "type": "string"
    },
    "AnomalyDetectionTaskStatus": {
      "enum": [
        "PENDING",
        "IN_PROGRESS",
        "COMPLETED",
        "FAILED",
        "FAILED_TO_SCHEDULE"
      ],
      "type": "string"
    },
    "AnomalyDetectionTaskStatusMessage": {
      "max": 256,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "AnomalyDetectorConfig": {
      "documentation": "<p>Contains information about a detector's configuration.</p>",
      "members": {
        "AnomalyDetectorFrequency": {
          "documentation": "<p>The frequency at which the detector analyzes its source data.</p>",
          "shape": "Frequency"
        }
      },
      "type": "structure"
    },
    "AnomalyDetectorConfigSummary": {
      "documentation": "<p>Contains information about a detector's configuration.</p>",
      "members": {
        "AnomalyDetectorFrequency": {
          "documentation": "<p>The interval at which the detector analyzes its source data.</p>",
          "shape": "Frequency"
        }
      },
      "type": "structure"
    },
    "AnomalyDetectorDataQualityMetric": {
      "documentation": "<p>Aggregated details about the data quality metrics collected for the <code>AnomalyDetectorArn</code> provided in the <a>GetDataQualityMetrics</a> object.</p>",
      "members": {
        "MetricSetDataQualityMetricList": {
          "documentation": "<p>An array of <code>DataQualityMetricList</code> objects. Each object in the array contains information about a data quality metric.</p>",
          "shape": "MetricSetDataQualityMetricList"
        },
        "StartTimestamp": {
          "documentation": "<p>The start time for the data quality metrics collection.</p>",
          "shape": "Timestamp"
        }
      },
      "type": "structure"
    },
    "AnomalyDetectorDataQualityMetricList": {
      "member": {
        "shape": "AnomalyDetectorDataQualityMetric"
      },
      "type": "list"
    },
    "AnomalyDetectorDescription": {
      "max": 256,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "AnomalyDetectorFailureType": {
      "enum": [
        "ACTIVATION_FAILURE",
        "BACK_TEST_ACTIVATION_FAILURE",
        "DELETION_FAILURE",
        "DEACTIVATION_FAILURE"
      ],
      "type": "string"
    },
    "AnomalyDetectorName": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "AnomalyDetectorStatus": {
      "enum": [
        "ACTIVE",
        "ACTIVATING",
        "DELETING",
        "FAILED",
        "INACTIVE",
        "LEARNING",
        "BACK_TEST_ACTIVATING",
        "BACK_TEST_ACTIVE",
        "BACK_TEST_COMPLETE",
        "DEACTIVATED",
        "DEACTIVATING"
      ],
      "type": "string"
    },
    "AnomalyDetectorSummary": {
      "documentation": "<p>Contains information about an an anomaly detector.</p>",
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector.</p>",
          "shape": "Arn"
        },
        "AnomalyDetectorDescription": {
          "documentation": "<p>A description of the detector.</p>",
          "shape": "AnomalyDetectorDescription"
        },
        "AnomalyDetectorName": {
          "documentation": "<p>The name of the detector.</p>",
          "shape": "AnomalyDetectorName"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the detector was created.</p>",
          "shape": "Timestamp"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the detector was last modified.</p>",
          "shape": "Timestamp"
        },
        "Status": {
          "documentation": "<p>The status of detector.</p>",
          "shape": "AnomalyDetectorStatus"
        },
        "Tags": {
          "documentation": "<p>The detector's <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a>.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "AnomalyDetectorSummaryList": {
      "member": {
        "shape": "AnomalyDetectorSummary"
      },
      "type": "list"
    },
    "AnomalyGroup": {
      "documentation": "<p>A group of anomalous metrics</p>",
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "AnomalyGroupScore": {
          "documentation": "<p>The severity score of the group.</p>",
          "shape": "Score"
        },
        "EndTime": {
          "documentation": "<p>The end time for the group.</p>",
          "shape": "TimestampString"
        },
        "MetricLevelImpactList": {
          "documentation": "<p>A list of measures affected by the anomaly.</p>",
          "shape": "MetricLevelImpactList"
        },
        "PrimaryMetricName": {
          "documentation": "<p>The name of the primary affected measure for the group.</p>",
          "shape": "MetricName"
        },
        "StartTime": {
          "documentation": "<p>The start time for the group.</p>",
          "shape": "TimestampString"
        }
      },
      "type": "structure"
    },
    "AnomalyGroupStatistics": {
      "documentation": "<p>Aggregated statistics for a group of anomalous metrics.</p>",
      "members": {
        "EvaluationStartDate": {
          "documentation": "<p>The start of the time range that was searched.</p>",
          "shape": "TimestampString"
        },
        "ItemizedMetricStatsList": {
          "documentation": "<p>Statistics for individual metrics within the group.</p>",
          "shape": "ItemizedMetricStatsList"
        },
        "TotalCount": {
          "documentation": "<p>The number of groups found.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "AnomalyGroupSummary": {
      "documentation": "<p>Details about a group of anomalous metrics.</p>",
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "AnomalyGroupScore": {
          "documentation": "<p>The severity score of the group.</p>",
          "shape": "Score"
        },
        "EndTime": {
          "documentation": "<p>The end time for the group.</p>",
          "shape": "TimestampString"
        },
        "PrimaryMetricName": {
          "documentation": "<p>The name of the primary affected measure for the group.</p>",
          "shape": "MetricName"
        },
        "StartTime": {
          "documentation": "<p>The start time for the group.</p>",
          "shape": "TimestampString"
        }
      },
      "type": "structure"
    },
    "AnomalyGroupSummaryList": {
      "member": {
        "shape": "AnomalyGroupSummary"
      },
      "type": "list"
    },
    "AnomalyGroupTimeSeries": {
      "documentation": "<p>An anomalous metric in an anomaly group.</p>",
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "TimeSeriesId": {
          "documentation": "<p>The ID of the metric.</p>",
          "shape": "TimeSeriesId"
        }
      },
      "required": [
        "AnomalyGroupId"
      ],
      "type": "structure"
    },
    "AnomalyGroupTimeSeriesFeedback": {
      "documentation": "<p>Feedback for an anomalous metric.</p>",
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "IsAnomaly": {
          "documentation": "<p>Feedback on whether the metric is a legitimate anomaly.</p>",
          "shape": "Boolean"
        },
        "TimeSeriesId": {
          "documentation": "<p>The ID of the metric.</p>",
          "shape": "TimeSeriesId"
        }
      },
      "required": [
        "AnomalyGroupId",
        "TimeSeriesId",
        "IsAnomaly"
      ],
      "type": "structure"
    },
    "AppFlowConfig": {
      "documentation": "<p>Details about an Amazon AppFlow flow datasource.</p>",
      "members": {
        "FlowName": {
          "documentation": "<p> name of the flow.</p>",
          "shape": "FlowName"
        },
        "RoleArn": {
          "documentation": "<p>An IAM role that gives Amazon Lookout for Metrics permission to access the flow.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "Arn": {
      "max": 256,
      "pattern": "arn:([a-z\\d-]+):.*:.*:.*:.+",
      "type": "string"
    },
    "AthenaDataCatalog": {
      "max": 256,
      "min": 1,
      "pattern": "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\t]*",
      "type": "string"
    },
    "AthenaDatabaseName": {
      "max": 255,
      "min": 1,
      "pattern": "[a-zA-Z0-9_]+",
      "type": "string"
    },
    "AthenaS3ResultsPath": {
      "max": 1024,
      "pattern": "^s3://[a-z0-9].+$",
      "type": "string"
    },
    "AthenaSourceConfig": {
      "documentation": "<p>Details about an Amazon Athena datasource.</p>",
      "members": {
        "BackTestConfiguration": {
          "documentation": "<p>Settings for backtest mode.</p>",
          "shape": "BackTestConfiguration"
        },
        "DataCatalog": {
          "documentation": "<p>The database's data catalog.</p>",
          "shape": "AthenaDataCatalog"
        },
        "DatabaseName": {
          "documentation": "<p>The database's name.</p>",
          "shape": "AthenaDatabaseName"
        },
        "RoleArn": {
          "documentation": "<p>An IAM role that gives Amazon Lookout for Metrics permission to access the data.</p>",
          "shape": "Arn"
        },
        "S3ResultsPath": {
          "documentation": "<p>The database's results path.</p>",
          "shape": "AthenaS3ResultsPath"
        },
        "TableName": {
          "documentation": "<p>The database's table name.</p>",
          "shape": "AthenaTableName"
        },
        "WorkGroupName": {
          "documentation": "<p>The database's work group name.</p>",
          "shape": "AthenaWorkGroupName"
        }
      },
      "type": "structure"
    },
    "AthenaTableName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9_]+",
      "type": "string"
    },
    "AthenaWorkGroupName": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9._-]{1,128}",
      "type": "string"
    },
    "AttributeValue": {
      "documentation": "<p>An attribute value.</p>",
      "members": {
        "B": {
          "documentation": "<p>A binary value.</p>",
          "shape": "BinaryAttributeValue"
        },
        "BS": {
          "documentation": "<p>A list of binary values.</p>",
          "shape": "BinaryListAttributeValue"
        },
        "N": {
          "documentation": "<p>A number.</p>",
          "shape": "NumberAttributeValue"
        },
        "NS": {
          "documentation": "<p>A list of numbers.</p>",
          "shape": "NumberListAttributeValue"
        },
        "S": {
          "documentation": "<p>A string.</p>",
          "shape": "StringAttributeValue"
        },
        "SS": {
          "documentation": "<p>A list of strings.</p>",
          "shape": "StringListAttributeValue"
        }
      },
      "type": "structure"
    },
    "AutoDetectionMetricSource": {
      "documentation": "<p>An auto detection metric source.</p>",
      "members": {
        "S3SourceConfig": {
          "documentation": "<p>The source's source config.</p>",
          "shape": "AutoDetectionS3SourceConfig"
        }
      },
      "type": "structure"
    },
    "AutoDetectionS3SourceConfig": {
      "documentation": "<p>An auto detection source config.</p>",
      "members": {
        "HistoricalDataPathList": {
          "documentation": "<p>The config's historical data path list.</p>",
          "shape": "HistoricalDataPathList"
        },
        "TemplatedPathList": {
          "documentation": "<p>The config's templated path list.</p>",
          "shape": "TemplatedPathList"
        }
      },
      "type": "structure"
    },
    "BackTestAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "BackTestAnomalyDetectorResponse": {
      "members": {},
      "type": "structure"
    },
    "BackTestConfiguration": {
      "documentation": "<p>Settings for backtest mode.</p>",
      "members": {
        "RunBackTestMode": {
          "documentation": "<p>Run a backtest instead of monitoring new data.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "RunBackTestMode"
      ],
      "type": "structure"
    },
    "BinaryAttributeValue": {
      "type": "string"
    },
    "BinaryListAttributeValue": {
      "member": {
        "shape": "BinaryAttributeValue"
      },
      "type": "list"
    },
    "Boolean": {
      "type": "boolean"
    },
    "CSVFileCompression": {
      "enum": [
        "NONE",
        "GZIP"
      ],
      "type": "string"
    },
    "Charset": {
      "max": 63,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "CloudWatchConfig": {
      "documentation": "<p>Details about an Amazon CloudWatch datasource.</p>",
      "members": {
        "BackTestConfiguration": {
          "documentation": "<p>Settings for backtest mode.</p>",
          "shape": "BackTestConfiguration"
        },
        "RoleArn": {
          "documentation": "<p>An IAM role that gives Amazon Lookout for Metrics permission to access data in Amazon CloudWatch.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ColumnName": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "Confidence": {
      "enum": [
        "HIGH",
        "LOW",
        "NONE"
      ],
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>There was a conflict processing the request. Try your request again.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        },
        "ResourceId": {
          "documentation": "<p>The ID of the resource.</p>",
          "shape": "ResourceId"
        },
        "ResourceType": {
          "documentation": "<p>The type of the resource.</p>",
          "shape": "ResourceType"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ContributionMatrix": {
      "documentation": "<p>Details about dimensions that contributed to an anomaly.</p>",
      "members": {
        "DimensionContributionList": {
          "documentation": "<p>A list of contributing dimensions.</p>",
          "shape": "DimensionContributionList"
        }
      },
      "type": "structure"
    },
    "CreateAlertRequest": {
      "members": {
        "Action": {
          "documentation": "<p>Action that will be triggered when there is an alert.</p>",
          "shape": "Action"
        },
        "AlertDescription": {
          "documentation": "<p>A description of the alert.</p>",
          "shape": "AlertDescription"
        },
        "AlertFilters": {
          "documentation": "<p>The configuration of the alert filters, containing MetricList and DimensionFilterList.</p>",
          "shape": "AlertFilters"
        },
        "AlertName": {
          "documentation": "<p>The name of the alert.</p>",
          "shape": "AlertName"
        },
        "AlertSensitivityThreshold": {
          "documentation": "<p>An integer from 0 to 100 specifying the alert sensitivity threshold.</p>",
          "shape": "SensitivityThreshold"
        },
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to which the alert is attached.</p>",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> to apply to the alert.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "AlertName",
        "AnomalyDetectorArn",
        "Action"
      ],
      "type": "structure"
    },
    "CreateAlertResponse": {
      "members": {
        "AlertArn": {
          "documentation": "<p>The ARN of the alert.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CreateAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorConfig": {
          "documentation": "<p>Contains information about the configuration of the anomaly detector.</p>",
          "shape": "AnomalyDetectorConfig"
        },
        "AnomalyDetectorDescription": {
          "documentation": "<p>A description of the detector.</p>",
          "shape": "AnomalyDetectorDescription"
        },
        "AnomalyDetectorName": {
          "documentation": "<p>The name of the detector.</p>",
          "shape": "AnomalyDetectorName"
        },
        "KmsKeyArn": {
          "documentation": "<p>The ARN of the KMS key to use to encrypt your data.</p>",
          "shape": "KmsKeyArn"
        },
        "Tags": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> to apply to the anomaly detector.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "AnomalyDetectorName",
        "AnomalyDetectorConfig"
      ],
      "type": "structure"
    },
    "CreateAnomalyDetectorResponse": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CreateMetricSetRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the anomaly detector that will use the dataset.</p>",
          "shape": "Arn"
        },
        "DimensionFilterList": {
          "documentation": "<p>A list of filters that specify which data is kept for anomaly detection.</p>",
          "shape": "MetricSetDimensionFilterList"
        },
        "DimensionList": {
          "documentation": "<p>A list of the fields you want to treat as dimensions.</p>",
          "shape": "DimensionList"
        },
        "MetricList": {
          "documentation": "<p>A list of metrics that the dataset will contain.</p>",
          "shape": "MetricList"
        },
        "MetricSetDescription": {
          "documentation": "<p>A description of the dataset you are creating.</p>",
          "shape": "MetricSetDescription"
        },
        "MetricSetFrequency": {
          "documentation": "<p>The frequency with which the source data will be analyzed for anomalies.</p>",
          "shape": "Frequency"
        },
        "MetricSetName": {
          "documentation": "<p>The name of the dataset.</p>",
          "shape": "MetricSetName"
        },
        "MetricSource": {
          "documentation": "<p>Contains information about how the source data should be interpreted.</p>",
          "shape": "MetricSource"
        },
        "Offset": {
          "box": true,
          "documentation": "<p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>",
          "shape": "Offset"
        },
        "Tags": {
          "documentation": "<p>A list of <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a> to apply to the dataset.</p>",
          "shape": "TagMap"
        },
        "TimestampColumn": {
          "documentation": "<p>Contains information about the column used for tracking time in your source data.</p>",
          "shape": "TimestampColumn"
        },
        "Timezone": {
          "documentation": "<p>The time zone in which your source data was recorded.</p>",
          "shape": "Timezone"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "MetricSetName",
        "MetricList",
        "MetricSource"
      ],
      "type": "structure"
    },
    "CreateMetricSetResponse": {
      "members": {
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CsvFormatDescriptor": {
      "documentation": "<p>Contains information about how a source CSV data file should be analyzed.</p>",
      "members": {
        "Charset": {
          "documentation": "<p>The character set in which the source CSV file is written.</p>",
          "shape": "Charset"
        },
        "ContainsHeader": {
          "documentation": "<p>Whether or not the source CSV file contains a header.</p>",
          "shape": "Boolean"
        },
        "Delimiter": {
          "documentation": "<p>The character used to delimit the source CSV file.</p>",
          "shape": "Delimiter"
        },
        "FileCompression": {
          "documentation": "<p>The level of compression of the source CSV file.</p>",
          "shape": "CSVFileCompression"
        },
        "HeaderList": {
          "documentation": "<p>A list of the source CSV file's headers, if any.</p>",
          "shape": "HeaderList"
        },
        "QuoteSymbol": {
          "documentation": "<p>The character used as a quote character.</p>",
          "shape": "QuoteSymbol"
        }
      },
      "type": "structure"
    },
    "DataItem": {
      "type": "string"
    },
    "DataQualityMetric": {
      "documentation": "<p>An array that describes a data quality metric. Each <code>DataQualityMetric</code> object contains the data quality metric name, its value, a description of the metric, and the affected column.</p>",
      "members": {
        "MetricDescription": {
          "documentation": "<p>A description of the data quality metric.</p>",
          "shape": "DataQualityMetricDescription"
        },
        "MetricType": {
          "documentation": "<p>The name of the data quality metric.</p>",
          "shape": "DataQualityMetricType"
        },
        "MetricValue": {
          "documentation": "<p>The value of the data quality metric.</p>",
          "shape": "Double"
        },
        "RelatedColumnName": {
          "documentation": "<p>The column that is being monitored.</p>",
          "shape": "RelatedColumnName"
        }
      },
      "type": "structure"
    },
    "DataQualityMetricDescription": {
      "max": 256,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "DataQualityMetricList": {
      "member": {
        "shape": "DataQualityMetric"
      },
      "type": "list"
    },
    "DataQualityMetricType": {
      "enum": [
        "COLUMN_COMPLETENESS",
        "DIMENSION_UNIQUENESS",
        "TIME_SERIES_COUNT",
        "ROWS_PROCESSED",
        "ROWS_PARTIAL_COMPLIANCE",
        "INVALID_ROWS_COMPLIANCE",
        "BACKTEST_TRAINING_DATA_START_TIME_STAMP",
        "BACKTEST_TRAINING_DATA_END_TIME_STAMP",
        "BACKTEST_INFERENCE_DATA_START_TIME_STAMP",
        "BACKTEST_INFERENCE_DATA_END_TIME_STAMP"
      ],
      "type": "string"
    },
    "DatabaseHost": {
      "max": 253,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "DatabasePort": {
      "max": 65535,
      "min": 1,
      "type": "integer"
    },
    "DateTimeFormat": {
      "max": 63,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "DeactivateAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "DeactivateAnomalyDetectorResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAlertRequest": {
      "members": {
        "AlertArn": {
          "documentation": "<p>The ARN of the alert to delete.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AlertArn"
      ],
      "type": "structure"
    },
    "DeleteAlertResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to delete.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "DeleteAnomalyDetectorResponse": {
      "members": {},
      "type": "structure"
    },
    "Delimiter": {
      "max": 1,
      "pattern": "[^\\r\\n]",
      "type": "string"
    },
    "DescribeAlertRequest": {
      "members": {
        "AlertArn": {
          "documentation": "<p>The ARN of the alert to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AlertArn"
      ],
      "type": "structure"
    },
    "DescribeAlertResponse": {
      "members": {
        "Alert": {
          "documentation": "<p>Contains information about an alert.</p>",
          "shape": "Alert"
        }
      },
      "type": "structure"
    },
    "DescribeAnomalyDetectionExecutionsRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The number of items to return in the response.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "shape": "NextToken"
        },
        "Timestamp": {
          "documentation": "<p>The timestamp of the anomaly detection job.</p>",
          "shape": "TimestampString"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "DescribeAnomalyDetectionExecutionsResponse": {
      "members": {
        "ExecutionList": {
          "documentation": "<p>A list of detection jobs.</p>",
          "shape": "ExecutionList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "DescribeAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "DescribeAnomalyDetectorResponse": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector.</p>",
          "shape": "Arn"
        },
        "AnomalyDetectorConfig": {
          "documentation": "<p>Contains information about the detector's configuration.</p>",
          "shape": "AnomalyDetectorConfigSummary"
        },
        "AnomalyDetectorDescription": {
          "documentation": "<p>A description of the detector.</p>",
          "shape": "AnomalyDetectorDescription"
        },
        "AnomalyDetectorName": {
          "documentation": "<p>The name of the detector.</p>",
          "shape": "AnomalyDetectorName"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the detector was created.</p>",
          "shape": "Timestamp"
        },
        "FailureReason": {
          "documentation": "<p>The reason that the detector failed.</p>",
          "shape": "ErrorMessage"
        },
        "FailureType": {
          "documentation": "<p>The process that caused the detector to fail.</p>",
          "shape": "AnomalyDetectorFailureType"
        },
        "KmsKeyArn": {
          "documentation": "<p>The ARN of the KMS key to use to encrypt your data.</p>",
          "shape": "KmsKeyArn"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the detector was last modified.</p>",
          "shape": "Timestamp"
        },
        "Status": {
          "documentation": "<p>The status of the detector.</p>",
          "shape": "AnomalyDetectorStatus"
        }
      },
      "type": "structure"
    },
    "DescribeMetricSetRequest": {
      "members": {
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "MetricSetArn"
      ],
      "type": "structure"
    },
    "DescribeMetricSetResponse": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector that contains the dataset.</p>",
          "shape": "Arn"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DimensionFilterList": {
          "documentation": "<p>The dimensions and their values that were used to filter the dataset.</p>",
          "shape": "MetricSetDimensionFilterList"
        },
        "DimensionList": {
          "documentation": "<p>A list of the dimensions chosen for analysis.</p>",
          "shape": "DimensionList"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the dataset was last modified.</p>",
          "shape": "Timestamp"
        },
        "MetricList": {
          "documentation": "<p>A list of the metrics defined by the dataset.</p>",
          "shape": "MetricList"
        },
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset.</p>",
          "shape": "Arn"
        },
        "MetricSetDescription": {
          "documentation": "<p>The dataset's description.</p>",
          "shape": "MetricSetDescription"
        },
        "MetricSetFrequency": {
          "documentation": "<p>The interval at which the data will be analyzed for anomalies.</p>",
          "shape": "Frequency"
        },
        "MetricSetName": {
          "documentation": "<p>The name of the dataset.</p>",
          "shape": "MetricSetName"
        },
        "MetricSource": {
          "documentation": "<p>Contains information about the dataset's source data.</p>",
          "shape": "MetricSource"
        },
        "Offset": {
          "box": true,
          "documentation": "<p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>",
          "shape": "Offset"
        },
        "TimestampColumn": {
          "documentation": "<p>Contains information about the column used for tracking time in your source data.</p>",
          "shape": "TimestampColumn"
        },
        "Timezone": {
          "documentation": "<p>The time zone in which the dataset's data was recorded.</p>",
          "shape": "Timezone"
        }
      },
      "type": "structure"
    },
    "DetectMetricSetConfigRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>An anomaly detector ARN.</p>",
          "shape": "Arn"
        },
        "AutoDetectionMetricSource": {
          "documentation": "<p>A data source.</p>",
          "shape": "AutoDetectionMetricSource"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "AutoDetectionMetricSource"
      ],
      "type": "structure"
    },
    "DetectMetricSetConfigResponse": {
      "members": {
        "DetectedMetricSetConfig": {
          "documentation": "<p>The inferred dataset configuration for the datasource.</p>",
          "shape": "DetectedMetricSetConfig"
        }
      },
      "type": "structure"
    },
    "DetectedCsvFormatDescriptor": {
      "documentation": "<p>Properties of an inferred CSV format.</p>",
      "members": {
        "Charset": {
          "documentation": "<p>The format's charset.</p>",
          "shape": "DetectedField"
        },
        "ContainsHeader": {
          "documentation": "<p>Whether the format includes a header.</p>",
          "shape": "DetectedField"
        },
        "Delimiter": {
          "documentation": "<p>The format's delimiter.</p>",
          "shape": "DetectedField"
        },
        "FileCompression": {
          "documentation": "<p>The format's file compression.</p>",
          "shape": "DetectedField"
        },
        "HeaderList": {
          "documentation": "<p>The format's header list.</p>",
          "shape": "DetectedField"
        },
        "QuoteSymbol": {
          "documentation": "<p>The format's quote symbol.</p>",
          "shape": "DetectedField"
        }
      },
      "type": "structure"
    },
    "DetectedField": {
      "documentation": "<p>An inferred field.</p>",
      "members": {
        "Confidence": {
          "documentation": "<p>The field's confidence.</p>",
          "shape": "Confidence"
        },
        "Message": {
          "documentation": "<p>The field's message.</p>",
          "shape": "Message"
        },
        "Value": {
          "documentation": "<p>The field's value.</p>",
          "shape": "AttributeValue"
        }
      },
      "type": "structure"
    },
    "DetectedFileFormatDescriptor": {
      "documentation": "<p>Properties of an inferred data format.</p>",
      "members": {
        "CsvFormatDescriptor": {
          "documentation": "<p>Details about a CSV format.</p>",
          "shape": "DetectedCsvFormatDescriptor"
        },
        "JsonFormatDescriptor": {
          "documentation": "<p>Details about a JSON format.</p>",
          "shape": "DetectedJsonFormatDescriptor"
        }
      },
      "type": "structure"
    },
    "DetectedJsonFormatDescriptor": {
      "documentation": "<p>A detected JSON format descriptor.</p>",
      "members": {
        "Charset": {
          "documentation": "<p>The format's character set.</p>",
          "shape": "DetectedField"
        },
        "FileCompression": {
          "documentation": "<p>The format's file compression.</p>",
          "shape": "DetectedField"
        }
      },
      "type": "structure"
    },
    "DetectedMetricSetConfig": {
      "documentation": "<p>An inferred dataset configuration.</p>",
      "members": {
        "MetricSetFrequency": {
          "documentation": "<p>The dataset's interval.</p>",
          "shape": "DetectedField"
        },
        "MetricSource": {
          "documentation": "<p>The dataset's data source.</p>",
          "shape": "DetectedMetricSource"
        },
        "Offset": {
          "documentation": "<p>The dataset's offset.</p>",
          "shape": "DetectedField"
        }
      },
      "type": "structure"
    },
    "DetectedMetricSource": {
      "documentation": "<p>An inferred data source.</p>",
      "members": {
        "S3SourceConfig": {
          "documentation": "<p>The data source's source configuration.</p>",
          "shape": "DetectedS3SourceConfig"
        }
      },
      "type": "structure"
    },
    "DetectedS3SourceConfig": {
      "documentation": "<p>An inferred source configuration.</p>",
      "members": {
        "FileFormatDescriptor": {
          "documentation": "<p>The source's file format descriptor.</p>",
          "shape": "DetectedFileFormatDescriptor"
        }
      },
      "type": "structure"
    },
    "DimensionContribution": {
      "documentation": "<p>Details about a dimension that contributed to an anomaly.</p>",
      "members": {
        "DimensionName": {
          "documentation": "<p>The name of the dimension.</p>",
          "shape": "ColumnName"
        },
        "DimensionValueContributionList": {
          "documentation": "<p>A list of dimension values that contributed to the anomaly.</p>",
          "shape": "DimensionValueContributionList"
        }
      },
      "type": "structure"
    },
    "DimensionContributionList": {
      "member": {
        "shape": "DimensionContribution"
      },
      "type": "list"
    },
    "DimensionFilter": {
      "documentation": "<p>The dimension filter, containing DimensionName and DimensionValueList.</p>",
      "members": {
        "DimensionName": {
          "documentation": "<p>The name of the dimension to filter on.</p>",
          "shape": "ColumnName"
        },
        "DimensionValueList": {
          "documentation": "<p>The list of values for the dimension specified in DimensionName that you want to filter on.</p>",
          "shape": "DimensionValueList"
        }
      },
      "type": "structure"
    },
    "DimensionFilterList": {
      "max": 5,
      "member": {
        "shape": "DimensionFilter"
      },
      "min": 1,
      "type": "list"
    },
    "DimensionList": {
      "member": {
        "shape": "ColumnName"
      },
      "min": 1,
      "type": "list"
    },
    "DimensionNameValue": {
      "documentation": "<p>A dimension name and value.</p>",
      "members": {
        "DimensionName": {
          "documentation": "<p>The name of the dimension.</p>",
          "shape": "ColumnName"
        },
        "DimensionValue": {
          "documentation": "<p>The value of the dimension.</p>",
          "shape": "DimensionValue"
        }
      },
      "required": [
        "DimensionName",
        "DimensionValue"
      ],
      "type": "structure"
    },
    "DimensionNameValueList": {
      "member": {
        "shape": "DimensionNameValue"
      },
      "type": "list"
    },
    "DimensionValue": {
      "type": "string"
    },
    "DimensionValueContribution": {
      "documentation": "<p>The severity of a value of a dimension that contributed to an anomaly.</p>",
      "members": {
        "ContributionScore": {
          "documentation": "<p>The severity score of the value.</p>",
          "shape": "Score"
        },
        "DimensionValue": {
          "documentation": "<p>The value of the dimension.</p>",
          "shape": "DimensionValue"
        }
      },
      "type": "structure"
    },
    "DimensionValueContributionList": {
      "member": {
        "shape": "DimensionValueContribution"
      },
      "type": "list"
    },
    "DimensionValueList": {
      "max": 10,
      "member": {
        "shape": "DimensionValue"
      },
      "min": 1,
      "type": "list"
    },
    "Double": {
      "type": "double"
    },
    "ErrorMessage": {
      "max": 256,
      "type": "string"
    },
    "ExecutionList": {
      "member": {
        "shape": "ExecutionStatus"
      },
      "type": "list"
    },
    "ExecutionStatus": {
      "documentation": "<p>The status of an anomaly detector run.</p>",
      "members": {
        "FailureReason": {
          "documentation": "<p>The reason that the run failed, if applicable.</p>",
          "shape": "AnomalyDetectionTaskStatusMessage"
        },
        "Status": {
          "documentation": "<p>The run's status.</p>",
          "shape": "AnomalyDetectionTaskStatus"
        },
        "Timestamp": {
          "documentation": "<p>The run's timestamp.</p>",
          "shape": "TimestampString"
        }
      },
      "type": "structure"
    },
    "FieldName": {
      "type": "string"
    },
    "FileFormatDescriptor": {
      "documentation": "<p>Contains information about a source file's formatting.</p>",
      "members": {
        "CsvFormatDescriptor": {
          "documentation": "<p>Contains information about how a source CSV data file should be analyzed.</p>",
          "shape": "CsvFormatDescriptor"
        },
        "JsonFormatDescriptor": {
          "documentation": "<p>Contains information about how a source JSON data file should be analyzed.</p>",
          "shape": "JsonFormatDescriptor"
        }
      },
      "type": "structure"
    },
    "Filter": {
      "documentation": "<p>Describes a filter for choosing a subset of dimension values. Each filter consists of the dimension that you want to include and the condition statement. The condition statement is specified in the <code>FilterOperation</code> object.</p>",
      "members": {
        "DimensionValue": {
          "documentation": "<p>The value that you want to include in the filter.</p>",
          "shape": "DimensionValue"
        },
        "FilterOperation": {
          "documentation": "<p>The condition to apply.</p>",
          "shape": "FilterOperation"
        }
      },
      "type": "structure"
    },
    "FilterList": {
      "member": {
        "shape": "Filter"
      },
      "min": 1,
      "type": "list"
    },
    "FilterOperation": {
      "enum": [
        "EQUALS"
      ],
      "type": "string"
    },
    "FlowName": {
      "max": 256,
      "pattern": "[a-zA-Z0-9][\\w!@#.-]+",
      "type": "string"
    },
    "Frequency": {
      "enum": [
        "P1D",
        "PT1H",
        "PT10M",
        "PT5M"
      ],
      "type": "string"
    },
    "GetAnomalyGroupRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        }
      },
      "required": [
        "AnomalyGroupId",
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "GetAnomalyGroupResponse": {
      "members": {
        "AnomalyGroup": {
          "documentation": "<p>Details about the anomaly group.</p>",
          "shape": "AnomalyGroup"
        }
      },
      "type": "structure"
    },
    "GetDataQualityMetricsRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector that you want to investigate.</p>",
          "shape": "Arn"
        },
        "MetricSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of a specific data quality metric set.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "GetDataQualityMetricsResponse": {
      "members": {
        "AnomalyDetectorDataQualityMetricList": {
          "documentation": "<p>A list of the data quality metrics for the <code>AnomalyDetectorArn</code> that you requested.</p>",
          "shape": "AnomalyDetectorDataQualityMetricList"
        }
      },
      "type": "structure"
    },
    "GetFeedbackRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "AnomalyGroupTimeSeriesFeedback": {
          "documentation": "<p>The anomalous metric and group ID.</p>",
          "shape": "AnomalyGroupTimeSeries"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "AnomalyGroupTimeSeriesFeedback"
      ],
      "type": "structure"
    },
    "GetFeedbackResponse": {
      "members": {
        "AnomalyGroupTimeSeriesFeedback": {
          "documentation": "<p>Feedback for an anomalous metric.</p>",
          "shape": "TimeSeriesFeedbackList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "GetSampleDataRequest": {
      "members": {
        "S3SourceConfig": {
          "documentation": "<p>A datasource bucket in Amazon S3.</p>",
          "shape": "SampleDataS3SourceConfig"
        }
      },
      "type": "structure"
    },
    "GetSampleDataResponse": {
      "members": {
        "HeaderValues": {
          "documentation": "<p>A list of header labels for the records.</p>",
          "shape": "HeaderValueList"
        },
        "SampleRows": {
          "documentation": "<p>A list of records.</p>",
          "shape": "SampleRows"
        }
      },
      "type": "structure"
    },
    "HeaderList": {
      "member": {
        "shape": "ColumnName"
      },
      "type": "list"
    },
    "HeaderValue": {
      "type": "string"
    },
    "HeaderValueList": {
      "member": {
        "shape": "HeaderValue"
      },
      "type": "list"
    },
    "HistoricalDataPath": {
      "max": 1024,
      "pattern": "^s3://[a-z0-9].+$",
      "type": "string"
    },
    "HistoricalDataPathList": {
      "max": 1,
      "member": {
        "shape": "HistoricalDataPath"
      },
      "min": 1,
      "type": "list"
    },
    "Integer": {
      "type": "integer"
    },
    "InterMetricImpactDetails": {
      "documentation": "<p>Aggregated details about the measures contributing to the anomaly group, and the measures potentially impacted by the anomaly group.</p> <p/>",
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "ContributionPercentage": {
          "documentation": "<p>For potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>), the percentage contribution the measure has in causing the anomalies.</p>",
          "shape": "MetricChangePercentage"
        },
        "MetricName": {
          "documentation": "<p>The name of the measure.</p>",
          "shape": "MetricName"
        },
        "RelationshipType": {
          "documentation": "<p>Whether a measure is a potential cause of the anomaly group (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>), or whether the measure is impacted by the anomaly group (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>).</p>",
          "shape": "RelationshipType"
        }
      },
      "type": "structure"
    },
    "InterMetricImpactList": {
      "member": {
        "shape": "InterMetricImpactDetails"
      },
      "type": "list"
    },
    "InternalServerException": {
      "documentation": "<p>The request processing has failed because of an unknown error, exception, or failure.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ItemizedMetricStats": {
      "documentation": "<p>Aggregated statistics about a measure affected by an anomaly.</p>",
      "members": {
        "MetricName": {
          "documentation": "<p>The name of the measure.</p>",
          "shape": "ColumnName"
        },
        "OccurrenceCount": {
          "documentation": "<p>The number of times that the measure appears.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "ItemizedMetricStatsList": {
      "member": {
        "shape": "ItemizedMetricStats"
      },
      "type": "list"
    },
    "JsonFileCompression": {
      "enum": [
        "NONE",
        "GZIP"
      ],
      "type": "string"
    },
    "JsonFormatDescriptor": {
      "documentation": "<p>Contains information about how a source JSON data file should be analyzed.</p>",
      "members": {
        "Charset": {
          "documentation": "<p>The character set in which the source JSON file is written.</p>",
          "shape": "Charset"
        },
        "FileCompression": {
          "documentation": "<p>The level of compression of the source CSV file.</p>",
          "shape": "JsonFileCompression"
        }
      },
      "type": "structure"
    },
    "KmsKeyArn": {
      "max": 2048,
      "min": 20,
      "pattern": "arn:aws.*:kms:.*:[0-9]{12}:key/[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
      "type": "string"
    },
    "LambdaConfiguration": {
      "documentation": "<p>Contains information about a Lambda configuration.</p>",
      "members": {
        "LambdaArn": {
          "documentation": "<p>The ARN of the Lambda function.</p>",
          "shape": "Arn"
        },
        "RoleArn": {
          "documentation": "<p>The ARN of an IAM role that has permission to invoke the Lambda function.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "RoleArn",
        "LambdaArn"
      ],
      "type": "structure"
    },
    "ListAlertsRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the alert's detector.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results that will be displayed by the request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>If the result of the previous request is truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAlertsResponse": {
      "members": {
        "AlertSummaryList": {
          "documentation": "<p>Contains information about an alert.</p>",
          "shape": "AlertSummaryList"
        },
        "NextToken": {
          "documentation": "<p>If the response is truncated, the service returns this token. To retrieve the next set of results, use this token in the next request.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAnomalyDetectorsRequest": {
      "members": {
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAnomalyDetectorsResponse": {
      "members": {
        "AnomalyDetectorSummaryList": {
          "documentation": "<p>A list of anomaly detectors in the account in the current region.</p>",
          "shape": "AnomalyDetectorSummaryList"
        },
        "NextToken": {
          "documentation": "<p>If the response is truncated, the service returns this token. To retrieve the next set of results, use the token in the next request.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAnomalyGroupRelatedMetricsRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "shape": "NextToken"
        },
        "RelationshipTypeFilter": {
          "documentation": "<p>Filter for potential causes (<code>CAUSE_OF_INPUT_ANOMALY_GROUP</code>) or downstream effects (<code>EFFECT_OF_INPUT_ANOMALY_GROUP</code>) of the anomaly group.</p>",
          "shape": "RelationshipType"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "AnomalyGroupId"
      ],
      "type": "structure"
    },
    "ListAnomalyGroupRelatedMetricsResponse": {
      "members": {
        "InterMetricImpactList": {
          "documentation": "<p>Aggregated details about the measures contributing to the anomaly group, and the measures potentially impacted by the anomaly group.</p>",
          "shape": "InterMetricImpactList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAnomalyGroupSummariesRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "shape": "NextToken"
        },
        "SensitivityThreshold": {
          "documentation": "<p>The minimum severity score for inclusion in the output.</p>",
          "shape": "SensitivityThreshold"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "SensitivityThreshold"
      ],
      "type": "structure"
    },
    "ListAnomalyGroupSummariesResponse": {
      "members": {
        "AnomalyGroupStatistics": {
          "documentation": "<p>Aggregated details about the anomaly groups.</p>",
          "shape": "AnomalyGroupStatistics"
        },
        "AnomalyGroupSummaryList": {
          "documentation": "<p>A list of anomaly group summaries.</p>",
          "shape": "AnomalyGroupSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAnomalyGroupTimeSeriesRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "MetricName": {
          "documentation": "<p>The name of the measure field.</p>",
          "shape": "MetricName"
        },
        "NextToken": {
          "documentation": "<p>Specify the pagination token that's returned by a previous request to retrieve the next page of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "AnomalyGroupId",
        "MetricName"
      ],
      "type": "structure"
    },
    "ListAnomalyGroupTimeSeriesResponse": {
      "members": {
        "AnomalyGroupId": {
          "documentation": "<p>The ID of the anomaly group.</p>",
          "shape": "UUID"
        },
        "MetricName": {
          "documentation": "<p>The name of the measure field.</p>",
          "shape": "MetricName"
        },
        "NextToken": {
          "documentation": "<p>The pagination token that's included if more results are available.</p>",
          "shape": "NextToken"
        },
        "TimeSeriesList": {
          "documentation": "<p>A list of anomalous metrics.</p>",
          "shape": "TimeSeriesList"
        },
        "TimestampList": {
          "documentation": "<p>Timestamps for the anomalous metrics.</p>",
          "shape": "TimestampList"
        }
      },
      "type": "structure"
    },
    "ListMetricSetsRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the anomaly detector containing the metrics sets to list.</p>",
          "shape": "Arn"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>If the result of the previous request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListMetricSetsResponse": {
      "members": {
        "MetricSetSummaryList": {
          "documentation": "<p>A list of the datasets in the AWS Region, with configuration details for each.</p>",
          "shape": "MetricSetSummaryList"
        },
        "NextToken": {
          "documentation": "<p>If the response is truncated, the list call returns this token. To retrieve the next set of results, use the token in the next list request. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The resource's Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The resource's tags.</p>",
          "locationName": "Tags",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "Message": {
      "type": "string"
    },
    "Metric": {
      "documentation": "<p>A calculation made by contrasting a measure and a dimension from your source data.</p>",
      "members": {
        "AggregationFunction": {
          "documentation": "<p>The function with which the metric is calculated.</p>",
          "shape": "AggregationFunction"
        },
        "MetricName": {
          "documentation": "<p>The name of the metric.</p>",
          "shape": "ColumnName"
        },
        "Namespace": {
          "documentation": "<p>The namespace for the metric.</p>",
          "shape": "Namespace"
        }
      },
      "required": [
        "MetricName",
        "AggregationFunction"
      ],
      "type": "structure"
    },
    "MetricChangePercentage": {
      "max": 100.0,
      "min": 0.0,
      "type": "double"
    },
    "MetricLevelImpact": {
      "documentation": "<p>Details about a measure affected by an anomaly.</p>",
      "members": {
        "ContributionMatrix": {
          "documentation": "<p>Details about the dimensions that contributed to the anomaly.</p>",
          "shape": "ContributionMatrix"
        },
        "MetricName": {
          "documentation": "<p>The name of the measure.</p>",
          "shape": "MetricName"
        },
        "NumTimeSeries": {
          "documentation": "<p>The number of anomalous metrics for the measure.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "MetricLevelImpactList": {
      "member": {
        "shape": "MetricLevelImpact"
      },
      "type": "list"
    },
    "MetricList": {
      "member": {
        "shape": "Metric"
      },
      "min": 1,
      "type": "list"
    },
    "MetricName": {
      "max": 256,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "MetricNameList": {
      "max": 5,
      "member": {
        "shape": "MetricName"
      },
      "min": 1,
      "type": "list"
    },
    "MetricSetDataQualityMetric": {
      "documentation": "<p>An array of <code>DataQualityMetric</code> objects that describes one or more data quality metrics.</p>",
      "members": {
        "DataQualityMetricList": {
          "documentation": "<p>The array of data quality metrics contained in the data quality metric set.</p>",
          "shape": "DataQualityMetricList"
        },
        "MetricSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data quality metric array.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "MetricSetDataQualityMetricList": {
      "member": {
        "shape": "MetricSetDataQualityMetric"
      },
      "type": "list"
    },
    "MetricSetDescription": {
      "max": 256,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "MetricSetDimensionFilter": {
      "documentation": "<p>Describes a list of filters for choosing a subset of dimension values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation. </p>",
      "members": {
        "FilterList": {
          "documentation": "<p>The list of filters that you are applying.</p>",
          "shape": "FilterList"
        },
        "Name": {
          "documentation": "<p>The dimension that you want to filter on.</p>",
          "shape": "ColumnName"
        }
      },
      "type": "structure"
    },
    "MetricSetDimensionFilterList": {
      "member": {
        "shape": "MetricSetDimensionFilter"
      },
      "type": "list"
    },
    "MetricSetName": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*",
      "type": "string"
    },
    "MetricSetSummary": {
      "documentation": "<p>Contains information about a dataset.</p>",
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to which the dataset belongs.</p>",
          "shape": "Arn"
        },
        "CreationTime": {
          "documentation": "<p>The time at which the dataset was created.</p>",
          "shape": "Timestamp"
        },
        "LastModificationTime": {
          "documentation": "<p>The time at which the dataset was last modified.</p>",
          "shape": "Timestamp"
        },
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset.</p>",
          "shape": "Arn"
        },
        "MetricSetDescription": {
          "documentation": "<p>The description of the dataset.</p>",
          "shape": "MetricSetDescription"
        },
        "MetricSetName": {
          "documentation": "<p>The name of the dataset.</p>",
          "shape": "MetricSetName"
        },
        "Tags": {
          "documentation": "<p>The dataset's <a href=\"https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html\">tags</a>.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MetricSetSummaryList": {
      "member": {
        "shape": "MetricSetSummary"
      },
      "type": "list"
    },
    "MetricSource": {
      "documentation": "<p>Contains information about source data used to generate metrics.</p>",
      "members": {
        "AppFlowConfig": {
          "documentation": "<p>Details about an AppFlow datasource.</p>",
          "shape": "AppFlowConfig"
        },
        "AthenaSourceConfig": {
          "documentation": "<p>Details about an Amazon Athena datasource.</p>",
          "shape": "AthenaSourceConfig"
        },
        "CloudWatchConfig": {
          "documentation": "<p>Details about an Amazon CloudWatch monitoring datasource.</p>",
          "shape": "CloudWatchConfig"
        },
        "RDSSourceConfig": {
          "documentation": "<p>Details about an Amazon Relational Database Service (RDS) datasource.</p>",
          "shape": "RDSSourceConfig"
        },
        "RedshiftSourceConfig": {
          "documentation": "<p>Details about an Amazon Redshift database datasource.</p>",
          "shape": "RedshiftSourceConfig"
        },
        "S3SourceConfig": {
          "shape": "S3SourceConfig"
        }
      },
      "type": "structure"
    },
    "MetricValue": {
      "type": "double"
    },
    "MetricValueList": {
      "member": {
        "shape": "MetricValue"
      },
      "type": "list"
    },
    "Namespace": {
      "max": 255,
      "min": 1,
      "pattern": "[^:].*",
      "type": "string"
    },
    "NextToken": {
      "max": 3000,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NumberAttributeValue": {
      "type": "string"
    },
    "NumberListAttributeValue": {
      "member": {
        "shape": "NumberAttributeValue"
      },
      "type": "list"
    },
    "Offset": {
      "max": 432000,
      "min": 0,
      "type": "integer"
    },
    "PoirotSecretManagerArn": {
      "max": 256,
      "pattern": "arn:([a-z\\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+",
      "type": "string"
    },
    "PutFeedbackRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the anomaly detector.</p>",
          "shape": "Arn"
        },
        "AnomalyGroupTimeSeriesFeedback": {
          "documentation": "<p>Feedback for an anomalous metric.</p>",
          "shape": "AnomalyGroupTimeSeriesFeedback"
        }
      },
      "required": [
        "AnomalyDetectorArn",
        "AnomalyGroupTimeSeriesFeedback"
      ],
      "type": "structure"
    },
    "PutFeedbackResponse": {
      "members": {},
      "type": "structure"
    },
    "QuotaCode": {
      "type": "string"
    },
    "QuoteSymbol": {
      "max": 1,
      "pattern": "[^\\r\\n]|^$",
      "type": "string"
    },
    "RDSDatabaseIdentifier": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\\-]*$",
      "type": "string"
    },
    "RDSDatabaseName": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9_.]+",
      "type": "string"
    },
    "RDSSourceConfig": {
      "documentation": "<p>Contains information about the Amazon Relational Database Service (RDS) configuration.</p>",
      "members": {
        "DBInstanceIdentifier": {
          "documentation": "<p>A string identifying the database instance.</p>",
          "shape": "RDSDatabaseIdentifier"
        },
        "DatabaseHost": {
          "documentation": "<p>The host name of the database.</p>",
          "shape": "DatabaseHost"
        },
        "DatabaseName": {
          "documentation": "<p>The name of the RDS database.</p>",
          "shape": "RDSDatabaseName"
        },
        "DatabasePort": {
          "box": true,
          "documentation": "<p>The port number where the database can be accessed.</p>",
          "shape": "DatabasePort"
        },
        "RoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the role.</p>",
          "shape": "Arn"
        },
        "SecretManagerArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager role.</p>",
          "shape": "PoirotSecretManagerArn"
        },
        "TableName": {
          "documentation": "<p>The name of the table in the database.</p>",
          "shape": "TableName"
        },
        "VpcConfiguration": {
          "documentation": "<p>An object containing information about the Amazon Virtual Private Cloud (VPC) configuration.</p>",
          "shape": "VpcConfiguration"
        }
      },
      "type": "structure"
    },
    "RedshiftClusterIdentifier": {
      "max": 63,
      "min": 1,
      "pattern": "^[a-z](?!.*--)(?!.*-$)[0-9a-z\\-]*$",
      "type": "string"
    },
    "RedshiftDatabaseName": {
      "max": 100,
      "min": 1,
      "pattern": "[a-zA-Z0-9_.]+",
      "type": "string"
    },
    "RedshiftSourceConfig": {
      "documentation": "<p>Provides information about the Amazon Redshift database configuration.</p>",
      "members": {
        "ClusterIdentifier": {
          "documentation": "<p>A string identifying the Redshift cluster.</p>",
          "shape": "RedshiftClusterIdentifier"
        },
        "DatabaseHost": {
          "documentation": "<p>The name of the database host.</p>",
          "shape": "DatabaseHost"
        },
        "DatabaseName": {
          "documentation": "<p>The Redshift database name.</p>",
          "shape": "RedshiftDatabaseName"
        },
        "DatabasePort": {
          "box": true,
          "documentation": "<p>The port number where the database can be accessed.</p>",
          "shape": "DatabasePort"
        },
        "RoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the role providing access to the database.</p>",
          "shape": "Arn"
        },
        "SecretManagerArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the AWS Secrets Manager role.</p>",
          "shape": "PoirotSecretManagerArn"
        },
        "TableName": {
          "documentation": "<p>The table name of the Redshift database.</p>",
          "shape": "TableName"
        },
        "VpcConfiguration": {
          "documentation": "<p>Contains information about the Amazon Virtual Private Cloud (VPC) configuration.</p>",
          "shape": "VpcConfiguration"
        }
      },
      "type": "structure"
    },
    "RelatedColumnName": {
      "max": 256,
      "min": 1,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "RelationshipType": {
      "enum": [
        "CAUSE_OF_INPUT_ANOMALY_GROUP",
        "EFFECT_OF_INPUT_ANOMALY_GROUP"
      ],
      "type": "string"
    },
    "ResourceId": {
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource cannot be found. Check the ARN of the resource and try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        },
        "ResourceId": {
          "documentation": "<p>The ID of the resource.</p>",
          "shape": "ResourceId"
        },
        "ResourceType": {
          "documentation": "<p>The type of the resource.</p>",
          "shape": "ResourceType"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ResourceType": {
      "type": "string"
    },
    "S3SourceConfig": {
      "documentation": "<p>Contains information about the configuration of the S3 bucket that contains source files.</p>",
      "members": {
        "FileFormatDescriptor": {
          "documentation": "<p>Contains information about a source file's formatting.</p>",
          "shape": "FileFormatDescriptor"
        },
        "HistoricalDataPathList": {
          "documentation": "<p>A list of paths to the historical data files.</p>",
          "shape": "HistoricalDataPathList"
        },
        "RoleArn": {
          "documentation": "<p>The ARN of an IAM role that has read and write access permissions to the source S3 bucket.</p>",
          "shape": "Arn"
        },
        "TemplatedPathList": {
          "documentation": "<p>A list of templated paths to the source files.</p>",
          "shape": "TemplatedPathList"
        }
      },
      "type": "structure"
    },
    "SNSConfiguration": {
      "documentation": "<p>Contains information about the SNS topic to which you want to send your alerts and the IAM role that has access to that topic.</p>",
      "members": {
        "RoleArn": {
          "documentation": "<p>The ARN of the IAM role that has access to the target SNS topic.</p>",
          "shape": "Arn"
        },
        "SnsFormat": {
          "documentation": "<p>The format of the SNS topic.</p> <ul> <li> <p> <code>JSON</code> \u2013 Send JSON alerts with an anomaly ID and a link to the anomaly detail page. This is the default.</p> </li> <li> <p> <code>LONG_TEXT</code> \u2013 Send human-readable alerts with information about the impacted timeseries and a link to the anomaly detail page. We recommend this for email.</p> </li> <li> <p> <code>SHORT_TEXT</code> \u2013 Send human-readable alerts with a link to the anomaly detail page. We recommend this for SMS.</p> </li> </ul>",
          "shape": "SnsFormat"
        },
        "SnsTopicArn": {
          "documentation": "<p>The ARN of the target SNS topic.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "RoleArn",
        "SnsTopicArn"
      ],
      "type": "structure"
    },
    "SampleDataS3SourceConfig": {
      "documentation": "<p>Contains information about the source configuration in Amazon S3.</p>",
      "members": {
        "FileFormatDescriptor": {
          "shape": "FileFormatDescriptor"
        },
        "HistoricalDataPathList": {
          "documentation": "<p>An array of strings containing the historical set of data paths.</p>",
          "shape": "HistoricalDataPathList"
        },
        "RoleArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the role.</p>",
          "shape": "Arn"
        },
        "TemplatedPathList": {
          "documentation": "<p>An array of strings containing the list of templated paths.</p>",
          "shape": "TemplatedPathList"
        }
      },
      "required": [
        "RoleArn",
        "FileFormatDescriptor"
      ],
      "type": "structure"
    },
    "SampleRow": {
      "member": {
        "shape": "DataItem"
      },
      "type": "list"
    },
    "SampleRows": {
      "member": {
        "shape": "SampleRow"
      },
      "type": "list"
    },
    "Score": {
      "max": 100.0,
      "min": 0.0,
      "type": "double"
    },
    "SecurityGroupId": {
      "max": 255,
      "min": 1,
      "pattern": "[-0-9a-zA-Z]+",
      "type": "string"
    },
    "SecurityGroupIdList": {
      "member": {
        "shape": "SecurityGroupId"
      },
      "type": "list"
    },
    "SensitivityThreshold": {
      "max": 100,
      "min": 0,
      "type": "integer"
    },
    "ServiceCode": {
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The request exceeded the service's quotas. Check the service quotas and try again.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        },
        "QuotaCode": {
          "documentation": "<p>The quota code.</p>",
          "shape": "QuotaCode"
        },
        "ResourceId": {
          "documentation": "<p>The ID of the resource.</p>",
          "shape": "ResourceId"
        },
        "ResourceType": {
          "documentation": "<p>The type of the resource.</p>",
          "shape": "ResourceType"
        },
        "ServiceCode": {
          "documentation": "<p>The service code.</p>",
          "shape": "ServiceCode"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "SnsFormat": {
      "enum": [
        "LONG_TEXT",
        "SHORT_TEXT",
        "JSON"
      ],
      "type": "string"
    },
    "StringAttributeValue": {
      "type": "string"
    },
    "StringListAttributeValue": {
      "member": {
        "shape": "StringAttributeValue"
      },
      "type": "list"
    },
    "SubnetId": {
      "max": 255,
      "pattern": "[\\-0-9a-zA-Z]+",
      "type": "string"
    },
    "SubnetIdList": {
      "member": {
        "shape": "SubnetId"
      },
      "type": "list"
    },
    "TableName": {
      "max": 100,
      "min": 1,
      "pattern": "^[a-zA-Z][a-zA-Z0-9_.]*$",
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The resource's Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>Tags to apply to the resource. Tag keys and values can contain letters, numbers, spaces, and the following symbols: <code>_.:/=+@-</code> </p>",
          "locationName": "tags",
          "shape": "TagMap"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "type": "string"
    },
    "TemplatedPath": {
      "max": 1024,
      "pattern": "^s3://[a-zA-Z0-9_\\-\\/ {}=]+$",
      "type": "string"
    },
    "TemplatedPathList": {
      "max": 1,
      "member": {
        "shape": "TemplatedPath"
      },
      "min": 1,
      "type": "list"
    },
    "TimeSeries": {
      "documentation": "<p>Details about a metric. A metric is an aggregation of the values of a measure for a dimension value, such as <i>availability</i> in the <i>us-east-1</i> Region.</p>",
      "members": {
        "DimensionList": {
          "documentation": "<p>The dimensions of the metric.</p>",
          "shape": "DimensionNameValueList"
        },
        "MetricValueList": {
          "documentation": "<p>The values for the metric.</p>",
          "shape": "MetricValueList"
        },
        "TimeSeriesId": {
          "documentation": "<p>The ID of the metric.</p>",
          "shape": "TimeSeriesId"
        }
      },
      "required": [
        "TimeSeriesId",
        "DimensionList",
        "MetricValueList"
      ],
      "type": "structure"
    },
    "TimeSeriesFeedback": {
      "documentation": "<p>Details about feedback submitted for an anomalous metric.</p>",
      "members": {
        "IsAnomaly": {
          "documentation": "<p>Feedback on whether the metric is a legitimate anomaly.</p>",
          "shape": "Boolean"
        },
        "TimeSeriesId": {
          "documentation": "<p>The ID of the metric.</p>",
          "shape": "TimeSeriesId"
        }
      },
      "type": "structure"
    },
    "TimeSeriesFeedbackList": {
      "member": {
        "shape": "TimeSeriesFeedback"
      },
      "type": "list"
    },
    "TimeSeriesId": {
      "max": 520,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "TimeSeriesList": {
      "member": {
        "shape": "TimeSeries"
      },
      "type": "list"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TimestampColumn": {
      "documentation": "<p>Contains information about the column used to track time in a source data file.</p>",
      "members": {
        "ColumnFormat": {
          "documentation": "<p>The format of the timestamp column.</p>",
          "shape": "DateTimeFormat"
        },
        "ColumnName": {
          "documentation": "<p>The name of the timestamp column.</p>",
          "shape": "ColumnName"
        }
      },
      "type": "structure"
    },
    "TimestampList": {
      "member": {
        "shape": "TimestampString"
      },
      "type": "list"
    },
    "TimestampString": {
      "max": 60,
      "pattern": "^([12]\\d{3})-(1[0-2]|0[1-9])-(0[1-9]|[12]\\d|3[01])T([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d)(Z|(\\+|\\-)(0\\d|1[0-2]):([0-5]\\d)(\\[[[:alnum:]\\/\\_]+\\])?)$",
      "type": "string"
    },
    "Timezone": {
      "max": 60,
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "TooManyRequestsException": {
      "documentation": "<p>The request was denied due to too many requests being submitted at the same time.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "Message"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "UUID": {
      "max": 63,
      "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The resource's Amazon Resource Name (ARN).</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>Keys to remove from the resource's tags.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAlertRequest": {
      "members": {
        "Action": {
          "documentation": "<p>Action that will be triggered when there is an alert.</p>",
          "shape": "Action"
        },
        "AlertArn": {
          "documentation": "<p>The ARN of the alert to update.</p>",
          "shape": "Arn"
        },
        "AlertDescription": {
          "documentation": "<p>A description of the alert.</p>",
          "shape": "AlertDescription"
        },
        "AlertFilters": {
          "documentation": "<p>The configuration of the alert filters, containing MetricList and DimensionFilterList.</p>",
          "shape": "AlertFilters"
        },
        "AlertSensitivityThreshold": {
          "documentation": "<p>An integer from 0 to 100 specifying the alert sensitivity threshold.</p>",
          "shape": "SensitivityThreshold"
        }
      },
      "required": [
        "AlertArn"
      ],
      "type": "structure"
    },
    "UpdateAlertResponse": {
      "members": {
        "AlertArn": {
          "documentation": "<p>The ARN of the updated alert.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateAnomalyDetectorRequest": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the detector to update.</p>",
          "shape": "Arn"
        },
        "AnomalyDetectorConfig": {
          "documentation": "<p>Contains information about the configuration to which the detector will be updated.</p>",
          "shape": "AnomalyDetectorConfig"
        },
        "AnomalyDetectorDescription": {
          "documentation": "<p>The updated detector description.</p>",
          "shape": "AnomalyDetectorDescription"
        },
        "KmsKeyArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an AWS KMS encryption key.</p>",
          "shape": "KmsKeyArn"
        }
      },
      "required": [
        "AnomalyDetectorArn"
      ],
      "type": "structure"
    },
    "UpdateAnomalyDetectorResponse": {
      "members": {
        "AnomalyDetectorArn": {
          "documentation": "<p>The ARN of the updated detector.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateMetricSetRequest": {
      "members": {
        "DimensionFilterList": {
          "documentation": "<p>Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.</p>",
          "shape": "MetricSetDimensionFilterList"
        },
        "DimensionList": {
          "documentation": "<p>The dimension list.</p>",
          "shape": "DimensionList"
        },
        "MetricList": {
          "documentation": "<p>The metric list.</p>",
          "shape": "MetricList"
        },
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset to update.</p>",
          "shape": "Arn"
        },
        "MetricSetDescription": {
          "documentation": "<p>The dataset's description.</p>",
          "shape": "MetricSetDescription"
        },
        "MetricSetFrequency": {
          "documentation": "<p>The dataset's interval.</p>",
          "shape": "Frequency"
        },
        "MetricSource": {
          "shape": "MetricSource"
        },
        "Offset": {
          "box": true,
          "documentation": "<p>After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.</p>",
          "shape": "Offset"
        },
        "TimestampColumn": {
          "documentation": "<p>The timestamp column.</p>",
          "shape": "TimestampColumn"
        }
      },
      "required": [
        "MetricSetArn"
      ],
      "type": "structure"
    },
    "UpdateMetricSetResponse": {
      "members": {
        "MetricSetArn": {
          "documentation": "<p>The ARN of the dataset.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by the AWS service. Check your input values and try again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Fields": {
          "documentation": "<p>Fields that failed validation.</p>",
          "shape": "ValidationExceptionFieldList"
        },
        "Message": {
          "shape": "Message"
        },
        "Reason": {
          "documentation": "<p>The reason that validation failed.</p>",
          "shape": "ValidationExceptionReason"
        }
      },
      "required": [
        "Message"
      ],
      "type": "structure"
    },
    "ValidationExceptionField": {
      "documentation": "<p>Contains information about a a field in a validation exception.</p>",
      "members": {
        "Message": {
          "documentation": "<p>The message with more information about the validation exception.</p>",
          "shape": "Message"
        },
        "Name": {
          "documentation": "<p>The name of the field.</p>",
          "shape": "FieldName"
        }
      },
      "required": [
        "Name",
        "Message"
      ],
      "type": "structure"
    },
    "ValidationExceptionFieldList": {
      "member": {
        "shape": "ValidationExceptionField"
      },
      "type": "list"
    },
    "ValidationExceptionReason": {
      "enum": [
        "UNKNOWN_OPERATION",
        "CANNOT_PARSE",
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ],
      "type": "string"
    },
    "VpcConfiguration": {
      "documentation": "<p>Contains configuration information about the Amazon Virtual Private Cloud (VPC).</p>",
      "members": {
        "SecurityGroupIdList": {
          "documentation": "<p>An array of strings containing the list of security groups.</p>",
          "shape": "SecurityGroupIdList"
        },
        "SubnetIdList": {
          "documentation": "<p>An array of strings containing the Amazon VPC subnet IDs (e.g., <code>subnet-0bb1c79de3EXAMPLE</code>.</p>",
          "shape": "SubnetIdList"
        }
      },
      "required": [
        "SubnetIdList",
        "SecurityGroupIdList"
      ],
      "type": "structure"
    }
  },
  "version": "2.0"
}
