{
  "documentation": "<p>This section provides documentation for the AWS RoboMaker API operations.</p>",
  "metadata": {
    "apiVersion": "2018-06-29",
    "endpointPrefix": "robomaker",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "RoboMaker",
    "serviceFullName": "AWS RoboMaker",
    "serviceId": "RoboMaker",
    "signatureVersion": "v4",
    "signingName": "robomaker",
    "uid": "robomaker-2018-06-29"
  },
  "operations": {
    "BatchDeleteWorlds": {
      "documentation": "<p>Deletes one or more worlds in a batch operation.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/batchDeleteWorlds"
      },
      "input": {
        "shape": "BatchDeleteWorldsRequest"
      },
      "name": "BatchDeleteWorlds",
      "output": {
        "shape": "BatchDeleteWorldsResponse"
      }
    },
    "BatchDescribeSimulationJob": {
      "documentation": "<p>Describes one or more simulation jobs.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/batchDescribeSimulationJob"
      },
      "input": {
        "shape": "BatchDescribeSimulationJobRequest"
      },
      "name": "BatchDescribeSimulationJob",
      "output": {
        "shape": "BatchDescribeSimulationJobResponse"
      }
    },
    "CancelDeploymentJob": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Cancels the specified deployment job.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cancelDeploymentJob"
      },
      "input": {
        "shape": "CancelDeploymentJobRequest"
      },
      "name": "CancelDeploymentJob",
      "output": {
        "shape": "CancelDeploymentJobResponse"
      }
    },
    "CancelSimulationJob": {
      "documentation": "<p>Cancels the specified simulation job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cancelSimulationJob"
      },
      "input": {
        "shape": "CancelSimulationJobRequest"
      },
      "name": "CancelSimulationJob",
      "output": {
        "shape": "CancelSimulationJobResponse"
      }
    },
    "CancelSimulationJobBatch": {
      "documentation": "<p>Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cancelSimulationJobBatch"
      },
      "input": {
        "shape": "CancelSimulationJobBatchRequest"
      },
      "name": "CancelSimulationJobBatch",
      "output": {
        "shape": "CancelSimulationJobBatchResponse"
      }
    },
    "CancelWorldExportJob": {
      "documentation": "<p>Cancels the specified export job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cancelWorldExportJob"
      },
      "input": {
        "shape": "CancelWorldExportJobRequest"
      },
      "name": "CancelWorldExportJob",
      "output": {
        "shape": "CancelWorldExportJobResponse"
      }
    },
    "CancelWorldGenerationJob": {
      "documentation": "<p>Cancels the specified world generator job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/cancelWorldGenerationJob"
      },
      "input": {
        "shape": "CancelWorldGenerationJobRequest"
      },
      "name": "CancelWorldGenerationJob",
      "output": {
        "shape": "CancelWorldGenerationJobResponse"
      }
    },
    "CreateDeploymentJob": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Deploys a specific version of a robot application to robots in a fleet.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important> <p>The robot application must have a numbered <code>applicationVersion</code> for consistency reasons. To create a new version, use <code>CreateRobotApplicationVersion</code> or see <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html\">Creating a Robot Application Version</a>. </p> <note> <p>After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible. </p> </note>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConcurrentDeploymentException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createDeploymentJob"
      },
      "input": {
        "shape": "CreateDeploymentJobRequest"
      },
      "name": "CreateDeploymentJob",
      "output": {
        "shape": "CreateDeploymentJobResponse"
      }
    },
    "CreateFleet": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Creates a fleet, a logical group of robots running the same robot application.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createFleet"
      },
      "input": {
        "shape": "CreateFleetRequest"
      },
      "name": "CreateFleet",
      "output": {
        "shape": "CreateFleetResponse"
      }
    },
    "CreateRobot": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Creates a robot.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createRobot"
      },
      "input": {
        "shape": "CreateRobotRequest"
      },
      "name": "CreateRobot",
      "output": {
        "shape": "CreateRobotResponse"
      }
    },
    "CreateRobotApplication": {
      "documentation": "<p>Creates a robot application. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createRobotApplication"
      },
      "input": {
        "shape": "CreateRobotApplicationRequest"
      },
      "name": "CreateRobotApplication",
      "output": {
        "shape": "CreateRobotApplicationResponse"
      }
    },
    "CreateRobotApplicationVersion": {
      "documentation": "<p>Creates a version of a robot application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createRobotApplicationVersion"
      },
      "input": {
        "shape": "CreateRobotApplicationVersionRequest"
      },
      "name": "CreateRobotApplicationVersion",
      "output": {
        "shape": "CreateRobotApplicationVersionResponse"
      }
    },
    "CreateSimulationApplication": {
      "documentation": "<p>Creates a simulation application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createSimulationApplication"
      },
      "input": {
        "shape": "CreateSimulationApplicationRequest"
      },
      "name": "CreateSimulationApplication",
      "output": {
        "shape": "CreateSimulationApplicationResponse"
      }
    },
    "CreateSimulationApplicationVersion": {
      "documentation": "<p>Creates a simulation application with a specific revision id.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createSimulationApplicationVersion"
      },
      "input": {
        "shape": "CreateSimulationApplicationVersionRequest"
      },
      "name": "CreateSimulationApplicationVersion",
      "output": {
        "shape": "CreateSimulationApplicationVersionResponse"
      }
    },
    "CreateSimulationJob": {
      "documentation": "<p>Creates a simulation job.</p> <note> <p>After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible. </p> </note>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createSimulationJob"
      },
      "input": {
        "shape": "CreateSimulationJobRequest"
      },
      "name": "CreateSimulationJob",
      "output": {
        "shape": "CreateSimulationJobResponse"
      }
    },
    "CreateWorldExportJob": {
      "documentation": "<p>Creates a world export job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createWorldExportJob"
      },
      "input": {
        "shape": "CreateWorldExportJobRequest"
      },
      "name": "CreateWorldExportJob",
      "output": {
        "shape": "CreateWorldExportJobResponse"
      }
    },
    "CreateWorldGenerationJob": {
      "documentation": "<p>Creates worlds using the specified template.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createWorldGenerationJob"
      },
      "input": {
        "shape": "CreateWorldGenerationJobRequest"
      },
      "name": "CreateWorldGenerationJob",
      "output": {
        "shape": "CreateWorldGenerationJobResponse"
      }
    },
    "CreateWorldTemplate": {
      "documentation": "<p>Creates a world template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceAlreadyExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/createWorldTemplate"
      },
      "input": {
        "shape": "CreateWorldTemplateRequest"
      },
      "name": "CreateWorldTemplate",
      "output": {
        "shape": "CreateWorldTemplateResponse"
      }
    },
    "DeleteFleet": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Deletes a fleet.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteFleet"
      },
      "input": {
        "shape": "DeleteFleetRequest"
      },
      "name": "DeleteFleet",
      "output": {
        "shape": "DeleteFleetResponse"
      }
    },
    "DeleteRobot": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Deletes a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteRobot"
      },
      "input": {
        "shape": "DeleteRobotRequest"
      },
      "name": "DeleteRobot",
      "output": {
        "shape": "DeleteRobotResponse"
      }
    },
    "DeleteRobotApplication": {
      "documentation": "<p>Deletes a robot application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteRobotApplication"
      },
      "input": {
        "shape": "DeleteRobotApplicationRequest"
      },
      "name": "DeleteRobotApplication",
      "output": {
        "shape": "DeleteRobotApplicationResponse"
      }
    },
    "DeleteSimulationApplication": {
      "documentation": "<p>Deletes a simulation application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteSimulationApplication"
      },
      "input": {
        "shape": "DeleteSimulationApplicationRequest"
      },
      "name": "DeleteSimulationApplication",
      "output": {
        "shape": "DeleteSimulationApplicationResponse"
      }
    },
    "DeleteWorldTemplate": {
      "documentation": "<p>Deletes a world template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deleteWorldTemplate"
      },
      "input": {
        "shape": "DeleteWorldTemplateRequest"
      },
      "name": "DeleteWorldTemplate",
      "output": {
        "shape": "DeleteWorldTemplateResponse"
      }
    },
    "DeregisterRobot": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Deregisters a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/deregisterRobot"
      },
      "input": {
        "shape": "DeregisterRobotRequest"
      },
      "name": "DeregisterRobot",
      "output": {
        "shape": "DeregisterRobotResponse"
      }
    },
    "DescribeDeploymentJob": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Describes a deployment job.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeDeploymentJob"
      },
      "input": {
        "shape": "DescribeDeploymentJobRequest"
      },
      "name": "DescribeDeploymentJob",
      "output": {
        "shape": "DescribeDeploymentJobResponse"
      }
    },
    "DescribeFleet": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Describes a fleet.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeFleet"
      },
      "input": {
        "shape": "DescribeFleetRequest"
      },
      "name": "DescribeFleet",
      "output": {
        "shape": "DescribeFleetResponse"
      }
    },
    "DescribeRobot": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Describes a robot.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeRobot"
      },
      "input": {
        "shape": "DescribeRobotRequest"
      },
      "name": "DescribeRobot",
      "output": {
        "shape": "DescribeRobotResponse"
      }
    },
    "DescribeRobotApplication": {
      "documentation": "<p>Describes a robot application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeRobotApplication"
      },
      "input": {
        "shape": "DescribeRobotApplicationRequest"
      },
      "name": "DescribeRobotApplication",
      "output": {
        "shape": "DescribeRobotApplicationResponse"
      }
    },
    "DescribeSimulationApplication": {
      "documentation": "<p>Describes a simulation application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeSimulationApplication"
      },
      "input": {
        "shape": "DescribeSimulationApplicationRequest"
      },
      "name": "DescribeSimulationApplication",
      "output": {
        "shape": "DescribeSimulationApplicationResponse"
      }
    },
    "DescribeSimulationJob": {
      "documentation": "<p>Describes a simulation job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeSimulationJob"
      },
      "input": {
        "shape": "DescribeSimulationJobRequest"
      },
      "name": "DescribeSimulationJob",
      "output": {
        "shape": "DescribeSimulationJobResponse"
      }
    },
    "DescribeSimulationJobBatch": {
      "documentation": "<p>Describes a simulation job batch.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeSimulationJobBatch"
      },
      "input": {
        "shape": "DescribeSimulationJobBatchRequest"
      },
      "name": "DescribeSimulationJobBatch",
      "output": {
        "shape": "DescribeSimulationJobBatchResponse"
      }
    },
    "DescribeWorld": {
      "documentation": "<p>Describes a world.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeWorld"
      },
      "input": {
        "shape": "DescribeWorldRequest"
      },
      "name": "DescribeWorld",
      "output": {
        "shape": "DescribeWorldResponse"
      }
    },
    "DescribeWorldExportJob": {
      "documentation": "<p>Describes a world export job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeWorldExportJob"
      },
      "input": {
        "shape": "DescribeWorldExportJobRequest"
      },
      "name": "DescribeWorldExportJob",
      "output": {
        "shape": "DescribeWorldExportJobResponse"
      }
    },
    "DescribeWorldGenerationJob": {
      "documentation": "<p>Describes a world generation job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeWorldGenerationJob"
      },
      "input": {
        "shape": "DescribeWorldGenerationJobRequest"
      },
      "name": "DescribeWorldGenerationJob",
      "output": {
        "shape": "DescribeWorldGenerationJobResponse"
      }
    },
    "DescribeWorldTemplate": {
      "documentation": "<p>Describes a world template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/describeWorldTemplate"
      },
      "input": {
        "shape": "DescribeWorldTemplateRequest"
      },
      "name": "DescribeWorldTemplate",
      "output": {
        "shape": "DescribeWorldTemplateResponse"
      }
    },
    "GetWorldTemplateBody": {
      "documentation": "<p>Gets the world template body.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/getWorldTemplateBody"
      },
      "input": {
        "shape": "GetWorldTemplateBodyRequest"
      },
      "name": "GetWorldTemplateBody",
      "output": {
        "shape": "GetWorldTemplateBodyResponse"
      }
    },
    "ListDeploymentJobs": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listDeploymentJobs"
      },
      "input": {
        "shape": "ListDeploymentJobsRequest"
      },
      "name": "ListDeploymentJobs",
      "output": {
        "shape": "ListDeploymentJobsResponse"
      }
    },
    "ListFleets": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listFleets"
      },
      "input": {
        "shape": "ListFleetsRequest"
      },
      "name": "ListFleets",
      "output": {
        "shape": "ListFleetsResponse"
      }
    },
    "ListRobotApplications": {
      "documentation": "<p>Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listRobotApplications"
      },
      "input": {
        "shape": "ListRobotApplicationsRequest"
      },
      "name": "ListRobotApplications",
      "output": {
        "shape": "ListRobotApplicationsResponse"
      }
    },
    "ListRobots": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Returns a list of robots. You can optionally provide filters to retrieve specific robots.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listRobots"
      },
      "input": {
        "shape": "ListRobotsRequest"
      },
      "name": "ListRobots",
      "output": {
        "shape": "ListRobotsResponse"
      }
    },
    "ListSimulationApplications": {
      "documentation": "<p>Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listSimulationApplications"
      },
      "input": {
        "shape": "ListSimulationApplicationsRequest"
      },
      "name": "ListSimulationApplications",
      "output": {
        "shape": "ListSimulationApplicationsResponse"
      }
    },
    "ListSimulationJobBatches": {
      "documentation": "<p>Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listSimulationJobBatches"
      },
      "input": {
        "shape": "ListSimulationJobBatchesRequest"
      },
      "name": "ListSimulationJobBatches",
      "output": {
        "shape": "ListSimulationJobBatchesResponse"
      }
    },
    "ListSimulationJobs": {
      "documentation": "<p>Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listSimulationJobs"
      },
      "input": {
        "shape": "ListSimulationJobsRequest"
      },
      "name": "ListSimulationJobs",
      "output": {
        "shape": "ListSimulationJobsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists all tags on a AWS RoboMaker resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListWorldExportJobs": {
      "documentation": "<p>Lists world export jobs.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listWorldExportJobs"
      },
      "input": {
        "shape": "ListWorldExportJobsRequest"
      },
      "name": "ListWorldExportJobs",
      "output": {
        "shape": "ListWorldExportJobsResponse"
      }
    },
    "ListWorldGenerationJobs": {
      "documentation": "<p>Lists world generator jobs.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listWorldGenerationJobs"
      },
      "input": {
        "shape": "ListWorldGenerationJobsRequest"
      },
      "name": "ListWorldGenerationJobs",
      "output": {
        "shape": "ListWorldGenerationJobsResponse"
      }
    },
    "ListWorldTemplates": {
      "documentation": "<p>Lists world templates.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listWorldTemplates"
      },
      "input": {
        "shape": "ListWorldTemplatesRequest"
      },
      "name": "ListWorldTemplates",
      "output": {
        "shape": "ListWorldTemplatesResponse"
      }
    },
    "ListWorlds": {
      "documentation": "<p>Lists worlds.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/listWorlds"
      },
      "input": {
        "shape": "ListWorldsRequest"
      },
      "name": "ListWorlds",
      "output": {
        "shape": "ListWorldsResponse"
      }
    },
    "RegisterRobot": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Registers a robot with a fleet.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/registerRobot"
      },
      "input": {
        "shape": "RegisterRobotRequest"
      },
      "name": "RegisterRobot",
      "output": {
        "shape": "RegisterRobotResponse"
      }
    },
    "RestartSimulationJob": {
      "documentation": "<p>Restarts a running simulation job.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/restartSimulationJob"
      },
      "input": {
        "shape": "RestartSimulationJobRequest"
      },
      "name": "RestartSimulationJob",
      "output": {
        "shape": "RestartSimulationJobResponse"
      }
    },
    "StartSimulationJobBatch": {
      "documentation": "<p>Starts a new simulation job batch. The batch is defined using one or more <code>SimulationJobRequest</code> objects. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/startSimulationJobBatch"
      },
      "input": {
        "shape": "StartSimulationJobBatchRequest"
      },
      "name": "StartSimulationJobBatch",
      "output": {
        "shape": "StartSimulationJobBatchResponse"
      }
    },
    "SyncDeploymentJob": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "documentation": "<p>Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.</p> <important> <p>This API will no longer be supported as of May 2, 2022. Use it to remove resources that were created for Deployment Service.</p> </important>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ConcurrentDeploymentException"
        },
        {
          "shape": "IdempotentParameterMismatchException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/syncDeploymentJob"
      },
      "input": {
        "shape": "SyncDeploymentJobRequest"
      },
      "name": "SyncDeploymentJob",
      "output": {
        "shape": "SyncDeploymentJobResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds or edits tags for a AWS RoboMaker resource.</p> <p>Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings. </p> <p>For information about the rules that apply to tag keys and tag values, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\">User-Defined Tag Restrictions</a> in the <i>AWS Billing and Cost Management User Guide</i>. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified AWS RoboMaker resource.</p> <p>To remove a tag, specify the tag key. To change the tag value of an existing tag key, use <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html\"> <code>TagResource</code> </a>. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateRobotApplication": {
      "documentation": "<p>Updates a robot application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateRobotApplication"
      },
      "input": {
        "shape": "UpdateRobotApplicationRequest"
      },
      "name": "UpdateRobotApplication",
      "output": {
        "shape": "UpdateRobotApplicationResponse"
      }
    },
    "UpdateSimulationApplication": {
      "documentation": "<p>Updates a simulation application.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateSimulationApplication"
      },
      "input": {
        "shape": "UpdateSimulationApplicationRequest"
      },
      "name": "UpdateSimulationApplication",
      "output": {
        "shape": "UpdateSimulationApplicationResponse"
      }
    },
    "UpdateWorldTemplate": {
      "documentation": "<p>Updates a world template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/updateWorldTemplate"
      },
      "input": {
        "shape": "UpdateWorldTemplateRequest"
      },
      "name": "UpdateWorldTemplate",
      "output": {
        "shape": "UpdateWorldTemplateResponse"
      }
    }
  },
  "shapes": {
    "Architecture": {
      "enum": [
        "X86_64",
        "ARM64",
        "ARMHF"
      ],
      "type": "string"
    },
    "Arn": {
      "max": 1224,
      "min": 1,
      "pattern": "arn:.*",
      "type": "string"
    },
    "Arns": {
      "max": 100,
      "member": {
        "shape": "Arn"
      },
      "min": 1,
      "type": "list"
    },
    "BatchDeleteWorldsRequest": {
      "members": {
        "worlds": {
          "documentation": "<p>A list of Amazon Resource Names (arns) that correspond to worlds to delete.</p>",
          "shape": "Arns"
        }
      },
      "required": [
        "worlds"
      ],
      "type": "structure"
    },
    "BatchDeleteWorldsResponse": {
      "members": {
        "unprocessedWorlds": {
          "documentation": "<p>A list of unprocessed worlds associated with the call. These worlds were not deleted.</p>",
          "shape": "Arns"
        }
      },
      "type": "structure"
    },
    "BatchDescribeSimulationJobRequest": {
      "members": {
        "jobs": {
          "documentation": "<p>A list of Amazon Resource Names (ARNs) of simulation jobs to describe.</p>",
          "shape": "Arns"
        }
      },
      "required": [
        "jobs"
      ],
      "type": "structure"
    },
    "BatchDescribeSimulationJobResponse": {
      "members": {
        "jobs": {
          "documentation": "<p>A list of simulation jobs.</p>",
          "shape": "SimulationJobs"
        },
        "unprocessedJobs": {
          "documentation": "<p>A list of unprocessed simulation job Amazon Resource Names (ARNs).</p>",
          "shape": "Arns"
        }
      },
      "type": "structure"
    },
    "BatchPolicy": {
      "documentation": "<p>Information about the batch policy.</p>",
      "members": {
        "maxConcurrency": {
          "documentation": "<p>The number of active simulation jobs create as part of the batch that can be in an active state at the same time. </p> <p>Active states include: <code>Pending</code>,<code>Preparing</code>, <code>Running</code>, <code>Restarting</code>, <code>RunningFailed</code> and <code>Terminating</code>. All other states are terminal states. </p>",
          "shape": "MaxConcurrency"
        },
        "timeoutInSeconds": {
          "documentation": "<p>The amount of time, in seconds, to wait for the batch to complete. </p> <p>If a batch times out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), they will be moved to the failed list and the batch status will be <code>Failed</code>. If the pending requests were failing for any other reason, the failed pending requests will be moved to the failed list and the batch status will be <code>TimedOut</code>. </p>",
          "shape": "BatchTimeoutInSeconds"
        }
      },
      "type": "structure"
    },
    "BatchTimeoutInSeconds": {
      "type": "long"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BoxedBoolean": {
      "type": "boolean"
    },
    "CancelDeploymentJobRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "job": {
          "documentation": "<p>The deployment job ARN to cancel.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "CancelDeploymentJobResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {},
      "type": "structure"
    },
    "CancelSimulationJobBatchRequest": {
      "members": {
        "batch": {
          "documentation": "<p>The id of the batch to cancel.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "batch"
      ],
      "type": "structure"
    },
    "CancelSimulationJobBatchResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelSimulationJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The simulation job ARN to cancel.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "CancelSimulationJobResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelWorldExportJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world export job to cancel.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "CancelWorldExportJobResponse": {
      "members": {},
      "type": "structure"
    },
    "CancelWorldGenerationJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world generator job to cancel.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "CancelWorldGenerationJobResponse": {
      "members": {},
      "type": "structure"
    },
    "ClientRequestToken": {
      "max": 64,
      "min": 1,
      "pattern": "[a-zA-Z0-9_\\-=]*",
      "type": "string"
    },
    "Command": {
      "max": 1024,
      "min": 1,
      "pattern": "[a-zA-Z0-9_.\\-]*",
      "type": "string"
    },
    "CommandList": {
      "member": {
        "shape": "NonEmptyString"
      },
      "type": "list"
    },
    "Compute": {
      "documentation": "<p>Compute information for the simulation job.</p>",
      "members": {
        "computeType": {
          "documentation": "<p>Compute type information for the simulation job.</p>",
          "shape": "ComputeType"
        },
        "gpuUnitLimit": {
          "documentation": "<p>Compute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.</p>",
          "shape": "GPUUnit"
        },
        "simulationUnitLimit": {
          "documentation": "<p>The simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15. </p>",
          "shape": "SimulationUnit"
        }
      },
      "type": "structure"
    },
    "ComputeResponse": {
      "documentation": "<p>Compute information for the simulation job</p>",
      "members": {
        "computeType": {
          "documentation": "<p>Compute type response information for the simulation job.</p>",
          "shape": "ComputeType"
        },
        "gpuUnitLimit": {
          "documentation": "<p>Compute GPU unit limit for the simulation job. It is the same as the number of GPUs allocated to the SimulationJob.</p>",
          "shape": "GPUUnit"
        },
        "simulationUnitLimit": {
          "documentation": "<p>The simulation unit limit. Your simulation is allocated CPU and memory proportional to the supplied simulation unit limit. A simulation unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization you consume up to the maximum value provided. The default is 15. </p>",
          "shape": "SimulationUnit"
        }
      },
      "type": "structure"
    },
    "ComputeType": {
      "enum": [
        "CPU",
        "GPU_AND_CPU"
      ],
      "type": "string"
    },
    "ConcurrentDeploymentException": {
      "documentation": "<p>The failure percentage threshold percentage was met.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "CreateDeploymentJobRequest": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "deploymentApplicationConfigs": {
          "documentation": "<p>The deployment application configuration.</p>",
          "shape": "DeploymentApplicationConfigs"
        },
        "deploymentConfig": {
          "documentation": "<p>The requested deployment configuration.</p>",
          "shape": "DeploymentConfig"
        },
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet to deploy.</p>",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the deployment job.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "clientRequestToken",
        "fleet",
        "deploymentApplicationConfigs"
      ],
      "type": "structure"
    },
    "CreateDeploymentJobResponse": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deployment job.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the fleet was created.</p>",
          "shape": "CreatedAt"
        },
        "deploymentApplicationConfigs": {
          "documentation": "<p>The deployment application configuration.</p>",
          "shape": "DeploymentApplicationConfigs"
        },
        "deploymentConfig": {
          "documentation": "<p>The deployment configuration.</p>",
          "shape": "DeploymentConfig"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the simulation job if it failed:</p> <dl> <dt>BadPermissionError</dt> <dd> <p>AWS Greengrass requires a service-level role permission to access other services. The role must include the <a href=\"https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor\"> <code>AWSGreengrassResourceAccessRolePolicy</code> managed policy</a>. </p> </dd> <dt>ExtractingBundleFailure</dt> <dd> <p>The robot application could not be extracted from the bundle.</p> </dd> <dt>FailureThresholdBreached</dt> <dd> <p>The percentage of robots that could not be updated exceeded the percentage set for the deployment.</p> </dd> <dt>GreengrassDeploymentFailed</dt> <dd> <p>The robot application could not be deployed to the robot.</p> </dd> <dt>GreengrassGroupVersionDoesNotExist</dt> <dd> <p>The AWS Greengrass group or version associated with a robot is missing.</p> </dd> <dt>InternalServerError</dt> <dd> <p>An internal error has occurred. Retry your request, but if the problem persists, contact us with details.</p> </dd> <dt>MissingRobotApplicationArchitecture</dt> <dd> <p>The robot application does not have a source that matches the architecture of the robot.</p> </dd> <dt>MissingRobotDeploymentResource</dt> <dd> <p>One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?</p> </dd> <dt>PostLaunchFileFailure</dt> <dd> <p>The post-launch script failed.</p> </dd> <dt>PreLaunchFileFailure</dt> <dd> <p>The pre-launch script failed.</p> </dd> <dt>ResourceNotFound</dt> <dd> <p>One or more deployment resources are missing. For example, do robot application source bundles still exist? </p> </dd> <dt>RobotDeploymentNoResponse</dt> <dd> <p>There is no response from the robot. It might not be powered on or connected to the internet.</p> </dd> </dl>",
          "shape": "DeploymentJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The failure reason of the deployment job if it failed.</p>",
          "shape": "GenericString"
        },
        "fleet": {
          "documentation": "<p>The target fleet for the deployment job.</p>",
          "shape": "Arn"
        },
        "status": {
          "documentation": "<p>The status of the deployment job.</p>",
          "shape": "DeploymentStatus"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the deployment job.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateFleetRequest": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "name": {
          "documentation": "<p>The name of the fleet.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the fleet.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateFleetResponse": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the fleet was created.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the fleet.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the fleet.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateRobotApplicationRequest": {
      "members": {
        "environment": {
          "documentation": "<p>The object that contains that URI of the Docker image that you use for your robot application.</p>",
          "shape": "Environment"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribuition) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "SourceConfigs"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the robot application.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "robotSoftwareSuite"
      ],
      "type": "structure"
    },
    "CreateRobotApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>An object that contains the Docker image URI used to a create your robot application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the robot application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "Sources"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the robot application.</p>",
          "shape": "TagMap"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "CreateRobotApplicationVersionRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the robot application.</p>",
          "shape": "Arn"
        },
        "currentRevisionId": {
          "documentation": "<p>The current revision id for the robot application. If you provide a value and it matches the latest revision ID, a new version will be created.</p>",
          "shape": "RevisionId"
        },
        "imageDigest": {
          "documentation": "<p>A SHA256 identifier for the Docker image that you use for your robot application.</p>",
          "shape": "ImageDigest"
        },
        "s3Etags": {
          "documentation": "<p>The Amazon S3 identifier for the zip file bundle that you use for your robot application.</p>",
          "shape": "S3Etags"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "CreateRobotApplicationVersionResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used to create your robot application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the robot application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "Sources"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "CreateRobotRequest": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "architecture": {
          "documentation": "<p>The target architecture of the robot.</p>",
          "shape": "Architecture"
        },
        "greengrassGroupId": {
          "documentation": "<p>The Greengrass group id.</p>",
          "shape": "Id"
        },
        "name": {
          "documentation": "<p>The name for the robot.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the robot.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "architecture",
        "greengrassGroupId"
      ],
      "type": "structure"
    },
    "CreateRobotResponse": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "architecture": {
          "documentation": "<p>The target architecture of the robot.</p>",
          "shape": "Architecture"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot was created.</p>",
          "shape": "CreatedAt"
        },
        "greengrassGroupId": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the Greengrass group associated with the robot.</p>",
          "shape": "Id"
        },
        "name": {
          "documentation": "<p>The name of the robot.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the robot.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateSimulationApplicationRequest": {
      "members": {
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used to create your simulation application.</p>",
          "shape": "Environment"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the simulation application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "SourceConfigs"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the simulation application.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "name",
        "simulationSoftwareSuite",
        "robotSoftwareSuite"
      ],
      "type": "structure"
    },
    "CreateSimulationApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI that you used to create your simulation application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the simulation application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "Sources"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the simulation application.</p>",
          "shape": "TagMap"
        },
        "version": {
          "documentation": "<p>The version of the simulation application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "CreateSimulationApplicationVersionRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the simulation application.</p>",
          "shape": "Arn"
        },
        "currentRevisionId": {
          "documentation": "<p>The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.</p>",
          "shape": "RevisionId"
        },
        "imageDigest": {
          "documentation": "<p>The SHA256 digest used to identify the Docker image URI used to created the simulation application.</p>",
          "shape": "ImageDigest"
        },
        "s3Etags": {
          "documentation": "<p>The Amazon S3 eTag identifier for the zip file bundle that you use to create the simulation application.</p>",
          "shape": "S3Etags"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "CreateSimulationApplicationVersionResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used to create the simulation application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "revisionId": {
          "documentation": "<p>The revision ID of the simulation application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "Sources"
        },
        "version": {
          "documentation": "<p>The version of the simulation application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "CreateSimulationJobRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "compute": {
          "documentation": "<p>Compute information for the simulation job.</p>",
          "shape": "Compute"
        },
        "dataSources": {
          "documentation": "<p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>",
          "shape": "DataSourceConfigs"
        },
        "failureBehavior": {
          "documentation": "<p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Leaves the instance running for its maximum timeout duration after a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>",
          "shape": "FailureBehavior"
        },
        "iamRole": {
          "documentation": "<p>The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. </p>",
          "shape": "IamRole"
        },
        "loggingConfig": {
          "documentation": "<p>The logging configuration.</p>",
          "shape": "LoggingConfig"
        },
        "maxJobDurationInSeconds": {
          "documentation": "<p>The maximum simulation job duration in seconds (up to 14 days or 1,209,600 seconds. When <code>maxJobDurationInSeconds</code> is reached, the simulation job will status will transition to <code>Completed</code>.</p>",
          "shape": "JobDuration"
        },
        "outputLocation": {
          "documentation": "<p>Location for output files generated by the simulation job.</p>",
          "shape": "OutputLocation"
        },
        "robotApplications": {
          "documentation": "<p>The robot application to use in the simulation job.</p>",
          "shape": "RobotApplicationConfigs"
        },
        "simulationApplications": {
          "documentation": "<p>The simulation application to use in the simulation job.</p>",
          "shape": "SimulationApplicationConfigs"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the simulation job.</p>",
          "shape": "TagMap"
        },
        "vpcConfig": {
          "documentation": "<p>If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and one subnet ID. </p>",
          "shape": "VPCConfig"
        }
      },
      "required": [
        "maxJobDurationInSeconds",
        "iamRole"
      ],
      "type": "structure"
    },
    "CreateSimulationJobRequests": {
      "max": 1000,
      "member": {
        "shape": "SimulationJobRequest"
      },
      "min": 1,
      "type": "list"
    },
    "CreateSimulationJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "compute": {
          "documentation": "<p>Compute information for the simulation job.</p>",
          "shape": "ComputeResponse"
        },
        "dataSources": {
          "documentation": "<p>The data sources for the simulation job.</p>",
          "shape": "DataSources"
        },
        "failureBehavior": {
          "documentation": "<p>the failure behavior for the simulation job.</p>",
          "shape": "FailureBehavior"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>",
          "shape": "SimulationJobErrorCode"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that allows the simulation job to call the AWS APIs that are specified in its associated policies on your behalf.</p>",
          "shape": "IamRole"
        },
        "lastStartedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last started.</p>",
          "shape": "LastStartedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "loggingConfig": {
          "documentation": "<p>The logging configuration.</p>",
          "shape": "LoggingConfig"
        },
        "maxJobDurationInSeconds": {
          "documentation": "<p>The maximum simulation job duration in seconds. </p>",
          "shape": "JobDuration"
        },
        "outputLocation": {
          "documentation": "<p>Simulation job output files location.</p>",
          "shape": "OutputLocation"
        },
        "robotApplications": {
          "documentation": "<p>The robot application used by the simulation job.</p>",
          "shape": "RobotApplicationConfigs"
        },
        "simulationApplications": {
          "documentation": "<p>The simulation application used by the simulation job.</p>",
          "shape": "SimulationApplicationConfigs"
        },
        "simulationTimeMillis": {
          "documentation": "<p>The simulation job execution duration in milliseconds.</p>",
          "shape": "SimulationTimeMillis"
        },
        "status": {
          "documentation": "<p>The status of the simulation job.</p>",
          "shape": "SimulationJobStatus"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the simulation job.</p>",
          "shape": "TagMap"
        },
        "vpcConfig": {
          "documentation": "<p>Information about the vpc configuration.</p>",
          "shape": "VPCConfigResponse"
        }
      },
      "type": "structure"
    },
    "CreateWorldExportJobRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that the world export process uses to access the Amazon S3 bucket and put the export.</p>",
          "shape": "IamRole"
        },
        "outputLocation": {
          "shape": "OutputLocation"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world export job.</p>",
          "shape": "TagMap"
        },
        "worlds": {
          "documentation": "<p>A list of Amazon Resource Names (arns) that correspond to worlds to export.</p>",
          "shape": "Arns"
        }
      },
      "required": [
        "worlds",
        "outputLocation",
        "iamRole"
      ],
      "type": "structure"
    },
    "CreateWorldExportJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world export job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world export job was created.</p>",
          "shape": "CreatedAt"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the world export job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt> <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt> <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt> <dd> <p>An input parameter in the request is not valid.</p> </dd> <dt>AllWorldGenerationFailed</dt> <dd> <p>All of the worlds in the world generation job failed. This can happen if your <code>worldCount</code> is greater than 50 or less than 1. </p> </dd> </dl> <p>For more information about troubleshooting WorldForge, see <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting-worldforge.html\">Troubleshooting Simulation WorldForge</a>. </p>",
          "shape": "WorldExportJobErrorCode"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that the world export process uses to access the Amazon S3 bucket and put the export. </p>",
          "shape": "IamRole"
        },
        "outputLocation": {
          "shape": "OutputLocation"
        },
        "status": {
          "documentation": "<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldExportJobStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world export job.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateWorldGenerationJobRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world generator job.</p>",
          "shape": "TagMap"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template describing the worlds you want to create.</p>",
          "shape": "Arn"
        },
        "worldCount": {
          "documentation": "<p>Information about the world count.</p>",
          "shape": "WorldCount"
        },
        "worldTags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "template",
        "worldCount"
      ],
      "type": "structure"
    },
    "CreateWorldGenerationJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world generator job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world generator job was created.</p>",
          "shape": "CreatedAt"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the world generator job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt> <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt> <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt> <dd> <p>An input parameter in the request is not valid.</p> </dd> </dl>",
          "shape": "WorldGenerationJobErrorCode"
        },
        "status": {
          "documentation": "<p>The status of the world generator job.</p> <dl> <dt>Pending</dt> <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generator job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generator job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldGenerationJobStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world generator job.</p>",
          "shape": "TagMap"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        },
        "worldCount": {
          "documentation": "<p>Information about the world count. </p>",
          "shape": "WorldCount"
        },
        "worldTags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateWorldTemplateRequest": {
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "name": {
          "documentation": "<p>The name of the world template.</p>",
          "shape": "TemplateName"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world template.</p>",
          "shape": "TagMap"
        },
        "templateBody": {
          "documentation": "<p>The world template body.</p>",
          "shape": "Json"
        },
        "templateLocation": {
          "documentation": "<p>The location of the world template.</p>",
          "shape": "TemplateLocation"
        }
      },
      "type": "structure"
    },
    "CreateWorldTemplateResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world template.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world template was created.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the world template.</p>",
          "shape": "TemplateName"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world template.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreatedAt": {
      "type": "timestamp"
    },
    "DataSource": {
      "documentation": "<p>Information about a data source.</p>",
      "members": {
        "destination": {
          "documentation": "<p>The location where your files are mounted in the container image.</p> <p>If you've specified the <code>type</code> of the data source as an <code>Archive</code>, you must provide an Amazon S3 object key to your archive. The object key must point to either a <code>.zip</code> or <code>.tar.gz</code> file.</p> <p>If you've specified the <code>type</code> of the data source as a <code>Prefix</code>, you provide the Amazon S3 prefix that points to the files that you are using for your data source.</p> <p>If you've specified the <code>type</code> of the data source as a <code>File</code>, you provide the Amazon S3 path to the file that you're using as your data source.</p>",
          "shape": "Path"
        },
        "name": {
          "documentation": "<p>The name of the data source.</p>",
          "shape": "Name"
        },
        "s3Bucket": {
          "documentation": "<p>The S3 bucket where the data files are located.</p>",
          "shape": "S3Bucket"
        },
        "s3Keys": {
          "documentation": "<p>The list of S3 keys identifying the data source files.</p>",
          "shape": "S3KeyOutputs"
        },
        "type": {
          "documentation": "<p>The data type for the data source that you're using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.</p> <p>If you don't specify a field, the default value is <code>File</code>.</p>",
          "shape": "DataSourceType"
        }
      },
      "type": "structure"
    },
    "DataSourceConfig": {
      "documentation": "<p>Information about a data source.</p>",
      "members": {
        "destination": {
          "documentation": "<p>The location where your files are mounted in the container image.</p> <p>If you've specified the <code>type</code> of the data source as an <code>Archive</code>, you must provide an Amazon S3 object key to your archive. The object key must point to either a <code>.zip</code> or <code>.tar.gz</code> file.</p> <p>If you've specified the <code>type</code> of the data source as a <code>Prefix</code>, you provide the Amazon S3 prefix that points to the files that you are using for your data source.</p> <p>If you've specified the <code>type</code> of the data source as a <code>File</code>, you provide the Amazon S3 path to the file that you're using as your data source.</p>",
          "shape": "Path"
        },
        "name": {
          "documentation": "<p>The name of the data source.</p>",
          "shape": "Name"
        },
        "s3Bucket": {
          "documentation": "<p>The S3 bucket where the data files are located.</p>",
          "shape": "S3Bucket"
        },
        "s3Keys": {
          "documentation": "<p>The list of S3 keys identifying the data source files.</p>",
          "shape": "S3KeysOrPrefixes"
        },
        "type": {
          "documentation": "<p>The data type for the data source that you're using for your container image or simulation job. You can use this field to specify whether your data source is an Archive, an Amazon S3 prefix, or a file.</p> <p>If you don't specify a field, the default value is <code>File</code>.</p>",
          "shape": "DataSourceType"
        }
      },
      "required": [
        "name",
        "s3Bucket",
        "s3Keys"
      ],
      "type": "structure"
    },
    "DataSourceConfigs": {
      "max": 6,
      "member": {
        "shape": "DataSourceConfig"
      },
      "min": 1,
      "type": "list"
    },
    "DataSourceNames": {
      "member": {
        "shape": "Name"
      },
      "type": "list"
    },
    "DataSourceType": {
      "enum": [
        "Prefix",
        "Archive",
        "File"
      ],
      "type": "string"
    },
    "DataSources": {
      "member": {
        "shape": "DataSource"
      },
      "type": "list"
    },
    "DeleteFleetRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "fleet"
      ],
      "type": "structure"
    },
    "DeleteFleetResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {},
      "type": "structure"
    },
    "DeleteRobotApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the the robot application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the robot application to delete.</p>",
          "shape": "Version"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "DeleteRobotApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteRobotRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "robot": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "robot"
      ],
      "type": "structure"
    },
    "DeleteRobotResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {},
      "type": "structure"
    },
    "DeleteSimulationApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the simulation application to delete.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the simulation application to delete.</p>",
          "shape": "Version"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "DeleteSimulationApplicationResponse": {
      "members": {},
      "type": "structure"
    },
    "DeleteWorldTemplateRequest": {
      "members": {
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template you want to delete.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "template"
      ],
      "type": "structure"
    },
    "DeleteWorldTemplateResponse": {
      "members": {},
      "type": "structure"
    },
    "DeploymentApplicationConfig": {
      "documentation": "<p>Information about a deployment application configuration.</p>",
      "members": {
        "application": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the application.</p>",
          "shape": "DeploymentVersion"
        },
        "launchConfig": {
          "documentation": "<p>The launch configuration.</p>",
          "shape": "DeploymentLaunchConfig"
        }
      },
      "required": [
        "application",
        "applicationVersion",
        "launchConfig"
      ],
      "type": "structure"
    },
    "DeploymentApplicationConfigs": {
      "max": 1,
      "member": {
        "shape": "DeploymentApplicationConfig"
      },
      "min": 1,
      "type": "list"
    },
    "DeploymentConfig": {
      "documentation": "<p>Information about a deployment configuration.</p>",
      "members": {
        "concurrentDeploymentPercentage": {
          "documentation": "<p>The percentage of robots receiving the deployment at the same time.</p>",
          "shape": "Percentage"
        },
        "downloadConditionFile": {
          "documentation": "<p>The download condition file.</p>",
          "shape": "S3Object"
        },
        "failureThresholdPercentage": {
          "documentation": "<p>The percentage of deployments that need to fail before stopping deployment.</p>",
          "shape": "Percentage"
        },
        "robotDeploymentTimeoutInSeconds": {
          "documentation": "<p>The amount of time, in seconds, to wait for deployment to a single robot to complete. Choose a time between 1 minute and 7 days. The default is 5 hours.</p>",
          "shape": "DeploymentTimeout"
        }
      },
      "type": "structure"
    },
    "DeploymentJob": {
      "documentation": "<p>Information about a deployment job.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deployment job.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the deployment job was created.</p>",
          "shape": "CreatedAt"
        },
        "deploymentApplicationConfigs": {
          "documentation": "<p>The deployment application configuration.</p>",
          "shape": "DeploymentApplicationConfigs"
        },
        "deploymentConfig": {
          "documentation": "<p>The deployment configuration.</p>",
          "shape": "DeploymentConfig"
        },
        "failureCode": {
          "documentation": "<p>The deployment job failure code.</p>",
          "shape": "DeploymentJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>A short description of the reason why the deployment job failed.</p>",
          "shape": "GenericString"
        },
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "status": {
          "documentation": "<p>The status of the deployment job.</p>",
          "shape": "DeploymentStatus"
        }
      },
      "type": "structure"
    },
    "DeploymentJobErrorCode": {
      "enum": [
        "ResourceNotFound",
        "EnvironmentSetupError",
        "EtagMismatch",
        "FailureThresholdBreached",
        "RobotDeploymentAborted",
        "RobotDeploymentNoResponse",
        "RobotAgentConnectionTimeout",
        "GreengrassDeploymentFailed",
        "InvalidGreengrassGroup",
        "MissingRobotArchitecture",
        "MissingRobotApplicationArchitecture",
        "MissingRobotDeploymentResource",
        "GreengrassGroupVersionDoesNotExist",
        "LambdaDeleted",
        "ExtractingBundleFailure",
        "PreLaunchFileFailure",
        "PostLaunchFileFailure",
        "BadPermissionError",
        "DownloadConditionFailed",
        "BadLambdaAssociated",
        "InternalServerError",
        "RobotApplicationDoesNotExist",
        "DeploymentFleetDoesNotExist",
        "FleetDeploymentTimeout"
      ],
      "type": "string"
    },
    "DeploymentJobs": {
      "max": 200,
      "member": {
        "shape": "DeploymentJob"
      },
      "min": 0,
      "type": "list"
    },
    "DeploymentLaunchConfig": {
      "documentation": "<p>Configuration information for a deployment launch.</p>",
      "members": {
        "environmentVariables": {
          "documentation": "<p>An array of key/value pairs specifying environment variables for the robot application</p>",
          "shape": "EnvironmentVariableMap"
        },
        "launchFile": {
          "documentation": "<p>The launch file name.</p>",
          "shape": "Command"
        },
        "packageName": {
          "documentation": "<p>The package name.</p>",
          "shape": "Command"
        },
        "postLaunchFile": {
          "documentation": "<p>The deployment post-launch file. This file will be executed after the launch file.</p>",
          "shape": "Path"
        },
        "preLaunchFile": {
          "documentation": "<p>The deployment pre-launch file. This file will be executed prior to the launch file.</p>",
          "shape": "Path"
        }
      },
      "required": [
        "packageName",
        "launchFile"
      ],
      "type": "structure"
    },
    "DeploymentStatus": {
      "enum": [
        "Pending",
        "Preparing",
        "InProgress",
        "Failed",
        "Succeeded",
        "Canceled"
      ],
      "type": "string"
    },
    "DeploymentTimeout": {
      "type": "long"
    },
    "DeploymentVersion": {
      "max": 255,
      "min": 1,
      "pattern": "[0-9]*",
      "type": "string"
    },
    "DeregisterRobotRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "robot": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "fleet",
        "robot"
      ],
      "type": "structure"
    },
    "DeregisterRobotResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "robot": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "DescribeDeploymentJobRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deployment job.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "DescribeDeploymentJobResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deployment job.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the deployment job was created.</p>",
          "shape": "CreatedAt"
        },
        "deploymentApplicationConfigs": {
          "documentation": "<p>The deployment application configuration.</p>",
          "shape": "DeploymentApplicationConfigs"
        },
        "deploymentConfig": {
          "documentation": "<p>The deployment configuration.</p>",
          "shape": "DeploymentConfig"
        },
        "failureCode": {
          "documentation": "<p>The deployment job failure code.</p>",
          "shape": "DeploymentJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>A short description of the reason why the deployment job failed.</p>",
          "shape": "GenericString"
        },
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "robotDeploymentSummary": {
          "documentation": "<p>A list of robot deployment summaries.</p>",
          "shape": "RobotDeploymentSummary"
        },
        "status": {
          "documentation": "<p>The status of the deployment job.</p>",
          "shape": "DeploymentStatus"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified deployment job.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DescribeFleetRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "fleet"
      ],
      "type": "structure"
    },
    "DescribeFleetResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the fleet was created.</p>",
          "shape": "CreatedAt"
        },
        "lastDeploymentJob": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the last deployment job.</p>",
          "shape": "Arn"
        },
        "lastDeploymentStatus": {
          "documentation": "<p>The status of the last deployment.</p>",
          "shape": "DeploymentStatus"
        },
        "lastDeploymentTime": {
          "documentation": "<p>The time of the last deployment.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the fleet.</p>",
          "shape": "Name"
        },
        "robots": {
          "documentation": "<p>A list of robots.</p>",
          "shape": "Robots"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified fleet.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DescribeRobotApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the robot application to describe.</p>",
          "shape": "Version"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "DescribeRobotApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used to create the robot application.</p>",
          "shape": "Environment"
        },
        "imageDigest": {
          "documentation": "<p>A SHA256 identifier for the Docker image that you use for your robot application.</p>",
          "shape": "ImageDigest"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the robot application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "Sources"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified robot application.</p>",
          "shape": "TagMap"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeRobotRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "robot": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot to be described.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "robot"
      ],
      "type": "structure"
    },
    "DescribeRobotResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "architecture": {
          "documentation": "<p>The target architecture of the robot application.</p>",
          "shape": "Architecture"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot was created.</p>",
          "shape": "CreatedAt"
        },
        "fleetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "greengrassGroupId": {
          "documentation": "<p>The Greengrass group id.</p>",
          "shape": "Id"
        },
        "lastDeploymentJob": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the last deployment job.</p>",
          "shape": "Arn"
        },
        "lastDeploymentTime": {
          "documentation": "<p>The time of the last deployment job.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot.</p>",
          "shape": "Name"
        },
        "status": {
          "documentation": "<p>The status of the fleet.</p>",
          "shape": "RobotStatus"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified robot.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DescribeSimulationApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the simulation application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the simulation application to describe.</p>",
          "shape": "Version"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "DescribeSimulationApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot simulation application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used to create the simulation application.</p>",
          "shape": "Environment"
        },
        "imageDigest": {
          "documentation": "<p>A SHA256 identifier for the Docker image that you use for your simulation application.</p>",
          "shape": "ImageDigest"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the simulation application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "Sources"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified simulation application.</p>",
          "shape": "TagMap"
        },
        "version": {
          "documentation": "<p>The version of the simulation application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "DescribeSimulationJobBatchRequest": {
      "members": {
        "batch": {
          "documentation": "<p>The id of the batch to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "batch"
      ],
      "type": "structure"
    },
    "DescribeSimulationJobBatchResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the batch.</p>",
          "shape": "Arn"
        },
        "batchPolicy": {
          "documentation": "<p>The batch policy.</p>",
          "shape": "BatchPolicy"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch was created.</p>",
          "shape": "CreatedAt"
        },
        "createdRequests": {
          "documentation": "<p>A list of created simulation job summaries.</p>",
          "shape": "SimulationJobSummaries"
        },
        "failedRequests": {
          "documentation": "<p>A list of failed create simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID. </p>",
          "shape": "FailedCreateSimulationJobRequests"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the simulation job batch.</p>",
          "shape": "SimulationJobBatchErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The reason the simulation job batch failed.</p>",
          "shape": "GenericString"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "pendingRequests": {
          "documentation": "<p>A list of pending simulation job requests. These requests have not yet been created into simulation jobs.</p>",
          "shape": "CreateSimulationJobRequests"
        },
        "status": {
          "documentation": "<p>The status of the batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>",
          "shape": "SimulationJobBatchStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the simulation job batch.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DescribeSimulationJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job to be described.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "DescribeSimulationJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "compute": {
          "documentation": "<p>Compute information for the simulation job.</p>",
          "shape": "ComputeResponse"
        },
        "dataSources": {
          "documentation": "<p>The data sources for the simulation job.</p>",
          "shape": "DataSources"
        },
        "failureBehavior": {
          "documentation": "<p>The failure behavior for the simulation job.</p>",
          "shape": "FailureBehavior"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the simulation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>",
          "shape": "SimulationJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>Details about why the simulation job failed. For more information about troubleshooting, see <a href=\"https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting.html\">Troubleshooting</a>.</p>",
          "shape": "GenericString"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf.</p>",
          "shape": "IamRole"
        },
        "lastStartedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last started.</p>",
          "shape": "LastStartedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "loggingConfig": {
          "documentation": "<p>The logging configuration.</p>",
          "shape": "LoggingConfig"
        },
        "maxJobDurationInSeconds": {
          "documentation": "<p>The maximum job duration in seconds. The value must be 8 days (691,200 seconds) or less.</p>",
          "shape": "JobDuration"
        },
        "name": {
          "documentation": "<p>The name of the simulation job.</p>",
          "shape": "Name"
        },
        "networkInterface": {
          "documentation": "<p>The network interface information for the simulation job.</p>",
          "shape": "NetworkInterface"
        },
        "outputLocation": {
          "documentation": "<p>Location for output files generated by the simulation job.</p>",
          "shape": "OutputLocation"
        },
        "robotApplications": {
          "documentation": "<p>A list of robot applications.</p>",
          "shape": "RobotApplicationConfigs"
        },
        "simulationApplications": {
          "documentation": "<p>A list of simulation applications.</p>",
          "shape": "SimulationApplicationConfigs"
        },
        "simulationTimeMillis": {
          "documentation": "<p>The simulation job execution duration in milliseconds.</p>",
          "shape": "SimulationTimeMillis"
        },
        "status": {
          "documentation": "<p>The status of the simulation job.</p>",
          "shape": "SimulationJobStatus"
        },
        "tags": {
          "documentation": "<p>The list of all tags added to the specified simulation job.</p>",
          "shape": "TagMap"
        },
        "vpcConfig": {
          "documentation": "<p>The VPC configuration.</p>",
          "shape": "VPCConfigResponse"
        }
      },
      "type": "structure"
    },
    "DescribeWorldExportJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world export job to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "DescribeWorldExportJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world export job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world export job was created.</p>",
          "shape": "CreatedAt"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the world export job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt> <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt> <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt> <dd> <p>An input parameter in the request is not valid.</p> </dd> </dl>",
          "shape": "WorldExportJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The reason why the world export job failed.</p>",
          "shape": "GenericString"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that the world export process uses to access the Amazon S3 bucket and put the export.</p>",
          "shape": "IamRole"
        },
        "outputLocation": {
          "shape": "OutputLocation"
        },
        "status": {
          "documentation": "<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> and <code>failureReason</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldExportJobStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world export job.</p>",
          "shape": "TagMap"
        },
        "worlds": {
          "documentation": "<p>A list of Amazon Resource Names (arns) that correspond to worlds to be exported.</p>",
          "shape": "Arns"
        }
      },
      "type": "structure"
    },
    "DescribeWorldGenerationJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world generation job to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "DescribeWorldGenerationJobResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world generation job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world generation job was created.</p>",
          "shape": "CreatedAt"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the world generation job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt> <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt> <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt> <dd> <p>An input parameter in the request is not valid.</p> </dd> </dl>",
          "shape": "WorldGenerationJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The reason why the world generation job failed.</p>",
          "shape": "GenericString"
        },
        "finishedWorldsSummary": {
          "documentation": "<p>Summary information about finished worlds.</p>",
          "shape": "FinishedWorldsSummary"
        },
        "status": {
          "documentation": "<p>The status of the world generation job:</p> <dl> <dt>Pending</dt> <dd> <p>The world generation job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generation job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generation job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generation job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generation job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generation job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldGenerationJobStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world generation job.</p>",
          "shape": "TagMap"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        },
        "worldCount": {
          "documentation": "<p>Information about the world count.</p>",
          "shape": "WorldCount"
        },
        "worldTags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the generated worlds.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DescribeWorldRequest": {
      "members": {
        "world": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world you want to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "world"
      ],
      "type": "structure"
    },
    "DescribeWorldResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world was created.</p>",
          "shape": "CreatedAt"
        },
        "generationJob": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world generation job that generated the world.</p>",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world.</p>",
          "shape": "TagMap"
        },
        "template": {
          "documentation": "<p>The world template.</p>",
          "shape": "Arn"
        },
        "worldDescriptionBody": {
          "documentation": "<p>Returns the JSON formatted string that describes the contents of your world.</p>",
          "shape": "Json"
        }
      },
      "type": "structure"
    },
    "DescribeWorldTemplateRequest": {
      "members": {
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template you want to describe.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "template"
      ],
      "type": "structure"
    },
    "DescribeWorldTemplateResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world template.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world template was created.</p>",
          "shape": "CreatedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world template was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the world template.</p>",
          "shape": "TemplateName"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the world template.</p>",
          "shape": "TagMap"
        },
        "version": {
          "documentation": "<p>The version of the world template that you're using.</p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "Environment": {
      "documentation": "<p>The object that contains the Docker image URI for either your robot or simulation applications.</p>",
      "members": {
        "uri": {
          "documentation": "<p>The Docker image URI for either your robot or simulation applications.</p>",
          "shape": "RepositoryUrl"
        }
      },
      "type": "structure"
    },
    "EnvironmentVariableKey": {
      "max": 1024,
      "min": 1,
      "pattern": "[A-Z_][A-Z0-9_]*",
      "type": "string"
    },
    "EnvironmentVariableMap": {
      "key": {
        "shape": "EnvironmentVariableKey"
      },
      "max": 20,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "EnvironmentVariableValue"
      }
    },
    "EnvironmentVariableValue": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "ExitBehavior": {
      "enum": [
        "FAIL",
        "RESTART"
      ],
      "type": "string"
    },
    "FailedAt": {
      "type": "timestamp"
    },
    "FailedCreateSimulationJobRequest": {
      "documentation": "<p>Information about a failed create simulation job request.</p>",
      "members": {
        "failedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch failed.</p>",
          "shape": "FailedAt"
        },
        "failureCode": {
          "documentation": "<p>The failure code.</p>",
          "shape": "SimulationJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The failure reason of the simulation job request.</p>",
          "shape": "GenericString"
        },
        "request": {
          "documentation": "<p>The simulation job request.</p>",
          "shape": "SimulationJobRequest"
        }
      },
      "type": "structure"
    },
    "FailedCreateSimulationJobRequests": {
      "member": {
        "shape": "FailedCreateSimulationJobRequest"
      },
      "type": "list"
    },
    "FailureBehavior": {
      "enum": [
        "Fail",
        "Continue"
      ],
      "type": "string"
    },
    "FailureSummary": {
      "documentation": "<p>Information about worlds that failed.</p>",
      "members": {
        "failures": {
          "documentation": "<p>The worlds that failed.</p>",
          "shape": "WorldFailures"
        },
        "totalFailureCount": {
          "documentation": "<p>The total number of failures.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "Filter": {
      "documentation": "<p>Information about a filter.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the filter.</p>",
          "shape": "Name"
        },
        "values": {
          "documentation": "<p>A list of values.</p>",
          "shape": "FilterValues"
        }
      },
      "type": "structure"
    },
    "FilterValues": {
      "max": 1,
      "member": {
        "shape": "Name"
      },
      "min": 1,
      "type": "list"
    },
    "Filters": {
      "max": 1,
      "member": {
        "shape": "Filter"
      },
      "min": 1,
      "type": "list"
    },
    "FinishedWorldsSummary": {
      "documentation": "<p>Information about worlds that finished.</p>",
      "members": {
        "failureSummary": {
          "documentation": "<p>Information about worlds that failed.</p>",
          "shape": "FailureSummary"
        },
        "finishedCount": {
          "documentation": "<p>The total number of finished worlds.</p>",
          "shape": "Integer"
        },
        "succeededWorlds": {
          "documentation": "<p>A list of worlds that succeeded.</p>",
          "shape": "Arns"
        }
      },
      "type": "structure"
    },
    "Fleet": {
      "documentation": "<p>Information about a fleet.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the fleet was created.</p>",
          "shape": "CreatedAt"
        },
        "lastDeploymentJob": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the last deployment job.</p>",
          "shape": "Arn"
        },
        "lastDeploymentStatus": {
          "documentation": "<p>The status of the last fleet deployment.</p>",
          "shape": "DeploymentStatus"
        },
        "lastDeploymentTime": {
          "documentation": "<p>The time of the last deployment.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the fleet.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "Fleets": {
      "max": 200,
      "member": {
        "shape": "Fleet"
      },
      "min": 0,
      "type": "list"
    },
    "FloorplanCount": {
      "type": "integer"
    },
    "GPUUnit": {
      "max": 1,
      "min": 0,
      "type": "integer"
    },
    "GenericInteger": {
      "type": "integer"
    },
    "GenericString": {
      "max": 1024,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "GetWorldTemplateBodyRequest": {
      "members": {
        "generationJob": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world generator job.</p>",
          "shape": "Arn"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "GetWorldTemplateBodyResponse": {
      "members": {
        "templateBody": {
          "documentation": "<p>The world template body.</p>",
          "shape": "Json"
        }
      },
      "type": "structure"
    },
    "IamRole": {
      "max": 255,
      "min": 1,
      "pattern": "arn:aws:iam::\\w+:role/.*",
      "type": "string"
    },
    "Id": {
      "max": 1224,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "IdempotentParameterMismatchException": {
      "documentation": "<p>The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ImageDigest": {
      "max": 72,
      "min": 0,
      "pattern": "[Ss][Hh][Aa]256:[0-9a-fA-F]{64}",
      "type": "string"
    },
    "Integer": {
      "type": "integer"
    },
    "InteriorCountPerFloorplan": {
      "type": "integer"
    },
    "InternalServerException": {
      "documentation": "<p>AWS RoboMaker experienced a service issue. Try your call again.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "InvalidParameterException": {
      "documentation": "<p>A parameter specified in a request is not valid, is unsupported, or cannot be used. The returned message provides an explanation of the error value.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "JobDuration": {
      "type": "long"
    },
    "Json": {
      "max": 262144,
      "min": 1,
      "pattern": "[\\S\\s]+",
      "type": "string"
    },
    "LastStartedAt": {
      "type": "timestamp"
    },
    "LastUpdatedAt": {
      "type": "timestamp"
    },
    "LaunchConfig": {
      "documentation": "<p>Information about a launch configuration.</p>",
      "members": {
        "command": {
          "documentation": "<p>If you've specified <code>General</code> as the value for your <code>RobotSoftwareSuite</code>, you can use this field to specify a list of commands for your container image.</p> <p>If you've specified <code>SimulationRuntime</code> as the value for your <code>SimulationSoftwareSuite</code>, you can use this field to specify a list of commands for your container image.</p>",
          "shape": "CommandList"
        },
        "environmentVariables": {
          "documentation": "<p>The environment variables for the application launch.</p>",
          "shape": "EnvironmentVariableMap"
        },
        "launchFile": {
          "documentation": "<p>The launch file name.</p>",
          "shape": "Command"
        },
        "packageName": {
          "documentation": "<p>The package name.</p>",
          "shape": "Command"
        },
        "portForwardingConfig": {
          "documentation": "<p>The port forwarding configuration.</p>",
          "shape": "PortForwardingConfig"
        },
        "streamUI": {
          "documentation": "<p>Boolean indicating whether a streaming session will be configured for the application. If <code>True</code>, AWS RoboMaker will configure a connection so you can interact with your application as it is running in the simulation. You must configure and launch the component. It must have a graphical user interface. </p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "LimitExceededException": {
      "documentation": "<p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ListDeploymentJobsRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>InProgress</code> or the status <code>Pending</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListDeploymentJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListDeploymentJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListDeploymentJobs</code> returns up to 200 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListDeploymentJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListDeploymentJobsResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "deploymentJobs": {
          "documentation": "<p>A list of deployment jobs that meet the criteria of the request.</p>",
          "shape": "DeploymentJobs"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListDeploymentJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListFleetsRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListFleets</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListFleets</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListFleets</code> returns up to 200 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListFleets</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p> <note> <p>This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.</p> </note>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListFleetsResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleetDetails": {
          "documentation": "<p>A list of fleet details meeting the request criteria.</p>",
          "shape": "Fleets"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListFleets</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListRobotApplicationsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListRobotApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobotApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListRobotApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobotApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "versionQualifier": {
          "documentation": "<p>The version qualifier of the robot application.</p>",
          "shape": "VersionQualifier"
        }
      },
      "type": "structure"
    },
    "ListRobotApplicationsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobotApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "robotApplicationSummaries": {
          "documentation": "<p>A list of robot application summaries that meet the criteria of the request.</p>",
          "shape": "RobotApplicationSummaries"
        }
      },
      "type": "structure"
    },
    "ListRobotsRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>fleetName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Registered</code> or the status <code>Available</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListRobots</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListRobots</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 200. If this parameter is not used, then <code>ListRobots</code> returns up to 200 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobots</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListRobotsResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListRobots</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "robots": {
          "documentation": "<p>A list of robots that meet the criteria of the request.</p>",
          "shape": "Robots"
        }
      },
      "type": "structure"
    },
    "ListSimulationApplicationsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional list of filters to limit results.</p> <p>The filter name <code>name</code> is supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListSimulationApplications</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationApplications</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListSimulationApplications</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "versionQualifier": {
          "documentation": "<p>The version qualifier of the simulation application.</p>",
          "shape": "VersionQualifier"
        }
      },
      "type": "structure"
    },
    "ListSimulationApplicationsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationApplications</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "simulationApplicationSummaries": {
          "documentation": "<p>A list of simulation application summaries that meet the criteria of the request.</p>",
          "shape": "SimulationApplicationSummaries"
        }
      },
      "type": "structure"
    },
    "ListSimulationJobBatchesRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListSimulationJobBatches</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobBatches</code> request with the returned <code>nextToken</code> value. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobBatches</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListSimulationJobBatchesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobBatches</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "simulationJobBatchSummaries": {
          "documentation": "<p>A list of simulation job batch summaries.</p>",
          "shape": "SimulationJobBatchSummaries"
        }
      },
      "type": "structure"
    },
    "ListSimulationJobsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results.</p> <p>The filter names <code>status</code> and <code>simulationApplicationName</code> and <code>robotApplicationName</code> are supported. When filtering, you must use the complete value of the filtered item. You can use up to three filters, but they must be for the same named item. For example, if you are looking for items with the status <code>Preparing</code> or the status <code>Running</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListSimulationJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListSimulationJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 1000. If this parameter is not used, then <code>ListSimulationJobs</code> returns up to 1000 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListSimulationJobsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListSimulationJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "simulationJobSummaries": {
          "documentation": "<p>A list of simulation job summaries that meet the criteria of the request.</p>",
          "shape": "SimulationJobSummaries"
        }
      },
      "required": [
        "simulationJobSummaries"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The AWS RoboMaker Amazon Resource Name (ARN) with tags to be listed.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>The list of all tags added to the specified resource.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ListWorldExportJobsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results. You can use <code>generationJobId</code> and <code>templateId</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListWorldExportJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldExportJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldExportJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldExportJobs</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListWorldExportJobsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldExportJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "worldExportJobSummaries": {
          "documentation": "<p>Summary information for world export jobs.</p>",
          "shape": "WorldExportJobSummaries"
        }
      },
      "required": [
        "worldExportJobSummaries"
      ],
      "type": "structure"
    },
    "ListWorldGenerationJobsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results. You can use <code>status</code> and <code>templateId</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListWorldGeneratorJobs</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldGeneratorJobs</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldGeneratorJobs</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGenerationJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListWorldGenerationJobsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldGeneratorJobsRequest</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "worldGenerationJobSummaries": {
          "documentation": "<p>Summary information for world generator jobs.</p>",
          "shape": "WorldGenerationJobSummaries"
        }
      },
      "required": [
        "worldGenerationJobSummaries"
      ],
      "type": "structure"
    },
    "ListWorldTemplatesRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListWorldTemplates</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorldTemplates</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorldTemplates</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldTemplates</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListWorldTemplatesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorldTemplates</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "templateSummaries": {
          "documentation": "<p>Summary information for templates.</p>",
          "shape": "TemplateSummaries"
        }
      },
      "type": "structure"
    },
    "ListWorldsRequest": {
      "members": {
        "filters": {
          "documentation": "<p>Optional filters to limit results. You can use <code>status</code>.</p>",
          "shape": "Filters"
        },
        "maxResults": {
          "documentation": "<p>When this parameter is used, <code>ListWorlds</code> only returns <code>maxResults</code> results in a single page along with a <code>nextToken</code> response element. The remaining results of the initial request can be seen by sending another <code>ListWorlds</code> request with the returned <code>nextToken</code> value. This value can be between 1 and 100. If this parameter is not used, then <code>ListWorlds</code> returns up to 100 results and a <code>nextToken</code> value if applicable. </p>",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListWorldsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>If the previous paginated request did not return all of the remaining results, the response object's <code>nextToken</code> parameter value is set to a token. To retrieve the next set of results, call <code>ListWorlds</code> again and assign that token to the request object's <code>nextToken</code> parameter. If there are no remaining results, the previous response object's NextToken parameter is set to null. </p>",
          "shape": "PaginationToken"
        },
        "worldSummaries": {
          "documentation": "<p>Summary information for worlds.</p>",
          "shape": "WorldSummaries"
        }
      },
      "type": "structure"
    },
    "LoggingConfig": {
      "documentation": "<p>The logging configuration.</p>",
      "members": {
        "recordAllRosTopics": {
          "deprecated": true,
          "deprecatedMessage": "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.",
          "documentation": "<p>A boolean indicating whether to record all ROS topics.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
          "shape": "BoxedBoolean"
        }
      },
      "type": "structure"
    },
    "MaxConcurrency": {
      "type": "integer"
    },
    "MaxResults": {
      "type": "integer"
    },
    "Name": {
      "max": 255,
      "min": 1,
      "pattern": "[a-zA-Z0-9_\\-]*",
      "type": "string"
    },
    "NetworkInterface": {
      "documentation": "<p>Describes a network interface.</p>",
      "members": {
        "networkInterfaceId": {
          "documentation": "<p>The ID of the network interface.</p>",
          "shape": "GenericString"
        },
        "privateIpAddress": {
          "documentation": "<p>The IPv4 address of the network interface within the subnet.</p>",
          "shape": "GenericString"
        },
        "publicIpAddress": {
          "documentation": "<p>The IPv4 public address of the network interface.</p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "NonEmptyString": {
      "max": 255,
      "min": 1,
      "pattern": ".+",
      "type": "string"
    },
    "NonSystemPort": {
      "max": 65535,
      "min": 1024,
      "type": "integer"
    },
    "OutputLocation": {
      "documentation": "<p>The output location.</p>",
      "members": {
        "s3Bucket": {
          "documentation": "<p>The S3 bucket for output.</p>",
          "shape": "S3Bucket"
        },
        "s3Prefix": {
          "documentation": "<p>The S3 folder in the <code>s3Bucket</code> where output files will be placed.</p>",
          "shape": "S3Key"
        }
      },
      "type": "structure"
    },
    "PaginationToken": {
      "max": 2048,
      "min": 1,
      "pattern": "[a-zA-Z0-9_.\\-\\/+=]*",
      "type": "string"
    },
    "Path": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "PercentDone": {
      "max": 100.0,
      "min": 0.0,
      "type": "float"
    },
    "Percentage": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "Port": {
      "max": 65535,
      "min": 1,
      "type": "integer"
    },
    "PortForwardingConfig": {
      "documentation": "<p>Configuration information for port forwarding.</p>",
      "members": {
        "portMappings": {
          "documentation": "<p>The port mappings for the configuration.</p>",
          "shape": "PortMappingList"
        }
      },
      "type": "structure"
    },
    "PortMapping": {
      "documentation": "<p>An object representing a port mapping.</p>",
      "members": {
        "applicationPort": {
          "documentation": "<p>The port number on the application.</p>",
          "shape": "NonSystemPort"
        },
        "enableOnPublicIp": {
          "documentation": "<p>A Boolean indicating whether to enable this port mapping on public IP.</p>",
          "shape": "Boolean"
        },
        "jobPort": {
          "documentation": "<p>The port number on the simulation job instance to use as a remote connection point. </p>",
          "shape": "Port"
        }
      },
      "required": [
        "jobPort",
        "applicationPort"
      ],
      "type": "structure"
    },
    "PortMappingList": {
      "max": 10,
      "member": {
        "shape": "PortMapping"
      },
      "min": 0,
      "type": "list"
    },
    "ProgressDetail": {
      "documentation": "<p>Information about the progress of a deployment job.</p>",
      "members": {
        "currentProgress": {
          "documentation": "<p>The current progress status.</p> <dl> <dt>Validating</dt> <dd> <p>Validating the deployment.</p> </dd> <dt>DownloadingExtracting</dt> <dd> <p>Downloading and extracting the bundle on the robot.</p> </dd> <dt>ExecutingPreLaunch</dt> <dd> <p>Executing pre-launch script(s) if provided.</p> </dd> <dt>Launching</dt> <dd> <p>Launching the robot application.</p> </dd> <dt>ExecutingPostLaunch</dt> <dd> <p>Executing post-launch script(s) if provided.</p> </dd> <dt>Finished</dt> <dd> <p>Deployment is complete.</p> </dd> </dl>",
          "shape": "RobotDeploymentStep"
        },
        "estimatedTimeRemainingSeconds": {
          "documentation": "<p>Estimated amount of time in seconds remaining in the step. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.</p>",
          "shape": "GenericInteger"
        },
        "percentDone": {
          "documentation": "<p>Precentage of the step that is done. This currently only applies to the <code>Downloading/Extracting</code> step of the deployment. It is empty for other steps.</p>",
          "shape": "PercentDone"
        },
        "targetResource": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deployment job.</p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "RegisterRobotRequest": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "robot": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "fleet",
        "robot"
      ],
      "type": "structure"
    },
    "RegisterRobotResponse": {
      "deprecated": true,
      "deprecatedMessage": "AWS RoboMaker is unable to process this request as the support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet that the robot will join.</p>",
          "shape": "Arn"
        },
        "robot": {
          "documentation": "<p>Information about the robot registration.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "RenderingEngine": {
      "documentation": "<p>Information about a rendering engine.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the rendering engine.</p>",
          "shape": "RenderingEngineType"
        },
        "version": {
          "documentation": "<p>The version of the rendering engine.</p>",
          "shape": "RenderingEngineVersionType"
        }
      },
      "type": "structure"
    },
    "RenderingEngineType": {
      "enum": [
        "OGRE"
      ],
      "type": "string"
    },
    "RenderingEngineVersionType": {
      "max": 4,
      "min": 1,
      "pattern": "1.x",
      "type": "string"
    },
    "RepositoryUrl": {
      "max": 1024,
      "min": 1,
      "pattern": ".+",
      "type": "string"
    },
    "ResourceAlreadyExistsException": {
      "documentation": "<p>The specified resource already exists.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource does not exist.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "RestartSimulationJobRequest": {
      "members": {
        "job": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "job"
      ],
      "type": "structure"
    },
    "RestartSimulationJobResponse": {
      "members": {},
      "type": "structure"
    },
    "RevisionId": {
      "max": 40,
      "min": 1,
      "pattern": "[a-zA-Z0-9_.\\-]*",
      "type": "string"
    },
    "Robot": {
      "documentation": "<p>Information about a robot.</p>",
      "members": {
        "architecture": {
          "documentation": "<p>The architecture of the robot.</p>",
          "shape": "Architecture"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot was created.</p>",
          "shape": "CreatedAt"
        },
        "fleetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "greenGrassGroupId": {
          "documentation": "<p>The Greengrass group associated with the robot.</p>",
          "shape": "Id"
        },
        "lastDeploymentJob": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the last deployment job.</p>",
          "shape": "Arn"
        },
        "lastDeploymentTime": {
          "documentation": "<p>The time of the last deployment.</p>",
          "shape": "CreatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot.</p>",
          "shape": "Name"
        },
        "status": {
          "documentation": "<p>The status of the robot.</p>",
          "shape": "RobotStatus"
        }
      },
      "type": "structure"
    },
    "RobotApplicationConfig": {
      "documentation": "<p>Application configuration information for a robot.</p>",
      "members": {
        "application": {
          "documentation": "<p>The application information for the robot application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        },
        "launchConfig": {
          "documentation": "<p>The launch configuration for the robot application.</p>",
          "shape": "LaunchConfig"
        },
        "tools": {
          "documentation": "<p>Information about tools configured for the robot application.</p>",
          "shape": "Tools"
        },
        "uploadConfigurations": {
          "documentation": "<p>The upload configurations for the robot application.</p>",
          "shape": "UploadConfigurations"
        },
        "useDefaultTools": {
          "deprecated": true,
          "deprecatedMessage": "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.",
          "documentation": "<p>A Boolean indicating whether to use default robot application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is <code>False</code>.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
          "shape": "BoxedBoolean"
        },
        "useDefaultUploadConfigurations": {
          "deprecated": true,
          "deprecatedMessage": "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.",
          "documentation": "<p>A Boolean indicating whether to use default upload configurations. By default, <code>.ros</code> and <code>.gazebo</code> files are uploaded when the application terminates and all ROS topics will be recorded.</p> <p>If you set this value, you must specify an <code>outputLocation</code>.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
          "shape": "BoxedBoolean"
        }
      },
      "required": [
        "application",
        "launchConfig"
      ],
      "type": "structure"
    },
    "RobotApplicationConfigs": {
      "max": 1,
      "member": {
        "shape": "RobotApplicationConfig"
      },
      "min": 1,
      "type": "list"
    },
    "RobotApplicationNames": {
      "member": {
        "shape": "Name"
      },
      "type": "list"
    },
    "RobotApplicationSummaries": {
      "max": 100,
      "member": {
        "shape": "RobotApplicationSummary"
      },
      "min": 0,
      "type": "list"
    },
    "RobotApplicationSummary": {
      "documentation": "<p>Summary information for a robot application.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the robot.</p>",
          "shape": "Arn"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about a robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "RobotDeployment": {
      "documentation": "<p>Information about a robot deployment.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The robot deployment Amazon Resource Name (ARN).</p>",
          "shape": "Arn"
        },
        "deploymentFinishTime": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the deployment finished.</p>",
          "shape": "CreatedAt"
        },
        "deploymentStartTime": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the deployment was started.</p>",
          "shape": "CreatedAt"
        },
        "failureCode": {
          "documentation": "<p>The robot deployment failure code.</p>",
          "shape": "DeploymentJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>A short description of the reason why the robot deployment failed.</p>",
          "shape": "GenericString"
        },
        "progressDetail": {
          "documentation": "<p>Information about how the deployment is progressing.</p>",
          "shape": "ProgressDetail"
        },
        "status": {
          "documentation": "<p>The status of the robot deployment.</p>",
          "shape": "RobotStatus"
        }
      },
      "type": "structure"
    },
    "RobotDeploymentStep": {
      "enum": [
        "Validating",
        "DownloadingExtracting",
        "ExecutingDownloadCondition",
        "ExecutingPreLaunch",
        "Launching",
        "ExecutingPostLaunch",
        "Finished"
      ],
      "type": "string"
    },
    "RobotDeploymentSummary": {
      "member": {
        "shape": "RobotDeployment"
      },
      "type": "list"
    },
    "RobotSoftwareSuite": {
      "documentation": "<p>Information about a robot software suite (ROS distribution).</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuiteType"
        },
        "version": {
          "documentation": "<p>The version of the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuiteVersionType"
        }
      },
      "type": "structure"
    },
    "RobotSoftwareSuiteType": {
      "enum": [
        "ROS",
        "ROS2",
        "General"
      ],
      "type": "string"
    },
    "RobotSoftwareSuiteVersionType": {
      "enum": [
        "Kinetic",
        "Melodic",
        "Dashing",
        "Foxy"
      ],
      "type": "string"
    },
    "RobotStatus": {
      "enum": [
        "Available",
        "Registered",
        "PendingNewDeployment",
        "Deploying",
        "Failed",
        "InSync",
        "NoResponse"
      ],
      "type": "string"
    },
    "Robots": {
      "max": 1000,
      "member": {
        "shape": "Robot"
      },
      "min": 0,
      "type": "list"
    },
    "S3Bucket": {
      "max": 63,
      "min": 3,
      "pattern": "[a-z0-9][a-z0-9.\\-]*[a-z0-9]",
      "type": "string"
    },
    "S3Etag": {
      "type": "string"
    },
    "S3Etags": {
      "member": {
        "shape": "S3Etag"
      },
      "type": "list"
    },
    "S3Key": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "S3KeyOrPrefix": {
      "max": 1024,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "S3KeyOutput": {
      "documentation": "<p>Information about S3 keys.</p>",
      "members": {
        "etag": {
          "documentation": "<p>The etag for the object.</p>",
          "shape": "S3Etag"
        },
        "s3Key": {
          "documentation": "<p>The S3 key.</p>",
          "shape": "S3KeyOrPrefix"
        }
      },
      "type": "structure"
    },
    "S3KeyOutputs": {
      "member": {
        "shape": "S3KeyOutput"
      },
      "type": "list"
    },
    "S3KeysOrPrefixes": {
      "max": 100,
      "member": {
        "shape": "S3KeyOrPrefix"
      },
      "min": 1,
      "type": "list"
    },
    "S3Object": {
      "documentation": "<p>Information about an S3 object.</p>",
      "members": {
        "bucket": {
          "documentation": "<p>The bucket containing the object.</p>",
          "shape": "S3Bucket"
        },
        "etag": {
          "documentation": "<p>The etag of the object.</p>",
          "shape": "S3Etag"
        },
        "key": {
          "documentation": "<p>The key of the object.</p>",
          "shape": "S3Key"
        }
      },
      "required": [
        "bucket",
        "key"
      ],
      "type": "structure"
    },
    "SecurityGroups": {
      "max": 5,
      "member": {
        "shape": "NonEmptyString"
      },
      "min": 1,
      "type": "list"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The request has failed due to a temporary failure of the server.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "SimulationApplicationConfig": {
      "documentation": "<p>Information about a simulation application configuration.</p>",
      "members": {
        "application": {
          "documentation": "<p>The application information for the simulation application.</p>",
          "shape": "Arn"
        },
        "applicationVersion": {
          "documentation": "<p>The version of the simulation application.</p>",
          "shape": "Version"
        },
        "launchConfig": {
          "documentation": "<p>The launch configuration for the simulation application.</p>",
          "shape": "LaunchConfig"
        },
        "tools": {
          "documentation": "<p>Information about tools configured for the simulation application.</p>",
          "shape": "Tools"
        },
        "uploadConfigurations": {
          "documentation": "<p>Information about upload configurations for the simulation application.</p>",
          "shape": "UploadConfigurations"
        },
        "useDefaultTools": {
          "deprecated": true,
          "deprecatedMessage": "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.",
          "documentation": "<p>A Boolean indicating whether to use default simulation application tools. The default tools are rviz, rqt, terminal and rosbag record. The default is <code>False</code>.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
          "shape": "BoxedBoolean"
        },
        "useDefaultUploadConfigurations": {
          "deprecated": true,
          "deprecatedMessage": "AWS RoboMaker is ending support for ROS software suite. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/software-support-policy.html.",
          "documentation": "<p>A Boolean indicating whether to use default upload configurations. By default, <code>.ros</code> and <code>.gazebo</code> files are uploaded when the application terminates and all ROS topics will be recorded.</p> <p>If you set this value, you must specify an <code>outputLocation</code>.</p> <important> <p>This API is no longer supported and will throw an error if used.</p> </important>",
          "shape": "BoxedBoolean"
        },
        "worldConfigs": {
          "documentation": "<p>A list of world configurations.</p>",
          "shape": "WorldConfigs"
        }
      },
      "required": [
        "application",
        "launchConfig"
      ],
      "type": "structure"
    },
    "SimulationApplicationConfigs": {
      "max": 1,
      "member": {
        "shape": "SimulationApplicationConfig"
      },
      "min": 1,
      "type": "list"
    },
    "SimulationApplicationNames": {
      "member": {
        "shape": "Name"
      },
      "type": "list"
    },
    "SimulationApplicationSummaries": {
      "max": 100,
      "member": {
        "shape": "SimulationApplicationSummary"
      },
      "min": 0,
      "type": "list"
    },
    "SimulationApplicationSummary": {
      "documentation": "<p>Summary information for a simulation application.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation application.</p>",
          "shape": "Arn"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about a robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>Information about a simulation software suite.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "version": {
          "documentation": "<p>The version of the simulation application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "SimulationJob": {
      "documentation": "<p>Information about a simulation job.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job.</p>",
          "shape": "Arn"
        },
        "clientRequestToken": {
          "documentation": "<p>A unique identifier for this <code>SimulationJob</code> request.</p>",
          "shape": "ClientRequestToken"
        },
        "compute": {
          "documentation": "<p>Compute information for the simulation job</p>",
          "shape": "ComputeResponse"
        },
        "dataSources": {
          "documentation": "<p>The data sources for the simulation job.</p>",
          "shape": "DataSources"
        },
        "failureBehavior": {
          "documentation": "<p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Leaves the host running for its maximum timeout duration after a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>",
          "shape": "FailureBehavior"
        },
        "failureCode": {
          "documentation": "<p>The failure code of the simulation job if it failed.</p>",
          "shape": "SimulationJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The reason why the simulation job failed.</p>",
          "shape": "GenericString"
        },
        "iamRole": {
          "documentation": "<p>The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. </p>",
          "shape": "IamRole"
        },
        "lastStartedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last started.</p>",
          "shape": "LastStartedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "loggingConfig": {
          "documentation": "<p>The logging configuration.</p>",
          "shape": "LoggingConfig"
        },
        "maxJobDurationInSeconds": {
          "documentation": "<p>The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.</p>",
          "shape": "JobDuration"
        },
        "name": {
          "documentation": "<p>The name of the simulation job.</p>",
          "shape": "Name"
        },
        "networkInterface": {
          "documentation": "<p>Information about a network interface.</p>",
          "shape": "NetworkInterface"
        },
        "outputLocation": {
          "documentation": "<p>Location for output files generated by the simulation job.</p>",
          "shape": "OutputLocation"
        },
        "robotApplications": {
          "documentation": "<p>A list of robot applications.</p>",
          "shape": "RobotApplicationConfigs"
        },
        "simulationApplications": {
          "documentation": "<p>A list of simulation applications.</p>",
          "shape": "SimulationApplicationConfigs"
        },
        "simulationTimeMillis": {
          "documentation": "<p>The simulation job execution duration in milliseconds.</p>",
          "shape": "SimulationTimeMillis"
        },
        "status": {
          "documentation": "<p>Status of the simulation job.</p>",
          "shape": "SimulationJobStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the simulation job.</p>",
          "shape": "TagMap"
        },
        "vpcConfig": {
          "documentation": "<p>VPC configuration information.</p>",
          "shape": "VPCConfigResponse"
        }
      },
      "type": "structure"
    },
    "SimulationJobBatchErrorCode": {
      "enum": [
        "InternalServiceError"
      ],
      "type": "string"
    },
    "SimulationJobBatchStatus": {
      "enum": [
        "Pending",
        "InProgress",
        "Failed",
        "Completed",
        "Canceled",
        "Canceling",
        "Completing",
        "TimingOut",
        "TimedOut"
      ],
      "type": "string"
    },
    "SimulationJobBatchSummaries": {
      "member": {
        "shape": "SimulationJobBatchSummary"
      },
      "type": "list"
    },
    "SimulationJobBatchSummary": {
      "documentation": "<p>Information about a simulation job batch.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the batch.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch was created.</p>",
          "shape": "CreatedAt"
        },
        "createdRequestCount": {
          "documentation": "<p>The number of created simulation job requests.</p>",
          "shape": "Integer"
        },
        "failedRequestCount": {
          "documentation": "<p>The number of failed simulation job requests.</p>",
          "shape": "Integer"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "pendingRequestCount": {
          "documentation": "<p>The number of pending simulation job requests.</p>",
          "shape": "Integer"
        },
        "status": {
          "documentation": "<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>",
          "shape": "SimulationJobBatchStatus"
        }
      },
      "type": "structure"
    },
    "SimulationJobErrorCode": {
      "enum": [
        "InternalServiceError",
        "RobotApplicationCrash",
        "SimulationApplicationCrash",
        "RobotApplicationHealthCheckFailure",
        "SimulationApplicationHealthCheckFailure",
        "BadPermissionsRobotApplication",
        "BadPermissionsSimulationApplication",
        "BadPermissionsS3Object",
        "BadPermissionsS3Output",
        "BadPermissionsCloudwatchLogs",
        "SubnetIpLimitExceeded",
        "ENILimitExceeded",
        "BadPermissionsUserCredentials",
        "InvalidBundleRobotApplication",
        "InvalidBundleSimulationApplication",
        "InvalidS3Resource",
        "ThrottlingError",
        "LimitExceeded",
        "MismatchedEtag",
        "RobotApplicationVersionMismatchedEtag",
        "SimulationApplicationVersionMismatchedEtag",
        "ResourceNotFound",
        "RequestThrottled",
        "BatchTimedOut",
        "BatchCanceled",
        "InvalidInput",
        "WrongRegionS3Bucket",
        "WrongRegionS3Output",
        "WrongRegionRobotApplication",
        "WrongRegionSimulationApplication",
        "UploadContentMismatchError"
      ],
      "type": "string"
    },
    "SimulationJobRequest": {
      "documentation": "<p>Information about a simulation job request.</p>",
      "members": {
        "compute": {
          "documentation": "<p>Compute information for the simulation job</p>",
          "shape": "Compute"
        },
        "dataSources": {
          "documentation": "<p>Specify data sources to mount read-only files from S3 into your simulation. These files are available under <code>/opt/robomaker/datasources/data_source_name</code>. </p> <note> <p>There is a limit of 100 files and a combined size of 25GB for all <code>DataSourceConfig</code> objects. </p> </note>",
          "shape": "DataSourceConfigs"
        },
        "failureBehavior": {
          "documentation": "<p>The failure behavior the simulation job.</p> <dl> <dt>Continue</dt> <dd> <p>Leaves the host running for its maximum timeout duration after a <code>4XX</code> error code.</p> </dd> <dt>Fail</dt> <dd> <p>Stop the simulation job and terminate the instance.</p> </dd> </dl>",
          "shape": "FailureBehavior"
        },
        "iamRole": {
          "documentation": "<p>The IAM role name that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job. </p>",
          "shape": "IamRole"
        },
        "loggingConfig": {
          "shape": "LoggingConfig"
        },
        "maxJobDurationInSeconds": {
          "documentation": "<p>The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.</p>",
          "shape": "JobDuration"
        },
        "outputLocation": {
          "shape": "OutputLocation"
        },
        "robotApplications": {
          "documentation": "<p>The robot applications to use in the simulation job.</p>",
          "shape": "RobotApplicationConfigs"
        },
        "simulationApplications": {
          "documentation": "<p>The simulation applications to use in the simulation job.</p>",
          "shape": "SimulationApplicationConfigs"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the simulation job request.</p>",
          "shape": "TagMap"
        },
        "useDefaultApplications": {
          "documentation": "<p>A Boolean indicating whether to use default applications in the simulation job. Default applications include Gazebo, rqt, rviz and terminal access. </p>",
          "shape": "BoxedBoolean"
        },
        "vpcConfig": {
          "shape": "VPCConfig"
        }
      },
      "required": [
        "maxJobDurationInSeconds"
      ],
      "type": "structure"
    },
    "SimulationJobStatus": {
      "enum": [
        "Pending",
        "Preparing",
        "Running",
        "Restarting",
        "Completed",
        "Failed",
        "RunningFailed",
        "Terminating",
        "Terminated",
        "Canceled"
      ],
      "type": "string"
    },
    "SimulationJobSummaries": {
      "max": 100,
      "member": {
        "shape": "SimulationJobSummary"
      },
      "min": 0,
      "type": "list"
    },
    "SimulationJobSummary": {
      "documentation": "<p>Summary information for a simulation job.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the simulation job.</p>",
          "shape": "Arn"
        },
        "computeType": {
          "documentation": "<p>The compute type for the simulation job summary.</p>",
          "shape": "ComputeType"
        },
        "dataSourceNames": {
          "documentation": "<p>The names of the data sources.</p>",
          "shape": "DataSourceNames"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation job.</p>",
          "shape": "Name"
        },
        "robotApplicationNames": {
          "documentation": "<p>A list of simulation job robot application names.</p>",
          "shape": "RobotApplicationNames"
        },
        "simulationApplicationNames": {
          "documentation": "<p>A list of simulation job simulation application names.</p>",
          "shape": "SimulationApplicationNames"
        },
        "status": {
          "documentation": "<p>The status of the simulation job.</p>",
          "shape": "SimulationJobStatus"
        }
      },
      "type": "structure"
    },
    "SimulationJobs": {
      "member": {
        "shape": "SimulationJob"
      },
      "type": "list"
    },
    "SimulationSoftwareSuite": {
      "documentation": "<p>Information about a simulation software suite.</p>",
      "members": {
        "name": {
          "documentation": "<p>The name of the simulation software suite.</p>",
          "shape": "SimulationSoftwareSuiteType"
        },
        "version": {
          "documentation": "<p>The version of the simulation software suite.</p>",
          "shape": "SimulationSoftwareSuiteVersionType"
        }
      },
      "type": "structure"
    },
    "SimulationSoftwareSuiteType": {
      "enum": [
        "Gazebo",
        "RosbagPlay",
        "SimulationRuntime"
      ],
      "type": "string"
    },
    "SimulationSoftwareSuiteVersionType": {
      "max": 1024,
      "min": 0,
      "pattern": "7|9|11|Kinetic|Melodic|Dashing|Foxy",
      "type": "string"
    },
    "SimulationTimeMillis": {
      "type": "long"
    },
    "SimulationUnit": {
      "max": 15,
      "min": 1,
      "type": "integer"
    },
    "Source": {
      "documentation": "<p>Information about a source.</p>",
      "members": {
        "architecture": {
          "documentation": "<p>The taget processor architecture for the application.</p>",
          "shape": "Architecture"
        },
        "etag": {
          "documentation": "<p>A hash of the object specified by <code>s3Bucket</code> and <code>s3Key</code>.</p>",
          "shape": "S3Etag"
        },
        "s3Bucket": {
          "documentation": "<p>The s3 bucket name.</p>",
          "shape": "S3Bucket"
        },
        "s3Key": {
          "documentation": "<p>The s3 object key.</p>",
          "shape": "S3Key"
        }
      },
      "type": "structure"
    },
    "SourceConfig": {
      "documentation": "<p>Information about a source configuration.</p>",
      "members": {
        "architecture": {
          "documentation": "<p>The target processor architecture for the application.</p>",
          "shape": "Architecture"
        },
        "s3Bucket": {
          "documentation": "<p>The Amazon S3 bucket name.</p>",
          "shape": "S3Bucket"
        },
        "s3Key": {
          "documentation": "<p>The s3 object key.</p>",
          "shape": "S3Key"
        }
      },
      "type": "structure"
    },
    "SourceConfigs": {
      "member": {
        "shape": "SourceConfig"
      },
      "type": "list"
    },
    "Sources": {
      "member": {
        "shape": "Source"
      },
      "type": "list"
    },
    "StartSimulationJobBatchRequest": {
      "members": {
        "batchPolicy": {
          "documentation": "<p>The batch policy.</p>",
          "shape": "BatchPolicy"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "createSimulationJobRequests": {
          "documentation": "<p>A list of simulation job requests to create in the batch.</p>",
          "shape": "CreateSimulationJobRequests"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the deployment job batch.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "createSimulationJobRequests"
      ],
      "type": "structure"
    },
    "StartSimulationJobBatchResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (arn) of the batch.</p>",
          "shape": "Arn"
        },
        "batchPolicy": {
          "documentation": "<p>The batch policy.</p>",
          "shape": "BatchPolicy"
        },
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "shape": "ClientRequestToken"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation job batch was created.</p>",
          "shape": "CreatedAt"
        },
        "createdRequests": {
          "documentation": "<p>A list of created simulation job request summaries.</p>",
          "shape": "SimulationJobSummaries"
        },
        "failedRequests": {
          "documentation": "<p>A list of failed simulation job requests. The request failed to be created into a simulation job. Failed requests do not have a simulation job ID. </p>",
          "shape": "FailedCreateSimulationJobRequests"
        },
        "failureCode": {
          "documentation": "<p>The failure code if the simulation job batch failed.</p>",
          "shape": "SimulationJobBatchErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The reason the simulation job batch failed.</p>",
          "shape": "GenericString"
        },
        "pendingRequests": {
          "documentation": "<p>A list of pending simulation job requests. These requests have not yet been created into simulation jobs.</p>",
          "shape": "CreateSimulationJobRequests"
        },
        "status": {
          "documentation": "<p>The status of the simulation job batch.</p> <dl> <dt>Pending</dt> <dd> <p>The simulation job batch request is pending.</p> </dd> <dt>InProgress</dt> <dd> <p>The simulation job batch is in progress. </p> </dd> <dt>Failed</dt> <dd> <p>The simulation job batch failed. One or more simulation job requests could not be completed due to an internal failure (like <code>InternalServiceError</code>). See <code>failureCode</code> and <code>failureReason</code> for more information.</p> </dd> <dt>Completed</dt> <dd> <p>The simulation batch job completed. A batch is complete when (1) there are no pending simulation job requests in the batch and none of the failed simulation job requests are due to <code>InternalServiceError</code> and (2) when all created simulation jobs have reached a terminal state (for example, <code>Completed</code> or <code>Failed</code>). </p> </dd> <dt>Canceled</dt> <dd> <p>The simulation batch job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The simulation batch job is being cancelled.</p> </dd> <dt>Completing</dt> <dd> <p>The simulation batch job is completing.</p> </dd> <dt>TimingOut</dt> <dd> <p>The simulation job batch is timing out.</p> <p>If a batch timing out, and there are pending requests that were failing due to an internal failure (like <code>InternalServiceError</code>), the batch status will be <code>Failed</code>. If there are no such failing request, the batch status will be <code>TimedOut</code>. </p> </dd> <dt>TimedOut</dt> <dd> <p>The simulation batch job timed out.</p> </dd> </dl>",
          "shape": "SimulationJobBatchStatus"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the deployment job batch.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "Subnets": {
      "max": 16,
      "member": {
        "shape": "NonEmptyString"
      },
      "min": 1,
      "type": "list"
    },
    "SyncDeploymentJobRequest": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "clientRequestToken": {
          "documentation": "<p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "fleet": {
          "documentation": "<p>The target fleet for the synchronization.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "clientRequestToken",
        "fleet"
      ],
      "type": "structure"
    },
    "SyncDeploymentJobResponse": {
      "deprecated": true,
      "deprecatedMessage": "Support for the AWS RoboMaker application deployment feature has ended. For additional information, see https://docs.aws.amazon.com/robomaker/latest/dg/fleets.html.",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the synchronization request.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the fleet was created.</p>",
          "shape": "CreatedAt"
        },
        "deploymentApplicationConfigs": {
          "documentation": "<p>Information about the deployment application configurations.</p>",
          "shape": "DeploymentApplicationConfigs"
        },
        "deploymentConfig": {
          "documentation": "<p>Information about the deployment configuration.</p>",
          "shape": "DeploymentConfig"
        },
        "failureCode": {
          "documentation": "<p>The failure code if the job fails:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>RobotApplicationCrash</dt> <dd> <p>Robot application exited abnormally.</p> </dd> <dt>SimulationApplicationCrash</dt> <dd> <p> Simulation application exited abnormally.</p> </dd> <dt>BadPermissionsRobotApplication</dt> <dd> <p>Robot application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsSimulationApplication</dt> <dd> <p>Simulation application bundle could not be downloaded.</p> </dd> <dt>BadPermissionsS3Output</dt> <dd> <p>Unable to publish outputs to customer-provided S3 bucket.</p> </dd> <dt>BadPermissionsCloudwatchLogs</dt> <dd> <p>Unable to publish logs to customer-provided CloudWatch Logs resource.</p> </dd> <dt>SubnetIpLimitExceeded</dt> <dd> <p>Subnet IP limit exceeded.</p> </dd> <dt>ENILimitExceeded</dt> <dd> <p>ENI limit exceeded.</p> </dd> <dt>BadPermissionsUserCredentials</dt> <dd> <p>Unable to use the Role provided.</p> </dd> <dt>InvalidBundleRobotApplication</dt> <dd> <p>Robot bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>InvalidBundleSimulationApplication</dt> <dd> <p>Simulation bundle cannot be extracted (invalid format, bundling error, or other issue).</p> </dd> <dt>RobotApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for RobotApplication does not match value during version creation.</p> </dd> <dt>SimulationApplicationVersionMismatchedEtag</dt> <dd> <p>Etag for SimulationApplication does not match value during version creation.</p> </dd> </dl>",
          "shape": "DeploymentJobErrorCode"
        },
        "failureReason": {
          "documentation": "<p>The failure reason if the job fails.</p>",
          "shape": "GenericString"
        },
        "fleet": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the fleet.</p>",
          "shape": "Arn"
        },
        "status": {
          "documentation": "<p>The status of the synchronization job.</p>",
          "shape": "DeploymentStatus"
        }
      },
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9 _.\\-\\/+=:]*",
      "type": "string"
    },
    "TagKeyList": {
      "member": {
        "shape": "TagKey"
      },
      "type": "list"
    },
    "TagMap": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are tagging.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>A map that contains tag keys and tag values that are attached to the resource.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "[a-zA-Z0-9 _.\\-\\/+=:]*",
      "type": "string"
    },
    "TemplateLocation": {
      "documentation": "<p>Information about a template location.</p>",
      "members": {
        "s3Bucket": {
          "documentation": "<p>The Amazon S3 bucket name.</p>",
          "shape": "S3Bucket"
        },
        "s3Key": {
          "documentation": "<p>The list of S3 keys identifying the data source files.</p>",
          "shape": "S3Key"
        }
      },
      "required": [
        "s3Bucket",
        "s3Key"
      ],
      "type": "structure"
    },
    "TemplateName": {
      "max": 255,
      "min": 0,
      "pattern": ".*",
      "type": "string"
    },
    "TemplateSummaries": {
      "member": {
        "shape": "TemplateSummary"
      },
      "type": "list"
    },
    "TemplateSummary": {
      "documentation": "<p>Summary information for a template.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the template was created.</p>",
          "shape": "CreatedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the template was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the template.</p>",
          "shape": "TemplateName"
        },
        "version": {
          "documentation": "<p>The version of the template that you're using.</p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "<p>AWS RoboMaker is temporarily unable to process the request. Try your call again.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "Tool": {
      "documentation": "<p>Information about a tool. Tools are used in a simulation job.</p>",
      "members": {
        "command": {
          "documentation": "<p>Command-line arguments for the tool. It must include the tool executable name.</p>",
          "shape": "UnrestrictedCommand"
        },
        "exitBehavior": {
          "documentation": "<p>Exit behavior determines what happens when your tool quits running. <code>RESTART</code> will cause your tool to be restarted. <code>FAIL</code> will cause your job to exit. The default is <code>RESTART</code>. </p>",
          "shape": "ExitBehavior"
        },
        "name": {
          "documentation": "<p>The name of the tool.</p>",
          "shape": "Name"
        },
        "streamOutputToCloudWatch": {
          "documentation": "<p>Boolean indicating whether logs will be recorded in CloudWatch for the tool. The default is <code>False</code>. </p>",
          "shape": "BoxedBoolean"
        },
        "streamUI": {
          "documentation": "<p>Boolean indicating whether a streaming session will be configured for the tool. If <code>True</code>, AWS RoboMaker will configure a connection so you can interact with the tool as it is running in the simulation. It must have a graphical user interface. The default is <code>False</code>. </p>",
          "shape": "BoxedBoolean"
        }
      },
      "required": [
        "name",
        "command"
      ],
      "type": "structure"
    },
    "Tools": {
      "max": 10,
      "member": {
        "shape": "Tool"
      },
      "min": 0,
      "type": "list"
    },
    "UnrestrictedCommand": {
      "max": 1024,
      "min": 1,
      "pattern": ".*",
      "type": "string"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the AWS RoboMaker resource you are removing tags.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tagKeys": {
          "documentation": "<p>A map that contains tag keys and tag values that will be unattached from the resource.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateRobotApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the robot application.</p>",
          "shape": "Arn"
        },
        "currentRevisionId": {
          "documentation": "<p>The revision id for the robot application.</p>",
          "shape": "RevisionId"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI for your robot application.</p>",
          "shape": "Environment"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "SourceConfigs"
        }
      },
      "required": [
        "application",
        "robotSoftwareSuite"
      ],
      "type": "structure"
    },
    "UpdateRobotApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the updated robot application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI for your robot application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the robot application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the robot application.</p>",
          "shape": "Name"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the robot application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>The robot software suite (ROS distribution) used by the robot application.</p>",
          "shape": "RobotSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the robot application.</p>",
          "shape": "Sources"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateSimulationApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The application information for the simulation application.</p>",
          "shape": "Arn"
        },
        "currentRevisionId": {
          "documentation": "<p>The revision id for the robot application.</p>",
          "shape": "RevisionId"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI for your simulation application.</p>",
          "shape": "Environment"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "SourceConfigs"
        }
      },
      "required": [
        "application",
        "simulationSoftwareSuite",
        "robotSoftwareSuite"
      ],
      "type": "structure"
    },
    "UpdateSimulationApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the updated simulation application.</p>",
          "shape": "Arn"
        },
        "environment": {
          "documentation": "<p>The object that contains the Docker image URI used for your simulation application.</p>",
          "shape": "Environment"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the simulation application was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the simulation application.</p>",
          "shape": "Name"
        },
        "renderingEngine": {
          "documentation": "<p>The rendering engine for the simulation application.</p>",
          "shape": "RenderingEngine"
        },
        "revisionId": {
          "documentation": "<p>The revision id of the simulation application.</p>",
          "shape": "RevisionId"
        },
        "robotSoftwareSuite": {
          "documentation": "<p>Information about the robot software suite (ROS distribution).</p>",
          "shape": "RobotSoftwareSuite"
        },
        "simulationSoftwareSuite": {
          "documentation": "<p>The simulation software suite used by the simulation application.</p>",
          "shape": "SimulationSoftwareSuite"
        },
        "sources": {
          "documentation": "<p>The sources of the simulation application.</p>",
          "shape": "Sources"
        },
        "version": {
          "documentation": "<p>The version of the robot application.</p>",
          "shape": "Version"
        }
      },
      "type": "structure"
    },
    "UpdateWorldTemplateRequest": {
      "members": {
        "name": {
          "documentation": "<p>The name of the template.</p>",
          "shape": "TemplateName"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template to update.</p>",
          "shape": "Arn"
        },
        "templateBody": {
          "documentation": "<p>The world template body.</p>",
          "shape": "Json"
        },
        "templateLocation": {
          "documentation": "<p>The location of the world template.</p>",
          "shape": "TemplateLocation"
        }
      },
      "required": [
        "template"
      ],
      "type": "structure"
    },
    "UpdateWorldTemplateResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world template was created.</p>",
          "shape": "CreatedAt"
        },
        "lastUpdatedAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world template was last updated.</p>",
          "shape": "LastUpdatedAt"
        },
        "name": {
          "documentation": "<p>The name of the world template.</p>",
          "shape": "TemplateName"
        }
      },
      "type": "structure"
    },
    "UploadBehavior": {
      "enum": [
        "UPLOAD_ON_TERMINATE",
        "UPLOAD_ROLLING_AUTO_REMOVE"
      ],
      "type": "string"
    },
    "UploadConfiguration": {
      "documentation": "<p>Provides upload configuration information. Files are uploaded from the simulation job to a location you specify. </p>",
      "members": {
        "name": {
          "documentation": "<p>A prefix that specifies where files will be uploaded in Amazon S3. It is appended to the simulation output location to determine the final path. </p> <p> For example, if your simulation output location is <code>s3://my-bucket</code> and your upload configuration name is <code>robot-test</code>, your files will be uploaded to <code>s3://my-bucket/&lt;simid&gt;/&lt;runid&gt;/robot-test</code>. </p>",
          "shape": "Name"
        },
        "path": {
          "documentation": "<p> Specifies the path of the file(s) to upload. Standard Unix glob matching rules are accepted, with the addition of <code>**</code> as a <i>super asterisk</i>. For example, specifying <code>/var/log/**.log</code> causes all .log files in the <code>/var/log</code> directory tree to be collected. For more examples, see <a href=\"https://github.com/gobwas/glob\">Glob Library</a>. </p>",
          "shape": "Path"
        },
        "uploadBehavior": {
          "documentation": "<p>Specifies when to upload the files:</p> <dl> <dt>UPLOAD_ON_TERMINATE</dt> <dd> <p>Matching files are uploaded once the simulation enters the <code>TERMINATING</code> state. Matching files are not uploaded until all of your code (including tools) have stopped. </p> <p>If there is a problem uploading a file, the upload is retried. If problems persist, no further upload attempts will be made.</p> </dd> <dt>UPLOAD_ROLLING_AUTO_REMOVE</dt> <dd> <p>Matching files are uploaded as they are created. They are deleted after they are uploaded. The specified path is checked every 5 seconds. A final check is made when all of your code (including tools) have stopped. </p> </dd> </dl>",
          "shape": "UploadBehavior"
        }
      },
      "required": [
        "name",
        "path",
        "uploadBehavior"
      ],
      "type": "structure"
    },
    "UploadConfigurations": {
      "max": 10,
      "member": {
        "shape": "UploadConfiguration"
      },
      "min": 0,
      "type": "list"
    },
    "VPCConfig": {
      "documentation": "<p>If your simulation job accesses resources in a VPC, you provide this parameter identifying the list of security group IDs and subnet IDs. These must belong to the same VPC. You must provide at least one security group and two subnet IDs.</p>",
      "members": {
        "assignPublicIp": {
          "documentation": "<p>A boolean indicating whether to assign a public IP address.</p>",
          "shape": "Boolean"
        },
        "securityGroups": {
          "documentation": "<p>A list of one or more security groups IDs in your VPC.</p>",
          "shape": "SecurityGroups"
        },
        "subnets": {
          "documentation": "<p>A list of one or more subnet IDs in your VPC.</p>",
          "shape": "Subnets"
        }
      },
      "required": [
        "subnets"
      ],
      "type": "structure"
    },
    "VPCConfigResponse": {
      "documentation": "<p>VPC configuration associated with your simulation job.</p>",
      "members": {
        "assignPublicIp": {
          "documentation": "<p>A boolean indicating if a public IP was assigned.</p>",
          "shape": "Boolean"
        },
        "securityGroups": {
          "documentation": "<p>A list of security group IDs associated with the simulation job.</p>",
          "shape": "SecurityGroups"
        },
        "subnets": {
          "documentation": "<p>A list of subnet IDs associated with the simulation job.</p>",
          "shape": "Subnets"
        },
        "vpcId": {
          "documentation": "<p>The VPC ID associated with your simulation job.</p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "Version": {
      "max": 255,
      "min": 1,
      "pattern": "(\\$LATEST)|[0-9]*",
      "type": "string"
    },
    "VersionQualifier": {
      "max": 255,
      "min": 1,
      "pattern": "ALL",
      "type": "string"
    },
    "WorldConfig": {
      "documentation": "<p>Configuration information for a world.</p>",
      "members": {
        "world": {
          "documentation": "<p>The world generated by Simulation WorldForge.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "WorldConfigs": {
      "max": 1,
      "member": {
        "shape": "WorldConfig"
      },
      "min": 0,
      "type": "list"
    },
    "WorldCount": {
      "documentation": "<p>The number of worlds that will be created. You can configure the number of unique floorplans and the number of unique interiors for each floor plan. For example, if you want 1 world with 20 unique interiors, you set <code>floorplanCount = 1</code> and <code>interiorCountPerFloorplan = 20</code>. This will result in 20 worlds (<code>floorplanCount</code> * <code>interiorCountPerFloorplan)</code>. </p> <p>If you set <code>floorplanCount = 4</code> and <code>interiorCountPerFloorplan = 5</code>, there will be 20 worlds with 5 unique floor plans. </p>",
      "members": {
        "floorplanCount": {
          "documentation": "<p>The number of unique floorplans.</p>",
          "shape": "FloorplanCount"
        },
        "interiorCountPerFloorplan": {
          "documentation": "<p>The number of unique interiors per floorplan.</p>",
          "shape": "InteriorCountPerFloorplan"
        }
      },
      "type": "structure"
    },
    "WorldExportJobErrorCode": {
      "enum": [
        "InternalServiceError",
        "LimitExceeded",
        "ResourceNotFound",
        "RequestThrottled",
        "InvalidInput",
        "AccessDenied"
      ],
      "type": "string"
    },
    "WorldExportJobStatus": {
      "enum": [
        "Pending",
        "Running",
        "Completed",
        "Failed",
        "Canceling",
        "Canceled"
      ],
      "type": "string"
    },
    "WorldExportJobSummaries": {
      "max": 100,
      "member": {
        "shape": "WorldExportJobSummary"
      },
      "min": 0,
      "type": "list"
    },
    "WorldExportJobSummary": {
      "documentation": "<p>Information about a world export job.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world export job.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world export job was created.</p>",
          "shape": "CreatedAt"
        },
        "outputLocation": {
          "shape": "OutputLocation"
        },
        "status": {
          "documentation": "<p>The status of the world export job.</p> <dl> <dt>Pending</dt> <dd> <p>The world export job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world export job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world export job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world export job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>Canceled</dt> <dd> <p>The world export job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world export job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldExportJobStatus"
        },
        "worlds": {
          "documentation": "<p>A list of worlds.</p>",
          "shape": "Arns"
        }
      },
      "type": "structure"
    },
    "WorldFailure": {
      "documentation": "<p>Information about a failed world.</p>",
      "members": {
        "failureCode": {
          "documentation": "<p>The failure code of the world export job if it failed:</p> <dl> <dt>InternalServiceError</dt> <dd> <p>Internal service error.</p> </dd> <dt>LimitExceeded</dt> <dd> <p>The requested resource exceeds the maximum number allowed, or the number of concurrent stream requests exceeds the maximum number allowed. </p> </dd> <dt>ResourceNotFound</dt> <dd> <p>The specified resource could not be found. </p> </dd> <dt>RequestThrottled</dt> <dd> <p>The request was throttled.</p> </dd> <dt>InvalidInput</dt> <dd> <p>An input parameter in the request is not valid.</p> </dd> </dl>",
          "shape": "WorldGenerationJobErrorCode"
        },
        "failureCount": {
          "documentation": "<p>The number of failed worlds.</p>",
          "shape": "Integer"
        },
        "sampleFailureReason": {
          "documentation": "<p>The sample reason why the world failed. World errors are aggregated. A sample is used as the <code>sampleFailureReason</code>. </p>",
          "shape": "GenericString"
        }
      },
      "type": "structure"
    },
    "WorldFailures": {
      "max": 100,
      "member": {
        "shape": "WorldFailure"
      },
      "min": 0,
      "type": "list"
    },
    "WorldGenerationJobErrorCode": {
      "enum": [
        "InternalServiceError",
        "LimitExceeded",
        "ResourceNotFound",
        "RequestThrottled",
        "InvalidInput",
        "AllWorldGenerationFailed"
      ],
      "type": "string"
    },
    "WorldGenerationJobStatus": {
      "enum": [
        "Pending",
        "Running",
        "Completed",
        "Failed",
        "PartialFailed",
        "Canceling",
        "Canceled"
      ],
      "type": "string"
    },
    "WorldGenerationJobSummaries": {
      "max": 100,
      "member": {
        "shape": "WorldGenerationJobSummary"
      },
      "min": 0,
      "type": "list"
    },
    "WorldGenerationJobSummary": {
      "documentation": "<p>Information about a world generator job.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world generator job.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world generator job was created.</p>",
          "shape": "CreatedAt"
        },
        "failedWorldCount": {
          "documentation": "<p>The number of worlds that failed.</p>",
          "shape": "Integer"
        },
        "status": {
          "documentation": "<p>The status of the world generator job:</p> <dl> <dt>Pending</dt> <dd> <p>The world generator job request is pending.</p> </dd> <dt>Running</dt> <dd> <p>The world generator job is running. </p> </dd> <dt>Completed</dt> <dd> <p>The world generator job completed. </p> </dd> <dt>Failed</dt> <dd> <p>The world generator job failed. See <code>failureCode</code> for more information. </p> </dd> <dt>PartialFailed</dt> <dd> <p>Some worlds did not generate.</p> </dd> <dt>Canceled</dt> <dd> <p>The world generator job was cancelled.</p> </dd> <dt>Canceling</dt> <dd> <p>The world generator job is being cancelled.</p> </dd> </dl>",
          "shape": "WorldGenerationJobStatus"
        },
        "succeededWorldCount": {
          "documentation": "<p>The number of worlds that were generated.</p>",
          "shape": "Integer"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        },
        "worldCount": {
          "documentation": "<p>Information about the world count.</p>",
          "shape": "WorldCount"
        }
      },
      "type": "structure"
    },
    "WorldSummaries": {
      "member": {
        "shape": "WorldSummary"
      },
      "type": "list"
    },
    "WorldSummary": {
      "documentation": "<p>Information about a world.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the world.</p>",
          "shape": "Arn"
        },
        "createdAt": {
          "documentation": "<p>The time, in milliseconds since the epoch, when the world was created.</p>",
          "shape": "CreatedAt"
        },
        "generationJob": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world generation job.</p>",
          "shape": "Arn"
        },
        "template": {
          "documentation": "<p>The Amazon Resource Name (arn) of the world template.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "errorMessage": {
      "type": "string"
    }
  },
  "version": "2.0"
}
