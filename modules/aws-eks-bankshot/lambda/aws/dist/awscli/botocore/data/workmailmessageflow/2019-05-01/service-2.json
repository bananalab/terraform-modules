{
  "documentation": "<p>The WorkMail Message Flow API provides access to email messages as they are being sent and received by a WorkMail organization.</p>",
  "metadata": {
    "apiVersion": "2019-05-01",
    "endpointPrefix": "workmailmessageflow",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon WorkMail Message Flow",
    "serviceId": "WorkMailMessageFlow",
    "signatureVersion": "v4",
    "uid": "workmailmessageflow-2019-05-01"
  },
  "operations": {
    "GetRawMessageContent": {
      "documentation": "<p>Retrieves the raw content of an in-transit email message, in MIME format.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/messages/{messageId}"
      },
      "input": {
        "shape": "GetRawMessageContentRequest"
      },
      "name": "GetRawMessageContent",
      "output": {
        "shape": "GetRawMessageContentResponse"
      }
    },
    "PutRawMessageContent": {
      "documentation": "<p>Updates the raw content of an in-transit email message, in MIME format.</p> <p>This example describes how to update in-transit email message. For more information and examples for using this API, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"> Updating message content with AWS Lambda</a>.</p> <note> <p>Updates to an in-transit message only appear when you call <code>PutRawMessageContent</code> from an AWS Lambda function configured with a synchronous <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/lambda.html#synchronous-rules\"> Run Lambda</a> rule. If you call <code>PutRawMessageContent</code> on a delivered or sent message, the message remains unchanged, even though <a href=\"https://docs.aws.amazon.com/workmail/latest/APIReference/API_messageflow_GetRawMessageContent.html\">GetRawMessageContent</a> returns an updated message. </p> </note>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidContentLocation"
        },
        {
          "shape": "MessageRejected"
        },
        {
          "shape": "MessageFrozen"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/messages/{messageId}"
      },
      "input": {
        "shape": "PutRawMessageContentRequest"
      },
      "name": "PutRawMessageContent",
      "output": {
        "shape": "PutRawMessageContentResponse"
      }
    }
  },
  "shapes": {
    "GetRawMessageContentRequest": {
      "members": {
        "messageId": {
          "documentation": "<p>The identifier of the email message to retrieve.</p>",
          "location": "uri",
          "locationName": "messageId",
          "shape": "messageIdType"
        }
      },
      "required": [
        "messageId"
      ],
      "type": "structure"
    },
    "GetRawMessageContentResponse": {
      "members": {
        "messageContent": {
          "documentation": "<p>The raw content of the email message, in MIME format.</p>",
          "shape": "messageContentBlob"
        }
      },
      "payload": "messageContent",
      "required": [
        "messageContent"
      ],
      "type": "structure"
    },
    "InvalidContentLocation": {
      "documentation": "<p>WorkMail could not access the updated email content. Possible reasons:</p> <ul> <li> <p>You made the request in a region other than your S3 bucket region.</p> </li> <li> <p>The <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-owner-condition.html\">S3 bucket owner</a> is not the same as the calling AWS account.</p> </li> <li> <p>You have an incomplete or missing S3 bucket policy. For more information about policies, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"> Updating message content with AWS Lambda </a> in the <i>WorkMail Administrator Guide</i>.</p> </li> </ul>",
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "MessageFrozen": {
      "documentation": "<p>The requested email is not eligible for update. This is usually the case for a redirected email.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "MessageRejected": {
      "documentation": "<p>The requested email could not be updated due to an error in the MIME content. Check the error message for more information about what caused the error.</p>",
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "PutRawMessageContentRequest": {
      "members": {
        "content": {
          "documentation": "<p>Describes the raw message content of the updated email message.</p>",
          "shape": "RawMessageContent"
        },
        "messageId": {
          "documentation": "<p>The identifier of the email message being updated.</p>",
          "location": "uri",
          "locationName": "messageId",
          "shape": "messageIdType"
        }
      },
      "required": [
        "messageId",
        "content"
      ],
      "type": "structure"
    },
    "PutRawMessageContentResponse": {
      "members": {},
      "type": "structure"
    },
    "RawMessageContent": {
      "documentation": "<p>Provides the MIME content of the updated email message as an S3 object. All MIME content must meet the following criteria:</p> <ul> <li> <p>Each part of a multipart MIME message must be formatted properly.</p> </li> <li> <p>Attachments must be of a content type that Amazon SES supports. For more information, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mime-types-appendix.html\">Unsupported Attachment Types</a>.</p> </li> <li> <p>If any of the MIME parts in a message contain content that is outside of the 7-bit ASCII character range, we recommend encoding that content.</p> </li> <li> <p>Per <a href=\"https://tools.ietf.org/html/rfc5321#section-4.5.3.1.6\">RFC 5321</a>, the maximum length of each line of text, including the &lt;CRLF&gt;, must not exceed 1,000 characters.</p> </li> <li> <p>The message must contain all the required header fields. Check the returned error message for more information.</p> </li> <li> <p>The value of immutable headers must remain unchanged. Check the returned error message for more information.</p> </li> <li> <p>Certain unique headers can only appear once. Check the returned error message for more information.</p> </li> </ul>",
      "members": {
        "s3Reference": {
          "documentation": "<p>The S3 reference of an email message.</p>",
          "shape": "S3Reference"
        }
      },
      "required": [
        "s3Reference"
      ],
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The requested email message is not found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "errorMessage"
        }
      },
      "type": "structure"
    },
    "S3Reference": {
      "documentation": "<p>Amazon S3 object representing the updated message content, in MIME format.</p> <note> <p>The region for the S3 bucket containing the S3 object must match the region used for WorkMail operations. Also, for WorkMail to process an S3 object, it must have permission to access that object. For more information, see <a href=\"https://docs.aws.amazon.com/workmail/latest/adminguide/update-with-lambda.html\"> Updating message content with AWS Lambda</a>.</p> </note>",
      "members": {
        "bucket": {
          "documentation": "<p>The S3 bucket name.</p>",
          "shape": "s3BucketIdType"
        },
        "key": {
          "documentation": "<p>The S3 key object name.</p>",
          "shape": "s3KeyIdType"
        },
        "objectVersion": {
          "documentation": "<p>If you enable versioning for the bucket, you can specify the object version.</p>",
          "shape": "s3VersionType"
        }
      },
      "required": [
        "bucket",
        "key"
      ],
      "type": "structure"
    },
    "errorMessage": {
      "type": "string"
    },
    "messageContentBlob": {
      "streaming": true,
      "type": "blob"
    },
    "messageIdType": {
      "max": 120,
      "min": 1,
      "pattern": "[a-z0-9\\-]*",
      "type": "string"
    },
    "s3BucketIdType": {
      "max": 63,
      "min": 3,
      "pattern": "^[a-z0-9][a-z0-9\\-]*",
      "type": "string"
    },
    "s3KeyIdType": {
      "max": 1024,
      "min": 1,
      "pattern": "[a-zA-Z0-9\\-/]*",
      "type": "string"
    },
    "s3VersionType": {
      "max": 1024,
      "min": 1,
      "pattern": ".+",
      "type": "string"
    }
  },
  "version": "2.0"
}
