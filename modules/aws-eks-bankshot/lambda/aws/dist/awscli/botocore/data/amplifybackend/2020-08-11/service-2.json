{
  "documentation": "<p>AWS Amplify Admin API</p>",
  "metadata": {
    "apiVersion": "2020-08-11",
    "endpointPrefix": "amplifybackend",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AmplifyBackend",
    "serviceId": "AmplifyBackend",
    "signatureVersion": "v4",
    "signingName": "amplifybackend",
    "uid": "amplifybackend-2020-08-11"
  },
  "operations": {
    "CloneBackend": {
      "documentation": "<p>This operation clones an existing backend.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/environments/{backendEnvironmentName}/clone",
        "responseCode": 200
      },
      "input": {
        "shape": "CloneBackendRequest"
      },
      "name": "CloneBackend",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CloneBackendResponse"
      }
    },
    "CreateBackend": {
      "documentation": "<p>This operation creates a backend for an Amplify app. Backends are automatically created at the time of app creation.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBackendRequest"
      },
      "name": "CreateBackend",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateBackendResponse"
      }
    },
    "CreateBackendAPI": {
      "documentation": "<p>Creates a new backend API resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBackendAPIRequest"
      },
      "name": "CreateBackendAPI",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateBackendAPIResponse"
      }
    },
    "CreateBackendAuth": {
      "documentation": "<p>Creates a new backend authentication resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/auth",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBackendAuthRequest"
      },
      "name": "CreateBackendAuth",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateBackendAuthResponse"
      }
    },
    "CreateBackendConfig": {
      "documentation": "<p>Creates a config object for a backend.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/config",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBackendConfigRequest"
      },
      "name": "CreateBackendConfig",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateBackendConfigResponse"
      }
    },
    "CreateBackendStorage": {
      "documentation": "<p>Creates a backend storage resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/storage",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateBackendStorageRequest"
      },
      "name": "CreateBackendStorage",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateBackendStorageResponse"
      }
    },
    "CreateToken": {
      "documentation": "<p>Generates a one-time challenge code to authenticate a user into your Amplify Admin UI.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/challenge",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateTokenRequest"
      },
      "name": "CreateToken",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "CreateTokenResponse"
      }
    },
    "DeleteBackend": {
      "documentation": "<p>Removes an existing environment from your Amplify project.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/environments/{backendEnvironmentName}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteBackendRequest"
      },
      "name": "DeleteBackend",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DeleteBackendResponse"
      }
    },
    "DeleteBackendAPI": {
      "documentation": "<p>Deletes an existing backend API resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api/{backendEnvironmentName}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteBackendAPIRequest"
      },
      "name": "DeleteBackendAPI",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DeleteBackendAPIResponse"
      }
    },
    "DeleteBackendAuth": {
      "documentation": "<p>Deletes an existing backend authentication resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/auth/{backendEnvironmentName}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteBackendAuthRequest"
      },
      "name": "DeleteBackendAuth",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DeleteBackendAuthResponse"
      }
    },
    "DeleteBackendStorage": {
      "documentation": "<p>Removes the specified backend storage resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/storage/{backendEnvironmentName}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteBackendStorageRequest"
      },
      "name": "DeleteBackendStorage",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DeleteBackendStorageResponse"
      }
    },
    "DeleteToken": {
      "documentation": "<p>Deletes the challenge token based on the given appId and sessionId.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/challenge/{sessionId}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "DeleteTokenRequest"
      },
      "name": "DeleteToken",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "DeleteTokenResponse"
      }
    },
    "GenerateBackendAPIModels": {
      "documentation": "<p>Generates a model schema for an existing backend API resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api/{backendEnvironmentName}/generateModels",
        "responseCode": 200
      },
      "input": {
        "shape": "GenerateBackendAPIModelsRequest"
      },
      "name": "GenerateBackendAPIModels",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GenerateBackendAPIModelsResponse"
      }
    },
    "GetBackend": {
      "documentation": "<p>Provides project-level details for your Amplify UI project.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/details",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendRequest"
      },
      "name": "GetBackend",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendResponse"
      }
    },
    "GetBackendAPI": {
      "documentation": "<p>Gets the details for a backend API.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api/{backendEnvironmentName}/details",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendAPIRequest"
      },
      "name": "GetBackendAPI",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendAPIResponse"
      }
    },
    "GetBackendAPIModels": {
      "documentation": "<p>Generates a model schema for existing backend API resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api/{backendEnvironmentName}/getModels",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendAPIModelsRequest"
      },
      "name": "GetBackendAPIModels",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendAPIModelsResponse"
      }
    },
    "GetBackendAuth": {
      "documentation": "<p>Gets a backend auth details.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/auth/{backendEnvironmentName}/details",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendAuthRequest"
      },
      "name": "GetBackendAuth",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendAuthResponse"
      }
    },
    "GetBackendJob": {
      "documentation": "<p>Returns information about a specific job.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/backend/{appId}/job/{backendEnvironmentName}/{jobId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendJobRequest"
      },
      "name": "GetBackendJob",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendJobResponse"
      }
    },
    "GetBackendStorage": {
      "documentation": "<p>Gets details for a backend storage resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/storage/{backendEnvironmentName}/details",
        "responseCode": 200
      },
      "input": {
        "shape": "GetBackendStorageRequest"
      },
      "name": "GetBackendStorage",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetBackendStorageResponse"
      }
    },
    "GetToken": {
      "documentation": "<p>Gets the challenge token based on the given appId and sessionId.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/backend/{appId}/challenge/{sessionId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetTokenRequest"
      },
      "name": "GetToken",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "GetTokenResponse"
      }
    },
    "ImportBackendAuth": {
      "documentation": "<p>Imports an existing backend authentication resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/auth/{backendEnvironmentName}/import",
        "responseCode": 200
      },
      "input": {
        "shape": "ImportBackendAuthRequest"
      },
      "name": "ImportBackendAuth",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ImportBackendAuthResponse"
      }
    },
    "ImportBackendStorage": {
      "documentation": "<p>Imports an existing backend storage resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/storage/{backendEnvironmentName}/import",
        "responseCode": 200
      },
      "input": {
        "shape": "ImportBackendStorageRequest"
      },
      "name": "ImportBackendStorage",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ImportBackendStorageResponse"
      }
    },
    "ListBackendJobs": {
      "documentation": "<p>Lists the jobs for the backend of an Amplify app.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/job/{backendEnvironmentName}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListBackendJobsRequest"
      },
      "name": "ListBackendJobs",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ListBackendJobsResponse"
      }
    },
    "ListS3Buckets": {
      "documentation": "<p>The list of S3 buckets in your account.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/s3Buckets",
        "responseCode": 200
      },
      "input": {
        "shape": "ListS3BucketsRequest"
      },
      "name": "ListS3Buckets",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "ListS3BucketsResponse"
      }
    },
    "RemoveAllBackends": {
      "documentation": "<p>Removes all backend environments from your Amplify project.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "RemoveAllBackendsRequest"
      },
      "name": "RemoveAllBackends",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "RemoveAllBackendsResponse"
      }
    },
    "RemoveBackendConfig": {
      "documentation": "<p>Removes the AWS resources required to access the Amplify Admin UI.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/config/remove",
        "responseCode": 200
      },
      "input": {
        "shape": "RemoveBackendConfigRequest"
      },
      "name": "RemoveBackendConfig",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "RemoveBackendConfigResponse"
      }
    },
    "UpdateBackendAPI": {
      "documentation": "<p>Updates an existing backend API resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/api/{backendEnvironmentName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBackendAPIRequest"
      },
      "name": "UpdateBackendAPI",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateBackendAPIResponse"
      }
    },
    "UpdateBackendAuth": {
      "documentation": "<p>Updates an existing backend authentication resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/auth/{backendEnvironmentName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBackendAuthRequest"
      },
      "name": "UpdateBackendAuth",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateBackendAuthResponse"
      }
    },
    "UpdateBackendConfig": {
      "documentation": "<p>Updates the AWS resources required to access the Amplify Admin UI.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/config/update",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBackendConfigRequest"
      },
      "name": "UpdateBackendConfig",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateBackendConfigResponse"
      }
    },
    "UpdateBackendJob": {
      "documentation": "<p>Updates a specific job.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/job/{backendEnvironmentName}/{jobId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBackendJobRequest"
      },
      "name": "UpdateBackendJob",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateBackendJobResponse"
      }
    },
    "UpdateBackendStorage": {
      "documentation": "<p>Updates an existing backend storage resource.</p>",
      "errors": [
        {
          "documentation": "<p>404 response</p>",
          "shape": "NotFoundException"
        },
        {
          "documentation": "<p>504 response</p>",
          "shape": "GatewayTimeoutException"
        },
        {
          "documentation": "<p>429 response</p>",
          "shape": "TooManyRequestsException"
        },
        {
          "documentation": "<p>400 response</p>",
          "shape": "BadRequestException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/backend/{appId}/storage/{backendEnvironmentName}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateBackendStorageRequest"
      },
      "name": "UpdateBackendStorage",
      "output": {
        "documentation": "<p>200 response</p>",
        "shape": "UpdateBackendStorageResponse"
      }
    }
  },
  "shapes": {
    "AdditionalConstraintsElement": {
      "enum": [
        "REQUIRE_DIGIT",
        "REQUIRE_LOWERCASE",
        "REQUIRE_SYMBOL",
        "REQUIRE_UPPERCASE"
      ],
      "type": "string"
    },
    "AuthResources": {
      "enum": [
        "USER_POOL_ONLY",
        "IDENTITY_POOL_AND_USER_POOL"
      ],
      "type": "string"
    },
    "AuthenticatedElement": {
      "enum": [
        "READ",
        "CREATE_AND_UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "BackendAPIAppSyncAuthSettings": {
      "documentation": "<p>The authentication settings for accessing provisioned data models in your Amplify project.</p>",
      "members": {
        "CognitoUserPoolId": {
          "documentation": "<p>The Amazon Cognito user pool ID, if Amazon Cognito was used as an authentication setting to access your data models.</p>",
          "locationName": "cognitoUserPoolId",
          "shape": "__string"
        },
        "Description": {
          "documentation": "<p>The API key description for API_KEY, if it was used as an authentication mechanism to access your data models.</p>",
          "locationName": "description",
          "shape": "__string"
        },
        "ExpirationTime": {
          "documentation": "<p>The API key expiration time for API_KEY, if it was used as an authentication mechanism to access your data models.</p>",
          "locationName": "expirationTime",
          "shape": "__double"
        },
        "OpenIDAuthTTL": {
          "documentation": "<p>The expiry time for the OpenID authentication mechanism.</p>",
          "locationName": "openIDAuthTTL",
          "shape": "__string"
        },
        "OpenIDClientId": {
          "documentation": "<p>The clientID for openID, if openID was used as an authentication setting to access your data models.</p>",
          "locationName": "openIDClientId",
          "shape": "__string"
        },
        "OpenIDIatTTL": {
          "documentation": "<p>The expiry time for the OpenID authentication mechanism.</p>",
          "locationName": "openIDIatTTL",
          "shape": "__string"
        },
        "OpenIDIssueURL": {
          "documentation": "<p>The openID issuer URL, if openID was used as an authentication setting to access your data models.</p>",
          "locationName": "openIDIssueURL",
          "shape": "__string"
        },
        "OpenIDProviderName": {
          "documentation": "<p>The OpenID provider name, if OpenID was used as an authentication mechanism to access your data models.</p>",
          "locationName": "openIDProviderName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BackendAPIAuthType": {
      "documentation": "<p>Describes the auth types for your configured data models.</p>",
      "members": {
        "Mode": {
          "documentation": "<p>Describes the authentication mode.</p>",
          "locationName": "mode",
          "shape": "Mode"
        },
        "Settings": {
          "documentation": "<p>Describes settings for the authentication mode.</p>",
          "locationName": "settings",
          "shape": "BackendAPIAppSyncAuthSettings"
        }
      },
      "type": "structure"
    },
    "BackendAPICodegenReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "structure"
    },
    "BackendAPICodegenRespObj": {
      "documentation": "<p>The response object sent when a backend is created.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "BackendAPIConflictResolution": {
      "documentation": "<p>Describes the conflict resolution configuration for your data model configured in your Amplify project.</p>",
      "members": {
        "ResolutionStrategy": {
          "documentation": "<p>The strategy for conflict resolution.</p>",
          "locationName": "resolutionStrategy",
          "shape": "ResolutionStrategy"
        }
      },
      "type": "structure"
    },
    "BackendAPIReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceConfig": {
          "documentation": "<p>Defines the resource configuration for the data model in your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "structure"
    },
    "BackendAPIResourceConfig": {
      "documentation": "<p>The resource config for the data model, configured as a part of the Amplify project.</p>",
      "members": {
        "AdditionalAuthTypes": {
          "documentation": "<p>Additional authentication methods used to interact with your data models.</p>",
          "locationName": "additionalAuthTypes",
          "shape": "ListOfBackendAPIAuthType"
        },
        "ApiName": {
          "documentation": "<p>The API name used to interact with the data model, configured as a part of your Amplify project.</p>",
          "locationName": "apiName",
          "shape": "__string"
        },
        "ConflictResolution": {
          "documentation": "<p>The conflict resolution strategy for your data stored in the data models.</p>",
          "locationName": "conflictResolution",
          "shape": "BackendAPIConflictResolution"
        },
        "DefaultAuthType": {
          "documentation": "<p>The default authentication type for interacting with the configured data models in your Amplify project.</p>",
          "locationName": "defaultAuthType",
          "shape": "BackendAPIAuthType"
        },
        "Service": {
          "documentation": "<p>The service used to provision and interact with the data model.</p>",
          "locationName": "service",
          "shape": "__string"
        },
        "TransformSchema": {
          "documentation": "<p>The definition of the data model in the annotated transform of the GraphQL schema.</p>",
          "locationName": "transformSchema",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BackendAPIRespObj": {
      "documentation": "<p>The response object sent when a backend is created.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "BackendAuthAppleProviderConfig": {
      "documentation": "<p>Describes Apple social federation configurations for allowing your app users to sign in using OAuth.</p>",
      "members": {
        "ClientId": {
          "documentation": "<p>Describes the client_id (also called Services ID) that comes from Apple.</p>",
          "locationName": "client_id",
          "shape": "__string"
        },
        "KeyId": {
          "documentation": "<p>Describes the key_id that comes from Apple.</p>",
          "locationName": "key_id",
          "shape": "__string"
        },
        "PrivateKey": {
          "documentation": "<p>Describes the private_key that comes from Apple.</p>",
          "locationName": "private_key",
          "shape": "__string"
        },
        "TeamId": {
          "documentation": "<p>Describes the team_id that comes from Apple.</p>",
          "locationName": "team_id",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BackendAuthRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "BackendAuthSocialProviderConfig": {
      "documentation": "<p>Describes third-party social federation configurations for allowing your app users to sign in using OAuth.</p>",
      "members": {
        "ClientId": {
          "documentation": "<p>Describes the client_id, which can be obtained from the third-party social federation provider.</p>",
          "locationName": "client_id",
          "shape": "__string"
        },
        "ClientSecret": {
          "documentation": "<p>Describes the client_secret, which can be obtained from third-party social federation providers.</p>",
          "locationName": "client_secret",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BackendConfigRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendManagerAppId": {
          "documentation": "<p>The app ID for the backend manager.</p>",
          "locationName": "backendManagerAppId",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "LoginAuthConfig": {
          "documentation": "<p>Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.</p>",
          "locationName": "loginAuthConfig",
          "shape": "LoginAuthConfigReqObj"
        }
      },
      "type": "structure"
    },
    "BackendJobReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "Operation": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified operation name.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified status.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "BackendJobRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "CreateTime": {
          "documentation": "<p>The time when the job was created.</p>",
          "locationName": "createTime",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        },
        "UpdateTime": {
          "documentation": "<p>The time when the job was last updated.</p>",
          "locationName": "updateTime",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "BackendStoragePermissions": {
      "documentation": "<p>Describes the read, write, and delete permissions users have against your storage S3 bucket.</p>",
      "members": {
        "Authenticated": {
          "documentation": "<p>Lists all authenticated user read, write, and delete permissions for your S3 bucket.</p>",
          "locationName": "authenticated",
          "shape": "ListOfAuthenticatedElement"
        },
        "UnAuthenticated": {
          "documentation": "<p>Lists all unauthenticated user read, write, and delete permissions for your S3 bucket.</p>",
          "locationName": "unAuthenticated",
          "shape": "ListOfUnAuthenticatedElement"
        }
      },
      "required": [
        "Authenticated"
      ],
      "type": "structure"
    },
    "BackendStorageRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "Status",
        "AppId",
        "BackendEnvironmentName",
        "JobId"
      ],
      "type": "structure"
    },
    "BadRequestException": {
      "documentation": "<p>An error returned if a request is not formed properly.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>An error message to inform that the request failed.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CloneBackendReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "TargetEnvironmentName": {
          "documentation": "<p>The name of the destination backend environment to be created.</p>",
          "locationName": "targetEnvironmentName",
          "shape": "__string"
        }
      },
      "required": [
        "TargetEnvironmentName"
      ],
      "type": "structure"
    },
    "CloneBackendRequest": {
      "documentation": "<p>The request body for CloneBackend.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "TargetEnvironmentName": {
          "documentation": "<p>The name of the destination backend environment to be created.</p>",
          "locationName": "targetEnvironmentName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "TargetEnvironmentName"
      ],
      "type": "structure"
    },
    "CloneBackendRespObj": {
      "documentation": "<p>The response object sent when a backend is created.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "CloneBackendResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendAPIReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendAPIRequest": {
      "documentation": "<p>The request body for CreateBackendAPI.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendAPIResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendAuthForgotPasswordConfig": {
      "documentation": "<p><b>(DEPRECATED)</b> Describes the forgot password policy for authenticating into the Amplify app.</p>",
      "members": {
        "DeliveryMethod": {
          "documentation": "<p><b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.</p>",
          "locationName": "deliveryMethod",
          "shape": "DeliveryMethod"
        },
        "EmailSettings": {
          "documentation": "<p><b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.</p>",
          "locationName": "emailSettings",
          "shape": "EmailSettings"
        },
        "SmsSettings": {
          "documentation": "<p><b>(DEPRECATED)</b> The configuration for the SMS message sent when an app user forgets their password.</p>",
          "locationName": "smsSettings",
          "shape": "SmsSettings"
        }
      },
      "required": [
        "DeliveryMethod"
      ],
      "type": "structure"
    },
    "CreateBackendAuthIdentityPoolConfig": {
      "documentation": "<p>Describes authorization configurations for the auth resources, configured as a part of your Amplify project.</p>",
      "members": {
        "IdentityPoolName": {
          "documentation": "<p>Name of the Amazon Cognito identity pool used for authorization.</p>",
          "locationName": "identityPoolName",
          "shape": "__string"
        },
        "UnauthenticatedLogin": {
          "documentation": "<p>Set to true or false based on whether you want to enable guest authorization to your Amplify app.</p>",
          "locationName": "unauthenticatedLogin",
          "shape": "__boolean"
        }
      },
      "required": [
        "UnauthenticatedLogin",
        "IdentityPoolName"
      ],
      "type": "structure"
    },
    "CreateBackendAuthMFAConfig": {
      "documentation": "<p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>",
      "members": {
        "MFAMode": {
          "documentation": "<p>Describes whether MFA should be [ON, OFF, or OPTIONAL] for authentication in your Amplify project.</p>",
          "shape": "MFAMode"
        },
        "Settings": {
          "documentation": "<p>Describes the configuration settings and methods for your Amplify app users to use MFA.</p>",
          "locationName": "settings",
          "shape": "Settings"
        }
      },
      "required": [
        "MFAMode"
      ],
      "type": "structure"
    },
    "CreateBackendAuthOAuthConfig": {
      "documentation": "<p>Creates the OAuth configuration for your Amplify project.</p>",
      "members": {
        "DomainPrefix": {
          "documentation": "<p>The domain prefix for your Amplify app.</p>",
          "locationName": "domainPrefix",
          "shape": "__string"
        },
        "OAuthGrantType": {
          "documentation": "<p>The OAuth grant type that you use to allow app users to authenticate from your Amplify app.</p>",
          "locationName": "oAuthGrantType",
          "shape": "OAuthGrantType"
        },
        "OAuthScopes": {
          "documentation": "<p>List of OAuth-related flows used to allow your app users to authenticate from your Amplify app.</p>",
          "locationName": "oAuthScopes",
          "shape": "ListOfOAuthScopesElement"
        },
        "RedirectSignInURIs": {
          "documentation": "<p>The redirected URI for signing in to your Amplify app.</p>",
          "locationName": "redirectSignInURIs",
          "shape": "ListOf__string"
        },
        "RedirectSignOutURIs": {
          "documentation": "<p>Redirect URLs that OAuth uses when a user signs out of an Amplify app.</p>",
          "locationName": "redirectSignOutURIs",
          "shape": "ListOf__string"
        },
        "SocialProviderSettings": {
          "documentation": "<p>The settings for using social providers to access your Amplify app.</p>",
          "locationName": "socialProviderSettings",
          "shape": "SocialProviderSettings"
        }
      },
      "required": [
        "RedirectSignOutURIs",
        "RedirectSignInURIs",
        "OAuthGrantType",
        "OAuthScopes"
      ],
      "type": "structure"
    },
    "CreateBackendAuthPasswordPolicyConfig": {
      "documentation": "<p>The password policy configuration for the backend to your Amplify project.</p>",
      "members": {
        "AdditionalConstraints": {
          "documentation": "<p>Additional constraints for the password used to access the backend of your Amplify project.</p>",
          "locationName": "additionalConstraints",
          "shape": "ListOfAdditionalConstraintsElement"
        },
        "MinimumLength": {
          "documentation": "<p>The minimum length of the password used to access the backend of your Amplify project.</p>",
          "locationName": "minimumLength",
          "shape": "__double"
        }
      },
      "required": [
        "MinimumLength"
      ],
      "type": "structure"
    },
    "CreateBackendAuthReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request object.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendAuthRequest": {
      "documentation": "<p>The request body for CreateBackendAuth.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request object.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendAuthResourceConfig": {
      "documentation": "<p>Defines the resource configuration when creating an auth resource in your Amplify project.</p>",
      "members": {
        "AuthResources": {
          "documentation": "<p>Defines whether you want to configure only authentication or both authentication and authorization settings.</p>",
          "locationName": "authResources",
          "shape": "AuthResources"
        },
        "IdentityPoolConfigs": {
          "documentation": "<p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>",
          "locationName": "identityPoolConfigs",
          "shape": "CreateBackendAuthIdentityPoolConfig"
        },
        "Service": {
          "documentation": "<p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>",
          "locationName": "service",
          "shape": "Service"
        },
        "UserPoolConfigs": {
          "documentation": "<p>Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.</p>",
          "locationName": "userPoolConfigs",
          "shape": "CreateBackendAuthUserPoolConfig"
        }
      },
      "required": [
        "AuthResources",
        "UserPoolConfigs",
        "Service"
      ],
      "type": "structure"
    },
    "CreateBackendAuthResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendAuthUserPoolConfig": {
      "documentation": "<p>Describes the Amazon Cognito user pool configuration for the auth resource to be configured for your Amplify project.</p>",
      "members": {
        "ForgotPassword": {
          "documentation": "<p><b>(DEPRECATED)</b> Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "forgotPassword",
          "shape": "CreateBackendAuthForgotPasswordConfig"
        },
        "Mfa": {
          "documentation": "<p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>",
          "locationName": "mfa",
          "shape": "CreateBackendAuthMFAConfig"
        },
        "OAuth": {
          "documentation": "<p>Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "oAuth",
          "shape": "CreateBackendAuthOAuthConfig"
        },
        "PasswordPolicy": {
          "documentation": "<p>Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "passwordPolicy",
          "shape": "CreateBackendAuthPasswordPolicyConfig"
        },
        "RequiredSignUpAttributes": {
          "documentation": "<p>The required attributes to sign up new users in the user pool.</p>",
          "locationName": "requiredSignUpAttributes",
          "shape": "ListOfRequiredSignUpAttributesElement"
        },
        "SignInMethod": {
          "documentation": "<p>Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "signInMethod",
          "shape": "SignInMethod"
        },
        "UserPoolName": {
          "documentation": "<p>The Amazon Cognito user pool name.</p>",
          "locationName": "userPoolName",
          "shape": "__string"
        },
        "VerificationMessage": {
          "documentation": "<p>Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "verificationMessage",
          "shape": "CreateBackendAuthVerificationMessageConfig"
        }
      },
      "required": [
        "RequiredSignUpAttributes",
        "SignInMethod",
        "UserPoolName"
      ],
      "type": "structure"
    },
    "CreateBackendAuthVerificationMessageConfig": {
      "documentation": "<p>Creates an email or SMS verification message for the auth resource configured for your Amplify project.</p>",
      "members": {
        "DeliveryMethod": {
          "documentation": "<p>The type of verification message to send.</p>",
          "locationName": "deliveryMethod",
          "shape": "DeliveryMethod"
        },
        "EmailSettings": {
          "documentation": "<p>The settings for the email message.</p>",
          "locationName": "emailSettings",
          "shape": "EmailSettings"
        },
        "SmsSettings": {
          "documentation": "<p>The settings for the SMS message.</p>",
          "locationName": "smsSettings",
          "shape": "SmsSettings"
        }
      },
      "required": [
        "DeliveryMethod"
      ],
      "type": "structure"
    },
    "CreateBackendConfigReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BackendManagerAppId": {
          "documentation": "<p>The app ID for the backend manager.</p>",
          "locationName": "backendManagerAppId",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendConfigRequest": {
      "documentation": "<p>The request body for CreateBackendConfig.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendManagerAppId": {
          "documentation": "<p>The app ID for the backend manager.</p>",
          "locationName": "backendManagerAppId",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "CreateBackendConfigRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "CreateBackendConfigResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "AppName": {
          "documentation": "<p>The name of the app.</p>",
          "locationName": "appName",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for creating a backend.</p>",
          "locationName": "resourceConfig",
          "shape": "ResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "AppName"
      ],
      "type": "structure"
    },
    "CreateBackendRequest": {
      "documentation": "<p>The request body for CreateBackend.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "AppName": {
          "documentation": "<p>The name of the app.</p>",
          "locationName": "appName",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for creating a backend.</p>",
          "locationName": "resourceConfig",
          "shape": "ResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "AppName"
      ],
      "type": "structure"
    },
    "CreateBackendRespObj": {
      "documentation": "<p>The response object sent when a backend is created.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "CreateBackendResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateBackendStorageReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for creating backend storage.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendStorageRequest": {
      "documentation": "<p>The request body for CreateBackendStorage.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for creating backend storage.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "ResourceName",
        "BackendEnvironmentName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "CreateBackendStorageResourceConfig": {
      "documentation": "<p>The resource configuration for creating backend storage.</p>",
      "members": {
        "BucketName": {
          "documentation": "<p>The name of the S3 bucket.</p>",
          "locationName": "bucketName",
          "shape": "__string"
        },
        "Permissions": {
          "documentation": "<p>The authorization configuration for the storage S3 bucket.</p>",
          "locationName": "permissions",
          "shape": "BackendStoragePermissions"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "ServiceName",
        "Permissions"
      ],
      "type": "structure"
    },
    "CreateBackendStorageResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "CreateTokenRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "CreateTokenRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "ChallengeCode": {
          "documentation": "<p>One-time challenge code for authenticating into the Amplify Admin UI.</p>",
          "locationName": "challengeCode",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>A unique ID provided when creating a new challenge token.</p>",
          "locationName": "sessionId",
          "shape": "__string"
        },
        "Ttl": {
          "documentation": "<p>The expiry time for the one-time generated token code.</p>",
          "locationName": "ttl",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "Ttl",
        "SessionId",
        "ChallengeCode"
      ],
      "type": "structure"
    },
    "CreateTokenResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "ChallengeCode": {
          "documentation": "<p>One-time challenge code for authenticating into the Amplify Admin UI.</p>",
          "locationName": "challengeCode",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>A unique ID provided when creating a new challenge token.</p>",
          "locationName": "sessionId",
          "shape": "__string"
        },
        "Ttl": {
          "documentation": "<p>The expiry time for the one-time generated token code.</p>",
          "locationName": "ttl",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteBackendAPIRequest": {
      "documentation": "<p>The request body for DeleteBackendAPI.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>Defines the resource configuration for the data model in your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "DeleteBackendAPIResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteBackendAuthRequest": {
      "documentation": "<p>The request body for DeleteBackendAuth.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "DeleteBackendAuthResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteBackendRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "DeleteBackendRespObj": {
      "documentation": "<p>The returned object for a request to delete a backend.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "DeleteBackendResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteBackendStorageRequest": {
      "documentation": "<p>The request body for DeleteBackendStorage.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ServiceName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "DeleteBackendStorageResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "DeleteTokenRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>The session ID.</p>",
          "location": "uri",
          "locationName": "sessionId",
          "shape": "__string"
        }
      },
      "required": [
        "SessionId",
        "AppId"
      ],
      "type": "structure"
    },
    "DeleteTokenRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "IsSuccess": {
          "documentation": "<p>Indicates whether the request succeeded or failed.</p>",
          "locationName": "isSuccess",
          "shape": "__boolean"
        }
      },
      "required": [
        "IsSuccess"
      ],
      "type": "structure"
    },
    "DeleteTokenResponse": {
      "members": {
        "IsSuccess": {
          "documentation": "<p>Indicates whether the request succeeded or failed.</p>",
          "locationName": "isSuccess",
          "shape": "__boolean"
        }
      },
      "type": "structure"
    },
    "DeliveryMethod": {
      "documentation": "<p>The type of verification message to send.</p>",
      "enum": [
        "EMAIL",
        "SMS"
      ],
      "type": "string"
    },
    "EmailSettings": {
      "documentation": "<p>The configuration for the email sent when an app user forgets their password.</p>",
      "members": {
        "EmailMessage": {
          "documentation": "<p>The contents of the email message.</p>",
          "locationName": "emailMessage",
          "shape": "__string"
        },
        "EmailSubject": {
          "documentation": "<p>The contents of the subject line of the email message.</p>",
          "locationName": "emailSubject",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GatewayTimeoutException": {
      "documentation": "<p>An error returned if there's a temporary issue with the service.</p>",
      "error": {
        "httpStatusCode": 504
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>An error message to inform that the request failed.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GenerateBackendAPIModelsRequest": {
      "documentation": "<p>The request body for GenerateBackendAPIModels.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "GenerateBackendAPIModelsResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendAPICodegenRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "Models": {
          "documentation": "<p>Stringified JSON of the datastore model.</p>",
          "locationName": "models",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "Status"
        }
      },
      "type": "structure"
    },
    "GetBackendAPIModelsRequest": {
      "documentation": "<p>The request body for GetBackendAPIModels.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendAPIModelsResponse": {
      "members": {
        "Models": {
          "documentation": "<p>Stringified JSON of the datastore model.</p>",
          "locationName": "models",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "Status"
        }
      },
      "type": "structure"
    },
    "GetBackendAPIRequest": {
      "documentation": "<p>The request body for GetBackendAPI.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>Defines the resource configuration for the data model in your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendAPIRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this response object.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "GetBackendAPIResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this response object.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendAuthReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendAuthRequest": {
      "documentation": "<p>The request body for GetBackendAuth.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendAuthRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for authorization requests to the backend of your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "GetBackendAuthResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for authorization requests to the backend of your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "CreateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendJobRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "JobId"
      ],
      "type": "structure"
    },
    "GetBackendJobResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "CreateTime": {
          "documentation": "<p>The time when the job was created.</p>",
          "locationName": "createTime",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        },
        "UpdateTime": {
          "documentation": "<p>The time when the job was last updated.</p>",
          "locationName": "updateTime",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendRequest": {
      "documentation": "<p>The request body for GetBackend.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "GetBackendRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AmplifyFeatureFlags": {
          "documentation": "<p>A stringified version of the cli.json file for your Amplify project.</p>",
          "locationName": "amplifyFeatureFlags",
          "shape": "__string"
        },
        "AmplifyMetaConfig": {
          "documentation": "<p>A stringified version of the current configs for your Amplify project.</p>",
          "locationName": "amplifyMetaConfig",
          "shape": "__string"
        },
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "AppName": {
          "documentation": "<p>The name of the app.</p>",
          "locationName": "appName",
          "shape": "__string"
        },
        "BackendEnvironmentList": {
          "documentation": "<p>A list of backend environments in an array.</p>",
          "locationName": "backendEnvironmentList",
          "shape": "ListOf__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request failed, this is the returned error.</p>",
          "locationName": "error",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "GetBackendResponse": {
      "members": {
        "AmplifyFeatureFlags": {
          "documentation": "<p>A stringified version of the cli.json file for your Amplify project.</p>",
          "locationName": "amplifyFeatureFlags",
          "shape": "__string"
        },
        "AmplifyMetaConfig": {
          "documentation": "<p>A stringified version of the current configs for your Amplify project.</p>",
          "locationName": "amplifyMetaConfig",
          "shape": "__string"
        },
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "AppName": {
          "documentation": "<p>The name of the app.</p>",
          "locationName": "appName",
          "shape": "__string"
        },
        "BackendEnvironmentList": {
          "documentation": "<p>A list of backend environments in an array.</p>",
          "locationName": "backendEnvironmentList",
          "shape": "ListOf__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request failed, this is the returned error.</p>",
          "locationName": "error",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetBackendStorageReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendStorageRequest": {
      "documentation": "<p>The request body for GetBackendStorage.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "GetBackendStorageResourceConfig": {
      "documentation": "<p>The details for a backend storage resource.</p>",
      "members": {
        "BucketName": {
          "documentation": "<p>The name of the S3 bucket.</p>",
          "locationName": "bucketName",
          "shape": "__string"
        },
        "Imported": {
          "documentation": "<p>Returns True if the storage resource has been imported.</p>",
          "locationName": "imported",
          "shape": "__boolean"
        },
        "Permissions": {
          "documentation": "<p>The authorization configuration for the storage S3 bucket.</p>",
          "locationName": "permissions",
          "shape": "BackendStoragePermissions"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "ServiceName",
        "Imported"
      ],
      "type": "structure"
    },
    "GetBackendStorageRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for the backend storage resource.</p>",
          "locationName": "resourceConfig",
          "shape": "GetBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "GetBackendStorageResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for the backend storage resource.</p>",
          "locationName": "resourceConfig",
          "shape": "GetBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "GetTokenRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>The session ID.</p>",
          "location": "uri",
          "locationName": "sessionId",
          "shape": "__string"
        }
      },
      "required": [
        "SessionId",
        "AppId"
      ],
      "type": "structure"
    },
    "GetTokenRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "ChallengeCode": {
          "documentation": "<p>The one-time challenge code for authenticating into the Amplify Admin UI.</p>",
          "locationName": "challengeCode",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>A unique ID provided when creating a new challenge token.</p>",
          "locationName": "sessionId",
          "shape": "__string"
        },
        "Ttl": {
          "documentation": "<p>The expiry time for the one-time generated token code.</p>",
          "locationName": "ttl",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "Ttl",
        "SessionId",
        "ChallengeCode"
      ],
      "type": "structure"
    },
    "GetTokenResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "ChallengeCode": {
          "documentation": "<p>The one-time challenge code for authenticating into the Amplify Admin UI.</p>",
          "locationName": "challengeCode",
          "shape": "__string"
        },
        "SessionId": {
          "documentation": "<p>A unique ID provided when creating a new challenge token.</p>",
          "locationName": "sessionId",
          "shape": "__string"
        },
        "Ttl": {
          "documentation": "<p>The expiry time for the one-time generated token code.</p>",
          "locationName": "ttl",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ImportBackendAuthReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "IdentityPoolId": {
          "documentation": "<p>The ID of the Amazon Cognito identity pool.</p>",
          "locationName": "identityPoolId",
          "shape": "__string"
        },
        "NativeClientId": {
          "documentation": "<p>The ID of the Amazon Cognito native client.</p>",
          "locationName": "nativeClientId",
          "shape": "__string"
        },
        "UserPoolId": {
          "documentation": "<p>The ID of the Amazon Cognito user pool.</p>",
          "locationName": "userPoolId",
          "shape": "__string"
        },
        "WebClientId": {
          "documentation": "<p>The ID of the Amazon Cognito web client.</p>",
          "locationName": "webClientId",
          "shape": "__string"
        }
      },
      "required": [
        "UserPoolId",
        "NativeClientId",
        "WebClientId"
      ],
      "type": "structure"
    },
    "ImportBackendAuthRequest": {
      "documentation": "<p>The request body for ImportBackendAuth.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "IdentityPoolId": {
          "documentation": "<p>The ID of the Amazon Cognito identity pool.</p>",
          "locationName": "identityPoolId",
          "shape": "__string"
        },
        "NativeClientId": {
          "documentation": "<p>The ID of the Amazon Cognito native client.</p>",
          "locationName": "nativeClientId",
          "shape": "__string"
        },
        "UserPoolId": {
          "documentation": "<p>The ID of the Amazon Cognito user pool.</p>",
          "locationName": "userPoolId",
          "shape": "__string"
        },
        "WebClientId": {
          "documentation": "<p>The ID of the Amazon Cognito web client.</p>",
          "locationName": "webClientId",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "UserPoolId",
        "NativeClientId",
        "WebClientId"
      ],
      "type": "structure"
    },
    "ImportBackendAuthResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ImportBackendStorageReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "BucketName": {
          "documentation": "<p>The name of the S3 bucket.</p>",
          "locationName": "bucketName",
          "shape": "__string"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "ServiceName"
      ],
      "type": "structure"
    },
    "ImportBackendStorageRequest": {
      "documentation": "<p>The request body for ImportBackendStorage.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "BucketName": {
          "documentation": "<p>The name of the S3 bucket.</p>",
          "locationName": "bucketName",
          "shape": "__string"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ServiceName"
      ],
      "type": "structure"
    },
    "ImportBackendStorageResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "InternalServiceException": {
      "documentation": "<p>An error returned if there's a temporary issue with the service.</p>",
      "members": {
        "Message": {
          "documentation": "<p>An error message to inform that the request failed.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "LimitExceededException": {
      "documentation": "<p>An error that is returned when a limit of a specific type has been exceeded.</p>",
      "members": {
        "LimitType": {
          "documentation": "<p>The type of limit that was exceeded.</p>",
          "locationName": "limitType",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>An error message to inform that the request has failed.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBackendJobReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results that you want in the response.</p>",
          "locationName": "maxResults",
          "shape": "__integerMin1Max25"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified operation name.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified status.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBackendJobRespObj": {
      "documentation": "<p>The returned list of backend jobs.</p>",
      "members": {
        "Jobs": {
          "documentation": "<p>An array of jobs and their properties.</p>",
          "locationName": "jobs",
          "shape": "ListOfBackendJobRespObj"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListBackendJobsRequest": {
      "documentation": "<p>The request body for ListBackendJobs.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "MaxResults": {
          "documentation": "<p>The maximum number of results that you want in the response.</p>",
          "locationName": "maxResults",
          "shape": "__integerMin1Max25"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified operation name.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified status.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName"
      ],
      "type": "structure"
    },
    "ListBackendJobsResponse": {
      "members": {
        "Jobs": {
          "documentation": "<p>An array of jobs and their properties.</p>",
          "locationName": "jobs",
          "shape": "ListOfBackendJobRespObj"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListOfAdditionalConstraintsElement": {
      "member": {
        "shape": "AdditionalConstraintsElement"
      },
      "type": "list"
    },
    "ListOfAuthenticatedElement": {
      "member": {
        "shape": "AuthenticatedElement"
      },
      "type": "list"
    },
    "ListOfBackendAPIAuthType": {
      "member": {
        "shape": "BackendAPIAuthType"
      },
      "type": "list"
    },
    "ListOfBackendJobRespObj": {
      "member": {
        "shape": "BackendJobRespObj"
      },
      "type": "list"
    },
    "ListOfMfaTypesElement": {
      "member": {
        "shape": "MfaTypesElement"
      },
      "type": "list"
    },
    "ListOfOAuthScopesElement": {
      "member": {
        "shape": "OAuthScopesElement"
      },
      "type": "list"
    },
    "ListOfRequiredSignUpAttributesElement": {
      "member": {
        "shape": "RequiredSignUpAttributesElement"
      },
      "type": "list"
    },
    "ListOfS3BucketInfo": {
      "member": {
        "shape": "S3BucketInfo"
      },
      "type": "list"
    },
    "ListOfUnAuthenticatedElement": {
      "member": {
        "shape": "UnAuthenticatedElement"
      },
      "type": "list"
    },
    "ListOf__string": {
      "member": {
        "shape": "__string"
      },
      "type": "list"
    },
    "ListS3BucketsReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "NextToken": {
          "documentation": "<p>Reserved for future use.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListS3BucketsRequest": {
      "documentation": "<p>The request body for S3Buckets.</p>",
      "members": {
        "NextToken": {
          "documentation": "<p>Reserved for future use.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "ListS3BucketsRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "Buckets": {
          "documentation": "<p>The list of S3 buckets.</p>",
          "locationName": "buckets",
          "shape": "ListOfS3BucketInfo"
        },
        "NextToken": {
          "documentation": "<p>Reserved for future use.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "required": [
        "Buckets"
      ],
      "type": "structure"
    },
    "ListS3BucketsResponse": {
      "members": {
        "Buckets": {
          "documentation": "<p>The list of S3 buckets.</p>",
          "locationName": "buckets",
          "shape": "ListOfS3BucketInfo"
        },
        "NextToken": {
          "documentation": "<p>Reserved for future use.</p>",
          "locationName": "nextToken",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "LoginAuthConfigReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "AwsCognitoIdentityPoolId": {
          "documentation": "<p>The Amazon Cognito identity pool ID used for the Amplify Admin UI login authorization.</p>",
          "locationName": "aws_cognito_identity_pool_id",
          "shape": "__string"
        },
        "AwsCognitoRegion": {
          "documentation": "<p>The AWS Region for the Amplify Admin UI login.</p>",
          "locationName": "aws_cognito_region",
          "shape": "__string"
        },
        "AwsUserPoolsId": {
          "documentation": "<p>The Amazon Cognito user pool ID used for Amplify Admin UI login authentication.</p>",
          "locationName": "aws_user_pools_id",
          "shape": "__string"
        },
        "AwsUserPoolsWebClientId": {
          "documentation": "<p>The web client ID for the Amazon Cognito user pools.</p>",
          "locationName": "aws_user_pools_web_client_id",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "MFAMode": {
      "enum": [
        "ON",
        "OFF",
        "OPTIONAL"
      ],
      "type": "string"
    },
    "MfaTypesElement": {
      "enum": [
        "SMS",
        "TOTP"
      ],
      "type": "string"
    },
    "Mode": {
      "enum": [
        "API_KEY",
        "AWS_IAM",
        "AMAZON_COGNITO_USER_POOLS",
        "OPENID_CONNECT"
      ],
      "type": "string"
    },
    "NotFoundException": {
      "documentation": "<p>An error returned when a specific resource type is not found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "documentation": "<p>An error message to inform that the request has failed.</p>",
          "locationName": "message",
          "shape": "__string"
        },
        "ResourceType": {
          "documentation": "<p>The type of resource that is not found.</p>",
          "locationName": "resourceType",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "OAuthGrantType": {
      "enum": [
        "CODE",
        "IMPLICIT"
      ],
      "type": "string"
    },
    "OAuthScopesElement": {
      "enum": [
        "PHONE",
        "EMAIL",
        "OPENID",
        "PROFILE",
        "AWS_COGNITO_SIGNIN_USER_ADMIN"
      ],
      "type": "string"
    },
    "RemoveAllBackendsReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "CleanAmplifyApp": {
          "documentation": "<p>Cleans up the Amplify Console app if this value is set to true.</p>",
          "locationName": "cleanAmplifyApp",
          "shape": "__boolean"
        }
      },
      "type": "structure"
    },
    "RemoveAllBackendsRequest": {
      "documentation": "<p>The request body for RemoveAllBackends.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "CleanAmplifyApp": {
          "documentation": "<p>Cleans up the Amplify Console app if this value is set to true.</p>",
          "locationName": "cleanAmplifyApp",
          "shape": "__boolean"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "RemoveAllBackendsRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "RemoveAllBackendsResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "RemoveBackendAuthReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName"
      ],
      "type": "structure"
    },
    "RemoveBackendConfigRequest": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "RemoveBackendConfigRespObj": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "RemoveBackendConfigResponse": {
      "members": {
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "RemoveBackendStorageReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "ServiceName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "RequiredSignUpAttributesElement": {
      "enum": [
        "ADDRESS",
        "BIRTHDATE",
        "EMAIL",
        "FAMILY_NAME",
        "GENDER",
        "GIVEN_NAME",
        "LOCALE",
        "MIDDLE_NAME",
        "NAME",
        "NICKNAME",
        "PHONE_NUMBER",
        "PICTURE",
        "PREFERRED_USERNAME",
        "PROFILE",
        "UPDATED_AT",
        "WEBSITE",
        "ZONE_INFO"
      ],
      "type": "string"
    },
    "ResolutionStrategy": {
      "enum": [
        "OPTIMISTIC_CONCURRENCY",
        "LAMBDA",
        "AUTOMERGE",
        "NONE"
      ],
      "type": "string"
    },
    "ResourceConfig": {
      "documentation": "<p>Defines the resource configuration for the data model in your Amplify project.</p>",
      "members": {},
      "type": "structure"
    },
    "S3BucketInfo": {
      "documentation": "<p>Describes the metadata of the S3 bucket.</p>",
      "members": {
        "CreationDate": {
          "documentation": "<p>The creation date of the S3 bucket.</p>",
          "locationName": "creationDate",
          "shape": "__string"
        },
        "Name": {
          "documentation": "<p>The name of the S3 bucket.</p>",
          "locationName": "name",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "Service": {
      "enum": [
        "COGNITO"
      ],
      "type": "string"
    },
    "ServiceName": {
      "enum": [
        "S3"
      ],
      "type": "string"
    },
    "Settings": {
      "documentation": "<p>The settings of your MFA configuration for the backend of your Amplify project.</p>",
      "members": {
        "MfaTypes": {
          "documentation": "<p>The supported MFA types.</p>",
          "locationName": "mfaTypes",
          "shape": "ListOfMfaTypesElement"
        },
        "SmsMessage": {
          "documentation": "<p>The body of the SMS message.</p>",
          "locationName": "smsMessage",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "SignInMethod": {
      "enum": [
        "EMAIL",
        "EMAIL_AND_PHONE_NUMBER",
        "PHONE_NUMBER",
        "USERNAME"
      ],
      "type": "string"
    },
    "SmsSettings": {
      "documentation": "<p>SMS settings for authentication.</p>",
      "members": {
        "SmsMessage": {
          "documentation": "<p>The contents of the SMS message.</p>",
          "locationName": "smsMessage",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "SocialProviderSettings": {
      "documentation": "<p>The settings for using the social identity providers for access to your Amplify app.</p>",
      "members": {
        "Facebook": {
          "shape": "BackendAuthSocialProviderConfig"
        },
        "Google": {
          "shape": "BackendAuthSocialProviderConfig"
        },
        "LoginWithAmazon": {
          "shape": "BackendAuthSocialProviderConfig"
        },
        "SignInWithApple": {
          "shape": "BackendAuthAppleProviderConfig"
        }
      },
      "type": "structure"
    },
    "Status": {
      "enum": [
        "LATEST",
        "STALE"
      ],
      "type": "string"
    },
    "TooManyRequestsException": {
      "documentation": "<p>An error that is returned when a limit of a specific type has been exceeded.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "LimitType": {
          "documentation": "<p>The type of limit that was exceeded.</p>",
          "locationName": "limitType",
          "shape": "__string"
        },
        "Message": {
          "documentation": "<p>An error message to inform that the request has failed.</p>",
          "locationName": "message",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UnAuthenticatedElement": {
      "enum": [
        "READ",
        "CREATE_AND_UPDATE",
        "DELETE"
      ],
      "type": "string"
    },
    "UpdateBackendAPIRequest": {
      "documentation": "<p>The request body for UpdateBackendAPI.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>Defines the resource configuration for the data model in your Amplify project.</p>",
          "locationName": "resourceConfig",
          "shape": "BackendAPIResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName"
      ],
      "type": "structure"
    },
    "UpdateBackendAPIResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthForgotPasswordConfig": {
      "documentation": "<p><b>(DEPRECATED)</b> Describes the forgot password policy for authenticating into the Amplify app.</p>",
      "members": {
        "DeliveryMethod": {
          "documentation": "<p><b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.</p>",
          "locationName": "deliveryMethod",
          "shape": "DeliveryMethod"
        },
        "EmailSettings": {
          "documentation": "<p><b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.</p>",
          "locationName": "emailSettings",
          "shape": "EmailSettings"
        },
        "SmsSettings": {
          "documentation": "<p><b>(DEPRECATED)</b> The configuration for the SMS message sent when an Amplify app user forgets their password.</p>",
          "locationName": "smsSettings",
          "shape": "SmsSettings"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthIdentityPoolConfig": {
      "documentation": "<p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>",
      "members": {
        "UnauthenticatedLogin": {
          "documentation": "<p>A boolean value that can be set to allow or disallow guest-level authorization into your Amplify app.</p>",
          "locationName": "unauthenticatedLogin",
          "shape": "__boolean"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthMFAConfig": {
      "documentation": "<p>Updates the multi-factor authentication (MFA) configuration for the backend of your Amplify project.</p>",
      "members": {
        "MFAMode": {
          "documentation": "<p>The MFA mode for the backend of your Amplify project.</p>",
          "shape": "MFAMode"
        },
        "Settings": {
          "documentation": "<p>The settings of your MFA configuration for the backend of your Amplify project.</p>",
          "locationName": "settings",
          "shape": "Settings"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthOAuthConfig": {
      "documentation": "<p>The OAuth configurations for authenticating users into your Amplify app.</p>",
      "members": {
        "DomainPrefix": {
          "documentation": "<p>The Amazon Cognito domain prefix used to create a hosted UI for authentication.</p>",
          "locationName": "domainPrefix",
          "shape": "__string"
        },
        "OAuthGrantType": {
          "documentation": "<p>The OAuth grant type to allow app users to authenticate from your Amplify app.</p>",
          "locationName": "oAuthGrantType",
          "shape": "OAuthGrantType"
        },
        "OAuthScopes": {
          "documentation": "<p>The list of OAuth-related flows that can allow users to authenticate from your Amplify app.</p>",
          "locationName": "oAuthScopes",
          "shape": "ListOfOAuthScopesElement"
        },
        "RedirectSignInURIs": {
          "documentation": "<p>Redirect URLs that OAuth uses when a user signs in to an Amplify app.</p>",
          "locationName": "redirectSignInURIs",
          "shape": "ListOf__string"
        },
        "RedirectSignOutURIs": {
          "documentation": "<p>Redirect URLs that OAuth uses when a user signs out of an Amplify app.</p>",
          "locationName": "redirectSignOutURIs",
          "shape": "ListOf__string"
        },
        "SocialProviderSettings": {
          "documentation": "<p>Describes third-party social federation configurations for allowing your users to sign in with OAuth.</p>",
          "locationName": "socialProviderSettings",
          "shape": "SocialProviderSettings"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthPasswordPolicyConfig": {
      "documentation": "<p>Describes the password policy for your Amazon Cognito user pool configured as a part of your Amplify project.</p>",
      "members": {
        "AdditionalConstraints": {
          "documentation": "<p>Describes additional constraints on password requirements to sign in to the auth resource, configured as a part of your Amplify project.</p>",
          "locationName": "additionalConstraints",
          "shape": "ListOfAdditionalConstraintsElement"
        },
        "MinimumLength": {
          "documentation": "<p>Describes the minimum length of the password required to sign in to the auth resource, configured as a part of your Amplify project.</p>",
          "locationName": "minimumLength",
          "shape": "__double"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request object.</p>",
          "locationName": "resourceConfig",
          "shape": "UpdateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "UpdateBackendAuthRequest": {
      "documentation": "<p>The request body for UpdateBackendAuth.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for this request object.</p>",
          "locationName": "resourceConfig",
          "shape": "UpdateBackendAuthResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of this resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "UpdateBackendAuthResourceConfig": {
      "documentation": "<p>Defines the resource configuration when updating an authentication resource in your Amplify project.</p>",
      "members": {
        "AuthResources": {
          "documentation": "<p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>",
          "locationName": "authResources",
          "shape": "AuthResources"
        },
        "IdentityPoolConfigs": {
          "documentation": "<p>Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.</p>",
          "locationName": "identityPoolConfigs",
          "shape": "UpdateBackendAuthIdentityPoolConfig"
        },
        "Service": {
          "documentation": "<p>Defines the service name to use when configuring an authentication resource in your Amplify project.</p>",
          "locationName": "service",
          "shape": "Service"
        },
        "UserPoolConfigs": {
          "documentation": "<p>Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.</p>",
          "locationName": "userPoolConfigs",
          "shape": "UpdateBackendAuthUserPoolConfig"
        }
      },
      "required": [
        "AuthResources",
        "UserPoolConfigs",
        "Service"
      ],
      "type": "structure"
    },
    "UpdateBackendAuthResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthUserPoolConfig": {
      "documentation": "<p>Describes the Amazon Cognito user pool configuration for the authorization resource to be configured for your Amplify project on an update.</p>",
      "members": {
        "ForgotPassword": {
          "documentation": "<p><b>(DEPRECATED)</b> Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "forgotPassword",
          "shape": "UpdateBackendAuthForgotPasswordConfig"
        },
        "Mfa": {
          "documentation": "<p>Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.</p>",
          "locationName": "mfa",
          "shape": "UpdateBackendAuthMFAConfig"
        },
        "OAuth": {
          "documentation": "<p>Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "oAuth",
          "shape": "UpdateBackendAuthOAuthConfig"
        },
        "PasswordPolicy": {
          "documentation": "<p>Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "passwordPolicy",
          "shape": "UpdateBackendAuthPasswordPolicyConfig"
        },
        "VerificationMessage": {
          "documentation": "<p>Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.</p>",
          "locationName": "verificationMessage",
          "shape": "UpdateBackendAuthVerificationMessageConfig"
        }
      },
      "type": "structure"
    },
    "UpdateBackendAuthVerificationMessageConfig": {
      "documentation": "<p>Updates the configuration of the email or SMS message for the auth resource configured for your Amplify project.</p>",
      "members": {
        "DeliveryMethod": {
          "documentation": "<p>The type of verification message to send.</p>",
          "locationName": "deliveryMethod",
          "shape": "DeliveryMethod"
        },
        "EmailSettings": {
          "documentation": "<p>The settings for the email message.</p>",
          "locationName": "emailSettings",
          "shape": "EmailSettings"
        },
        "SmsSettings": {
          "documentation": "<p>The settings for the SMS message.</p>",
          "locationName": "smsSettings",
          "shape": "SmsSettings"
        }
      },
      "required": [
        "DeliveryMethod"
      ],
      "type": "structure"
    },
    "UpdateBackendConfigReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "LoginAuthConfig": {
          "documentation": "<p>Describes the Amazon Cognito configuration for Admin UI access.</p>",
          "locationName": "loginAuthConfig",
          "shape": "LoginAuthConfigReqObj"
        }
      },
      "type": "structure"
    },
    "UpdateBackendConfigRequest": {
      "documentation": "<p>The request body for UpdateBackendConfig.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "LoginAuthConfig": {
          "documentation": "<p>Describes the Amazon Cognito configuration for Admin UI access.</p>",
          "locationName": "loginAuthConfig",
          "shape": "LoginAuthConfigReqObj"
        }
      },
      "required": [
        "AppId"
      ],
      "type": "structure"
    },
    "UpdateBackendConfigResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendManagerAppId": {
          "documentation": "<p>The app ID for the backend manager.</p>",
          "locationName": "backendManagerAppId",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "LoginAuthConfig": {
          "documentation": "<p>Describes the Amazon Cognito configurations for the Admin UI auth resource to log in with.</p>",
          "locationName": "loginAuthConfig",
          "shape": "LoginAuthConfigReqObj"
        }
      },
      "type": "structure"
    },
    "UpdateBackendJobRequest": {
      "documentation": "<p>The request body for GetBackendJob.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "location": "uri",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified operation name.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>Filters the list of response objects to include only those with the specified status.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "JobId"
      ],
      "type": "structure"
    },
    "UpdateBackendJobResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "CreateTime": {
          "documentation": "<p>The time when the job was created.</p>",
          "locationName": "createTime",
          "shape": "__string"
        },
        "Error": {
          "documentation": "<p>If the request fails, this error is returned.</p>",
          "locationName": "error",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Operation": {
          "documentation": "<p>The name of the operation.</p>",
          "locationName": "operation",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        },
        "UpdateTime": {
          "documentation": "<p>The time when the job was last updated.</p>",
          "locationName": "updateTime",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "UpdateBackendStorageReqObj": {
      "documentation": "<p>The request object for this operation.</p>",
      "members": {
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for updating backend storage.</p>",
          "locationName": "resourceConfig",
          "shape": "UpdateBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "ResourceName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "UpdateBackendStorageRequest": {
      "documentation": "<p>The request body for UpdateBackendStorage.</p>",
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "location": "uri",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "location": "uri",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "ResourceConfig": {
          "documentation": "<p>The resource configuration for updating backend storage.</p>",
          "locationName": "resourceConfig",
          "shape": "UpdateBackendStorageResourceConfig"
        },
        "ResourceName": {
          "documentation": "<p>The name of the storage resource.</p>",
          "locationName": "resourceName",
          "shape": "__string"
        }
      },
      "required": [
        "AppId",
        "BackendEnvironmentName",
        "ResourceName",
        "ResourceConfig"
      ],
      "type": "structure"
    },
    "UpdateBackendStorageResourceConfig": {
      "documentation": "<p>The resource configuration for updating backend storage.</p>",
      "members": {
        "Permissions": {
          "documentation": "<p>The authorization configuration for the storage S3 bucket.</p>",
          "locationName": "permissions",
          "shape": "BackendStoragePermissions"
        },
        "ServiceName": {
          "documentation": "<p>The name of the storage service.</p>",
          "locationName": "serviceName",
          "shape": "ServiceName"
        }
      },
      "required": [
        "ServiceName",
        "Permissions"
      ],
      "type": "structure"
    },
    "UpdateBackendStorageResponse": {
      "members": {
        "AppId": {
          "documentation": "<p>The app ID.</p>",
          "locationName": "appId",
          "shape": "__string"
        },
        "BackendEnvironmentName": {
          "documentation": "<p>The name of the backend environment.</p>",
          "locationName": "backendEnvironmentName",
          "shape": "__string"
        },
        "JobId": {
          "documentation": "<p>The ID for the job.</p>",
          "locationName": "jobId",
          "shape": "__string"
        },
        "Status": {
          "documentation": "<p>The current status of the request.</p>",
          "locationName": "status",
          "shape": "__string"
        }
      },
      "type": "structure"
    },
    "__boolean": {
      "type": "boolean"
    },
    "__double": {
      "type": "double"
    },
    "__integer": {
      "type": "integer"
    },
    "__integerMin1Max25": {
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "__long": {
      "type": "long"
    },
    "__string": {
      "type": "string"
    },
    "__timestampIso8601": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "__timestampUnix": {
      "timestampFormat": "unixTimestamp",
      "type": "timestamp"
    }
  }
}
