{
  "documentation": "<p>The Amazon Chime SDK meetings APIs in this section allow software developers to create Amazon Chime SDK meetings, set the AWS Regions for meetings, create and manage users, and send and receive meeting notifications. For more information about the meeting APIs, see <a href=\"https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Meetings.html\">Amazon Chime SDK meetings</a>.</p>",
  "metadata": {
    "apiVersion": "2021-07-15",
    "endpointPrefix": "meetings-chime",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Chime SDK Meetings",
    "serviceId": "Chime SDK Meetings",
    "signatureVersion": "v4",
    "signingName": "chime",
    "uid": "chime-sdk-meetings-2021-07-15"
  },
  "operations": {
    "BatchCreateAttendee": {
      "documentation": "<p>Creates up to 100 attendees for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "UnprocessableEntityException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings/{MeetingId}/attendees?operation=batch-create"
      },
      "input": {
        "shape": "BatchCreateAttendeeRequest"
      },
      "name": "BatchCreateAttendee",
      "output": {
        "shape": "BatchCreateAttendeeResponse"
      }
    },
    "BatchUpdateAttendeeCapabilitiesExcept": {
      "documentation": "<p>Updates <code>AttendeeCapabilities</code> except the capabilities listed in an <code>ExcludedAttendeeIds</code> table.</p> <note> <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see .</p> </note> <p>When using capabilities, be aware of these corner cases:</p> <ul> <li> <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code> or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p> </li> <li> <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p> </li> <li> <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p> </li> </ul>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/meetings/{MeetingId}/attendees/capabilities?operation=batch-update-except",
        "responseCode": 200
      },
      "input": {
        "shape": "BatchUpdateAttendeeCapabilitiesExceptRequest"
      },
      "name": "BatchUpdateAttendeeCapabilitiesExcept"
    },
    "CreateAttendee": {
      "documentation": "<p> Creates a new attendee for an active Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "UnprocessableEntityException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings/{MeetingId}/attendees"
      },
      "input": {
        "shape": "CreateAttendeeRequest"
      },
      "name": "CreateAttendee",
      "output": {
        "shape": "CreateAttendeeResponse"
      }
    },
    "CreateMeeting": {
      "documentation": "<p>Creates a new Amazon Chime SDK meeting in the specified media Region with no initial attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings"
      },
      "input": {
        "shape": "CreateMeetingRequest"
      },
      "name": "CreateMeeting",
      "output": {
        "shape": "CreateMeetingResponse"
      }
    },
    "CreateMeetingWithAttendees": {
      "documentation": "<p> Creates a new Amazon Chime SDK meeting in the specified media Region, with attendees. For more information about specifying media Regions, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/chime-sdk-meetings-regions.html\">Amazon Chime SDK Media Regions</a> in the <i>Amazon Chime Developer Guide</i>. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "LimitExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings?operation=create-attendees"
      },
      "input": {
        "shape": "CreateMeetingWithAttendeesRequest"
      },
      "name": "CreateMeetingWithAttendees",
      "output": {
        "shape": "CreateMeetingWithAttendeesResponse"
      }
    },
    "DeleteAttendee": {
      "documentation": "<p>Deletes an attendee from the specified Amazon Chime SDK meeting and deletes their <code>JoinToken</code>. Attendees are automatically deleted when a Amazon Chime SDK meeting is deleted. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/meetings/{MeetingId}/attendees/{AttendeeId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteAttendeeRequest"
      },
      "name": "DeleteAttendee"
    },
    "DeleteMeeting": {
      "documentation": "<p>Deletes the specified Amazon Chime SDK meeting. The operation deletes all attendees, disconnects all clients, and prevents new clients from joining the meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/meetings/{MeetingId}",
        "responseCode": 204
      },
      "input": {
        "shape": "DeleteMeetingRequest"
      },
      "name": "DeleteMeeting"
    },
    "GetAttendee": {
      "documentation": "<p> Gets the Amazon Chime SDK attendee details for a specified meeting ID and attendee ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/meetings/{MeetingId}/attendees/{AttendeeId}"
      },
      "input": {
        "shape": "GetAttendeeRequest"
      },
      "name": "GetAttendee",
      "output": {
        "shape": "GetAttendeeResponse"
      }
    },
    "GetMeeting": {
      "documentation": "<p>Gets the Amazon Chime SDK meeting details for the specified meeting ID. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/meetings/{MeetingId}"
      },
      "input": {
        "shape": "GetMeetingRequest"
      },
      "name": "GetMeeting",
      "output": {
        "shape": "GetMeetingResponse"
      }
    },
    "ListAttendees": {
      "documentation": "<p> Lists the attendees for the specified Amazon Chime SDK meeting. For more information about the Amazon Chime SDK, see <a href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\">Using the Amazon Chime SDK</a> in the <i>Amazon Chime Developer Guide</i>. </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/meetings/{MeetingId}/attendees",
        "responseCode": 200
      },
      "input": {
        "shape": "ListAttendeesRequest"
      },
      "name": "ListAttendees",
      "output": {
        "shape": "ListAttendeesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Returns a list of the tags available for the specified resource.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "StartMeetingTranscription": {
      "documentation": "<p>Starts transcription for the specified <code>meetingId</code>.</p>",
      "errors": [
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnprocessableEntityException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings/{MeetingId}/transcription?operation=start",
        "responseCode": 200
      },
      "input": {
        "shape": "StartMeetingTranscriptionRequest"
      },
      "name": "StartMeetingTranscription"
    },
    "StopMeetingTranscription": {
      "documentation": "<p>Stops transcription for the specified <code>meetingId</code>.</p>",
      "errors": [
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "UnprocessableEntityException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ServiceUnavailableException"
        },
        {
          "shape": "ServiceFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/meetings/{MeetingId}/transcription?operation=stop",
        "responseCode": 200
      },
      "input": {
        "shape": "StopMeetingTranscriptionRequest"
      },
      "name": "StopMeetingTranscription"
    },
    "TagResource": {
      "documentation": "<p>The resource that supports tags.</p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "TooManyTagsException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=tag-resource",
        "responseCode": 204
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes the specified tags from the specified resources. When you specify a tag key, the action removes both that key and its associated value. The operation succeeds even if you attempt to remove tags from a resource that were already removed. Note the following:</p> <ul> <li> <p>To remove tags from a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for removing tags. For more information, see the documentation for the service whose resource you want to untag.</p> </li> <li> <p>You can only tag resources that are located in the specified AWS Region for the calling AWS account.</p> </li> </ul> <p> <b>Minimum permissions</b> </p> <p>In addition to the <code>tag:UntagResources</code> permission required by this operation, you must also have the remove tags permission defined by the service that created the resource. For example, to remove the tags from an Amazon EC2 instance using the <code>UntagResources</code> operation, you must have both of the following permissions:</p> <p> <code>tag:UntagResource</code> </p> <p> <code>ChimeSDKMeetings:DeleteTags</code> </p>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags?operation=untag-resource",
        "responseCode": 204
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAttendeeCapabilities": {
      "documentation": "<p>The capabilties that you want to update.</p> <note> <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see .</p> </note> <p>When using capabilities, be aware of these corner cases:</p> <ul> <li> <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code> or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p> </li> <li> <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p> </li> <li> <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p> </li> </ul>",
      "errors": [
        {
          "shape": "BadRequestException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnauthorizedException"
        },
        {
          "shape": "NotFoundException"
        },
        {
          "shape": "ForbiddenException"
        },
        {
          "shape": "ServiceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/meetings/{MeetingId}/attendees/{AttendeeId}/capabilities"
      },
      "input": {
        "shape": "UpdateAttendeeCapabilitiesRequest"
      },
      "name": "UpdateAttendeeCapabilities",
      "output": {
        "shape": "UpdateAttendeeCapabilitiesResponse"
      }
    }
  },
  "shapes": {
    "AmazonResourceName": {
      "max": 1011,
      "min": 1,
      "pattern": "^arn:.*",
      "type": "string"
    },
    "Arn": {
      "max": 1024,
      "min": 1,
      "pattern": "^arn[\\/\\:\\-\\_\\.a-zA-Z0-9]+$",
      "sensitive": true,
      "type": "string"
    },
    "Attendee": {
      "documentation": "<p>An Amazon Chime SDK meeting attendee. Includes a unique <code>AttendeeId</code> and <code>JoinToken</code>. The <code>JoinToken</code> allows a client to authenticate and join as the specified attendee. The <code>JoinToken</code> expires when the meeting ends, or when <a>DeleteAttendee</a> is called. After that, the attendee is unable to join the meeting. </p> <p>We recommend securely transferring each <code>JoinToken</code> from your server application to the client so that no other client has access to the token except for the one authorized to represent the attendee.</p>",
      "members": {
        "AttendeeId": {
          "documentation": "<p>The Amazon Chime SDK attendee ID.</p>",
          "shape": "GuidString"
        },
        "Capabilities": {
          "documentation": "<p>The capabilities assigned to an attendee: audio, video, or content.</p> <note> <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see .</p> </note> <p>When using capabilities, be aware of these corner cases:</p> <ul> <li> <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code> or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p> </li> <li> <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p> </li> <li> <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p> </li> </ul>",
          "shape": "AttendeeCapabilities"
        },
        "ExternalUserId": {
          "documentation": "<p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>",
          "shape": "ExternalUserId"
        },
        "JoinToken": {
          "documentation": "<p>The join token used by the Amazon Chime SDK attendee.</p>",
          "shape": "JoinTokenString"
        }
      },
      "type": "structure"
    },
    "AttendeeCapabilities": {
      "documentation": "<p>The media capabilities of an attendee: audio, video, or content. </p> <note> <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see .</p> </note> <p>When using capabilities, be aware of these corner cases:</p> <ul> <li> <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code> or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p> </li> <li> <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p> </li> <li> <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p> </li> </ul>",
      "members": {
        "Audio": {
          "documentation": "<p>The audio capability assigned to an attendee.</p>",
          "shape": "MediaCapabilities"
        },
        "Content": {
          "documentation": "<p>The content capability assigned to an attendee.</p>",
          "shape": "MediaCapabilities"
        },
        "Video": {
          "documentation": "<p>The video capability assigned to an attendee.</p>",
          "shape": "MediaCapabilities"
        }
      },
      "required": [
        "Audio",
        "Video",
        "Content"
      ],
      "type": "structure"
    },
    "AttendeeIdItem": {
      "documentation": "<p>A structure that contains one or more attendee IDs.</p>",
      "members": {
        "AttendeeId": {
          "documentation": "<p>A list of one or more attendee IDs.</p>",
          "shape": "GuidString"
        }
      },
      "required": [
        "AttendeeId"
      ],
      "type": "structure"
    },
    "AttendeeIdsList": {
      "max": 250,
      "member": {
        "shape": "AttendeeIdItem"
      },
      "min": 1,
      "type": "list"
    },
    "AttendeeList": {
      "member": {
        "shape": "Attendee"
      },
      "type": "list"
    },
    "AudioFeatures": {
      "documentation": "<p>An optional category of meeting features that contains audio-specific configurations, such as operating parameters for Amazon Voice Focus. </p>",
      "members": {
        "EchoReduction": {
          "documentation": "<p>Makes echo reduction available to clients who connect to the meeting.</p>",
          "shape": "MeetingFeatureStatus"
        }
      },
      "type": "structure"
    },
    "BadRequestException": {
      "documentation": "<p>The input parameters don't match the service's restrictions.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "BatchCreateAttendeeErrorList": {
      "member": {
        "shape": "CreateAttendeeError"
      },
      "type": "list"
    },
    "BatchCreateAttendeeRequest": {
      "members": {
        "Attendees": {
          "documentation": "<p>The attendee information, including attendees' IDs and join tokens.</p>",
          "shape": "CreateAttendeeRequestItemList"
        },
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK ID of the meeting to which you're adding attendees.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "Attendees"
      ],
      "type": "structure"
    },
    "BatchCreateAttendeeResponse": {
      "members": {
        "Attendees": {
          "documentation": "<p>The attendee information, including attendees' IDs and join tokens.</p>",
          "shape": "AttendeeList"
        },
        "Errors": {
          "documentation": "<p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>",
          "shape": "BatchCreateAttendeeErrorList"
        }
      },
      "type": "structure"
    },
    "BatchUpdateAttendeeCapabilitiesExceptRequest": {
      "members": {
        "Capabilities": {
          "documentation": "<p>The capabilities (<code>audio</code>, <code>video</code>, or <code>content</code>) that you want to update.</p>",
          "shape": "AttendeeCapabilities"
        },
        "ExcludedAttendeeIds": {
          "documentation": "<p>The <code>AttendeeIDs</code> that you want to exclude from one or more capabilities.</p>",
          "shape": "AttendeeIdsList"
        },
        "MeetingId": {
          "documentation": "<p>The ID of the meeting associated with the update request.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "ExcludedAttendeeIds",
        "Capabilities"
      ],
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "ClientRequestToken": {
      "max": 64,
      "min": 2,
      "pattern": "[-_a-zA-Z0-9]*",
      "sensitive": true,
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>Multiple instances of the same request have been made simultaneously.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The ID of the request involved in the conflict.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateAttendeeError": {
      "documentation": "<p>The list of errors returned when errors are encountered during the BatchCreateAttendee and CreateAttendee actions. This includes external user IDs, error codes, and error messages.</p>",
      "members": {
        "ErrorCode": {
          "documentation": "<p>The error code.</p>",
          "shape": "String"
        },
        "ErrorMessage": {
          "documentation": "<p>The error message.</p>",
          "shape": "String"
        },
        "ExternalUserId": {
          "documentation": "<p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>",
          "shape": "ExternalUserId"
        }
      },
      "type": "structure"
    },
    "CreateAttendeeRequest": {
      "members": {
        "Capabilities": {
          "documentation": "<p>The capabilities (<code>audio</code>, <code>video</code>, or <code>content</code>) that you want to grant an attendee. If you don't specify capabilities, all users have send and receive capabilities on all media channels by default.</p> <note> <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see .</p> </note> <p>When using capabilities, be aware of these corner cases:</p> <ul> <li> <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code> or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p> </li> <li> <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p> </li> <li> <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> , and if the attendee turned on their video or content streams, remote attendess can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p> </li> </ul>",
          "shape": "AttendeeCapabilities"
        },
        "ExternalUserId": {
          "documentation": "<p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>",
          "shape": "ExternalUserId"
        },
        "MeetingId": {
          "documentation": "<p>The unique ID of the meeting.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "ExternalUserId"
      ],
      "type": "structure"
    },
    "CreateAttendeeRequestItem": {
      "documentation": "<p>The Amazon Chime SDK attendee fields to create, used with the BatchCreateAttendee action.</p>",
      "members": {
        "Capabilities": {
          "documentation": "<p>A list of one or more capabilities.</p>",
          "shape": "AttendeeCapabilities"
        },
        "ExternalUserId": {
          "documentation": "<p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>",
          "shape": "ExternalUserId"
        }
      },
      "required": [
        "ExternalUserId"
      ],
      "type": "structure"
    },
    "CreateAttendeeRequestItemList": {
      "max": 100,
      "member": {
        "shape": "CreateAttendeeRequestItem"
      },
      "min": 1,
      "type": "list"
    },
    "CreateAttendeeResponse": {
      "members": {
        "Attendee": {
          "documentation": "<p>The attendee information, including attendee ID and join token.</p>",
          "shape": "Attendee"
        }
      },
      "type": "structure"
    },
    "CreateMeetingRequest": {
      "members": {
        "ClientRequestToken": {
          "documentation": "<p>The unique identifier for the client request. Use a different token for different meetings.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "ExternalMeetingId": {
          "documentation": "<p>The external meeting ID.</p>",
          "shape": "ExternalMeetingId"
        },
        "MediaRegion": {
          "documentation": "<p>The Region in which to create the meeting.</p> <p> Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>. </p> <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>",
          "shape": "MediaRegion"
        },
        "MeetingFeatures": {
          "documentation": "<p>Lists the audio and video features enabled for a meeting, such as echo reduction.</p>",
          "shape": "MeetingFeaturesConfiguration"
        },
        "MeetingHostId": {
          "documentation": "<p>Reserved.</p>",
          "shape": "ExternalUserId"
        },
        "NotificationsConfiguration": {
          "documentation": "<p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>",
          "shape": "NotificationsConfiguration"
        },
        "PrimaryMeetingId": {
          "documentation": "<p>When specified, replicates the media from the primary meeting to the new meeting.</p>",
          "shape": "PrimaryMeetingId"
        },
        "Tags": {
          "documentation": "<p>Applies one or more tags to an Amazon Chime SDK meeting. Note the following:</p> <ul> <li> <p>Not all resources have tags. For a list of services with resources that support tagging using this operation, see <a href=\"https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/supported-services.html\">Services that support the Resource Groups Tagging API</a>. If the resource doesn't yet support this operation, the resource's service might support tagging using its own API operations. For more information, refer to the documentation for that service.</p> </li> <li> <p>Each resource can have up to 50 tags. For other limits, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html#tag-conventions\">Tag Naming and Usage Conventions</a> in the <i>AWS General Reference</i>.</p> </li> <li> <p>You can only tag resources that are located in the specified AWS Region for the AWS account.</p> </li> <li> <p>To add tags to a resource, you need the necessary permissions for the service that the resource belongs to as well as permissions for adding tags. For more information, see the documentation for each service.</p> </li> </ul> <important> <p>Do not store personally identifiable information (PII) or other confidential or sensitive information in tags. We use tags to provide you with billing and administration services. Tags are not intended to be used for private or sensitive data.</p> </important> <p> <b>Minimum permissions</b> </p> <p> In addition to the <code>tag:TagResources </code>permission required by this operation, you must also have the tagging permission defined by the service that created the resource. For example, to tag a <code>ChimeSDKMeetings</code> instance using the <code>TagResources</code> operation, you must have both of the following permissions:</p> <p> <code>tag:TagResources</code> </p> <p> <code>ChimeSDKMeetings:CreateTags</code> </p> <note> <p>Some services might have specific requirements for tagging some resources. For example, to tag an Amazon S3 bucket, you must also have the <code>s3:GetBucketTagging</code> permission. If the expected minimum permissions don't work, check the documentation for that service's tagging APIs for more information.</p> </note>",
          "shape": "TagList"
        },
        "TenantIds": {
          "documentation": "<p>A consistent and opaque identifier, created and maintained by the builder to represent a segment of their users.</p>",
          "shape": "TenantIdList"
        }
      },
      "required": [
        "ClientRequestToken",
        "MediaRegion",
        "ExternalMeetingId"
      ],
      "type": "structure"
    },
    "CreateMeetingResponse": {
      "members": {
        "Meeting": {
          "documentation": "<p>The meeting information, including the meeting ID and <code>MediaPlacement</code>.</p>",
          "shape": "Meeting"
        }
      },
      "type": "structure"
    },
    "CreateMeetingWithAttendeesRequest": {
      "members": {
        "Attendees": {
          "documentation": "<p>The attendee information, including attendees' IDs and join tokens.</p>",
          "shape": "CreateMeetingWithAttendeesRequestItemList"
        },
        "ClientRequestToken": {
          "documentation": "<p>The unique identifier for the client request. Use a different token for different meetings.</p>",
          "idempotencyToken": true,
          "shape": "ClientRequestToken"
        },
        "ExternalMeetingId": {
          "documentation": "<p>The external meeting ID.</p>",
          "shape": "ExternalMeetingId"
        },
        "MediaRegion": {
          "documentation": "<p>The Region in which to create the meeting.</p> <p> Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>. </p> <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>",
          "shape": "MediaRegion"
        },
        "MeetingFeatures": {
          "documentation": "<p>Lists the audio and video features enabled for a meeting, such as echo reduction.</p>",
          "shape": "MeetingFeaturesConfiguration"
        },
        "MeetingHostId": {
          "documentation": "<p>Reserved.</p>",
          "shape": "ExternalUserId"
        },
        "NotificationsConfiguration": {
          "documentation": "<p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>",
          "shape": "NotificationsConfiguration"
        },
        "PrimaryMeetingId": {
          "documentation": "<p>When specified, replicates the media from the primary meeting to the new meeting.</p>",
          "shape": "PrimaryMeetingId"
        },
        "Tags": {
          "documentation": "<p>The tags in the request.</p>",
          "shape": "TagList"
        },
        "TenantIds": {
          "documentation": "<p>A consistent and opaque identifier, created and maintained by the builder to represent a segment of their users.</p>",
          "shape": "TenantIdList"
        }
      },
      "required": [
        "ClientRequestToken",
        "MediaRegion",
        "ExternalMeetingId",
        "Attendees"
      ],
      "type": "structure"
    },
    "CreateMeetingWithAttendeesRequestItemList": {
      "max": 20,
      "member": {
        "shape": "CreateAttendeeRequestItem"
      },
      "min": 1,
      "type": "list"
    },
    "CreateMeetingWithAttendeesResponse": {
      "members": {
        "Attendees": {
          "documentation": "<p>The attendee information, including attendees' IDs and join tokens.</p>",
          "shape": "AttendeeList"
        },
        "Errors": {
          "documentation": "<p>If the action fails for one or more of the attendees in the request, a list of the attendees is returned, along with error codes and error messages.</p>",
          "shape": "BatchCreateAttendeeErrorList"
        },
        "Meeting": {
          "documentation": "<p>The meeting information, including the meeting ID and <code>MediaPlacement</code>.</p>",
          "shape": "Meeting"
        }
      },
      "type": "structure"
    },
    "DeleteAttendeeRequest": {
      "members": {
        "AttendeeId": {
          "documentation": "<p>The Amazon Chime SDK attendee ID.</p>",
          "location": "uri",
          "locationName": "AttendeeId",
          "shape": "GuidString"
        },
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "AttendeeId"
      ],
      "type": "structure"
    },
    "DeleteMeetingRequest": {
      "members": {
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId"
      ],
      "type": "structure"
    },
    "EngineTranscribeMedicalSettings": {
      "documentation": "<p>Settings specific to the Amazon Transcribe Medical engine.</p>",
      "members": {
        "ContentIdentificationType": {
          "documentation": "<p>Set this field to <code>PHI</code> to identify personal health information in the transcription output.</p>",
          "shape": "TranscribeMedicalContentIdentificationType"
        },
        "LanguageCode": {
          "documentation": "<p>The language code specified for the Amazon Transcribe Medical engine.</p>",
          "shape": "TranscribeMedicalLanguageCode"
        },
        "Region": {
          "documentation": "<p>The AWS Region passed to Amazon Transcribe Medical. If you don't specify a Region, Amazon Chime uses the meeting's Region. </p>",
          "shape": "TranscribeMedicalRegion"
        },
        "Specialty": {
          "documentation": "<p>The specialty specified for the Amazon Transcribe Medical engine.</p>",
          "shape": "TranscribeMedicalSpecialty"
        },
        "Type": {
          "documentation": "<p>The type of transcription.</p>",
          "shape": "TranscribeMedicalType"
        },
        "VocabularyName": {
          "documentation": "<p>The name of the vocabulary passed to Amazon Transcribe Medical.</p>",
          "shape": "String"
        }
      },
      "required": [
        "LanguageCode",
        "Specialty",
        "Type"
      ],
      "type": "structure"
    },
    "EngineTranscribeSettings": {
      "documentation": "<p>Settings specific to the Amazon Transcribe engine.</p>",
      "members": {
        "ContentIdentificationType": {
          "documentation": "<p>Set this field to <code>PII</code> to identify personally identifiable information in the transcription output.</p>",
          "shape": "TranscribeContentIdentificationType"
        },
        "ContentRedactionType": {
          "documentation": "<p>Set this field to <code>PII</code> to redact personally identifiable information in the transcription output. Content redaction is performed only upon complete transcription of the audio segments.</p> <p>You can\u2019t set <code>ContentRedactionType</code> and <code>ContentIdentificationType</code> in the same request. If you set both, your request returns a <code>BadRequestException</code>.</p>",
          "shape": "TranscribeContentRedactionType"
        },
        "EnablePartialResultsStabilization": {
          "documentation": "<p>Generates partial transcription results that are less likely to change as meeting attendees speak. It does so by only allowing the last few words from the partial results to change.</p>",
          "shape": "Boolean"
        },
        "IdentifyLanguage": {
          "documentation": "<p>Automatically identifies the language spoken in media files.</p>",
          "shape": "Boolean"
        },
        "LanguageCode": {
          "documentation": "<p>The language code specified for the Amazon Transcribe engine.</p>",
          "shape": "TranscribeLanguageCode"
        },
        "LanguageModelName": {
          "documentation": "<p>The name of the language model used during transcription.</p>",
          "shape": "TranscribeLanguageModelName"
        },
        "LanguageOptions": {
          "documentation": "<p>Language codes for the languages that you want to identify. You must provide at least 2 codes.</p>",
          "shape": "TranscribeLanguageOptions"
        },
        "PartialResultsStability": {
          "documentation": "<p>The stabity level of a partial results transcription. Determines how stable you want the transcription results to be. A higher level means the transcription results are less likely to change.</p>",
          "shape": "TranscribePartialResultsStability"
        },
        "PiiEntityTypes": {
          "documentation": "<p>Lists the PII entity types you want to identify or redact. To specify entity types, you must enable <code>ContentIdentificationType</code> or <code>ContentRedactionType</code>.</p> <p> <code>PIIEntityTypes</code> must be comma-separated. The available values are: <code>BANK_ACCOUNT_NUMBER</code>, <code>BANK_ROUTING, CREDIT_DEBIT_NUMBER</code>, <code>CREDIT_DEBIT_CVV</code>, <code>CREDIT_DEBIT_EXPIRY</code>, <code>PIN</code>, <code>EMAIL</code>, <code>ADDRESS</code>, <code>NAME</code>, <code>PHONE</code>, <code>SSN</code>, and <code>ALL</code>.</p> <p> <code>PiiEntityTypes</code> is an optional parameter with a default value of <code>ALL</code>.</p>",
          "shape": "TranscribePiiEntityTypes"
        },
        "PreferredLanguage": {
          "documentation": "<p>Language code for the preferred language.</p>",
          "shape": "TranscribeLanguageCode"
        },
        "Region": {
          "documentation": "<p>The AWS Region passed to Amazon Transcribe. If you don't specify a Region, Amazon Chime uses the meeting's Region.</p>",
          "shape": "TranscribeRegion"
        },
        "VocabularyFilterMethod": {
          "documentation": "<p>The filtering method passed to Amazon Transcribe.</p>",
          "shape": "TranscribeVocabularyFilterMethod"
        },
        "VocabularyFilterName": {
          "documentation": "<p>The name of the vocabulary filter passed to Amazon Transcribe.</p>",
          "shape": "String"
        },
        "VocabularyName": {
          "documentation": "<p>The name of the vocabulary passed to Amazon Transcribe.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ExternalMeetingId": {
      "max": 64,
      "min": 2,
      "sensitive": true,
      "type": "string"
    },
    "ExternalUserId": {
      "max": 64,
      "min": 2,
      "sensitive": true,
      "type": "string"
    },
    "ForbiddenException": {
      "documentation": "<p>The client is permanently forbidden from making the request.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GetAttendeeRequest": {
      "members": {
        "AttendeeId": {
          "documentation": "<p>The Amazon Chime SDK attendee ID.</p>",
          "location": "uri",
          "locationName": "AttendeeId",
          "shape": "GuidString"
        },
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "AttendeeId"
      ],
      "type": "structure"
    },
    "GetAttendeeResponse": {
      "members": {
        "Attendee": {
          "documentation": "<p>The Amazon Chime SDK attendee information.</p>",
          "shape": "Attendee"
        }
      },
      "type": "structure"
    },
    "GetMeetingRequest": {
      "members": {
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId"
      ],
      "type": "structure"
    },
    "GetMeetingResponse": {
      "members": {
        "Meeting": {
          "documentation": "<p>The Amazon Chime SDK meeting information.</p>",
          "shape": "Meeting"
        }
      },
      "type": "structure"
    },
    "GuidString": {
      "pattern": "[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}",
      "type": "string"
    },
    "JoinTokenString": {
      "max": 2048,
      "min": 2,
      "sensitive": true,
      "type": "string"
    },
    "LimitExceededException": {
      "documentation": "<p>The request exceeds the resource limit.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListAttendeesRequest": {
      "members": {
        "MaxResults": {
          "documentation": "<p>The maximum number of results to return in a single call.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "ResultMax"
        },
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        },
        "NextToken": {
          "documentation": "<p>The token to use to retrieve the next page of results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "MeetingId"
      ],
      "type": "structure"
    },
    "ListAttendeesResponse": {
      "members": {
        "Attendees": {
          "documentation": "<p>The Amazon Chime SDK attendee information.</p>",
          "shape": "AttendeeList"
        },
        "NextToken": {
          "documentation": "<p>The token to use to retrieve the next page of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "querystring",
          "locationName": "arn",
          "shape": "AmazonResourceName"
        }
      },
      "required": [
        "ResourceARN"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "Tags": {
          "documentation": "<p>The tags requested for the specified resource.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "MediaCapabilities": {
      "enum": [
        "SendReceive",
        "Send",
        "Receive",
        "None"
      ],
      "type": "string"
    },
    "MediaPlacement": {
      "documentation": "<p>A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.</p>",
      "members": {
        "AudioFallbackUrl": {
          "documentation": "<p>The audio fallback URL.</p>",
          "shape": "String"
        },
        "AudioHostUrl": {
          "documentation": "<p>The audio host URL.</p>",
          "shape": "String"
        },
        "EventIngestionUrl": {
          "documentation": "<p>The event ingestion URL.</p>",
          "shape": "String"
        },
        "ScreenDataUrl": {
          "documentation": "<p>The screen data URL.</p>",
          "shape": "String"
        },
        "ScreenSharingUrl": {
          "documentation": "<p>The screen sharing URL.</p>",
          "shape": "String"
        },
        "ScreenViewingUrl": {
          "documentation": "<p>The screen viewing URL.</p>",
          "shape": "String"
        },
        "SignalingUrl": {
          "documentation": "<p>The signaling URL.</p>",
          "shape": "String"
        },
        "TurnControlUrl": {
          "documentation": "<p>The turn control URL.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "MediaRegion": {
      "max": 64,
      "min": 2,
      "type": "string"
    },
    "Meeting": {
      "documentation": "<p>A meeting created using the Amazon Chime SDK.</p>",
      "members": {
        "ExternalMeetingId": {
          "documentation": "<p>The external meeting ID.</p>",
          "shape": "ExternalMeetingId"
        },
        "MediaPlacement": {
          "documentation": "<p>The media placement for the meeting.</p>",
          "shape": "MediaPlacement"
        },
        "MediaRegion": {
          "documentation": "<p>The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>, <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>, <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>, <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>, <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>, <code>us-west-1</code>, <code>us-west-2</code>.</p> <p>Available values in AWS GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>",
          "shape": "MediaRegion"
        },
        "MeetingArn": {
          "documentation": "<p>The ARN of the meeting.</p>",
          "shape": "AmazonResourceName"
        },
        "MeetingFeatures": {
          "documentation": "<p>The features available to a meeting, such as Amazon Voice Focus.</p>",
          "shape": "MeetingFeaturesConfiguration"
        },
        "MeetingHostId": {
          "documentation": "<p>Reserved.</p>",
          "shape": "ExternalUserId"
        },
        "MeetingId": {
          "documentation": "<p>The Amazon Chime SDK meeting ID.</p>",
          "shape": "GuidString"
        },
        "PrimaryMeetingId": {
          "documentation": "<p>When specified, replicates the media from the primary meeting to this meeting.</p>",
          "shape": "PrimaryMeetingId"
        },
        "TenantIds": {
          "documentation": "<p>Array of strings.</p>",
          "shape": "TenantIdList"
        }
      },
      "type": "structure"
    },
    "MeetingFeatureStatus": {
      "enum": [
        "AVAILABLE",
        "UNAVAILABLE"
      ],
      "type": "string"
    },
    "MeetingFeaturesConfiguration": {
      "documentation": "<p>The configuration settings of the features available to a meeting.&gt;</p>",
      "members": {
        "Audio": {
          "documentation": "<p>The configuration settings for the audio features available to a meeting. </p>",
          "shape": "AudioFeatures"
        }
      },
      "type": "structure"
    },
    "NotFoundException": {
      "documentation": "<p>One or more of the resources in the request does not exist in the system.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request ID associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "NotificationsConfiguration": {
      "documentation": "<p>The configuration for resource targets to receive notifications when meeting and attendee events occur.</p>",
      "members": {
        "LambdaFunctionArn": {
          "documentation": "<p>The ARN of the AWS Lambda function in the notifications configuration.</p>",
          "shape": "Arn"
        },
        "SnsTopicArn": {
          "documentation": "<p>The ARN of the SNS topic.</p>",
          "shape": "Arn"
        },
        "SqsQueueArn": {
          "documentation": "<p>The ARN of the SQS queue.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "PrimaryMeetingId": {
      "max": 64,
      "min": 2,
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The resource that you want to tag couldn't be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The ID of the resource that couldn't be found.</p>",
          "shape": "String"
        },
        "ResourceName": {
          "documentation": "<p>The name of the resource that couldn't be found.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "type": "structure"
    },
    "ResultMax": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "RetryAfterSeconds": {
      "type": "string"
    },
    "ServiceFailureException": {
      "documentation": "<p>The service encountered an unexpected error.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The ID of the failed request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ServiceUnavailableException": {
      "documentation": "<p>The service is currently unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "fault": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        },
        "RetryAfterSeconds": {
          "documentation": "<p>The number of seconds the caller should wait before retrying.</p>",
          "location": "header",
          "locationName": "Retry-After",
          "shape": "RetryAfterSeconds"
        }
      },
      "type": "structure"
    },
    "StartMeetingTranscriptionRequest": {
      "members": {
        "MeetingId": {
          "documentation": "<p>The unique ID of the meeting being transcribed.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        },
        "TranscriptionConfiguration": {
          "documentation": "<p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.</p>",
          "shape": "TranscriptionConfiguration"
        }
      },
      "required": [
        "MeetingId",
        "TranscriptionConfiguration"
      ],
      "type": "structure"
    },
    "StopMeetingTranscriptionRequest": {
      "members": {
        "MeetingId": {
          "documentation": "<p>The unique ID of the meeting for which you stop transcription.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId"
      ],
      "type": "structure"
    },
    "String": {
      "max": 4096,
      "type": "string"
    },
    "Tag": {
      "documentation": "<p>A key-value pair that you define.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The tag's key.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>The tag's value.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagList": {
      "max": 50,
      "member": {
        "shape": "Tag"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the resource.</p>",
          "shape": "AmazonResourceName"
        },
        "Tags": {
          "documentation": "<p>Lists the requested tags.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceARN",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "[\\s\\w+-=\\.:/@]*",
      "type": "string"
    },
    "TenantId": {
      "max": 256,
      "min": 2,
      "pattern": "^(?!.*?(.)\\1{3})[-_!@#$a-zA-Z0-9]*$",
      "type": "string"
    },
    "TenantIdList": {
      "max": 5,
      "member": {
        "shape": "TenantId"
      },
      "min": 1,
      "type": "list"
    },
    "ThrottlingException": {
      "documentation": "<p>The number of customer requests exceeds the request rate limit.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The ID of the request that exceeded the throttling limit.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TooManyTagsException": {
      "documentation": "<p>Too many tags were added to the specified resource.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The ID of the request that contains too many tags.</p>",
          "shape": "String"
        },
        "ResourceName": {
          "documentation": "<p>The name of the resource that received too many tags.</p>",
          "shape": "AmazonResourceName"
        }
      },
      "type": "structure"
    },
    "TranscribeContentIdentificationType": {
      "enum": [
        "PII"
      ],
      "type": "string"
    },
    "TranscribeContentRedactionType": {
      "enum": [
        "PII"
      ],
      "type": "string"
    },
    "TranscribeLanguageCode": {
      "enum": [
        "en-US",
        "en-GB",
        "es-US",
        "fr-CA",
        "fr-FR",
        "en-AU",
        "it-IT",
        "de-DE",
        "pt-BR",
        "ja-JP",
        "ko-KR",
        "zh-CN"
      ],
      "type": "string"
    },
    "TranscribeLanguageModelName": {
      "max": 200,
      "min": 1,
      "pattern": "^[0-9a-zA-Z._-]+",
      "type": "string"
    },
    "TranscribeLanguageOptions": {
      "max": 200,
      "min": 1,
      "pattern": "^[a-zA-Z-,]+",
      "type": "string"
    },
    "TranscribeMedicalContentIdentificationType": {
      "enum": [
        "PHI"
      ],
      "type": "string"
    },
    "TranscribeMedicalLanguageCode": {
      "enum": [
        "en-US"
      ],
      "type": "string"
    },
    "TranscribeMedicalRegion": {
      "enum": [
        "us-east-1",
        "us-east-2",
        "us-west-2",
        "ap-southeast-2",
        "ca-central-1",
        "eu-west-1",
        "auto"
      ],
      "type": "string"
    },
    "TranscribeMedicalSpecialty": {
      "enum": [
        "PRIMARYCARE",
        "CARDIOLOGY",
        "NEUROLOGY",
        "ONCOLOGY",
        "RADIOLOGY",
        "UROLOGY"
      ],
      "type": "string"
    },
    "TranscribeMedicalType": {
      "enum": [
        "CONVERSATION",
        "DICTATION"
      ],
      "type": "string"
    },
    "TranscribePartialResultsStability": {
      "enum": [
        "low",
        "medium",
        "high"
      ],
      "type": "string"
    },
    "TranscribePiiEntityTypes": {
      "max": 300,
      "min": 1,
      "pattern": "^[A-Z_, ]+",
      "type": "string"
    },
    "TranscribeRegion": {
      "enum": [
        "us-east-2",
        "us-east-1",
        "us-west-2",
        "ap-northeast-2",
        "ap-southeast-2",
        "ap-northeast-1",
        "ca-central-1",
        "eu-central-1",
        "eu-west-1",
        "eu-west-2",
        "sa-east-1",
        "auto",
        "us-gov-west-1"
      ],
      "type": "string"
    },
    "TranscribeVocabularyFilterMethod": {
      "enum": [
        "remove",
        "mask",
        "tag"
      ],
      "type": "string"
    },
    "TranscriptionConfiguration": {
      "documentation": "<p>The configuration for the current transcription operation. Must contain <code>EngineTranscribeSettings</code> or <code>EngineTranscribeMedicalSettings</code>.</p>",
      "members": {
        "EngineTranscribeMedicalSettings": {
          "documentation": "<p>The transcription configuration settings passed to Amazon Transcribe Medical.</p>",
          "shape": "EngineTranscribeMedicalSettings"
        },
        "EngineTranscribeSettings": {
          "documentation": "<p>The transcription configuration settings passed to Amazon Transcribe.</p>",
          "shape": "EngineTranscribeSettings"
        }
      },
      "type": "structure"
    },
    "UnauthorizedException": {
      "documentation": "<p>The user isn't authorized to request a resource.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UnprocessableEntityException": {
      "documentation": "<p>The request was well-formed but was unable to be followed due to semantic errors.</p>",
      "error": {
        "httpStatusCode": 422
      },
      "exception": true,
      "members": {
        "Code": {
          "shape": "String"
        },
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The request id associated with the call responsible for the exception.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceARN": {
          "documentation": "<p>The ARN of the resource that you're removing tags from.</p>",
          "shape": "AmazonResourceName"
        },
        "TagKeys": {
          "documentation": "<p>The tag keys being removed from the resources.</p>",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceARN",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateAttendeeCapabilitiesRequest": {
      "members": {
        "AttendeeId": {
          "documentation": "<p>The ID of the attendee associated with the update request.</p>",
          "location": "uri",
          "locationName": "AttendeeId",
          "shape": "GuidString"
        },
        "Capabilities": {
          "documentation": "<p>The capabilties that you want to update.</p>",
          "shape": "AttendeeCapabilities"
        },
        "MeetingId": {
          "documentation": "<p>The ID of the meeting associated with the update request.</p>",
          "location": "uri",
          "locationName": "MeetingId",
          "shape": "GuidString"
        }
      },
      "required": [
        "MeetingId",
        "AttendeeId",
        "Capabilities"
      ],
      "type": "structure"
    },
    "UpdateAttendeeCapabilitiesResponse": {
      "members": {
        "Attendee": {
          "documentation": "<p>The updated attendee data.</p>",
          "shape": "Attendee"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
