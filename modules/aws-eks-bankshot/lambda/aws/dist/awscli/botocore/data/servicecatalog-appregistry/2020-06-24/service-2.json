{
  "documentation": "<p> Amazon Web Services Service Catalog AppRegistry enables organizations to understand the application context of their Amazon Web Services resources. AppRegistry provides a repository of your applications, their resources, and the application metadata that you use within your enterprise.</p>",
  "metadata": {
    "apiVersion": "2020-06-24",
    "endpointPrefix": "servicecatalog-appregistry",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "AppRegistry",
    "serviceFullName": "AWS Service Catalog App Registry",
    "serviceId": "Service Catalog AppRegistry",
    "signatureVersion": "v4",
    "signingName": "servicecatalog",
    "uid": "AWS242AppRegistry-2020-06-24"
  },
  "operations": {
    "AssociateAttributeGroup": {
      "documentation": "<p>Associates an attribute group with an application to augment the application's metadata with the group's attributes. This feature enables applications to be described with user-defined details that are machine-readable, such as third-party integrations.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/applications/{application}/attribute-groups/{attributeGroup}"
      },
      "input": {
        "shape": "AssociateAttributeGroupRequest"
      },
      "name": "AssociateAttributeGroup",
      "output": {
        "shape": "AssociateAttributeGroupResponse"
      }
    },
    "AssociateResource": {
      "documentation": "<p>Associates a resource with an application. Both the resource and the application can be specified either by ID or name.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/applications/{application}/resources/{resourceType}/{resource}"
      },
      "input": {
        "shape": "AssociateResourceRequest"
      },
      "name": "AssociateResource",
      "output": {
        "shape": "AssociateResourceResponse"
      }
    },
    "CreateApplication": {
      "documentation": "<p>Creates a new application that is the top-level node in a hierarchy of related cloud resource abstractions.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/applications",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateApplicationRequest"
      },
      "name": "CreateApplication",
      "output": {
        "shape": "CreateApplicationResponse"
      }
    },
    "CreateAttributeGroup": {
      "documentation": "<p>Creates a new attribute group as a container for user-defined attributes. This feature enables users to have full control over their cloud application's metadata in a rich machine-readable format to facilitate integration with automated workflows and third-party tools.</p>",
      "errors": [
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/attribute-groups",
        "responseCode": 201
      },
      "input": {
        "shape": "CreateAttributeGroupRequest"
      },
      "name": "CreateAttributeGroup",
      "output": {
        "shape": "CreateAttributeGroupResponse"
      }
    },
    "DeleteApplication": {
      "documentation": "<p>Deletes an application that is specified either by its application ID or name. All associated attribute groups and resources must be disassociated from it before deleting an application.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{application}"
      },
      "input": {
        "shape": "DeleteApplicationRequest"
      },
      "name": "DeleteApplication",
      "output": {
        "shape": "DeleteApplicationResponse"
      }
    },
    "DeleteAttributeGroup": {
      "documentation": "<p>Deletes an attribute group, specified either by its attribute group ID or name.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/attribute-groups/{attributeGroup}"
      },
      "input": {
        "shape": "DeleteAttributeGroupRequest"
      },
      "name": "DeleteAttributeGroup",
      "output": {
        "shape": "DeleteAttributeGroupResponse"
      }
    },
    "DisassociateAttributeGroup": {
      "documentation": "<p>Disassociates an attribute group from an application to remove the extra attributes contained in the attribute group from the application's metadata. This operation reverts <code>AssociateAttributeGroup</code>.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{application}/attribute-groups/{attributeGroup}"
      },
      "input": {
        "shape": "DisassociateAttributeGroupRequest"
      },
      "name": "DisassociateAttributeGroup",
      "output": {
        "shape": "DisassociateAttributeGroupResponse"
      }
    },
    "DisassociateResource": {
      "documentation": "<p>Disassociates a resource from application. Both the resource and the application can be specified either by ID or name.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/applications/{application}/resources/{resourceType}/{resource}"
      },
      "input": {
        "shape": "DisassociateResourceRequest"
      },
      "name": "DisassociateResource",
      "output": {
        "shape": "DisassociateResourceResponse"
      }
    },
    "GetApplication": {
      "documentation": "<p>Retrieves metadata information about one of your applications. The application can be specified either by its unique ID or by its name (which is unique within one account in one region at a given point in time). Specify by ID in automated workflows if you want to make sure that the exact same application is returned or a <code>ResourceNotFoundException</code> is thrown, avoiding the ABA addressing problem.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{application}"
      },
      "input": {
        "shape": "GetApplicationRequest"
      },
      "name": "GetApplication",
      "output": {
        "shape": "GetApplicationResponse"
      }
    },
    "GetAssociatedResource": {
      "documentation": "<p>Gets the resource associated with the application.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{application}/resources/{resourceType}/{resource}"
      },
      "idempotent": true,
      "input": {
        "shape": "GetAssociatedResourceRequest"
      },
      "name": "GetAssociatedResource",
      "output": {
        "shape": "GetAssociatedResourceResponse"
      }
    },
    "GetAttributeGroup": {
      "documentation": "<p>Retrieves an attribute group, either by its name or its ID. The attribute group can be specified either by its unique ID or by its name.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/attribute-groups/{attributeGroup}"
      },
      "input": {
        "shape": "GetAttributeGroupRequest"
      },
      "name": "GetAttributeGroup",
      "output": {
        "shape": "GetAttributeGroupResponse"
      }
    },
    "ListApplications": {
      "documentation": "<p>Retrieves a list of all of your applications. Results are paginated.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications"
      },
      "idempotent": true,
      "input": {
        "shape": "ListApplicationsRequest"
      },
      "name": "ListApplications",
      "output": {
        "shape": "ListApplicationsResponse"
      }
    },
    "ListAssociatedAttributeGroups": {
      "documentation": "<p>Lists all attribute groups that are associated with specified application. Results are paginated.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{application}/attribute-groups"
      },
      "idempotent": true,
      "input": {
        "shape": "ListAssociatedAttributeGroupsRequest"
      },
      "name": "ListAssociatedAttributeGroups",
      "output": {
        "shape": "ListAssociatedAttributeGroupsResponse"
      }
    },
    "ListAssociatedResources": {
      "documentation": "<p>Lists all resources that are associated with specified application. Results are paginated.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{application}/resources"
      },
      "idempotent": true,
      "input": {
        "shape": "ListAssociatedResourcesRequest"
      },
      "name": "ListAssociatedResources",
      "output": {
        "shape": "ListAssociatedResourcesResponse"
      }
    },
    "ListAttributeGroups": {
      "documentation": "<p>Lists all attribute groups which you have access to. Results are paginated.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/attribute-groups"
      },
      "idempotent": true,
      "input": {
        "shape": "ListAttributeGroupsRequest"
      },
      "name": "ListAttributeGroups",
      "output": {
        "shape": "ListAttributeGroupsResponse"
      }
    },
    "ListAttributeGroupsForApplication": {
      "documentation": "<p>Lists the details of all attribute groups associated with a specific application. The results display in pages.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/applications/{application}/attribute-group-details"
      },
      "idempotent": true,
      "input": {
        "shape": "ListAttributeGroupsForApplicationRequest"
      },
      "name": "ListAttributeGroupsForApplication",
      "output": {
        "shape": "ListAttributeGroupsForApplicationResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists all of the tags on the resource.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "SyncResource": {
      "documentation": "<p>Syncs the resource with current AppRegistry records.</p> <p>Specifically, the resource\u2019s AppRegistry system tags sync with its associated application. We remove the resource's AppRegistry system tags if it does not associate with the application. The caller must have permissions to read and update the resource.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/sync/{resourceType}/{resource}"
      },
      "input": {
        "shape": "SyncResourceRequest"
      },
      "name": "SyncResource",
      "output": {
        "shape": "SyncResourceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns one or more tags (key-value pairs) to the specified resource.</p> <p>Each tag consists of a key and an optional value. If a tag with the same key is already associated with the resource, this action updates its value.</p> <p>This operation returns an empty response if the call was successful.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes tags from a resource.</p> <p>This operation returns an empty response if the call was successful.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateApplication": {
      "documentation": "<p>Updates an existing application with new attributes.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/applications/{application}"
      },
      "input": {
        "shape": "UpdateApplicationRequest"
      },
      "name": "UpdateApplication",
      "output": {
        "shape": "UpdateApplicationResponse"
      }
    },
    "UpdateAttributeGroup": {
      "documentation": "<p>Updates an existing attribute group with new details. </p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PATCH",
        "requestUri": "/attribute-groups/{attributeGroup}"
      },
      "input": {
        "shape": "UpdateAttributeGroupRequest"
      },
      "name": "UpdateAttributeGroup",
      "output": {
        "shape": "UpdateAttributeGroupResponse"
      }
    }
  },
  "shapes": {
    "Application": {
      "documentation": "<p>Represents a Amazon Web Services Service Catalog AppRegistry application that is the top-level node in a hierarchy of related cloud resource abstractions.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
          "shape": "ApplicationArn"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the application.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The identifier of the application.</p>",
          "shape": "ApplicationId"
        },
        "lastUpdateTime": {
          "documentation": "<p> The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs you can use to associate with the application.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ApplicationArn": {
      "pattern": "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/applications/[a-z0-9]+",
      "type": "string"
    },
    "ApplicationId": {
      "max": 26,
      "min": 26,
      "pattern": "[a-z0-9]+",
      "type": "string"
    },
    "ApplicationSpecifier": {
      "max": 256,
      "min": 1,
      "pattern": "[-.\\w]+",
      "type": "string"
    },
    "ApplicationSummaries": {
      "member": {
        "shape": "ApplicationSummary"
      },
      "type": "list"
    },
    "ApplicationSummary": {
      "documentation": "<p>Summary of a Amazon Web Services Service Catalog AppRegistry application.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
          "shape": "ApplicationArn"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the application.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The identifier of the application.</p>",
          "shape": "ApplicationId"
        },
        "lastUpdateTime": {
          "documentation": "<p> The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "Arn": {
      "max": 1600,
      "min": 1,
      "pattern": "arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)",
      "type": "string"
    },
    "AssociateAttributeGroupRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "attributeGroup": {
          "documentation": "<p>The name or ID of the attribute group that holds the attributes to describe the application.</p>",
          "location": "uri",
          "locationName": "attributeGroup",
          "shape": "AttributeGroupSpecifier"
        }
      },
      "required": [
        "application",
        "attributeGroup"
      ],
      "type": "structure"
    },
    "AssociateAttributeGroupResponse": {
      "members": {
        "applicationArn": {
          "documentation": "<p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>",
          "shape": "ApplicationArn"
        },
        "attributeGroupArn": {
          "documentation": "<p>The Amazon resource name (ARN) of the attribute group that contains the application's new attributes.</p>",
          "shape": "AttributeGroupArn"
        }
      },
      "type": "structure"
    },
    "AssociateResourceRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "resource": {
          "documentation": "<p>The name or ID of the resource of which the application will be associated.</p>",
          "location": "uri",
          "locationName": "resource",
          "shape": "ResourceSpecifier"
        },
        "resourceType": {
          "documentation": "<p>The type of resource of which the application will be associated.</p>",
          "location": "uri",
          "locationName": "resourceType",
          "shape": "ResourceType"
        }
      },
      "required": [
        "application",
        "resourceType",
        "resource"
      ],
      "type": "structure"
    },
    "AssociateResourceResponse": {
      "members": {
        "applicationArn": {
          "documentation": "<p>The Amazon resource name (ARN) of the application that was augmented with attributes.</p>",
          "shape": "ApplicationArn"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "AssociationCount": {
      "min": 0,
      "type": "integer"
    },
    "AttributeGroup": {
      "documentation": "<p>Represents a Amazon Web Services Service Catalog AppRegistry attribute group that is rich metadata which describes an application and its components.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>",
          "shape": "AttributeGroupArn"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the attribute group that the user provides.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The globally unique attribute group identifier of the attribute group.</p>",
          "shape": "AttributeGroupId"
        },
        "lastUpdateTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the attribute group.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs you can use to associate with the attribute group.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "AttributeGroupArn": {
      "pattern": "arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:/attribute-groups/[a-z0-9]+",
      "type": "string"
    },
    "AttributeGroupDetails": {
      "documentation": "<p> The details related to a specific AttributeGroup. </p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the attribute group.</p>",
          "shape": "AttributeGroupArn"
        },
        "id": {
          "documentation": "<p>The unique identifier of the attribute group.</p>",
          "shape": "AttributeGroupId"
        },
        "name": {
          "documentation": "<p>The name of the attribute group. </p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "AttributeGroupDetailsList": {
      "member": {
        "shape": "AttributeGroupDetails"
      },
      "type": "list"
    },
    "AttributeGroupId": {
      "max": 26,
      "min": 26,
      "pattern": "[a-z0-9]+",
      "type": "string"
    },
    "AttributeGroupIds": {
      "member": {
        "shape": "AttributeGroupId"
      },
      "type": "list"
    },
    "AttributeGroupSpecifier": {
      "max": 256,
      "min": 1,
      "pattern": "[-.\\w]+",
      "type": "string"
    },
    "AttributeGroupSummaries": {
      "member": {
        "shape": "AttributeGroupSummary"
      },
      "type": "list"
    },
    "AttributeGroupSummary": {
      "documentation": "<p>Summary of a Amazon Web Services Service Catalog AppRegistry attribute group.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>",
          "shape": "AttributeGroupArn"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the attribute group that the user provides.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The globally unique attribute group identifier of the attribute group.</p>",
          "shape": "AttributeGroupId"
        },
        "lastUpdateTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the attribute group.</p>",
          "shape": "Name"
        }
      },
      "type": "structure"
    },
    "Attributes": {
      "max": 8000,
      "min": 1,
      "pattern": "[\\u0009\\u000A\\u000D\\u0020-\\u00FF]+",
      "type": "string"
    },
    "ClientToken": {
      "max": 128,
      "min": 1,
      "pattern": "[a-zA-Z0-9][a-zA-Z0-9_-]*",
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>There was a conflict when processing the request (for example, a resource with the given name already exists within the account).</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CreateApplicationRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description of the application.</p>",
          "shape": "Description"
        },
        "name": {
          "documentation": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs you can use to associate with the application.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "name",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateApplicationResponse": {
      "members": {
        "application": {
          "documentation": "<p>Information about the application.</p>",
          "shape": "Application"
        }
      },
      "type": "structure"
    },
    "CreateAttributeGroupRequest": {
      "members": {
        "attributes": {
          "documentation": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>",
          "shape": "Attributes"
        },
        "clientToken": {
          "documentation": "<p>A unique identifier that you provide to ensure idempotency. If you retry a request that completed successfully using the same client token and the same parameters, the retry succeeds without performing any further actions. If you retry a successful request using the same client token, but one or more of the parameters are different, the retry fails.</p>",
          "idempotencyToken": true,
          "shape": "ClientToken"
        },
        "description": {
          "documentation": "<p>The description of the attribute group that the user provides.</p>",
          "shape": "Description"
        },
        "name": {
          "documentation": "<p>The name of the attribute group.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs you can use to associate with the attribute group.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "name",
        "attributes",
        "clientToken"
      ],
      "type": "structure"
    },
    "CreateAttributeGroupResponse": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>Information about the attribute group.</p>",
          "shape": "AttributeGroup"
        }
      },
      "type": "structure"
    },
    "DeleteApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "DeleteApplicationResponse": {
      "members": {
        "application": {
          "documentation": "<p>Information about the deleted application.</p>",
          "shape": "ApplicationSummary"
        }
      },
      "type": "structure"
    },
    "DeleteAttributeGroupRequest": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>The name or ID of the attribute group that holds the attributes to describe the application.</p>",
          "location": "uri",
          "locationName": "attributeGroup",
          "shape": "AttributeGroupSpecifier"
        }
      },
      "required": [
        "attributeGroup"
      ],
      "type": "structure"
    },
    "DeleteAttributeGroupResponse": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>Information about the deleted attribute group.</p>",
          "shape": "AttributeGroupSummary"
        }
      },
      "type": "structure"
    },
    "Description": {
      "max": 1024,
      "type": "string"
    },
    "DisassociateAttributeGroupRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "attributeGroup": {
          "documentation": "<p>The name or ID of the attribute group that holds the attributes to describe the application.</p>",
          "location": "uri",
          "locationName": "attributeGroup",
          "shape": "AttributeGroupSpecifier"
        }
      },
      "required": [
        "application",
        "attributeGroup"
      ],
      "type": "structure"
    },
    "DisassociateAttributeGroupResponse": {
      "members": {
        "applicationArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application.</p>",
          "shape": "ApplicationArn"
        },
        "attributeGroupArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the attribute group.</p>",
          "shape": "AttributeGroupArn"
        }
      },
      "type": "structure"
    },
    "DisassociateResourceRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "resource": {
          "documentation": "<p>The name or ID of the resource.</p>",
          "location": "uri",
          "locationName": "resource",
          "shape": "ResourceSpecifier"
        },
        "resourceType": {
          "documentation": "<p>The type of the resource that is being disassociated.</p>",
          "location": "uri",
          "locationName": "resourceType",
          "shape": "ResourceType"
        }
      },
      "required": [
        "application",
        "resourceType",
        "resource"
      ],
      "type": "structure"
    },
    "DisassociateResourceResponse": {
      "members": {
        "applicationArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application.</p>",
          "shape": "ApplicationArn"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "GetApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "GetApplicationResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application across services.</p>",
          "shape": "ApplicationArn"
        },
        "associatedResourceCount": {
          "documentation": "<p>The number of top-level resources that were registered as part of this application.</p>",
          "shape": "AssociationCount"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment when the application was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the application.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The identifier of the application.</p>",
          "shape": "ApplicationId"
        },
        "integrations": {
          "documentation": "<p>The information about the integration of the application with other services, such as Resource Groups.</p>",
          "shape": "Integrations"
        },
        "lastUpdateTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment when the application was last updated.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the application. The name must be unique in the region in which you are creating the application.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs associated with the application.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "GetAssociatedResourceRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "resource": {
          "documentation": "<p>The name or ID of the resource associated with the application.</p>",
          "location": "uri",
          "locationName": "resource",
          "shape": "ResourceSpecifier"
        },
        "resourceType": {
          "documentation": "<p>The type of resource associated with the application.</p>",
          "location": "uri",
          "locationName": "resourceType",
          "shape": "ResourceType"
        }
      },
      "required": [
        "application",
        "resourceType",
        "resource"
      ],
      "type": "structure"
    },
    "GetAssociatedResourceResponse": {
      "members": {
        "resource": {
          "documentation": "<p>The resource associated with the application.</p>",
          "shape": "Resource"
        }
      },
      "type": "structure"
    },
    "GetAttributeGroupRequest": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>The name or ID of the attribute group that holds the attributes to describe the application.</p>",
          "location": "uri",
          "locationName": "attributeGroup",
          "shape": "AttributeGroupSpecifier"
        }
      },
      "required": [
        "attributeGroup"
      ],
      "type": "structure"
    },
    "GetAttributeGroupResponse": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the attribute group across services.</p>",
          "shape": "AttributeGroupArn"
        },
        "attributes": {
          "documentation": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>",
          "shape": "Attributes"
        },
        "creationTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was created.</p>",
          "shape": "Timestamp"
        },
        "description": {
          "documentation": "<p>The description of the attribute group that the user provides.</p>",
          "shape": "Description"
        },
        "id": {
          "documentation": "<p>The identifier of the attribute group.</p>",
          "shape": "AttributeGroupId"
        },
        "lastUpdateTime": {
          "documentation": "<p>The ISO-8601 formatted timestamp of the moment the attribute group was last updated. This time is the same as the creationTime for a newly created attribute group.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The name of the attribute group.</p>",
          "shape": "Name"
        },
        "tags": {
          "documentation": "<p>Key-value pairs associated with the attribute group.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "Integrations": {
      "documentation": "<p> The information about the service integration.</p>",
      "members": {
        "resourceGroup": {
          "documentation": "<p> The information about the resource group integration.</p>",
          "shape": "ResourceGroup"
        }
      },
      "type": "structure"
    },
    "InternalServerException": {
      "documentation": "<p>The service is experiencing internal problems.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListApplicationsRequest": {
      "members": {
        "maxResults": {
          "box": true,
          "documentation": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListApplicationsResponse": {
      "members": {
        "applications": {
          "documentation": "<p>This list of applications.</p>",
          "shape": "ApplicationSummaries"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAssociatedAttributeGroupsRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "ListAssociatedAttributeGroupsResponse": {
      "members": {
        "attributeGroups": {
          "documentation": "<p>A list of attribute group IDs.</p>",
          "shape": "AttributeGroupIds"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAssociatedResourcesRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "ListAssociatedResourcesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "shape": "NextToken"
        },
        "resources": {
          "documentation": "<p>Information about the resources.</p>",
          "shape": "Resources"
        }
      },
      "type": "structure"
    },
    "ListAttributeGroupsForApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "maxResults": {
          "box": true,
          "documentation": "<p>The upper bound of the number of results to return. The value cannot exceed 25. If you omit this parameter, it defaults to 25. This value is optional.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>This token retrieves the next page of results after a previous API call.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "ListAttributeGroupsForApplicationResponse": {
      "members": {
        "attributeGroupsDetails": {
          "documentation": "<p> The details related to a specific AttributeGroup. </p>",
          "shape": "AttributeGroupDetailsList"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call.</p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAttributeGroupsRequest": {
      "members": {
        "maxResults": {
          "box": true,
          "documentation": "<p>The upper bound of the number of results to return (cannot exceed 25). If this parameter is omitted, it defaults to 25. This value is optional.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListAttributeGroupsResponse": {
      "members": {
        "attributeGroups": {
          "documentation": "<p>This list of attribute groups.</p>",
          "shape": "AttributeGroupSummaries"
        },
        "nextToken": {
          "documentation": "<p>The token to use to get the next page of results after a previous API call. </p>",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>The tags on the resource.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "Name": {
      "max": 256,
      "min": 1,
      "pattern": "[-.\\w]+",
      "type": "string"
    },
    "NextToken": {
      "max": 2024,
      "min": 1,
      "pattern": "[A-Za-z0-9+/=]+",
      "type": "string"
    },
    "Resource": {
      "documentation": "<p> The information about the resource.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) of the resource.</p>",
          "shape": "StackArn"
        },
        "associationTime": {
          "documentation": "<p>The time the resource was associated with the application.</p>",
          "shape": "Timestamp"
        },
        "integrations": {
          "documentation": "<p>The service integration information about the resource. </p>",
          "shape": "ResourceIntegrations"
        },
        "name": {
          "documentation": "<p>The name of the resource.</p>",
          "shape": "ResourceSpecifier"
        }
      },
      "type": "structure"
    },
    "ResourceGroup": {
      "documentation": "<p>The information about the resource group integration.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) of the resource group.</p>",
          "shape": "Arn"
        },
        "errorMessage": {
          "documentation": "<p>The error message that generates when the propagation process for the resource group fails.</p>",
          "shape": "String"
        },
        "state": {
          "documentation": "<p>The state of the propagation process for the resource group. The states includes:</p> <p> <code>CREATING </code>if the resource group is in the process of being created.</p> <p> <code>CREATE_COMPLETE</code> if the resource group was created successfully.</p> <p> <code>CREATE_FAILED</code> if the resource group failed to be created.</p> <p> <code>UPDATING</code> if the resource group is in the process of being updated.</p> <p> <code>UPDATE_COMPLETE</code> if the resource group updated successfully.</p> <p> <code>UPDATE_FAILED</code> if the resource group could not update successfully.</p>",
          "shape": "ResourceGroupState"
        }
      },
      "type": "structure"
    },
    "ResourceGroupState": {
      "enum": [
        "CREATING",
        "CREATE_COMPLETE",
        "CREATE_FAILED",
        "UPDATING",
        "UPDATE_COMPLETE",
        "UPDATE_FAILED"
      ],
      "type": "string"
    },
    "ResourceInfo": {
      "documentation": "<p>The information about the resource.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource across services.</p>",
          "shape": "StackArn"
        },
        "name": {
          "documentation": "<p>The name of the resource.</p>",
          "shape": "ResourceSpecifier"
        }
      },
      "type": "structure"
    },
    "ResourceIntegrations": {
      "documentation": "<p>The service integration information about the resource.</p>",
      "members": {
        "resourceGroup": {
          "documentation": "<p>The information about the integration of Resource Groups.</p>",
          "shape": "ResourceGroup"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource does not exist.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceSpecifier": {
      "max": 256,
      "min": 1,
      "pattern": "\\S+",
      "type": "string"
    },
    "ResourceType": {
      "enum": [
        "CFN_STACK"
      ],
      "type": "string"
    },
    "Resources": {
      "member": {
        "shape": "ResourceInfo"
      },
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The maximum number of resources per account has been reached.</p>",
      "error": {
        "httpStatusCode": 402
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "StackArn": {
      "pattern": "arn:aws[-a-z]*:cloudformation:[a-z]{2}(-gov)?-[a-z]+-\\d:\\d{12}:stack/[a-zA-Z][-A-Za-z0-9]{0,127}/[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}",
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "SyncAction": {
      "enum": [
        "START_SYNC",
        "NO_ACTION"
      ],
      "type": "string"
    },
    "SyncResourceRequest": {
      "members": {
        "resource": {
          "documentation": "<p>An entity you can work with and specify with a name or ID. Examples include an Amazon EC2 instance, an Amazon Web Services CloudFormation stack, or an Amazon S3 bucket.</p>",
          "location": "uri",
          "locationName": "resource",
          "shape": "ResourceSpecifier"
        },
        "resourceType": {
          "documentation": "<p>The type of resource of which the application will be associated.</p>",
          "location": "uri",
          "locationName": "resourceType",
          "shape": "ResourceType"
        }
      },
      "required": [
        "resourceType",
        "resource"
      ],
      "type": "structure"
    },
    "SyncResourceResponse": {
      "members": {
        "actionTaken": {
          "documentation": "<p>The results of the output if an application is associated with an ARN value, which could be <code>syncStarted</code> or None.</p>",
          "shape": "SyncAction"
        },
        "applicationArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the application.</p>",
          "shape": "ApplicationArn"
        },
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "(?!aws:)[a-zA-Z+-=._:/]+",
      "type": "string"
    },
    "TagKeys": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>The new or modified tags for the resource.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "pattern": "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*",
      "type": "string"
    },
    "Tags": {
      "key": {
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "Timestamp": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The Amazon resource name (ARN) that specifies the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "Arn"
        },
        "tagKeys": {
          "documentation": "<p>A list of the tag keys to remove from the specified resource.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeys"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateApplicationRequest": {
      "members": {
        "application": {
          "documentation": "<p>The name or ID of the application that will be updated.</p>",
          "location": "uri",
          "locationName": "application",
          "shape": "ApplicationSpecifier"
        },
        "description": {
          "documentation": "<p>The new description of the application.</p>",
          "shape": "Description"
        },
        "name": {
          "deprecated": true,
          "deprecatedMessage": "Name update for application is deprecated.",
          "documentation": "<p>Deprecated: The new name of the application. The name must be unique in the region in which you are updating the application. Please do not use this field as we have stopped supporting name updates.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "application"
      ],
      "type": "structure"
    },
    "UpdateApplicationResponse": {
      "members": {
        "application": {
          "documentation": "<p>The updated information of the application.</p>",
          "shape": "Application"
        }
      },
      "type": "structure"
    },
    "UpdateAttributeGroupRequest": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>The name or ID of the attribute group that holds the attributes to describe the application.</p>",
          "location": "uri",
          "locationName": "attributeGroup",
          "shape": "AttributeGroupSpecifier"
        },
        "attributes": {
          "documentation": "<p>A JSON string in the form of nested key-value pairs that represent the attributes in the group and describes an application and its components.</p>",
          "shape": "Attributes"
        },
        "description": {
          "documentation": "<p>The description of the attribute group that the user provides.</p>",
          "shape": "Description"
        },
        "name": {
          "deprecated": true,
          "deprecatedMessage": "Name update for attribute group is deprecated.",
          "documentation": "<p>Deprecated: The new name of the attribute group. The name must be unique in the region in which you are updating the attribute group. Please do not use this field as we have stopped supporting name updates.</p>",
          "shape": "Name"
        }
      },
      "required": [
        "attributeGroup"
      ],
      "type": "structure"
    },
    "UpdateAttributeGroupResponse": {
      "members": {
        "attributeGroup": {
          "documentation": "<p>The updated information of the attribute group.</p>",
          "shape": "AttributeGroup"
        }
      },
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The request has invalid or missing parameters.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    }
  },
  "version": "2.0"
}
