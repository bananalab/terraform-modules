{
  "documentation": "<fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>",
  "metadata": {
    "apiVersion": "2018-04-01",
    "endpointPrefix": "quicksight",
    "jsonVersion": "1.0",
    "protocol": "rest-json",
    "serviceFullName": "Amazon QuickSight",
    "serviceId": "QuickSight",
    "signatureVersion": "v4",
    "uid": "quicksight-2018-04-01"
  },
  "operations": {
    "CancelIngestion": {
      "documentation": "<p>Cancels an ongoing ingestion of data into SPICE.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "CancelIngestionRequest"
      },
      "name": "CancelIngestion",
      "output": {
        "shape": "CancelIngestionResponse"
      }
    },
    "CreateAccountCustomization": {
      "documentation": "<p>Creates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, you can add a custom default theme by using the <code>CreateAccountCustomization</code> or <code>UpdateAccountCustomization</code> API operation. To further customize Amazon QuickSight by removing Amazon QuickSight sample assets and videos for all new users, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html\">Customizing Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> </p> <p>You can create customizations for your Amazon Web Services account or, if you specify a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace always override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation.</p> <p>Before you use the <code>CreateAccountCustomization</code> API operation to add a theme as the namespace default, make sure that you first share the theme with the namespace. If you don't share it with the namespace, the theme isn't visible to your users even if you make it the default theme. To check if the theme is shared, view the current permissions by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeThemePermissions.html\">DescribeThemePermissions</a> </code> API operation. To share the theme, grant permissions by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateThemePermissions.html\">UpdateThemePermissions</a> </code> API operation. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/customizations"
      },
      "input": {
        "shape": "CreateAccountCustomizationRequest"
      },
      "name": "CreateAccountCustomization",
      "output": {
        "shape": "CreateAccountCustomizationResponse"
      }
    },
    "CreateAccountSubscription": {
      "documentation": "<p>Creates an Amazon QuickSight account, or subscribes to Amazon QuickSight Q.</p> <p>The Amazon Web Services Region for the account is derived from what is configured in the CLI or SDK. This operation isn't supported in the US East (Ohio) Region, South America (Sao Paulo) Region, or Asia Pacific (Singapore) Region. </p> <p>Before you use this operation, make sure that you can connect to an existing Amazon Web Services account. If you don't have an Amazon Web Services account, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/setting-up-aws-sign-up.html\">Sign up for Amazon Web Services</a> in the <i>Amazon QuickSight User Guide</i>. The person who signs up for Amazon QuickSight needs to have the correct Identity and Access Management (IAM) permissions. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/iam-policy-examples.html\">IAM Policy Examples for Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>If your IAM policy includes both the <code>Subscribe</code> and <code>CreateAccountSubscription</code> actions, make sure that both actions are set to <code>Allow</code>. If either action is set to <code>Deny</code>, the <code>Deny</code> action prevails and your API call fails.</p> <p>You can't pass an existing IAM role to access other Amazon Web Services services using this API operation. To pass your existing IAM role to Amazon QuickSight, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html#security-create-iam-role\">Passing IAM roles to Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>You can't set default resource access on the new account from the Amazon QuickSight API. Instead, add default resource access from the Amazon QuickSight console. For more information about setting default resource access to Amazon Web Services services, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/scoping-policies-defaults.html\">Setting default resource access to Amazon Web Services services</a> in the <i>Amazon QuickSight User Guide</i>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/account/{AwsAccountId}"
      },
      "input": {
        "shape": "CreateAccountSubscriptionRequest"
      },
      "name": "CreateAccountSubscription",
      "output": {
        "shape": "CreateAccountSubscriptionResponse"
      }
    },
    "CreateAnalysis": {
      "documentation": "<p>Creates an analysis in Amazon QuickSight.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}"
      },
      "input": {
        "shape": "CreateAnalysisRequest"
      },
      "name": "CreateAnalysis",
      "output": {
        "shape": "CreateAnalysisResponse"
      }
    },
    "CreateDashboard": {
      "documentation": "<p>Creates a dashboard from a template. To first create a template, see the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html\">CreateTemplate</a> </code> API operation.</p> <p>A dashboard is an entity in Amazon QuickSight that identifies Amazon QuickSight reports, created from analyses. You can share Amazon QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. If you have the correct permissions, you can create a dashboard from a template that exists in a different Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "CreateDashboardRequest"
      },
      "name": "CreateDashboard",
      "output": {
        "shape": "CreateDashboardResponse"
      }
    },
    "CreateDataSet": {
      "documentation": "<p>Creates a dataset. This operation doesn't support datasets that include uploaded files as a source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sets"
      },
      "input": {
        "shape": "CreateDataSetRequest"
      },
      "name": "CreateDataSet",
      "output": {
        "shape": "CreateDataSetResponse"
      }
    },
    "CreateDataSource": {
      "documentation": "<p>Creates a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sources"
      },
      "input": {
        "shape": "CreateDataSourceRequest"
      },
      "name": "CreateDataSource",
      "output": {
        "shape": "CreateDataSourceResponse"
      }
    },
    "CreateFolder": {
      "documentation": "<p>Creates an empty shared folder.</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}"
      },
      "input": {
        "shape": "CreateFolderRequest"
      },
      "name": "CreateFolder",
      "output": {
        "shape": "CreateFolderResponse"
      }
    },
    "CreateFolderMembership": {
      "documentation": "<p>Adds an asset, such as a dashboard, analysis, or dataset into a folder.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}"
      },
      "input": {
        "shape": "CreateFolderMembershipRequest"
      },
      "name": "CreateFolderMembership",
      "output": {
        "shape": "CreateFolderMembershipResponse"
      }
    },
    "CreateGroup": {
      "documentation": "<p>Use the <code>CreateGroup</code> operation to create a group in Amazon QuickSight. You can create up to 10,000 groups in a namespace. If you want to create more than 10,000 groups in a namespace, contact AWS Support.</p> <p>The permissions resource is <code>arn:aws:quicksight:&lt;your-region&gt;:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups"
      },
      "input": {
        "shape": "CreateGroupRequest"
      },
      "name": "CreateGroup",
      "output": {
        "shape": "CreateGroupResponse"
      }
    },
    "CreateGroupMembership": {
      "documentation": "<p>Adds an Amazon QuickSight user to an Amazon QuickSight group. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}"
      },
      "input": {
        "shape": "CreateGroupMembershipRequest"
      },
      "name": "CreateGroupMembership",
      "output": {
        "shape": "CreateGroupMembershipResponse"
      }
    },
    "CreateIAMPolicyAssignment": {
      "documentation": "<p>Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight. Assignment names are unique per Amazon Web Services account. To avoid overwriting rules in other namespaces, use assignment names that are unique.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/"
      },
      "input": {
        "shape": "CreateIAMPolicyAssignmentRequest"
      },
      "name": "CreateIAMPolicyAssignment",
      "output": {
        "shape": "CreateIAMPolicyAssignmentResponse"
      }
    },
    "CreateIngestion": {
      "documentation": "<p>Creates and starts a new SPICE ingestion for a dataset. You can manually refresh datasets in an Enterprise edition account 32 times in a 24-hour period. You can manually refresh datasets in a Standard edition account 8 times in a 24-hour period. Each 24-hour period is measured starting 24 hours before the current date and time.</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href=\"http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/\">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the Amazon Web Services Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "CreateIngestionRequest"
      },
      "name": "CreateIngestion",
      "output": {
        "shape": "CreateIngestionResponse"
      }
    },
    "CreateNamespace": {
      "documentation": "<p>(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.</p> <p>A namespace allows you to isolate the Amazon QuickSight users and groups that are registered for that namespace. Users that access the namespace can share assets only with other users or groups in the same namespace. They can't see users and groups in other namespaces. You can create a namespace after your Amazon Web Services account is subscribed to Amazon QuickSight. The namespace must be unique within the Amazon Web Services account. By default, there is a limit of 100 namespaces per Amazon Web Services account. To increase your limit, create a ticket with Amazon Web Services Support. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}"
      },
      "input": {
        "shape": "CreateNamespaceRequest"
      },
      "name": "CreateNamespace",
      "output": {
        "shape": "CreateNamespaceResponse"
      }
    },
    "CreateTemplate": {
      "documentation": "<p>Creates a template from an existing Amazon QuickSight analysis or template. You can use the resulting template to create a dashboard.</p> <p>A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "CreateTemplateRequest"
      },
      "name": "CreateTemplate",
      "output": {
        "shape": "CreateTemplateResponse"
      }
    },
    "CreateTemplateAlias": {
      "documentation": "<p>Creates a template alias for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "CreateTemplateAliasRequest"
      },
      "name": "CreateTemplateAlias",
      "output": {
        "shape": "CreateTemplateAliasResponse"
      }
    },
    "CreateTheme": {
      "documentation": "<p>Creates a theme.</p> <p>A <i>theme</i> is set of configuration options for color and layout. Themes apply to analyses and dashboards. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}"
      },
      "input": {
        "shape": "CreateThemeRequest"
      },
      "name": "CreateTheme",
      "output": {
        "shape": "CreateThemeResponse"
      }
    },
    "CreateThemeAlias": {
      "documentation": "<p>Creates a theme alias for a theme.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "CreateThemeAliasRequest"
      },
      "name": "CreateThemeAlias",
      "output": {
        "shape": "CreateThemeAliasResponse"
      }
    },
    "DeleteAccountCustomization": {
      "documentation": "<p>Deletes all Amazon QuickSight customizations in this Amazon Web Services Region for the specified Amazon Web Services account and Amazon QuickSight namespace.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/customizations"
      },
      "input": {
        "shape": "DeleteAccountCustomizationRequest"
      },
      "name": "DeleteAccountCustomization",
      "output": {
        "shape": "DeleteAccountCustomizationResponse"
      }
    },
    "DeleteAnalysis": {
      "documentation": "<p>Deletes an analysis from Amazon QuickSight. You can optionally include a recovery window during which you can restore the analysis. If you don't specify a recovery window value, the operation defaults to 30 days. Amazon QuickSight attaches a <code>DeletionTime</code> stamp to the response that specifies the end of the recovery window. At the end of the recovery window, Amazon QuickSight deletes the analysis permanently.</p> <p>At any time before recovery window ends, you can use the <code>RestoreAnalysis</code> API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion of the analysis. The analysis remains visible in the API until it's deleted, so you can describe it but you can't make a template from it.</p> <p>An analysis that's scheduled for deletion isn't accessible in the Amazon QuickSight console. To access it in the console, restore it. Deleting an analysis doesn't delete the dashboards that you publish from it.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}"
      },
      "input": {
        "shape": "DeleteAnalysisRequest"
      },
      "name": "DeleteAnalysis",
      "output": {
        "shape": "DeleteAnalysisResponse"
      }
    },
    "DeleteDashboard": {
      "documentation": "<p>Deletes a dashboard.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "DeleteDashboardRequest"
      },
      "name": "DeleteDashboard",
      "output": {
        "shape": "DeleteDashboardResponse"
      }
    },
    "DeleteDataSet": {
      "documentation": "<p>Deletes a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "DeleteDataSetRequest"
      },
      "name": "DeleteDataSet",
      "output": {
        "shape": "DeleteDataSetResponse"
      }
    },
    "DeleteDataSource": {
      "documentation": "<p>Deletes the data source permanently. This operation breaks all the datasets that reference the deleted data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "DeleteDataSourceRequest"
      },
      "name": "DeleteDataSource",
      "output": {
        "shape": "DeleteDataSourceResponse"
      }
    },
    "DeleteFolder": {
      "documentation": "<p>Deletes an empty folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}"
      },
      "input": {
        "shape": "DeleteFolderRequest"
      },
      "name": "DeleteFolder",
      "output": {
        "shape": "DeleteFolderResponse"
      }
    },
    "DeleteFolderMembership": {
      "documentation": "<p>Removes an asset, such as a dashboard, analysis, or dataset, from a folder.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}"
      },
      "input": {
        "shape": "DeleteFolderMembershipRequest"
      },
      "name": "DeleteFolderMembership",
      "output": {
        "shape": "DeleteFolderMembershipResponse"
      }
    },
    "DeleteGroup": {
      "documentation": "<p>Removes a user group from Amazon QuickSight. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "DeleteGroupRequest"
      },
      "name": "DeleteGroup",
      "output": {
        "shape": "DeleteGroupResponse"
      }
    },
    "DeleteGroupMembership": {
      "documentation": "<p>Removes a user from a group so that the user is no longer a member of the group.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}"
      },
      "input": {
        "shape": "DeleteGroupMembershipRequest"
      },
      "name": "DeleteGroupMembership",
      "output": {
        "shape": "DeleteGroupMembershipResponse"
      }
    },
    "DeleteIAMPolicyAssignment": {
      "documentation": "<p>Deletes an existing IAM policy assignment.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "DeleteIAMPolicyAssignmentRequest"
      },
      "name": "DeleteIAMPolicyAssignment",
      "output": {
        "shape": "DeleteIAMPolicyAssignmentResponse"
      }
    },
    "DeleteNamespace": {
      "documentation": "<p>Deletes a namespace and the users and groups that are associated with the namespace. This is an asynchronous process. Assets including dashboards, analyses, datasets and data sources are not deleted. To delete these assets, you use the API operations for the relevant asset. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}"
      },
      "input": {
        "shape": "DeleteNamespaceRequest"
      },
      "name": "DeleteNamespace",
      "output": {
        "shape": "DeleteNamespaceResponse"
      }
    },
    "DeleteTemplate": {
      "documentation": "<p>Deletes a template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "DeleteTemplateRequest"
      },
      "name": "DeleteTemplate",
      "output": {
        "shape": "DeleteTemplateResponse"
      }
    },
    "DeleteTemplateAlias": {
      "documentation": "<p>Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DeleteTemplateAliasRequest"
      },
      "name": "DeleteTemplateAlias",
      "output": {
        "shape": "DeleteTemplateAliasResponse"
      }
    },
    "DeleteTheme": {
      "documentation": "<p>Deletes a theme.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}"
      },
      "input": {
        "shape": "DeleteThemeRequest"
      },
      "name": "DeleteTheme",
      "output": {
        "shape": "DeleteThemeResponse"
      }
    },
    "DeleteThemeAlias": {
      "documentation": "<p>Deletes the version of the theme that the specified theme alias points to. If you provide a specific alias, you delete the version of the theme that the alias points to.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DeleteThemeAliasRequest"
      },
      "name": "DeleteThemeAlias",
      "output": {
        "shape": "DeleteThemeAliasResponse"
      }
    },
    "DeleteUser": {
      "documentation": "<p>Deletes the Amazon QuickSight user that is associated with the identity of the Identity and Access Management (IAM) user or role that's making the call. The IAM user isn't deleted as a result of this call. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "DeleteUserRequest"
      },
      "name": "DeleteUser",
      "output": {
        "shape": "DeleteUserResponse"
      }
    },
    "DeleteUserByPrincipalId": {
      "documentation": "<p>Deletes a user identified by its principal ID. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}"
      },
      "input": {
        "shape": "DeleteUserByPrincipalIdRequest"
      },
      "name": "DeleteUserByPrincipalId",
      "output": {
        "shape": "DeleteUserByPrincipalIdResponse"
      }
    },
    "DescribeAccountCustomization": {
      "documentation": "<p>Describes the customizations associated with the provided Amazon Web Services account and Amazon Amazon QuickSight namespace in an Amazon Web Services Region. The Amazon QuickSight console evaluates which customizations to apply by running this API operation with the <code>Resolved</code> flag included. </p> <p>To determine what customizations display when you run this command, it can help to visualize the relationship of the entities involved. </p> <ul> <li> <p> <code>Amazon Web Services account</code> - The Amazon Web Services account exists at the top of the hierarchy. It has the potential to use all of the Amazon Web Services Regions and Amazon Web Services Services. When you subscribe to Amazon QuickSight, you choose one Amazon Web Services Region to use as your home Region. That's where your free SPICE capacity is located. You can use Amazon QuickSight in any supported Amazon Web Services Region. </p> </li> <li> <p> <code>Amazon Web Services Region</code> - In each Amazon Web Services Region where you sign in to Amazon QuickSight at least once, Amazon QuickSight acts as a separate instance of the same service. If you have a user directory, it resides in us-east-1, which is the US East (N. Virginia). Generally speaking, these users have access to Amazon QuickSight in any Amazon Web Services Region, unless they are constrained to a namespace. </p> <p>To run the command in a different Amazon Web Services Region, you change your Region settings. If you're using the CLI, you can use one of the following options:</p> <ul> <li> <p>Use <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html\">command line options</a>. </p> </li> <li> <p>Use <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html\">named profiles</a>. </p> </li> <li> <p>Run <code>aws configure</code> to change your default Amazon Web Services Region. Use Enter to key the same settings for your keys. For more information, see <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html\">Configuring the CLI</a>.</p> </li> </ul> </li> <li> <p> <code>Namespace</code> - A QuickSight namespace is a partition that contains users and assets (data sources, datasets, dashboards, and so on). To access assets that are in a specific namespace, users and groups must also be part of the same namespace. People who share a namespace are completely isolated from users and assets in other namespaces, even if they are in the same Amazon Web Services account and Amazon Web Services Region.</p> </li> <li> <p> <code>Applied customizations</code> - Within an Amazon Web Services Region, a set of Amazon QuickSight customizations can apply to an Amazon Web Services account or to a namespace. Settings that you apply to a namespace override settings that you apply to an Amazon Web Services account. All settings are isolated to a single Amazon Web Services Region. To apply them in other Amazon Web Services Regions, run the <code>CreateAccountCustomization</code> command in each Amazon Web Services Region where you want to apply the same customizations. </p> </li> </ul>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/customizations"
      },
      "input": {
        "shape": "DescribeAccountCustomizationRequest"
      },
      "name": "DescribeAccountCustomization",
      "output": {
        "shape": "DescribeAccountCustomizationResponse"
      }
    },
    "DescribeAccountSettings": {
      "documentation": "<p>Describes the settings that were used when your Amazon QuickSight subscription was first created in this Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/settings"
      },
      "input": {
        "shape": "DescribeAccountSettingsRequest"
      },
      "name": "DescribeAccountSettings",
      "output": {
        "shape": "DescribeAccountSettingsResponse"
      }
    },
    "DescribeAccountSubscription": {
      "documentation": "<p>Use the DescribeAccountSubscription operation to receive a description of a Amazon QuickSight account's subscription. A successful API call returns an <code>AccountInfo</code> object that includes an account's name, subscription status, authentication type, edition, and notification email address.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/account/{AwsAccountId}"
      },
      "input": {
        "shape": "DescribeAccountSubscriptionRequest"
      },
      "name": "DescribeAccountSubscription",
      "output": {
        "shape": "DescribeAccountSubscriptionResponse"
      }
    },
    "DescribeAnalysis": {
      "documentation": "<p>Provides a summary of the metadata for an analysis.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}"
      },
      "input": {
        "shape": "DescribeAnalysisRequest"
      },
      "name": "DescribeAnalysis",
      "output": {
        "shape": "DescribeAnalysisResponse"
      }
    },
    "DescribeAnalysisPermissions": {
      "documentation": "<p>Provides the read and write permissions for an analysis.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions"
      },
      "input": {
        "shape": "DescribeAnalysisPermissionsRequest"
      },
      "name": "DescribeAnalysisPermissions",
      "output": {
        "shape": "DescribeAnalysisPermissionsResponse"
      }
    },
    "DescribeDashboard": {
      "documentation": "<p>Provides a summary for a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "DescribeDashboardRequest"
      },
      "name": "DescribeDashboard",
      "output": {
        "shape": "DescribeDashboardResponse"
      }
    },
    "DescribeDashboardPermissions": {
      "documentation": "<p>Describes read and write permissions for a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions"
      },
      "input": {
        "shape": "DescribeDashboardPermissionsRequest"
      },
      "name": "DescribeDashboardPermissions",
      "output": {
        "shape": "DescribeDashboardPermissionsResponse"
      }
    },
    "DescribeDataSet": {
      "documentation": "<p>Describes a dataset. This operation doesn't support datasets that include uploaded files as a source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "DescribeDataSetRequest"
      },
      "name": "DescribeDataSet",
      "output": {
        "shape": "DescribeDataSetResponse"
      }
    },
    "DescribeDataSetPermissions": {
      "documentation": "<p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions"
      },
      "input": {
        "shape": "DescribeDataSetPermissionsRequest"
      },
      "name": "DescribeDataSetPermissions",
      "output": {
        "shape": "DescribeDataSetPermissionsResponse"
      }
    },
    "DescribeDataSource": {
      "documentation": "<p>Describes a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "DescribeDataSourceRequest"
      },
      "name": "DescribeDataSource",
      "output": {
        "shape": "DescribeDataSourceResponse"
      }
    },
    "DescribeDataSourcePermissions": {
      "documentation": "<p>Describes the resource permissions for a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions"
      },
      "input": {
        "shape": "DescribeDataSourcePermissionsRequest"
      },
      "name": "DescribeDataSourcePermissions",
      "output": {
        "shape": "DescribeDataSourcePermissionsResponse"
      }
    },
    "DescribeFolder": {
      "documentation": "<p>Describes a folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}"
      },
      "input": {
        "shape": "DescribeFolderRequest"
      },
      "name": "DescribeFolder",
      "output": {
        "shape": "DescribeFolderResponse"
      }
    },
    "DescribeFolderPermissions": {
      "documentation": "<p>Describes permissions for a folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/permissions"
      },
      "input": {
        "shape": "DescribeFolderPermissionsRequest"
      },
      "name": "DescribeFolderPermissions",
      "output": {
        "shape": "DescribeFolderPermissionsResponse"
      }
    },
    "DescribeFolderResolvedPermissions": {
      "documentation": "<p>Describes the folder resolved permissions. Permissions consists of both folder direct permissions and the inherited permissions from the ancestor folders.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/resolved-permissions"
      },
      "input": {
        "shape": "DescribeFolderResolvedPermissionsRequest"
      },
      "name": "DescribeFolderResolvedPermissions",
      "output": {
        "shape": "DescribeFolderResolvedPermissionsResponse"
      }
    },
    "DescribeGroup": {
      "documentation": "<p>Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "DescribeGroupRequest"
      },
      "name": "DescribeGroup",
      "output": {
        "shape": "DescribeGroupResponse"
      }
    },
    "DescribeGroupMembership": {
      "documentation": "<p>Use the <code>DescribeGroupMembership</code> operation to determine if a user is a member of the specified group. If the user exists and is a member of the specified group, an associated <code>GroupMember</code> object is returned.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}"
      },
      "input": {
        "shape": "DescribeGroupMembershipRequest"
      },
      "name": "DescribeGroupMembership",
      "output": {
        "shape": "DescribeGroupMembershipResponse"
      }
    },
    "DescribeIAMPolicyAssignment": {
      "documentation": "<p>Describes an existing IAM policy assignment, as specified by the assignment name.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "DescribeIAMPolicyAssignmentRequest"
      },
      "name": "DescribeIAMPolicyAssignment",
      "output": {
        "shape": "DescribeIAMPolicyAssignmentResponse"
      }
    },
    "DescribeIngestion": {
      "documentation": "<p>Describes a SPICE ingestion.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}"
      },
      "input": {
        "shape": "DescribeIngestionRequest"
      },
      "name": "DescribeIngestion",
      "output": {
        "shape": "DescribeIngestionResponse"
      }
    },
    "DescribeIpRestriction": {
      "documentation": "<p>Provides a summary and status of IP rules.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/ip-restriction"
      },
      "input": {
        "shape": "DescribeIpRestrictionRequest"
      },
      "name": "DescribeIpRestriction",
      "output": {
        "shape": "DescribeIpRestrictionResponse"
      }
    },
    "DescribeNamespace": {
      "documentation": "<p>Describes the current namespace.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}"
      },
      "input": {
        "shape": "DescribeNamespaceRequest"
      },
      "name": "DescribeNamespace",
      "output": {
        "shape": "DescribeNamespaceResponse"
      }
    },
    "DescribeTemplate": {
      "documentation": "<p>Describes a template's metadata.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "DescribeTemplateRequest"
      },
      "name": "DescribeTemplate",
      "output": {
        "shape": "DescribeTemplateResponse"
      }
    },
    "DescribeTemplateAlias": {
      "documentation": "<p>Describes the template alias for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DescribeTemplateAliasRequest"
      },
      "name": "DescribeTemplateAlias",
      "output": {
        "shape": "DescribeTemplateAliasResponse"
      }
    },
    "DescribeTemplatePermissions": {
      "documentation": "<p>Describes read and write permissions on a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions"
      },
      "input": {
        "shape": "DescribeTemplatePermissionsRequest"
      },
      "name": "DescribeTemplatePermissions",
      "output": {
        "shape": "DescribeTemplatePermissionsResponse"
      }
    },
    "DescribeTheme": {
      "documentation": "<p>Describes a theme.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}"
      },
      "input": {
        "shape": "DescribeThemeRequest"
      },
      "name": "DescribeTheme",
      "output": {
        "shape": "DescribeThemeResponse"
      }
    },
    "DescribeThemeAlias": {
      "documentation": "<p>Describes the alias for a theme.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "DescribeThemeAliasRequest"
      },
      "name": "DescribeThemeAlias",
      "output": {
        "shape": "DescribeThemeAliasResponse"
      }
    },
    "DescribeThemePermissions": {
      "documentation": "<p>Describes the read and write permissions for a theme.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/permissions"
      },
      "input": {
        "shape": "DescribeThemePermissionsRequest"
      },
      "name": "DescribeThemePermissions",
      "output": {
        "shape": "DescribeThemePermissionsResponse"
      }
    },
    "DescribeUser": {
      "documentation": "<p>Returns information about a user, given the user name. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "DescribeUserRequest"
      },
      "name": "DescribeUser",
      "output": {
        "shape": "DescribeUserResponse"
      }
    },
    "GenerateEmbedUrlForAnonymousUser": {
      "documentation": "<p>Generates an embed URL that you can use to embed an Amazon QuickSight dashboard or visual in your website, without having to register any reader users. Before you use this action, make sure that you have configured the dashboards and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForAnonymousUser.html#QS-GenerateEmbedUrlForAnonymousUser-request-SessionLifetimeInMinutes\">SessionLifetimeInMinutes</a> </code> parameter. The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html\">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html\">Amazon QuickSight Developer Portal</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "SessionLifetimeInMinutesInvalidException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "UnsupportedPricingPlanException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/embed-url/anonymous-user"
      },
      "input": {
        "shape": "GenerateEmbedUrlForAnonymousUserRequest"
      },
      "name": "GenerateEmbedUrlForAnonymousUser",
      "output": {
        "shape": "GenerateEmbedUrlForAnonymousUserResponse"
      }
    },
    "GenerateEmbedUrlForRegisteredUser": {
      "documentation": "<p>Generates an embed URL that you can use to embed an Amazon QuickSight experience in your website. This action can be used for any type of user registered in an Amazon QuickSight account. Before you use this action, make sure that you have configured the relevant Amazon QuickSight resource and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html#QS-GenerateEmbedUrlForRegisteredUser-request-SessionLifetimeInMinutes\">SessionLifetimeInMinutes</a> </code> parameter.</p> <p>The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html\">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html\">Amazon QuickSight Developer Portal</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "QuickSightUserNotFoundException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "SessionLifetimeInMinutesInvalidException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "UnsupportedPricingPlanException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/embed-url/registered-user"
      },
      "input": {
        "shape": "GenerateEmbedUrlForRegisteredUserRequest"
      },
      "name": "GenerateEmbedUrlForRegisteredUser",
      "output": {
        "shape": "GenerateEmbedUrlForRegisteredUserResponse"
      }
    },
    "GetDashboardEmbedUrl": {
      "documentation": "<p>Generates a temporary session URL and authorization code(bearer token) that you can use to embed an Amazon QuickSight read-only dashboard in your website or application. Before you use this command, make sure that you have configured the dashboards and permissions. </p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user's browser. The following rules apply to the generated URL:</p> <ul> <li> <p>They must be used together.</p> </li> <li> <p>They can be used one time only.</p> </li> <li> <p>They are valid for 5 minutes after you run this command.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> <li> <p>The resulting user session is valid for 15 minutes (default) up to 10 hours (maximum). You can use the optional <code>SessionLifetimeInMinutes</code> parameter to customize session duration.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-deprecated.html\">Embedding Analytics Using GetDashboardEmbedUrl</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html\">Amazon QuickSight Developer Portal</a>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "DomainNotWhitelistedException"
        },
        {
          "shape": "QuickSightUserNotFoundException"
        },
        {
          "shape": "IdentityTypeNotSupportedException"
        },
        {
          "shape": "SessionLifetimeInMinutesInvalidException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "UnsupportedPricingPlanException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url"
      },
      "input": {
        "shape": "GetDashboardEmbedUrlRequest"
      },
      "name": "GetDashboardEmbedUrl",
      "output": {
        "shape": "GetDashboardEmbedUrlResponse"
      }
    },
    "GetSessionEmbedUrl": {
      "documentation": "<p>Generates a session URL and authorization code that you can use to embed the Amazon Amazon QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who access an embedded Amazon QuickSight console need belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html\">UpdateUser</a> </code> API operation. Use <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html\">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html\">Embedding Analytics</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html\">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "QuickSightUserNotFoundException"
        },
        {
          "shape": "SessionLifetimeInMinutesInvalidException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/session-embed-url"
      },
      "input": {
        "shape": "GetSessionEmbedUrlRequest"
      },
      "name": "GetSessionEmbedUrl",
      "output": {
        "shape": "GetSessionEmbedUrlResponse"
      }
    },
    "ListAnalyses": {
      "documentation": "<p>Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/analyses"
      },
      "input": {
        "shape": "ListAnalysesRequest"
      },
      "name": "ListAnalyses",
      "output": {
        "shape": "ListAnalysesResponse"
      }
    },
    "ListDashboardVersions": {
      "documentation": "<p>Lists all the versions of the dashboards in the Amazon QuickSight subscription.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions"
      },
      "input": {
        "shape": "ListDashboardVersionsRequest"
      },
      "name": "ListDashboardVersions",
      "output": {
        "shape": "ListDashboardVersionsResponse"
      }
    },
    "ListDashboards": {
      "documentation": "<p>Lists dashboards in an Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/dashboards"
      },
      "input": {
        "shape": "ListDashboardsRequest"
      },
      "name": "ListDashboards",
      "output": {
        "shape": "ListDashboardsResponse"
      }
    },
    "ListDataSets": {
      "documentation": "<p>Lists all of the datasets belonging to the current Amazon Web Services account in an Amazon Web Services Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets"
      },
      "input": {
        "shape": "ListDataSetsRequest"
      },
      "name": "ListDataSets",
      "output": {
        "shape": "ListDataSetsResponse"
      }
    },
    "ListDataSources": {
      "documentation": "<p>Lists data sources in current Amazon Web Services Region that belong to this Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sources"
      },
      "input": {
        "shape": "ListDataSourcesRequest"
      },
      "name": "ListDataSources",
      "output": {
        "shape": "ListDataSourcesResponse"
      }
    },
    "ListFolderMembers": {
      "documentation": "<p>List all assets (<code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>) in a folder. </p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/members"
      },
      "input": {
        "shape": "ListFolderMembersRequest"
      },
      "name": "ListFolderMembers",
      "output": {
        "shape": "ListFolderMembersResponse"
      }
    },
    "ListFolders": {
      "documentation": "<p>Lists all folders in an account.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/folders"
      },
      "input": {
        "shape": "ListFoldersRequest"
      },
      "name": "ListFolders",
      "output": {
        "shape": "ListFoldersResponse"
      }
    },
    "ListGroupMemberships": {
      "documentation": "<p>Lists member users in a group.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members"
      },
      "input": {
        "shape": "ListGroupMembershipsRequest"
      },
      "name": "ListGroupMemberships",
      "output": {
        "shape": "ListGroupMembershipsResponse"
      }
    },
    "ListGroups": {
      "documentation": "<p>Lists all user groups in Amazon QuickSight. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups"
      },
      "input": {
        "shape": "ListGroupsRequest"
      },
      "name": "ListGroups",
      "output": {
        "shape": "ListGroupsResponse"
      }
    },
    "ListIAMPolicyAssignments": {
      "documentation": "<p>Lists IAM policy assignments in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments"
      },
      "input": {
        "shape": "ListIAMPolicyAssignmentsRequest"
      },
      "name": "ListIAMPolicyAssignments",
      "output": {
        "shape": "ListIAMPolicyAssignmentsResponse"
      }
    },
    "ListIAMPolicyAssignmentsForUser": {
      "documentation": "<p>Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments"
      },
      "input": {
        "shape": "ListIAMPolicyAssignmentsForUserRequest"
      },
      "name": "ListIAMPolicyAssignmentsForUser",
      "output": {
        "shape": "ListIAMPolicyAssignmentsForUserResponse"
      }
    },
    "ListIngestions": {
      "documentation": "<p>Lists the history of SPICE ingestions for a dataset.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions"
      },
      "input": {
        "shape": "ListIngestionsRequest"
      },
      "name": "ListIngestions",
      "output": {
        "shape": "ListIngestionsResponse"
      }
    },
    "ListNamespaces": {
      "documentation": "<p>Lists the namespaces for the specified Amazon Web Services account. This operation doesn't list deleted namespaces.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces"
      },
      "input": {
        "shape": "ListNamespacesRequest"
      },
      "name": "ListNamespaces",
      "output": {
        "shape": "ListNamespacesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags assigned to a resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTemplateAliases": {
      "documentation": "<p>Lists all the aliases of a template.</p>",
      "errors": [
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases"
      },
      "input": {
        "shape": "ListTemplateAliasesRequest"
      },
      "name": "ListTemplateAliases",
      "output": {
        "shape": "ListTemplateAliasesResponse"
      }
    },
    "ListTemplateVersions": {
      "documentation": "<p>Lists all the versions of the templates in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/versions"
      },
      "input": {
        "shape": "ListTemplateVersionsRequest"
      },
      "name": "ListTemplateVersions",
      "output": {
        "shape": "ListTemplateVersionsResponse"
      }
    },
    "ListTemplates": {
      "documentation": "<p>Lists all the templates in the current Amazon QuickSight account.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/templates"
      },
      "input": {
        "shape": "ListTemplatesRequest"
      },
      "name": "ListTemplates",
      "output": {
        "shape": "ListTemplatesResponse"
      }
    },
    "ListThemeAliases": {
      "documentation": "<p>Lists all the aliases of a theme.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases"
      },
      "input": {
        "shape": "ListThemeAliasesRequest"
      },
      "name": "ListThemeAliases",
      "output": {
        "shape": "ListThemeAliasesResponse"
      }
    },
    "ListThemeVersions": {
      "documentation": "<p>Lists all the versions of the themes in the current Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/versions"
      },
      "input": {
        "shape": "ListThemeVersionsRequest"
      },
      "name": "ListThemeVersions",
      "output": {
        "shape": "ListThemeVersionsResponse"
      }
    },
    "ListThemes": {
      "documentation": "<p>Lists all the themes in the current Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/themes"
      },
      "input": {
        "shape": "ListThemesRequest"
      },
      "name": "ListThemes",
      "output": {
        "shape": "ListThemesResponse"
      }
    },
    "ListUserGroups": {
      "documentation": "<p>Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups"
      },
      "input": {
        "shape": "ListUserGroupsRequest"
      },
      "name": "ListUserGroups",
      "output": {
        "shape": "ListUserGroupsResponse"
      }
    },
    "ListUsers": {
      "documentation": "<p>Returns a list of all of the Amazon QuickSight users belonging to this account. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users"
      },
      "input": {
        "shape": "ListUsersRequest"
      },
      "name": "ListUsers",
      "output": {
        "shape": "ListUsersResponse"
      }
    },
    "RegisterUser": {
      "documentation": "<p>Creates an Amazon QuickSight user, whose identity is associated with the Identity and Access Management (IAM) identity or role specified in the request. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users"
      },
      "input": {
        "shape": "RegisterUserRequest"
      },
      "name": "RegisterUser",
      "output": {
        "shape": "RegisterUserResponse"
      }
    },
    "RestoreAnalysis": {
      "documentation": "<p>Restores an analysis.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/restore/analyses/{AnalysisId}"
      },
      "input": {
        "shape": "RestoreAnalysisRequest"
      },
      "name": "RestoreAnalysis",
      "output": {
        "shape": "RestoreAnalysisResponse"
      }
    },
    "SearchAnalyses": {
      "documentation": "<p>Searches for analyses that belong to the user specified in the filter.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/search/analyses"
      },
      "input": {
        "shape": "SearchAnalysesRequest"
      },
      "name": "SearchAnalyses",
      "output": {
        "shape": "SearchAnalysesResponse"
      }
    },
    "SearchDashboards": {
      "documentation": "<p>Searches for dashboards that belong to a user. </p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/search/dashboards"
      },
      "input": {
        "shape": "SearchDashboardsRequest"
      },
      "name": "SearchDashboards",
      "output": {
        "shape": "SearchDashboardsResponse"
      }
    },
    "SearchFolders": {
      "documentation": "<p>Searches the subfolders in a folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/search/folders"
      },
      "input": {
        "shape": "SearchFoldersRequest"
      },
      "name": "SearchFolders",
      "output": {
        "shape": "SearchFoldersResponse"
      }
    },
    "SearchGroups": {
      "documentation": "<p>Use the <code>SearchGroups</code> operation to search groups in a specified Amazon QuickSight namespace using the supplied filters.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidNextTokenException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups-search"
      },
      "input": {
        "shape": "SearchGroupsRequest"
      },
      "name": "SearchGroups",
      "output": {
        "shape": "SearchGroupsResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns one or more tags (key-value pairs) to the specified Amazon QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. Amazon QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for Amazon QuickSight works in a similar way to tagging for other Amazon Web Services services, except for the following:</p> <ul> <li> <p>You can't use tags to track costs for Amazon QuickSight. This isn't possible because you can't tag the resources that Amazon QuickSight costs are based on, for example Amazon QuickSight storage capacity (SPICE), number of users, type of users, and usage metrics.</p> </li> <li> <p>Amazon QuickSight doesn't currently support the tag editor for Resource Groups.</p> </li> </ul>",
      "errors": [
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Removes a tag or tags from a resource.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/resources/{ResourceArn}/tags"
      },
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateAccountCustomization": {
      "documentation": "<p>Updates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, the only customization that you can use is a theme.</p> <p>You can use customizations for your Amazon Web Services account or, if you specify a namespace, for a Amazon QuickSight namespace instead. Customizations that apply to a namespace override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/customizations"
      },
      "input": {
        "shape": "UpdateAccountCustomizationRequest"
      },
      "name": "UpdateAccountCustomization",
      "output": {
        "shape": "UpdateAccountCustomizationResponse"
      }
    },
    "UpdateAccountSettings": {
      "documentation": "<p>Updates the Amazon QuickSight settings in your Amazon Web Services account.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/settings"
      },
      "input": {
        "shape": "UpdateAccountSettingsRequest"
      },
      "name": "UpdateAccountSettings",
      "output": {
        "shape": "UpdateAccountSettingsResponse"
      }
    },
    "UpdateAnalysis": {
      "documentation": "<p>Updates an analysis in Amazon QuickSight</p>",
      "errors": [
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}"
      },
      "input": {
        "shape": "UpdateAnalysisRequest"
      },
      "name": "UpdateAnalysis",
      "output": {
        "shape": "UpdateAnalysisResponse"
      }
    },
    "UpdateAnalysisPermissions": {
      "documentation": "<p>Updates the read and write permissions for an analysis.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions"
      },
      "input": {
        "shape": "UpdateAnalysisPermissionsRequest"
      },
      "name": "UpdateAnalysisPermissions",
      "output": {
        "shape": "UpdateAnalysisPermissionsResponse"
      }
    },
    "UpdateDashboard": {
      "documentation": "<p>Updates a dashboard in an Amazon Web Services account.</p> <note> <p>Updating a Dashboard creates a new dashboard version but does not immediately publish the new version. You can update the published version of a dashboard by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateDashboardPublishedVersion.html\">UpdateDashboardPublishedVersion</a> </code> API operation.</p> </note>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}"
      },
      "input": {
        "shape": "UpdateDashboardRequest"
      },
      "name": "UpdateDashboard",
      "output": {
        "shape": "UpdateDashboardResponse"
      }
    },
    "UpdateDashboardPermissions": {
      "documentation": "<p>Updates read and write permissions on a dashboard.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions"
      },
      "input": {
        "shape": "UpdateDashboardPermissionsRequest"
      },
      "name": "UpdateDashboardPermissions",
      "output": {
        "shape": "UpdateDashboardPermissionsResponse"
      }
    },
    "UpdateDashboardPublishedVersion": {
      "documentation": "<p>Updates the published version of a dashboard.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}"
      },
      "input": {
        "shape": "UpdateDashboardPublishedVersionRequest"
      },
      "name": "UpdateDashboardPublishedVersion",
      "output": {
        "shape": "UpdateDashboardPublishedVersionResponse"
      }
    },
    "UpdateDataSet": {
      "documentation": "<p>Updates a dataset. This operation doesn't support datasets that include uploaded files as a source. Partial updates are not supported by this operation.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}"
      },
      "input": {
        "shape": "UpdateDataSetRequest"
      },
      "name": "UpdateDataSet",
      "output": {
        "shape": "UpdateDataSetResponse"
      }
    },
    "UpdateDataSetPermissions": {
      "documentation": "<p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions"
      },
      "input": {
        "shape": "UpdateDataSetPermissionsRequest"
      },
      "name": "UpdateDataSetPermissions",
      "output": {
        "shape": "UpdateDataSetPermissionsResponse"
      }
    },
    "UpdateDataSource": {
      "documentation": "<p>Updates a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}"
      },
      "input": {
        "shape": "UpdateDataSourceRequest"
      },
      "name": "UpdateDataSource",
      "output": {
        "shape": "UpdateDataSourceResponse"
      }
    },
    "UpdateDataSourcePermissions": {
      "documentation": "<p>Updates the permissions to a data source.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions"
      },
      "input": {
        "shape": "UpdateDataSourcePermissionsRequest"
      },
      "name": "UpdateDataSourcePermissions",
      "output": {
        "shape": "UpdateDataSourcePermissionsResponse"
      }
    },
    "UpdateFolder": {
      "documentation": "<p>Updates the name of a folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}"
      },
      "input": {
        "shape": "UpdateFolderRequest"
      },
      "name": "UpdateFolder",
      "output": {
        "shape": "UpdateFolderResponse"
      }
    },
    "UpdateFolderPermissions": {
      "documentation": "<p>Updates permissions of a folder.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/folders/{FolderId}/permissions"
      },
      "input": {
        "shape": "UpdateFolderPermissionsRequest"
      },
      "name": "UpdateFolderPermissions",
      "output": {
        "shape": "UpdateFolderPermissionsResponse"
      }
    },
    "UpdateGroup": {
      "documentation": "<p>Changes a group description. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}"
      },
      "input": {
        "shape": "UpdateGroupRequest"
      },
      "name": "UpdateGroup",
      "output": {
        "shape": "UpdateGroupResponse"
      }
    },
    "UpdateIAMPolicyAssignment": {
      "documentation": "<p>Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request. This overwrites all of the users included in <code>Identities</code>. </p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConcurrentUpdatingException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}"
      },
      "input": {
        "shape": "UpdateIAMPolicyAssignmentRequest"
      },
      "name": "UpdateIAMPolicyAssignment",
      "output": {
        "shape": "UpdateIAMPolicyAssignmentResponse"
      }
    },
    "UpdateIpRestriction": {
      "documentation": "<p>Updates the content and status of IP rules. To use this operation, you need to provide the entire map of rules. You can use the <code>DescribeIpRestriction</code> operation to get the current rule map.</p>",
      "errors": [
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/accounts/{AwsAccountId}/ip-restriction"
      },
      "input": {
        "shape": "UpdateIpRestrictionRequest"
      },
      "name": "UpdateIpRestriction",
      "output": {
        "shape": "UpdateIpRestrictionResponse"
      }
    },
    "UpdatePublicSharingSettings": {
      "documentation": "<p>Use the <code>UpdatePublicSharingSettings</code> operation to turn on or turn off the public sharing settings of an Amazon QuickSight dashboard.</p> <p>To use this operation, turn on session capacity pricing for your Amazon QuickSight account.</p> <p>Before you can turn on public sharing on your account, make sure to give public sharing permissions to an administrative user in the Identity and Access Management (IAM) console. For more information on using IAM with Amazon QuickSight, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html\">Using Amazon QuickSight with IAM</a> in the <i>Amazon QuickSight User Guide</i>.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedPricingPlanException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/public-sharing-settings"
      },
      "input": {
        "shape": "UpdatePublicSharingSettingsRequest"
      },
      "name": "UpdatePublicSharingSettings",
      "output": {
        "shape": "UpdatePublicSharingSettingsResponse"
      }
    },
    "UpdateTemplate": {
      "documentation": "<p>Updates a template from an existing Amazon QuickSight analysis or another template.</p>",
      "errors": [
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}"
      },
      "input": {
        "shape": "UpdateTemplateRequest"
      },
      "name": "UpdateTemplate",
      "output": {
        "shape": "UpdateTemplateResponse"
      }
    },
    "UpdateTemplateAlias": {
      "documentation": "<p>Updates the template alias of a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "UpdateTemplateAliasRequest"
      },
      "name": "UpdateTemplateAlias",
      "output": {
        "shape": "UpdateTemplateAliasResponse"
      }
    },
    "UpdateTemplatePermissions": {
      "documentation": "<p>Updates the resource permissions for a template.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions"
      },
      "input": {
        "shape": "UpdateTemplatePermissionsRequest"
      },
      "name": "UpdateTemplatePermissions",
      "output": {
        "shape": "UpdateTemplatePermissionsResponse"
      }
    },
    "UpdateTheme": {
      "documentation": "<p>Updates a theme.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "LimitExceededException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}"
      },
      "input": {
        "shape": "UpdateThemeRequest"
      },
      "name": "UpdateTheme",
      "output": {
        "shape": "UpdateThemeResponse"
      }
    },
    "UpdateThemeAlias": {
      "documentation": "<p>Updates an alias of a theme.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceExistsException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}"
      },
      "input": {
        "shape": "UpdateThemeAliasRequest"
      },
      "name": "UpdateThemeAlias",
      "output": {
        "shape": "UpdateThemeAliasResponse"
      }
    },
    "UpdateThemePermissions": {
      "documentation": "<p>Updates the resource permissions for a theme. Permissions apply to the action to grant or revoke permissions on, for example <code>\"quicksight:DescribeTheme\"</code>.</p> <p>Theme permissions apply in groupings. Valid groupings include the following for the three levels of permissions, which are user, owner, or no permissions: </p> <ul> <li> <p>User</p> <ul> <li> <p> <code>\"quicksight:DescribeTheme\"</code> </p> </li> <li> <p> <code>\"quicksight:DescribeThemeAlias\"</code> </p> </li> <li> <p> <code>\"quicksight:ListThemeAliases\"</code> </p> </li> <li> <p> <code>\"quicksight:ListThemeVersions\"</code> </p> </li> </ul> </li> <li> <p>Owner</p> <ul> <li> <p> <code>\"quicksight:DescribeTheme\"</code> </p> </li> <li> <p> <code>\"quicksight:DescribeThemeAlias\"</code> </p> </li> <li> <p> <code>\"quicksight:ListThemeAliases\"</code> </p> </li> <li> <p> <code>\"quicksight:ListThemeVersions\"</code> </p> </li> <li> <p> <code>\"quicksight:DeleteTheme\"</code> </p> </li> <li> <p> <code>\"quicksight:UpdateTheme\"</code> </p> </li> <li> <p> <code>\"quicksight:CreateThemeAlias\"</code> </p> </li> <li> <p> <code>\"quicksight:DeleteThemeAlias\"</code> </p> </li> <li> <p> <code>\"quicksight:UpdateThemeAlias\"</code> </p> </li> <li> <p> <code>\"quicksight:UpdateThemePermissions\"</code> </p> </li> <li> <p> <code>\"quicksight:DescribeThemePermissions\"</code> </p> </li> </ul> </li> <li> <p>To specify no permissions, omit the permissions list.</p> </li> </ul>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "UnsupportedUserEditionException"
        },
        {
          "shape": "InternalFailureException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/themes/{ThemeId}/permissions"
      },
      "input": {
        "shape": "UpdateThemePermissionsRequest"
      },
      "name": "UpdateThemePermissions",
      "output": {
        "shape": "UpdateThemePermissionsResponse"
      }
    },
    "UpdateUser": {
      "documentation": "<p>Updates an Amazon QuickSight user.</p>",
      "errors": [
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidParameterValueException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "PreconditionNotMetException"
        },
        {
          "shape": "InternalFailureException"
        },
        {
          "shape": "ResourceUnavailableException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}"
      },
      "input": {
        "shape": "UpdateUserRequest"
      },
      "name": "UpdateUser",
      "output": {
        "shape": "UpdateUserResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You don't have access to this item. The provided credentials couldn't be validated. You might not be authorized to carry out the request. Make sure that your account is authorized to use the Amazon QuickSight service, that your policies have the correct permissions, and that you are using the correct access keys.</p>",
      "error": {
        "httpStatusCode": 401
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AccountCustomization": {
      "documentation": "<p>The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.</p>",
      "members": {
        "DefaultEmailCustomizationTemplate": {
          "documentation": "<p>The default email customization template.</p>",
          "shape": "Arn"
        },
        "DefaultTheme": {
          "documentation": "<p>The default theme for this Amazon QuickSight subscription.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "AccountInfo": {
      "documentation": "<p>A structure that contains the following account information elements:</p> <ul> <li> <p>Your Amazon QuickSight account name.</p> </li> <li> <p>The edition of Amazon QuickSight that your account is using.</p> </li> <li> <p>The notification email address that is associated with the Amazon QuickSight account. </p> </li> <li> <p>The authentication type of the Amazon QuickSight account.</p> </li> <li> <p>The status of the Amazon QuickSight account's subscription.</p> </li> </ul>",
      "members": {
        "AccountName": {
          "documentation": "<p>The account name that you provided for the Amazon QuickSight subscription in your Amazon Web Services account. You create this name when you sign up for Amazon QuickSight. It's unique over all of Amazon Web Services, and it appears only when users sign in.</p>",
          "shape": "String"
        },
        "AccountSubscriptionStatus": {
          "documentation": "<p>The status of your account subscription.</p>",
          "shape": "String"
        },
        "AuthenticationType": {
          "documentation": "<p>The way that your Amazon QuickSight account is authenticated.</p>",
          "shape": "String"
        },
        "Edition": {
          "documentation": "<p>The edition of your Amazon QuickSight account.</p>",
          "shape": "Edition"
        },
        "NotificationEmail": {
          "documentation": "<p>The email address that will be used for Amazon QuickSight to send notifications regarding your Amazon Web Services account or Amazon QuickSight subscription.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AccountSettings": {
      "documentation": "<p>The Amazon QuickSight settings associated with your Amazon Web Services account.</p>",
      "members": {
        "AccountName": {
          "documentation": "<p>The \"account name\" you provided for the Amazon QuickSight subscription in your Amazon Web Services account. You create this name when you sign up for Amazon QuickSight. It is unique in all of Amazon Web Services and it appears only when users sign in.</p>",
          "shape": "String"
        },
        "DefaultNamespace": {
          "documentation": "<p>The default Amazon QuickSight namespace for your Amazon Web Services account. </p>",
          "shape": "Namespace"
        },
        "Edition": {
          "documentation": "<p>The edition of Amazon QuickSight that you're currently subscribed to: Enterprise edition or Standard edition.</p>",
          "shape": "Edition"
        },
        "NotificationEmail": {
          "documentation": "<p>The main notification email for your Amazon QuickSight subscription.</p>",
          "shape": "String"
        },
        "PublicSharingEnabled": {
          "documentation": "<p>A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account. For more information about turning on public sharing, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdatePublicSharingSettings.html\">UpdatePublicSharingSettings</a>.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "ActionList": {
      "max": 16,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "ActiveIAMPolicyAssignment": {
      "documentation": "<p>The active Identity and Access Management (IAM) policy assignment.</p>",
      "members": {
        "AssignmentName": {
          "documentation": "<p>A name for the IAM policy assignment.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "PolicyArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "ActiveIAMPolicyAssignmentList": {
      "member": {
        "shape": "ActiveIAMPolicyAssignment"
      },
      "type": "list"
    },
    "AdHocFilteringOption": {
      "documentation": "<p>An ad hoc (one-time) filtering option.</p>",
      "members": {
        "AvailabilityStatus": {
          "documentation": "<p>Availability status.</p>",
          "shape": "DashboardBehavior"
        }
      },
      "type": "structure"
    },
    "AdditionalDashboardIdList": {
      "max": 20,
      "member": {
        "shape": "RestrictiveResourceId"
      },
      "min": 1,
      "type": "list"
    },
    "AliasName": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)",
      "type": "string"
    },
    "AmazonElasticsearchParameters": {
      "documentation": "<p>The parameters for OpenSearch.</p>",
      "members": {
        "Domain": {
          "documentation": "<p>The OpenSearch domain.</p>",
          "shape": "Domain"
        }
      },
      "required": [
        "Domain"
      ],
      "type": "structure"
    },
    "AmazonOpenSearchParameters": {
      "documentation": "<p>The parameters for OpenSearch.</p>",
      "members": {
        "Domain": {
          "documentation": "<p>The OpenSearch domain.</p>",
          "shape": "Domain"
        }
      },
      "required": [
        "Domain"
      ],
      "type": "structure"
    },
    "Analysis": {
      "documentation": "<p>Metadata structure for an analysis in Amazon QuickSight</p>",
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the analysis.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that the analysis was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetArns": {
          "documentation": "<p>The ARNs of the datasets of the analysis.</p>",
          "shape": "DataSetArnsList"
        },
        "Errors": {
          "documentation": "<p>Errors associated with the analysis.</p>",
          "shape": "AnalysisErrorList"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The time that the analysis was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The descriptive name of the analysis.</p>",
          "shape": "AnalysisName"
        },
        "Sheets": {
          "documentation": "<p>A list of the associated sheets with the unique identifier and name of each sheet.</p>",
          "shape": "SheetList"
        },
        "Status": {
          "documentation": "<p>Status associated with the analysis.</p>",
          "shape": "ResourceStatus"
        },
        "ThemeArn": {
          "documentation": "<p>The ARN of the theme of the analysis.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "AnalysisError": {
      "documentation": "<p>Analysis error.</p>",
      "members": {
        "Message": {
          "documentation": "<p>The message associated with the analysis error.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>The type of the analysis error.</p>",
          "shape": "AnalysisErrorType"
        }
      },
      "type": "structure"
    },
    "AnalysisErrorList": {
      "member": {
        "shape": "AnalysisError"
      },
      "min": 1,
      "type": "list"
    },
    "AnalysisErrorType": {
      "enum": [
        "ACCESS_DENIED",
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "PARAMETER_VALUE_INCOMPATIBLE",
        "PARAMETER_TYPE_INVALID",
        "PARAMETER_NOT_FOUND",
        "COLUMN_TYPE_MISMATCH",
        "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
        "COLUMN_REPLACEMENT_MISSING"
      ],
      "type": "string"
    },
    "AnalysisFilterAttribute": {
      "enum": [
        "QUICKSIGHT_USER"
      ],
      "type": "string"
    },
    "AnalysisName": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "AnalysisSearchFilter": {
      "documentation": "<p>A filter that you apply when searching for one or more analyses.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the value that you want to use as a filter, for example <code>\"Name\": \"QUICKSIGHT_USER\"</code>.</p>",
          "shape": "AnalysisFilterAttribute"
        },
        "Operator": {
          "documentation": "<p>The comparison operator that you want to use as a filter, for example <code>\"Operator\": \"StringEquals\"</code>.</p>",
          "shape": "FilterOperator"
        },
        "Value": {
          "documentation": "<p>The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example <code>\"Value\"</code>. An example is <code>\"arn:aws:quicksight:us-east-1:1:user/default/UserName1\"</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AnalysisSearchFilterList": {
      "max": 1,
      "member": {
        "shape": "AnalysisSearchFilter"
      },
      "min": 1,
      "type": "list"
    },
    "AnalysisSourceEntity": {
      "documentation": "<p>The source entity of an analysis.</p>",
      "members": {
        "SourceTemplate": {
          "documentation": "<p>The source template for the source entity of the analysis.</p>",
          "shape": "AnalysisSourceTemplate"
        }
      },
      "type": "structure"
    },
    "AnalysisSourceTemplate": {
      "documentation": "<p>The source template of an analysis.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the source template of an analysis.</p>",
          "shape": "Arn"
        },
        "DataSetReferences": {
          "documentation": "<p>The dataset references of the source template of an analysis.</p>",
          "shape": "DataSetReferenceList"
        }
      },
      "required": [
        "DataSetReferences",
        "Arn"
      ],
      "type": "structure"
    },
    "AnalysisSummary": {
      "documentation": "<p>The summary metadata that describes an analysis.</p>",
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis. This ID displays in the URL.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the analysis.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that the analysis was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The time that the analysis was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The name of the analysis. This name is displayed in the Amazon QuickSight console. </p>",
          "shape": "AnalysisName"
        },
        "Status": {
          "documentation": "<p>The last known status for the analysis.</p>",
          "shape": "ResourceStatus"
        }
      },
      "type": "structure"
    },
    "AnalysisSummaryList": {
      "max": 100,
      "member": {
        "shape": "AnalysisSummary"
      },
      "type": "list"
    },
    "AnonymousUserDashboardEmbeddingConfiguration": {
      "documentation": "<p>Information about the dashboard that you want to embed.</p>",
      "members": {
        "InitialDashboardId": {
          "documentation": "<p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard.</p> <p>The Amazon Resource Name (ARN) of this dashboard must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "InitialDashboardId"
      ],
      "type": "structure"
    },
    "AnonymousUserDashboardVisualEmbeddingConfiguration": {
      "documentation": "<p>The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.</p>",
      "members": {
        "InitialDashboardVisualId": {
          "documentation": "<p>The visual ID for the visual that you want the user to see. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this visual.</p> <p>The Amazon Resource Name (ARN) of the dashboard that the visual belongs to must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>",
          "shape": "DashboardVisualId"
        }
      },
      "required": [
        "InitialDashboardVisualId"
      ],
      "type": "structure"
    },
    "AnonymousUserEmbeddingExperienceConfiguration": {
      "documentation": "<p>The type of experience you want to embed. For anonymous users, you can embed Amazon QuickSight dashboards.</p>",
      "members": {
        "Dashboard": {
          "documentation": "<p>The type of embedding experience. In this case, Amazon QuickSight dashboards.</p>",
          "shape": "AnonymousUserDashboardEmbeddingConfiguration"
        },
        "DashboardVisual": {
          "documentation": "<p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>",
          "shape": "AnonymousUserDashboardVisualEmbeddingConfiguration"
        }
      },
      "type": "structure"
    },
    "Arn": {
      "type": "string"
    },
    "ArnList": {
      "member": {
        "shape": "Arn"
      },
      "type": "list"
    },
    "AssignmentStatus": {
      "enum": [
        "ENABLED",
        "DRAFT",
        "DISABLED"
      ],
      "type": "string"
    },
    "AthenaParameters": {
      "documentation": "<p>Parameters for Amazon Athena.</p>",
      "members": {
        "WorkGroup": {
          "documentation": "<p>The workgroup that Amazon Athena uses.</p>",
          "shape": "WorkGroup"
        }
      },
      "type": "structure"
    },
    "AuroraParameters": {
      "documentation": "<p>Parameters for Amazon Aurora.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "AuroraPostgreSqlParameters": {
      "documentation": "<p>Parameters for Amazon Aurora PostgreSQL-Compatible Edition.</p>",
      "members": {
        "Database": {
          "documentation": "<p>The Amazon Aurora PostgreSQL database to connect to.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>The Amazon Aurora PostgreSQL-Compatible host to connect to.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>The port that Amazon Aurora PostgreSQL is listening on.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "AuthenticationMethodOption": {
      "enum": [
        "IAM_AND_QUICKSIGHT",
        "IAM_ONLY",
        "ACTIVE_DIRECTORY"
      ],
      "type": "string"
    },
    "AwsAccountId": {
      "max": 12,
      "min": 12,
      "pattern": "^[0-9]{12}$",
      "type": "string"
    },
    "AwsAndAccountId": {
      "pattern": "^(aws|[0-9]{12})$",
      "type": "string"
    },
    "AwsIotAnalyticsParameters": {
      "documentation": "<p>The parameters for IoT Analytics.</p>",
      "members": {
        "DataSetName": {
          "documentation": "<p>Dataset name.</p>",
          "shape": "DataSetName"
        }
      },
      "required": [
        "DataSetName"
      ],
      "type": "structure"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BorderStyle": {
      "documentation": "<p>The display options for tile borders for visuals.</p>",
      "members": {
        "Show": {
          "box": true,
          "documentation": "<p>The option to enable display of borders for visuals.</p>",
          "shape": "boolean"
        }
      },
      "type": "structure"
    },
    "CIDR": {
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[1-9]))$",
      "type": "string"
    },
    "CalculatedColumn": {
      "documentation": "<p>A calculated column for a dataset.</p>",
      "members": {
        "ColumnId": {
          "documentation": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.</p>",
          "shape": "ColumnId"
        },
        "ColumnName": {
          "documentation": "<p>Column name.</p>",
          "shape": "ColumnName"
        },
        "Expression": {
          "documentation": "<p>An expression that defines the calculated column.</p>",
          "shape": "Expression"
        }
      },
      "required": [
        "ColumnName",
        "ColumnId",
        "Expression"
      ],
      "type": "structure"
    },
    "CalculatedColumnList": {
      "max": 128,
      "member": {
        "shape": "CalculatedColumn"
      },
      "min": 1,
      "type": "list"
    },
    "CancelIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "String"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "IngestionId"
      ],
      "type": "structure"
    },
    "CancelIngestionResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data ingestion.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "shape": "IngestionId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CastColumnTypeOperation": {
      "documentation": "<p>A transform operation that casts a column to a different type.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>Column name.</p>",
          "shape": "ColumnName"
        },
        "Format": {
          "documentation": "<p>When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.</p>",
          "shape": "TypeCastFormat"
        },
        "NewColumnType": {
          "documentation": "<p>New column data type.</p>",
          "shape": "ColumnDataType"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnType"
      ],
      "type": "structure"
    },
    "Catalog": {
      "max": 128,
      "type": "string"
    },
    "ClusterId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColorList": {
      "max": 100,
      "member": {
        "shape": "HexColor"
      },
      "type": "list"
    },
    "ColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME"
      ],
      "type": "string"
    },
    "ColumnDescription": {
      "documentation": "<p>Metadata that contains a description for a column.</p>",
      "members": {
        "Text": {
          "documentation": "<p>The text of a description for a column.</p>",
          "shape": "ColumnDescriptiveText"
        }
      },
      "type": "structure"
    },
    "ColumnDescriptiveText": {
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "ColumnGroup": {
      "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "GeoSpatialColumnGroup": {
          "documentation": "<p>Geospatial column group that denotes a hierarchy.</p>",
          "shape": "GeoSpatialColumnGroup"
        }
      },
      "type": "structure"
    },
    "ColumnGroupColumnSchema": {
      "documentation": "<p>A structure describing the name, data type, and geographic role of the columns.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the column group's column schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnGroupColumnSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnGroupColumnSchema"
      },
      "type": "list"
    },
    "ColumnGroupList": {
      "max": 8,
      "member": {
        "shape": "ColumnGroup"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnGroupName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColumnGroupSchema": {
      "documentation": "<p>The column group schema.</p>",
      "members": {
        "ColumnGroupColumnSchemaList": {
          "documentation": "<p>A structure containing the list of schemas for column group columns.</p>",
          "shape": "ColumnGroupColumnSchemaList"
        },
        "Name": {
          "documentation": "<p>The name of the column group schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnGroupSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnGroupSchema"
      },
      "type": "list"
    },
    "ColumnId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "ColumnLevelPermissionRule": {
      "documentation": "<p>A rule defined to grant access on one or more restricted columns. Each dataset can have multiple rules. To create a restricted column, you add it to one or more rules. Each rule must contain at least one column and at least one user or group. To be able to see a restricted column, a user or group needs to be added to a rule for that column.</p>",
      "members": {
        "ColumnNames": {
          "documentation": "<p>An array of column names.</p>",
          "shape": "ColumnNameList"
        },
        "Principals": {
          "documentation": "<p>An array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.</p>",
          "shape": "PrincipalList"
        }
      },
      "type": "structure"
    },
    "ColumnLevelPermissionRuleList": {
      "member": {
        "shape": "ColumnLevelPermissionRule"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnList": {
      "max": 16,
      "member": {
        "shape": "ColumnName"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "ColumnNameList": {
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnSchema": {
      "documentation": "<p>The column schema.</p>",
      "members": {
        "DataType": {
          "documentation": "<p>The data type of the column schema.</p>",
          "shape": "String"
        },
        "GeographicRole": {
          "documentation": "<p>The geographic role of the column schema.</p>",
          "shape": "String"
        },
        "Name": {
          "documentation": "<p>The name of the column schema.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ColumnSchemaList": {
      "max": 500,
      "member": {
        "shape": "ColumnSchema"
      },
      "type": "list"
    },
    "ColumnTag": {
      "documentation": "<p>A tag for a column in a <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html\">TagColumnOperation</a> </code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "ColumnDescription": {
          "documentation": "<p>A description for a column.</p>",
          "shape": "ColumnDescription"
        },
        "ColumnGeographicRole": {
          "documentation": "<p>A geospatial role for a column.</p>",
          "shape": "GeoSpatialDataRole"
        }
      },
      "type": "structure"
    },
    "ColumnTagList": {
      "max": 16,
      "member": {
        "shape": "ColumnTag"
      },
      "min": 1,
      "type": "list"
    },
    "ColumnTagName": {
      "enum": [
        "COLUMN_GEOGRAPHIC_ROLE",
        "COLUMN_DESCRIPTION"
      ],
      "type": "string"
    },
    "ColumnTagNames": {
      "member": {
        "shape": "ColumnTagName"
      },
      "type": "list"
    },
    "ConcurrentUpdatingException": {
      "documentation": "<p>A resource is already in a state that indicates an operation is happening that must complete before a new update can be applied.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>Updating or deleting a resource can cause an inconsistent state.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "CopySourceArn": {
      "pattern": "^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+",
      "type": "string"
    },
    "CreateAccountCustomizationRequest": {
      "members": {
        "AccountCustomization": {
          "documentation": "<p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. You can add these to an Amazon Web Services account and a QuickSight namespace. </p> <p>For example, you can add a default theme by setting <code>AccountCustomization</code> to the midnight theme: <code>\"AccountCustomization\": { \"DefaultTheme\": \"arn:aws:quicksight::aws:theme/MIDNIGHT\" }</code>. Or, you can add a custom theme by specifying <code>\"AccountCustomization\": { \"DefaultTheme\": \"arn:aws:quicksight:us-west-2:111122223333:theme/bdb844d0-0fe9-4d9d-b520-0fe602d93639\" }</code>. </p>",
          "shape": "AccountCustomization"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that you want to add customizations to.</p>",
          "location": "querystring",
          "locationName": "namespace",
          "shape": "Namespace"
        },
        "Tags": {
          "documentation": "<p>A list of the tags that you want to attach to this resource.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "AwsAccountId",
        "AccountCustomization"
      ],
      "type": "structure"
    },
    "CreateAccountCustomizationResponse": {
      "members": {
        "AccountCustomization": {
          "documentation": "<p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. </p>",
          "shape": "AccountCustomization"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.</p>",
          "shape": "Arn"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.</p>",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace associated with the customization you're creating. </p>",
          "shape": "Namespace"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateAccountSubscriptionRequest": {
      "members": {
        "AccountName": {
          "documentation": "<p>The name of your Amazon QuickSight account. This name is unique over all of Amazon Web Services, and it appears only when users sign in. You can't change <code>AccountName</code> value after the Amazon QuickSight account is created.</p>",
          "shape": "String"
        },
        "ActiveDirectoryName": {
          "documentation": "<p>The name of your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "AdminGroup": {
          "documentation": "<p>The admin group associated with your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account. For more information about using Active Directory in Amazon QuickSight, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html\">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.</p>",
          "shape": "GroupsList"
        },
        "AuthenticationMethod": {
          "documentation": "<p>The method that you want to use to authenticate your Amazon QuickSight account. Currently, the valid values for this parameter are <code>IAM_AND_QUICKSIGHT</code>, <code>IAM_ONLY</code>, and <code>ACTIVE_DIRECTORY</code>.</p> <p>If you choose <code>ACTIVE_DIRECTORY</code>, provide an <code>ActiveDirectoryName</code> and an <code>AdminGroup</code> associated with your Active Directory.</p>",
          "shape": "AuthenticationMethodOption"
        },
        "AuthorGroup": {
          "documentation": "<p>The author group associated with your Active Directory. For more information about using Active Directory in Amazon QuickSight, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html\">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.</p>",
          "shape": "GroupsList"
        },
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID of the account that you're using to create your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ContactNumber": {
          "documentation": "<p>A 10-digit phone number for the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "DirectoryId": {
          "documentation": "<p>The ID of the Active Directory that is associated with your Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "Edition": {
          "documentation": "<p>The edition of Amazon QuickSight that you want your account to have. Currently, you can choose from <code>ENTERPRISE</code> or <code>ENTERPRISE_AND_Q</code>.</p> <p>If you choose <code>ENTERPRISE_AND_Q</code>, the following parameters are required:</p> <ul> <li> <p> <code>FirstName</code> </p> </li> <li> <p> <code>LastName</code> </p> </li> <li> <p> <code>EmailAddress</code> </p> </li> <li> <p> <code>ContactNumber</code> </p> </li> </ul>",
          "shape": "Edition"
        },
        "EmailAddress": {
          "documentation": "<p>The email address of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "FirstName": {
          "documentation": "<p>The first name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "LastName": {
          "documentation": "<p>The last name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "NotificationEmail": {
          "documentation": "<p>The email address that you want Amazon QuickSight to send notifications to regarding your Amazon QuickSight account or Amazon QuickSight subscription.</p>",
          "shape": "String"
        },
        "ReaderGroup": {
          "documentation": "<p>The reader group associated with your Active Direcrtory. For more information about using Active Directory in Amazon QuickSight, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html\">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the <i>Amazon QuickSight User Guide</i>.</p>",
          "shape": "GroupsList"
        },
        "Realm": {
          "documentation": "<p>The realm of the Active Directory that is associated with your Amazon QuickSight account. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Edition",
        "AuthenticationMethod",
        "AwsAccountId",
        "AccountName",
        "NotificationEmail"
      ],
      "type": "structure"
    },
    "CreateAccountSubscriptionResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "SignupResponse": {
          "documentation": "<p>A <code>SignupResponse</code> object that returns information about a newly created Amazon QuickSight account.</p>",
          "shape": "SignupResponse"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateAnalysisRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID for the analysis that you're creating. This ID displays in the URL of the analysis.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account where you are creating an analysis.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>A descriptive name for the analysis that you're creating. This name displays for the analysis in the Amazon QuickSight console. </p>",
          "shape": "AnalysisName"
        },
        "Parameters": {
          "documentation": "<p>The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. </p>",
          "shape": "Parameters"
        },
        "Permissions": {
          "documentation": "<p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>",
          "shape": "ResourcePermissionList"
        },
        "SourceEntity": {
          "documentation": "<p>A source entity to use for the analysis that you're creating. This metadata structure contains details that describe a source template and one or more datasets.</p>",
          "shape": "AnalysisSourceEntity"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.</p>",
          "shape": "TagList"
        },
        "ThemeArn": {
          "documentation": "<p>The ARN for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "CreateAnalysisResponse": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The ARN for the analysis.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The status of the creation of the analysis. </p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateColumnsOperation": {
      "documentation": "<p>A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>Calculated columns to create.</p>",
          "shape": "CalculatedColumnList"
        }
      },
      "required": [
        "Columns"
      ],
      "type": "structure"
    },
    "CreateDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account where you want to create the dashboard.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the IAM policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "DashboardPublishOptions": {
          "documentation": "<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>",
          "shape": "DashboardPublishOptions"
        },
        "Name": {
          "documentation": "<p>The display name of the dashboard.</p>",
          "shape": "DashboardName"
        },
        "Parameters": {
          "documentation": "<p>The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. </p>",
          "shape": "Parameters"
        },
        "Permissions": {
          "documentation": "<p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>",
          "shape": "ResourcePermissionList"
        },
        "SourceEntity": {
          "documentation": "<p>The entity that you are using as a source when you create the dashboard. In <code>SourceEntity</code>, you specify the type of object you're using as source. You can only create a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html\">CreateTemplate</a> </code> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code>ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>",
          "shape": "DashboardSourceEntity"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.</p>",
          "shape": "TagList"
        },
        "ThemeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.</p>",
          "shape": "Arn"
        },
        "VersionDescription": {
          "documentation": "<p>A description for the first version of the dashboard being created.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "CreateDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN of the dashboard.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The status of the dashboard creation request.</p>",
          "shape": "ResourceStatus"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "VersionArn": {
          "documentation": "<p>The ARN of the dashboard, including the version number of the first version that is created.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CreateDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "ColumnLevelPermissionRules": {
          "documentation": "<p>A set of one or more definitions of a <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a> </code>.</p>",
          "shape": "ColumnLevelPermissionRuleList"
        },
        "DataSetId": {
          "documentation": "<p>An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "DataSetUsageConfiguration": {
          "shape": "DataSetUsageConfiguration"
        },
        "FieldFolders": {
          "documentation": "<p>The folder that contains fields and nested subfolders for your dataset.</p>",
          "shape": "FieldFolderMap"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>The display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the data that you want to create.</p>",
          "shape": "RowLevelPermissionDataSet"
        },
        "RowLevelPermissionTagConfiguration": {
          "documentation": "<p>The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.</p>",
          "shape": "RowLevelPermissionTagConfiguration"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "Name",
        "PhysicalTableMap",
        "ImportMode"
      ],
      "type": "structure"
    },
    "CreateDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "IngestionArn": {
          "documentation": "<p>The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Credentials": {
          "documentation": "<p>The credentials Amazon QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.</p>",
          "shape": "DataSourceCredentials"
        },
        "DataSourceId": {
          "documentation": "<p>An ID for the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. </p>",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying source.</p>",
          "shape": "DataSourceParameters"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.</p>",
          "shape": "TagList"
        },
        "Type": {
          "documentation": "<p>The type of the data source. To return a list of all data sources, use <code>ListDataSources</code>.</p> <p>Use <code>AMAZON_ELASTICSEARCH</code> for Amazon OpenSearch Service.</p>",
          "shape": "DataSourceType"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId",
        "Name",
        "Type"
      ],
      "type": "structure"
    },
    "CreateDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The status of creating the data source.</p>",
          "shape": "ResourceStatus"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateFolderMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "MemberId": {
          "documentation": "<p>The ID of the asset (the dashboard, analysis, or dataset).</p>",
          "location": "uri",
          "locationName": "MemberId",
          "shape": "RestrictiveResourceId"
        },
        "MemberType": {
          "documentation": "<p>The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>.</p>",
          "location": "uri",
          "locationName": "MemberType",
          "shape": "MemberType"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId",
        "MemberId",
        "MemberType"
      ],
      "type": "structure"
    },
    "CreateFolderMembershipResponse": {
      "members": {
        "FolderMember": {
          "documentation": "<p>Information about the member in the folder.</p>",
          "shape": "FolderMember"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateFolderRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account where you want to create the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "FolderType": {
          "documentation": "<p>The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.</p>",
          "shape": "FolderType"
        },
        "Name": {
          "documentation": "<p>The name of the folder.</p>",
          "shape": "FolderName"
        },
        "ParentFolderArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>",
          "shape": "Arn"
        },
        "Permissions": {
          "documentation": "<p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>",
          "shape": "ResourcePermissionList"
        },
        "Tags": {
          "documentation": "<p>Tags for the folder.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "CreateFolderResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the newly created folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The folder ID for the newly created folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The request ID for the newly created folder.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateGroupMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to add the user to.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MemberName": {
          "documentation": "<p>The name of the user that you want to add to the group membership.</p>",
          "location": "uri",
          "locationName": "MemberName",
          "shape": "GroupMemberName"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want the user to be a part of.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "MemberName",
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateGroupMembershipResponse": {
      "members": {
        "GroupMember": {
          "documentation": "<p>The group member.</p>",
          "shape": "GroupMember"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateGroupRequest": {
      "documentation": "<p>The request object for this operation. </p>",
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Description": {
          "documentation": "<p>A description for the group that you want to create.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>A name for the group that you want to create.</p>",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want the group to be a part of.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateGroupResponse": {
      "documentation": "<p>The response object for this operation.</p>",
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment, also called a rule. It must be unique within an Amazon Web Services account.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account where you want to assign an IAM policy to Amazon QuickSight users or groups.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>The Amazon QuickSight users, groups, or both that you want to assign the policy to.</p>",
          "shape": "IdentityMap"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "AssignmentStatus",
        "Namespace"
      ],
      "type": "structure"
    },
    "CreateIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentId": {
          "documentation": "<p>The ID for the assignment.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. This name must be unique within the Amazon Web Services account.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "Identities": {
          "documentation": "<p>The Amazon QuickSight users, groups, or both that the IAM policy is assigned to.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy that is applied to the Amazon QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "String"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        },
        "IngestionType": {
          "documentation": "<p>The type of ingestion that you want to create.</p>",
          "shape": "IngestionType"
        }
      },
      "required": [
        "DataSetId",
        "IngestionId",
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "CreateIngestionResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data ingestion.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "shape": "IngestionId"
        },
        "IngestionStatus": {
          "documentation": "<p>The ingestion status.</p>",
          "shape": "IngestionStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateNamespaceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to create the Amazon QuickSight namespace in.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "IdentityStore": {
          "documentation": "<p>Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.</p>",
          "shape": "IdentityStore"
        },
        "Namespace": {
          "documentation": "<p>The name that you want to use to describe the new namespace.</p>",
          "shape": "Namespace"
        },
        "Tags": {
          "documentation": "<p>The tags that you want to associate with the namespace that you're creating.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace",
        "IdentityStore"
      ],
      "type": "structure"
    },
    "CreateNamespaceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN of the Amazon QuickSight namespace you created. </p>",
          "shape": "Arn"
        },
        "CapacityRegion": {
          "documentation": "<p>The Amazon Web Services Region; that you want to use for the free SPICE capacity for the new namespace. This is set to the region that you run CreateNamespace in. </p>",
          "shape": "String"
        },
        "CreationStatus": {
          "documentation": "<p>The status of the creation of the namespace. This is an asynchronous process. A status of <code>CREATED</code> means that your namespace is ready to use. If an error occurs, it indicates if the process is <code>retryable</code> or <code>non-retryable</code>. In the case of a non-retryable error, refer to the error message for follow-up tasks.</p>",
          "shape": "NamespaceStatus"
        },
        "IdentityStore": {
          "documentation": "<p>Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.</p>",
          "shape": "IdentityStore"
        },
        "Name": {
          "documentation": "<p>The name of the new namespace that you created.</p>",
          "shape": "Namespace"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "CreateTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name that you want to give to the template alias that you're creating. Don't start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. </p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template that you creating an alias for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName",
        "TemplateVersionNumber"
      ],
      "type": "structure"
    },
    "CreateTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>Information about the template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "CreateTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. You use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>A display name for the template.</p>",
          "shape": "TemplateName"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template. </p>",
          "shape": "ResourcePermissionList"
        },
        "SourceEntity": {
          "documentation": "<p>The entity that you are using as a source when you create the template. In <code>SourceEntity</code>, you specify the type of object you're using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>",
          "shape": "TemplateSourceEntity"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template that you want to create. This template is unique per Amazon Web Services Region; in each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "CreateTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The ARN for the template.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The template creation status.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>The ID of the template.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The ARN for the template, including the version information of the first version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CreateThemeAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name that you want to give to the theme alias that you are creating. The alias name can't begin with a <code>$</code>. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. </p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme for the new theme alias.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>An ID for the theme alias.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "ThemeVersionNumber": {
          "documentation": "<p>The version number of the theme.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "AliasName",
        "ThemeVersionNumber"
      ],
      "type": "structure"
    },
    "CreateThemeAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeAlias": {
          "documentation": "<p>Information about the theme alias.</p>",
          "shape": "ThemeAlias"
        }
      },
      "type": "structure"
    },
    "CreateThemeRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account where you want to store the new theme. </p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "BaseThemeId": {
          "documentation": "<p>The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within an analysis. </p>",
          "shape": "RestrictiveResourceId"
        },
        "Configuration": {
          "documentation": "<p>The theme configuration, which contains the theme display properties.</p>",
          "shape": "ThemeConfiguration"
        },
        "Name": {
          "documentation": "<p>A display name for the theme.</p>",
          "shape": "ThemeName"
        },
        "Permissions": {
          "documentation": "<p>A valid grouping of resource permissions to apply to the new theme. </p>",
          "shape": "ResourcePermissionList"
        },
        "Tags": {
          "documentation": "<p>A map of the key-value pairs for the resource tag or tags that you want to add to the resource.</p>",
          "shape": "TagList"
        },
        "ThemeId": {
          "documentation": "<p>An ID for the theme that you want to create. The theme ID is unique per Amazon Web Services Region in each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the first version of the theme that you're creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "Name",
        "BaseThemeId",
        "Configuration"
      ],
      "type": "structure"
    },
    "CreateThemeResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the theme.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The theme creation status.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeId": {
          "documentation": "<p>The ID of the theme.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the new theme.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "CredentialPair": {
      "documentation": "<p>The combination of user name and password that are used as credentials.</p>",
      "members": {
        "AlternateDataSourceParameters": {
          "documentation": "<p>A set of alternate data source parameters that you want to share for these credentials. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that's in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the new data source with the existing credentials. If the <code>AlternateDataSourceParameters</code> list is null, the <code>DataSourceParameters</code> originally used with these <code>Credentials</code> is automatically allowed.</p>",
          "shape": "DataSourceParametersList"
        },
        "Password": {
          "documentation": "<p>Password.</p>",
          "shape": "Password"
        },
        "Username": {
          "documentation": "<p>User name.</p>",
          "shape": "Username"
        }
      },
      "required": [
        "Username",
        "Password"
      ],
      "type": "structure"
    },
    "CustomSql": {
      "documentation": "<p>A physical table type built from the results of the custom SQL query.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>The column schema from the SQL query result set.</p>",
          "shape": "InputColumnList"
        },
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "Name": {
          "documentation": "<p>A display name for the SQL query result.</p>",
          "shape": "CustomSqlName"
        },
        "SqlQuery": {
          "documentation": "<p>The SQL query.</p>",
          "shape": "SqlQuery"
        }
      },
      "required": [
        "DataSourceArn",
        "Name",
        "SqlQuery"
      ],
      "type": "structure"
    },
    "CustomSqlName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "Dashboard": {
      "documentation": "<p>Dashboard.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DashboardId": {
          "documentation": "<p>Dashboard ID.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LastPublishedTime": {
          "documentation": "<p>The last time that this dataset was published.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dashboard.</p>",
          "shape": "DashboardName"
        },
        "Version": {
          "documentation": "<p>Version.</p>",
          "shape": "DashboardVersion"
        }
      },
      "type": "structure"
    },
    "DashboardBehavior": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "DashboardError": {
      "documentation": "<p>Dashboard error.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Message.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>Type.</p>",
          "shape": "DashboardErrorType"
        }
      },
      "type": "structure"
    },
    "DashboardErrorList": {
      "member": {
        "shape": "DashboardError"
      },
      "min": 1,
      "type": "list"
    },
    "DashboardErrorType": {
      "enum": [
        "ACCESS_DENIED",
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "PARAMETER_VALUE_INCOMPATIBLE",
        "PARAMETER_TYPE_INVALID",
        "PARAMETER_NOT_FOUND",
        "COLUMN_TYPE_MISMATCH",
        "COLUMN_GEOGRAPHIC_ROLE_MISMATCH",
        "COLUMN_REPLACEMENT_MISSING"
      ],
      "type": "string"
    },
    "DashboardFilterAttribute": {
      "enum": [
        "QUICKSIGHT_USER"
      ],
      "type": "string"
    },
    "DashboardName": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "DashboardPublishOptions": {
      "documentation": "<p>Dashboard publish options.</p>",
      "members": {
        "AdHocFilteringOption": {
          "documentation": "<p>Ad hoc (one-time) filtering option.</p>",
          "shape": "AdHocFilteringOption"
        },
        "ExportToCSVOption": {
          "documentation": "<p>Export to .csv option.</p>",
          "shape": "ExportToCSVOption"
        },
        "SheetControlsOption": {
          "documentation": "<p>Sheet controls option.</p>",
          "shape": "SheetControlsOption"
        }
      },
      "type": "structure"
    },
    "DashboardSearchFilter": {
      "documentation": "<p>A filter that you apply when searching for dashboards. </p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the value that you want to use as a filter, for example, <code>\"Name\": \"QUICKSIGHT_USER\"</code>. </p>",
          "shape": "DashboardFilterAttribute"
        },
        "Operator": {
          "documentation": "<p>The comparison operator that you want to use as a filter, for example, <code>\"Operator\": \"StringEquals\"</code>.</p>",
          "shape": "FilterOperator"
        },
        "Value": {
          "documentation": "<p>The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example, <code>\"Value\": \"arn:aws:quicksight:us-east-1:1:user/default/UserName1\"</code>. </p>",
          "shape": "String"
        }
      },
      "required": [
        "Operator"
      ],
      "type": "structure"
    },
    "DashboardSearchFilterList": {
      "max": 1,
      "member": {
        "shape": "DashboardSearchFilter"
      },
      "min": 1,
      "type": "list"
    },
    "DashboardSourceEntity": {
      "documentation": "<p>Dashboard source entity.</p>",
      "members": {
        "SourceTemplate": {
          "documentation": "<p>Source template.</p>",
          "shape": "DashboardSourceTemplate"
        }
      },
      "type": "structure"
    },
    "DashboardSourceTemplate": {
      "documentation": "<p>Dashboard source template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "DataSetReferences": {
          "documentation": "<p>Dataset references.</p>",
          "shape": "DataSetReferenceList"
        }
      },
      "required": [
        "DataSetReferences",
        "Arn"
      ],
      "type": "structure"
    },
    "DashboardSummary": {
      "documentation": "<p>Dashboard summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard was created.</p>",
          "shape": "Timestamp"
        },
        "DashboardId": {
          "documentation": "<p>Dashboard ID.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LastPublishedTime": {
          "documentation": "<p>The last time that this dashboard was published.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dashboard was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dashboard.</p>",
          "shape": "DashboardName"
        },
        "PublishedVersionNumber": {
          "documentation": "<p>Published version number.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardSummaryList": {
      "max": 100,
      "member": {
        "shape": "DashboardSummary"
      },
      "type": "list"
    },
    "DashboardUIState": {
      "enum": [
        "EXPANDED",
        "COLLAPSED"
      ],
      "type": "string"
    },
    "DashboardVersion": {
      "documentation": "<p>Dashboard version.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard version was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetArns": {
          "documentation": "<p>The Amazon Resource Numbers (ARNs) for the datasets that are associated with this version of the dashboard.</p>",
          "shape": "DataSetArnsList"
        },
        "Description": {
          "documentation": "<p>Description.</p>",
          "shape": "VersionDescription"
        },
        "Errors": {
          "documentation": "<p>Errors associated with this dashboard version.</p>",
          "shape": "DashboardErrorList"
        },
        "Sheets": {
          "documentation": "<p>A list of the associated sheets with the unique identifier and name of each sheet.</p>",
          "shape": "SheetList"
        },
        "SourceEntityArn": {
          "documentation": "<p>Source entity ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "ThemeArn": {
          "documentation": "<p>The ARN of the theme associated with a version of the dashboard.</p>",
          "shape": "Arn"
        },
        "VersionNumber": {
          "documentation": "<p>Version number for this version of the dashboard.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardVersionSummary": {
      "documentation": "<p>Dashboard version summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dashboard version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>Description.</p>",
          "shape": "VersionDescription"
        },
        "SourceEntityArn": {
          "documentation": "<p>Source entity ARN.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>Version number.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "DashboardVersionSummaryList": {
      "max": 100,
      "member": {
        "shape": "DashboardVersionSummary"
      },
      "type": "list"
    },
    "DashboardVisualId": {
      "documentation": "<p>A structure that contains the following elements:</p> <ul> <li> <p>The <code>DashboardId</code> of the dashboard that has the visual that you want to embed.</p> </li> <li> <p>The <code>SheetId</code> of the sheet that has the visual that you want to embed.</p> </li> <li> <p>The <code>VisualId</code> of the visual that you want to embed.</p> </li> </ul> <p>The <code>DashboardId</code>, <code>SheetId</code>, and <code>VisualId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console. You can also get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</p>",
      "members": {
        "DashboardId": {
          "documentation": "<p>The ID of the dashboard that has the visual that you want to embed. The <code>DashboardId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console. You can also get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</p>",
          "shape": "RestrictiveResourceId"
        },
        "SheetId": {
          "documentation": "<p>The ID of the sheet that the has visual that you want to embed. The <code>SheetId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VisualId": {
          "documentation": "<p>The ID of the visual that you want to embed. The <code>VisualID</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "DashboardId",
        "SheetId",
        "VisualId"
      ],
      "type": "structure"
    },
    "DataColorPalette": {
      "documentation": "<p>The theme colors that are used for data colors in charts. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. </p>",
      "members": {
        "Colors": {
          "documentation": "<p>The hexadecimal codes for the colors.</p>",
          "shape": "ColorList"
        },
        "EmptyFillColor": {
          "documentation": "<p>The hexadecimal code of a color that applies to charts where a lack of data is highlighted.</p>",
          "shape": "HexColor"
        },
        "MinMaxGradient": {
          "documentation": "<p>The minimum and maximum hexadecimal codes that describe a color gradient. </p>",
          "shape": "ColorList"
        }
      },
      "type": "structure"
    },
    "DataSet": {
      "documentation": "<p>Dataset.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "ColumnLevelPermissionRules": {
          "documentation": "<p>A set of one or more definitions of a <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a> </code>.</p>",
          "shape": "ColumnLevelPermissionRuleList"
        },
        "ConsumedSpiceCapacityInBytes": {
          "documentation": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't imported into SPICE.</p>",
          "shape": "Long"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset.</p>",
          "shape": "ResourceId"
        },
        "DataSetUsageConfiguration": {
          "documentation": "<p>The usage configuration to apply to child datasets that reference this dataset as a source.</p>",
          "shape": "DataSetUsageConfiguration"
        },
        "FieldFolders": {
          "documentation": "<p>The folder that contains fields and nested subfolders for your dataset.</p>",
          "shape": "FieldFolderMap"
        },
        "ImportMode": {
          "documentation": "<p>A value that indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "OutputColumns": {
          "documentation": "<p>The list of columns after all transforms. These columns are available in templates, analyses, and dashboards.</p>",
          "shape": "OutputColumnList"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the dataset.</p>",
          "shape": "RowLevelPermissionDataSet"
        },
        "RowLevelPermissionTagConfiguration": {
          "documentation": "<p>The element you can use to define tags for row-level security.</p>",
          "shape": "RowLevelPermissionTagConfiguration"
        }
      },
      "type": "structure"
    },
    "DataSetArnsList": {
      "max": 100,
      "member": {
        "shape": "Arn"
      },
      "type": "list"
    },
    "DataSetConfiguration": {
      "documentation": "<p>Dataset configuration.</p>",
      "members": {
        "ColumnGroupSchemaList": {
          "documentation": "<p>A structure containing the list of column group schemas.</p>",
          "shape": "ColumnGroupSchemaList"
        },
        "DataSetSchema": {
          "documentation": "<p>Dataset schema.</p>",
          "shape": "DataSetSchema"
        },
        "Placeholder": {
          "documentation": "<p>Placeholder.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DataSetConfigurationList": {
      "max": 30,
      "member": {
        "shape": "DataSetConfiguration"
      },
      "type": "list"
    },
    "DataSetImportMode": {
      "enum": [
        "SPICE",
        "DIRECT_QUERY"
      ],
      "type": "string"
    },
    "DataSetName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DataSetReference": {
      "documentation": "<p>Dataset reference.</p>",
      "members": {
        "DataSetArn": {
          "documentation": "<p>Dataset Amazon Resource Name (ARN).</p>",
          "shape": "Arn"
        },
        "DataSetPlaceholder": {
          "documentation": "<p>Dataset placeholder.</p>",
          "shape": "NonEmptyString"
        }
      },
      "required": [
        "DataSetPlaceholder",
        "DataSetArn"
      ],
      "type": "structure"
    },
    "DataSetReferenceList": {
      "member": {
        "shape": "DataSetReference"
      },
      "min": 1,
      "type": "list"
    },
    "DataSetSchema": {
      "documentation": "<p>Dataset schema.</p>",
      "members": {
        "ColumnSchemaList": {
          "documentation": "<p>A structure containing the list of column schemas.</p>",
          "shape": "ColumnSchemaList"
        }
      },
      "type": "structure"
    },
    "DataSetSummary": {
      "documentation": "<p>Dataset summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "ColumnLevelPermissionRulesApplied": {
          "documentation": "<p>A value that indicates if the dataset has column level permission configured.</p>",
          "shape": "Boolean"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this dataset was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset.</p>",
          "shape": "ResourceId"
        },
        "ImportMode": {
          "documentation": "<p>A value that indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this dataset was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the dataset.</p>",
          "shape": "RowLevelPermissionDataSet"
        },
        "RowLevelPermissionTagConfigurationApplied": {
          "documentation": "<p>Whether or not the row level permission tags are applied.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "DataSetSummaryList": {
      "member": {
        "shape": "DataSetSummary"
      },
      "type": "list"
    },
    "DataSetUsageConfiguration": {
      "documentation": "<p>The usage configuration to apply to child datasets that reference this dataset as a source.</p>",
      "members": {
        "DisableUseAsDirectQuerySource": {
          "documentation": "<p>An option that controls whether a child dataset of a direct query can use this dataset as a source.</p>",
          "shape": "Boolean"
        },
        "DisableUseAsImportedSource": {
          "documentation": "<p>An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "DataSource": {
      "documentation": "<p>The structure of a data source.</p>",
      "members": {
        "AlternateDataSourceParameters": {
          "documentation": "<p>A set of alternate data source parameters that you want to share for the credentials stored with this data source. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that's in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the credentials from this existing data source. If the <code>AlternateDataSourceParameters</code> list is null, the <code>Credentials</code> originally used with this <code>DataSourceParameters</code> are automatically allowed.</p>",
          "shape": "DataSourceParametersList"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this data source was created.</p>",
          "shape": "Timestamp"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
          "shape": "DataSourceParameters"
        },
        "ErrorInfo": {
          "documentation": "<p>Error information from the last update or the creation of the data source.</p>",
          "shape": "DataSourceErrorInfo"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this data source was updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "SecretArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>",
          "shape": "SecretArn"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "Type": {
          "documentation": "<p>The type of the data source. This type indicates which database engine the data source connects to.</p>",
          "shape": "DataSourceType"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>The VPC connection information. You need to use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "type": "structure"
    },
    "DataSourceCredentials": {
      "documentation": "<p>Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "CopySourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.</p>",
          "shape": "CopySourceArn"
        },
        "CredentialPair": {
          "documentation": "<p>Credential pair. For more information, see <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CredentialPair.html\">CredentialPair</a> </code>.</p>",
          "shape": "CredentialPair"
        },
        "SecretArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>",
          "shape": "SecretArn"
        }
      },
      "sensitive": true,
      "type": "structure"
    },
    "DataSourceErrorInfo": {
      "documentation": "<p>Error information for the data source creation or update.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Error message.</p>",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>Error type.</p>",
          "shape": "DataSourceErrorInfoType"
        }
      },
      "type": "structure"
    },
    "DataSourceErrorInfoType": {
      "enum": [
        "ACCESS_DENIED",
        "COPY_SOURCE_NOT_FOUND",
        "TIMEOUT",
        "ENGINE_VERSION_NOT_SUPPORTED",
        "UNKNOWN_HOST",
        "GENERIC_SQL_FAILURE",
        "CONFLICT",
        "UNKNOWN"
      ],
      "type": "string"
    },
    "DataSourceList": {
      "member": {
        "shape": "DataSource"
      },
      "type": "list"
    },
    "DataSourceParameters": {
      "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "AmazonElasticsearchParameters": {
          "documentation": "<p>The parameters for OpenSearch.</p>",
          "shape": "AmazonElasticsearchParameters"
        },
        "AmazonOpenSearchParameters": {
          "documentation": "<p>The parameters for OpenSearch.</p>",
          "shape": "AmazonOpenSearchParameters"
        },
        "AthenaParameters": {
          "documentation": "<p>The parameters for Amazon Athena.</p>",
          "shape": "AthenaParameters"
        },
        "AuroraParameters": {
          "documentation": "<p>The parameters for Amazon Aurora MySQL.</p>",
          "shape": "AuroraParameters"
        },
        "AuroraPostgreSqlParameters": {
          "documentation": "<p>The parameters for Amazon Aurora.</p>",
          "shape": "AuroraPostgreSqlParameters"
        },
        "AwsIotAnalyticsParameters": {
          "documentation": "<p>The parameters for IoT Analytics.</p>",
          "shape": "AwsIotAnalyticsParameters"
        },
        "ExasolParameters": {
          "documentation": "<p>The parameters for Exasol.</p>",
          "shape": "ExasolParameters"
        },
        "JiraParameters": {
          "documentation": "<p>The parameters for Jira.</p>",
          "shape": "JiraParameters"
        },
        "MariaDbParameters": {
          "documentation": "<p>The parameters for MariaDB.</p>",
          "shape": "MariaDbParameters"
        },
        "MySqlParameters": {
          "documentation": "<p>The parameters for MySQL.</p>",
          "shape": "MySqlParameters"
        },
        "OracleParameters": {
          "documentation": "<p>The parameters for Oracle.</p>",
          "shape": "OracleParameters"
        },
        "PostgreSqlParameters": {
          "documentation": "<p>The parameters for PostgreSQL.</p>",
          "shape": "PostgreSqlParameters"
        },
        "PrestoParameters": {
          "documentation": "<p>The parameters for Presto.</p>",
          "shape": "PrestoParameters"
        },
        "RdsParameters": {
          "documentation": "<p>The parameters for Amazon RDS.</p>",
          "shape": "RdsParameters"
        },
        "RedshiftParameters": {
          "documentation": "<p>The parameters for Amazon Redshift.</p>",
          "shape": "RedshiftParameters"
        },
        "S3Parameters": {
          "documentation": "<p>The parameters for S3.</p>",
          "shape": "S3Parameters"
        },
        "ServiceNowParameters": {
          "documentation": "<p>The parameters for ServiceNow.</p>",
          "shape": "ServiceNowParameters"
        },
        "SnowflakeParameters": {
          "documentation": "<p>The parameters for Snowflake.</p>",
          "shape": "SnowflakeParameters"
        },
        "SparkParameters": {
          "documentation": "<p>The parameters for Spark.</p>",
          "shape": "SparkParameters"
        },
        "SqlServerParameters": {
          "documentation": "<p>The parameters for SQL Server.</p>",
          "shape": "SqlServerParameters"
        },
        "TeradataParameters": {
          "documentation": "<p>The parameters for Teradata.</p>",
          "shape": "TeradataParameters"
        },
        "TwitterParameters": {
          "documentation": "<p>The parameters for Twitter.</p>",
          "shape": "TwitterParameters"
        }
      },
      "type": "structure"
    },
    "DataSourceParametersList": {
      "max": 50,
      "member": {
        "shape": "DataSourceParameters"
      },
      "min": 1,
      "type": "list"
    },
    "DataSourceType": {
      "enum": [
        "ADOBE_ANALYTICS",
        "AMAZON_ELASTICSEARCH",
        "ATHENA",
        "AURORA",
        "AURORA_POSTGRESQL",
        "AWS_IOT_ANALYTICS",
        "GITHUB",
        "JIRA",
        "MARIADB",
        "MYSQL",
        "ORACLE",
        "POSTGRESQL",
        "PRESTO",
        "REDSHIFT",
        "S3",
        "SALESFORCE",
        "SERVICENOW",
        "SNOWFLAKE",
        "SPARK",
        "SQLSERVER",
        "TERADATA",
        "TWITTER",
        "TIMESTREAM",
        "AMAZON_OPENSEARCH",
        "EXASOL"
      ],
      "type": "string"
    },
    "Database": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "DateTimeParameter": {
      "documentation": "<p>A date-time parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the date-time parameter.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>The values for the date-time parameter.</p>",
          "shape": "TimestampList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "DateTimeParameterList": {
      "max": 100,
      "member": {
        "shape": "DateTimeParameter"
      },
      "type": "list"
    },
    "DecimalParameter": {
      "documentation": "<p>A decimal parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for the decimal parameter.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>The values for the decimal parameter.</p>",
          "shape": "DoubleList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "DecimalParameterList": {
      "max": 100,
      "member": {
        "shape": "DecimalParameter"
      },
      "type": "list"
    },
    "DeleteAccountCustomizationRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to delete Amazon QuickSight customizations from in this Amazon Web Services Region.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that you're deleting the customizations from.</p>",
          "location": "querystring",
          "locationName": "namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "DeleteAccountCustomizationResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteAnalysisRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis that you're deleting.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account where you want to delete an analysis.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ForceDeleteWithoutRecovery": {
          "documentation": "<p>This option defaults to the value <code>NoForceDeleteWithoutRecovery</code>. To immediately delete the analysis, add the <code>ForceDeleteWithoutRecovery</code> option. You can't restore an analysis after it's deleted. </p>",
          "location": "querystring",
          "locationName": "force-delete-without-recovery",
          "shape": "boolean"
        },
        "RecoveryWindowInDays": {
          "documentation": "<p>A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. You can't use this parameter with the <code>ForceDeleteWithoutRecovery</code> option in the same API call. The default value is 30.</p>",
          "location": "querystring",
          "locationName": "recovery-window-in-days",
          "shape": "RecoveryWindowInDays"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId"
      ],
      "type": "structure"
    },
    "DeleteAnalysisResponse": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the deleted analysis.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the deleted analysis.</p>",
          "shape": "Arn"
        },
        "DeletionTime": {
          "documentation": "<p>The date and time that the analysis is scheduled to be deleted.</p>",
          "shape": "Timestamp"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're deleting.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DeleteDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Secure Socket Layer (SSL) properties that apply for the resource.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID of the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DeleteDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DeleteDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source that you deleted.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteFolderMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The Folder ID.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "MemberId": {
          "documentation": "<p>The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.</p>",
          "location": "uri",
          "locationName": "MemberId",
          "shape": "RestrictiveResourceId"
        },
        "MemberType": {
          "documentation": "<p>The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code> </p>",
          "location": "uri",
          "locationName": "MemberType",
          "shape": "MemberType"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId",
        "MemberId",
        "MemberType"
      ],
      "type": "structure"
    },
    "DeleteFolderMembershipResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteFolderRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "DeleteFolderResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name of the deleted folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteGroupMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to delete the user from.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MemberName": {
          "documentation": "<p>The name of the user that you want to delete from the group membership.</p>",
          "location": "uri",
          "locationName": "MemberName",
          "shape": "GroupMemberName"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the group that you want to remove a user from.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "MemberName",
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteGroupMembershipResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to delete.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the group that you want to delete.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteGroupResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID where you want to delete the IAM policy assignment.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment. </p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteNamespaceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to delete the Amazon QuickSight namespace from.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want to delete.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteNamespaceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name for the template alias. To delete a specific alias, you delete the version that the alias points to. You can specify the alias name, or specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. </p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the item to delete.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template that the specified alias is for.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DeleteTemplateAliasResponse": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name for the template alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template you want to delete.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template associated with the deletion.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template that you're deleting.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template you want to delete.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. </p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DeleteTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>An ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteThemeAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The unique name for the theme alias to delete.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme alias to delete.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme that the specified alias is for.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DeleteThemeAliasResponse": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name for the theme alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme resource using the deleted alias.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeId": {
          "documentation": "<p>An ID for the theme associated with the deletion.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteThemeRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme that you're deleting.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>An ID for the theme that you want to delete.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version of the theme that you want to delete. </p> <p> <b>Note:</b> If you don't provide a version number, you're using this call to <code>DeleteTheme</code> to delete all versions of the theme.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "DeleteThemeResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeId": {
          "documentation": "<p>An ID for the theme.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DeleteUserByPrincipalIdRequest": {
      "documentation": "<p/>",
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the user.</p>",
          "location": "uri",
          "locationName": "PrincipalId",
          "shape": "String"
        }
      },
      "required": [
        "PrincipalId",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteUserByPrincipalIdResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DeleteUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "UserName": {
          "documentation": "<p>The name of the user that you want to delete.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DeleteUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "Delimiter": {
      "max": 1,
      "min": 1,
      "type": "string"
    },
    "DescribeAccountCustomizationRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to describe Amazon QuickSight customizations for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that you want to describe Amazon QuickSight customizations for.</p>",
          "location": "querystring",
          "locationName": "namespace",
          "shape": "Namespace"
        },
        "Resolved": {
          "documentation": "<p>The <code>Resolved</code> flag works with the other parameters to determine which view of Amazon QuickSight customizations is returned. You can add this flag to your command to use the same view that Amazon QuickSight uses to identify which customizations to apply to the console. Omit this flag, or set it to <code>no-resolved</code>, to reveal customizations that are configured at different levels. </p>",
          "location": "querystring",
          "locationName": "resolved",
          "shape": "boolean"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "DescribeAccountCustomizationResponse": {
      "members": {
        "AccountCustomization": {
          "documentation": "<p>The Amazon QuickSight customizations that exist in the current Amazon Web Services Region. </p>",
          "shape": "AccountCustomization"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the customization that's associated with this Amazon Web Services account.</p>",
          "shape": "Arn"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you're describing.</p>",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that you're describing. </p>",
          "shape": "Namespace"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeAccountSettingsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the settings that you want to list.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "DescribeAccountSettingsResponse": {
      "members": {
        "AccountSettings": {
          "documentation": "<p>The Amazon QuickSight settings for this Amazon Web Services account. This information includes the edition of Amazon Amazon QuickSight that you subscribed to (Standard or Enterprise) and the notification email for the Amazon QuickSight subscription. </p> <p>In the QuickSight console, the Amazon QuickSight subscription is sometimes referred to as a QuickSight \"account\" even though it's technically not an account by itself. Instead, it's a subscription to the Amazon QuickSight service for your Amazon Web Services account. The edition that you subscribe to applies to Amazon QuickSight in every Amazon Web Services Region where you use it.</p>",
          "shape": "AccountSettings"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeAccountSubscriptionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID associated with your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "DescribeAccountSubscriptionResponse": {
      "members": {
        "AccountInfo": {
          "documentation": "<p>A structure that contains the following elements:</p> <ul> <li> <p>Your Amazon QuickSight account name.</p> </li> <li> <p>The edition of Amazon QuickSight that your account is using.</p> </li> <li> <p>The notification email address that is associated with the Amazon QuickSight account. </p> </li> <li> <p>The authentication type of the Amazon QuickSight account.</p> </li> <li> <p>The status of the Amazon QuickSight account's subscription.</p> </li> </ul>",
          "shape": "AccountInfo"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeAnalysisPermissionsRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis whose permissions you're describing. The ID is part of the analysis URL.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analysis whose permissions you're describing. You must be using the Amazon Web Services account that the analysis is in.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId"
      ],
      "type": "structure"
    },
    "DescribeAnalysisPermissionsResponse": {
      "members": {
        "AnalysisArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the analysis whose permissions you're describing.</p>",
          "shape": "Arn"
        },
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis whose permissions you're describing.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>A structure that describes the principals and the resource-level permissions on an analysis.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeAnalysisRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis that you're describing. The ID is part of the URL of the analysis.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analysis. You must be using the Amazon Web Services account that the analysis is in.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId"
      ],
      "type": "structure"
    },
    "DescribeAnalysisResponse": {
      "members": {
        "Analysis": {
          "documentation": "<p>A metadata structure that contains summary information for the analysis that you're describing.</p>",
          "shape": "Analysis"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDashboardPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're describing permissions for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the IAM policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DescribeDashboardPermissionsResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LinkSharingConfiguration": {
          "documentation": "<p>A structure that contains the configuration of a shareable link that grants access to the dashboard. Your users can use the link to view and interact with the dashboard, if the dashboard has been shared with them. For more information about sharing dashboards, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/sharing-a-dashboard.html\">Sharing Dashboards</a>.</p>",
          "shape": "LinkSharingConfiguration"
        },
        "Permissions": {
          "documentation": "<p>A structure that contains the permissions for the dashboard.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDashboardRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias name.</p>",
          "location": "querystring",
          "locationName": "alias-name",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. </p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "DescribeDashboardResponse": {
      "members": {
        "Dashboard": {
          "documentation": "<p>Information about the dashboard.</p>",
          "shape": "Dashboard"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of this request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSetPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DescribeDataSetPermissionsResponse": {
      "members": {
        "DataSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "DescribeDataSetResponse": {
      "members": {
        "DataSet": {
          "documentation": "<p>Information on the dataset.</p>",
          "shape": "DataSet"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSourcePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DescribeDataSourcePermissionsResponse": {
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "Permissions": {
          "documentation": "<p>A list of resource permissions on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "DescribeDataSourceResponse": {
      "members": {
        "DataSource": {
          "documentation": "<p>The information on the data source.</p>",
          "shape": "DataSource"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeFolderPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "DescribeFolderPermissionsResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>Information about the permissions on the folder.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeFolderRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "DescribeFolderResolvedPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "DescribeFolderResolvedPermissionsResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>Information about the permissions for the folder.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeFolderResponse": {
      "members": {
        "Folder": {
          "documentation": "<p>Information about the folder.</p>",
          "shape": "Folder"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeGroupMembershipRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to search.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MemberName": {
          "documentation": "<p>The user name of the user that you want to search for.</p>",
          "location": "uri",
          "locationName": "MemberName",
          "shape": "GroupMemberName"
        },
        "Namespace": {
          "documentation": "<p>The namespace that includes the group you are searching within.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "MemberName",
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeGroupMembershipResponse": {
      "members": {
        "GroupMember": {
          "shape": "GroupMember"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to describe.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the group that you want described.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeGroupResponse": {
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment, also called a rule.</p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the assignment that you want to describe.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that contains the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeIAMPolicyAssignmentResponse": {
      "members": {
        "IAMPolicyAssignment": {
          "documentation": "<p>Information describing the IAM policy assignment.</p>",
          "shape": "IAMPolicyAssignment"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeIngestionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "String"
        },
        "IngestionId": {
          "documentation": "<p>An ID for the ingestion.</p>",
          "location": "uri",
          "locationName": "IngestionId",
          "shape": "IngestionId"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "IngestionId"
      ],
      "type": "structure"
    },
    "DescribeIngestionResponse": {
      "members": {
        "Ingestion": {
          "documentation": "<p>Information about the ingestion.</p>",
          "shape": "Ingestion"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeIpRestrictionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the IP rules.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "DescribeIpRestrictionResponse": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the IP rules.</p>",
          "shape": "AwsAccountId"
        },
        "Enabled": {
          "documentation": "<p>A value that specifies whether IP rules are turned on.</p>",
          "shape": "NullableBoolean"
        },
        "IpRestrictionRuleMap": {
          "documentation": "<p>A map that describes the IP rules with CIDR range and description.</p>",
          "shape": "IpRestrictionRuleMap"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request. </p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeNamespaceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the Amazon QuickSight namespace that you want to describe.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want to describe.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeNamespaceResponse": {
      "members": {
        "Namespace": {
          "documentation": "<p>The information about the namespace that you're describing. The response includes the namespace ARN, name, Amazon Web Services Region, creation status, and identity store. <code>DescribeNamespace</code> also works for namespaces that are in the process of being created. For incomplete namespaces, this API operation lists the namespace error types and messages associated with the creation process.</p>",
          "shape": "NamespaceInfoV2"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "DescribeTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template alias that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DescribeTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>Information about the template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "DescribeTemplatePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DescribeTemplatePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template. </p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DescribeTemplateRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "querystring",
          "locationName": "alias-name",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>(Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the template is described.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "DescribeTemplateResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "Template": {
          "documentation": "<p>The template structure for the object you want to describe.</p>",
          "shape": "Template"
        }
      },
      "type": "structure"
    },
    "DescribeThemeAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name of the theme alias that you want to describe.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme alias that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "AliasName"
      ],
      "type": "structure"
    },
    "DescribeThemeAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeAlias": {
          "documentation": "<p>Information about the theme alias.</p>",
          "shape": "ThemeAlias"
        }
      },
      "type": "structure"
    },
    "DescribeThemePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme that you want to describe permissions for.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "DescribeThemePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>A list of resource permissions set on the theme. </p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme.</p>",
          "shape": "Arn"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "DescribeThemeRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias of the theme that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the theme by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to themes.</p>",
          "location": "querystring",
          "locationName": "alias-name",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme that you're describing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAndAccountId"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the theme is described.</p>",
          "location": "querystring",
          "locationName": "version-number",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "DescribeThemeResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "Theme": {
          "documentation": "<p>The information about the theme that you are describing.</p>",
          "shape": "Theme"
        }
      },
      "type": "structure"
    },
    "DescribeUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "UserName": {
          "documentation": "<p>The name of the user that you want to describe.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "DescribeUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The user name.</p>",
          "shape": "User"
        }
      },
      "type": "structure"
    },
    "Domain": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "DomainNotWhitelistedException": {
      "documentation": "<p>The domain specified isn't on the allow list. All domains for embedded dashboards must be added to the approved list by an Amazon QuickSight admin.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Double": {
      "type": "double"
    },
    "DoubleList": {
      "member": {
        "shape": "Double"
      },
      "type": "list"
    },
    "Edition": {
      "enum": [
        "STANDARD",
        "ENTERPRISE",
        "ENTERPRISE_AND_Q"
      ],
      "type": "string"
    },
    "EmbeddingIdentityType": {
      "enum": [
        "IAM",
        "QUICKSIGHT",
        "ANONYMOUS"
      ],
      "type": "string"
    },
    "EmbeddingUrl": {
      "sensitive": true,
      "type": "string"
    },
    "EntryPath": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "EntryPoint": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "ErrorInfo": {
      "documentation": "<p>Error information for the SPICE ingestion of a dataset.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Error message.</p>",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>Error type.</p>",
          "shape": "IngestionErrorType"
        }
      },
      "type": "structure"
    },
    "ExasolParameters": {
      "documentation": "<p>The required parameters for connecting to an Exasol data source.</p>",
      "members": {
        "Host": {
          "documentation": "<p>The hostname or IP address of the Exasol data source.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>The port for the Exasol data source.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port"
      ],
      "type": "structure"
    },
    "ExceptionResourceType": {
      "enum": [
        "USER",
        "GROUP",
        "NAMESPACE",
        "ACCOUNT_SETTINGS",
        "IAMPOLICY_ASSIGNMENT",
        "DATA_SOURCE",
        "DATA_SET",
        "VPC_CONNECTION",
        "INGESTION"
      ],
      "type": "string"
    },
    "ExportToCSVOption": {
      "documentation": "<p>Export to .csv option.</p>",
      "members": {
        "AvailabilityStatus": {
          "documentation": "<p>Availability status.</p>",
          "shape": "DashboardBehavior"
        }
      },
      "type": "structure"
    },
    "Expression": {
      "max": 4096,
      "min": 1,
      "type": "string"
    },
    "FieldFolder": {
      "documentation": "<p>A FieldFolder element is a folder that contains fields and nested subfolders.</p>",
      "members": {
        "columns": {
          "documentation": "<p>A folder has a list of columns. A column can only be in one folder.</p>",
          "shape": "FolderColumnList"
        },
        "description": {
          "documentation": "<p>The description for a field folder.</p>",
          "shape": "FieldFolderDescription"
        }
      },
      "type": "structure"
    },
    "FieldFolderDescription": {
      "max": 500,
      "type": "string"
    },
    "FieldFolderMap": {
      "key": {
        "shape": "FieldFolderPath"
      },
      "type": "map",
      "value": {
        "shape": "FieldFolder"
      }
    },
    "FieldFolderPath": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "FileFormat": {
      "enum": [
        "CSV",
        "TSV",
        "CLF",
        "ELF",
        "XLSX",
        "JSON"
      ],
      "type": "string"
    },
    "FilterOperation": {
      "documentation": "<p>A transform operation that filters rows based on a condition.</p>",
      "members": {
        "ConditionExpression": {
          "documentation": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.</p>",
          "shape": "Expression"
        }
      },
      "required": [
        "ConditionExpression"
      ],
      "type": "structure"
    },
    "FilterOperator": {
      "enum": [
        "StringEquals"
      ],
      "type": "string"
    },
    "Folder": {
      "documentation": "<p>A folder in Amazon QuickSight.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the folder.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that the folder was created.</p>",
          "shape": "Timestamp"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "FolderPath": {
          "documentation": "<p>An array of ancestor ARN strings for the folder.</p>",
          "shape": "Path"
        },
        "FolderType": {
          "documentation": "<p>The type of folder it is.</p>",
          "shape": "FolderType"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The time that the folder was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>A display name for the folder.</p>",
          "shape": "FolderName"
        }
      },
      "type": "structure"
    },
    "FolderColumnList": {
      "max": 5000,
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "FolderFilterAttribute": {
      "enum": [
        "PARENT_FOLDER_ARN"
      ],
      "type": "string"
    },
    "FolderMember": {
      "documentation": "<p>An asset in a Amazon QuickSight folder, such as a dashboard, analysis, or dataset.</p>",
      "members": {
        "MemberId": {
          "documentation": "<p>The ID of an asset in the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "MemberType": {
          "documentation": "<p>The type of asset that it is.</p>",
          "shape": "MemberType"
        }
      },
      "type": "structure"
    },
    "FolderMemberList": {
      "max": 100,
      "member": {
        "shape": "MemberIdArnPair"
      },
      "type": "list"
    },
    "FolderName": {
      "max": 200,
      "min": 1,
      "type": "string"
    },
    "FolderSearchFilter": {
      "documentation": "<p>A filter to use to search a Amazon QuickSight folder.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of a value that you want to use in the filter. For example, <code>\"Name\": \"PARENT_FOLDER_ARN\"</code>.</p>",
          "shape": "FolderFilterAttribute"
        },
        "Operator": {
          "documentation": "<p>The comparison operator that you want to use in the filter. For example, <code>\"Operator\": \"StringEquals\"</code>.</p>",
          "shape": "FilterOperator"
        },
        "Value": {
          "documentation": "<p>The value of the named item (in this example, <code>PARENT_FOLDER_ARN</code>), that you want to use as a filter. For example, <code>\"Value\": \"arn:aws:quicksight:us-east-1:1:folder/folderId\"</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "FolderSearchFilterList": {
      "max": 100,
      "member": {
        "shape": "FolderSearchFilter"
      },
      "type": "list"
    },
    "FolderSummary": {
      "documentation": "<p>A summary of information about an existing Amazon QuickSight folder. </p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the folder.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that the folder was created.</p>",
          "shape": "Timestamp"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "FolderType": {
          "documentation": "<p>The type of folder.</p>",
          "shape": "FolderType"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The time that the folder was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The display name of the folder.</p>",
          "shape": "FolderName"
        }
      },
      "type": "structure"
    },
    "FolderSummaryList": {
      "max": 100,
      "member": {
        "shape": "FolderSummary"
      },
      "type": "list"
    },
    "FolderType": {
      "enum": [
        "SHARED"
      ],
      "type": "string"
    },
    "GenerateEmbedUrlForAnonymousUserRequest": {
      "members": {
        "AllowedDomains": {
          "documentation": "<p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>",
          "shape": "StringList"
        },
        "AuthorizedResourceArns": {
          "documentation": "<p>The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each API call.</p>",
          "shape": "ArnList"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the dashboard that you're embedding.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ExperienceConfiguration": {
          "documentation": "<p>The configuration of the experience that you are embedding.</p>",
          "shape": "AnonymousUserEmbeddingExperienceConfiguration"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.</p>",
          "shape": "Namespace"
        },
        "SessionLifetimeInMinutes": {
          "documentation": "<p>How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.</p>",
          "shape": "SessionLifetimeInMinutes"
        },
        "SessionTags": {
          "documentation": "<p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html\">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>",
          "shape": "SessionTagList"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace",
        "AuthorizedResourceArns",
        "ExperienceConfiguration"
      ],
      "type": "structure"
    },
    "GenerateEmbedUrlForAnonymousUserResponse": {
      "members": {
        "EmbedUrl": {
          "documentation": "<p>The embed URL for the dashboard.</p>",
          "shape": "EmbeddingUrl"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "required": [
        "EmbedUrl",
        "Status",
        "RequestId"
      ],
      "type": "structure"
    },
    "GenerateEmbedUrlForRegisteredUserRequest": {
      "members": {
        "AllowedDomains": {
          "documentation": "<p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>",
          "shape": "StringList"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the dashboard that you're embedding.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ExperienceConfiguration": {
          "documentation": "<p>The experience you are embedding. For registered users, you can embed Amazon QuickSight dashboards, Amazon QuickSight visuals, the Amazon QuickSight Q search bar, or the entire Amazon QuickSight console.</p>",
          "shape": "RegisteredUserEmbeddingExperienceConfiguration"
        },
        "SessionLifetimeInMinutes": {
          "documentation": "<p>How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.</p>",
          "shape": "SessionLifetimeInMinutes"
        },
        "UserArn": {
          "documentation": "<p>The Amazon Resource Name for the registered user.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "UserArn",
        "ExperienceConfiguration"
      ],
      "type": "structure"
    },
    "GenerateEmbedUrlForRegisteredUserResponse": {
      "members": {
        "EmbedUrl": {
          "documentation": "<p>The embed URL for the Amazon QuickSight dashboard, visual, Q search bar, or console.</p>",
          "shape": "EmbeddingUrl"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "required": [
        "EmbedUrl",
        "Status",
        "RequestId"
      ],
      "type": "structure"
    },
    "GeoSpatialColumnGroup": {
      "documentation": "<p>Geospatial column group that denotes a hierarchy.</p>",
      "members": {
        "Columns": {
          "documentation": "<p>Columns in this hierarchy.</p>",
          "shape": "ColumnList"
        },
        "CountryCode": {
          "documentation": "<p>Country code.</p>",
          "shape": "GeoSpatialCountryCode"
        },
        "Name": {
          "documentation": "<p>A display name for the hierarchy.</p>",
          "shape": "ColumnGroupName"
        }
      },
      "required": [
        "Name",
        "Columns"
      ],
      "type": "structure"
    },
    "GeoSpatialCountryCode": {
      "enum": [
        "US"
      ],
      "type": "string"
    },
    "GeoSpatialDataRole": {
      "enum": [
        "COUNTRY",
        "STATE",
        "COUNTY",
        "CITY",
        "POSTCODE",
        "LONGITUDE",
        "LATITUDE"
      ],
      "type": "string"
    },
    "GetDashboardEmbedUrlRequest": {
      "members": {
        "AdditionalDashboardIds": {
          "documentation": "<p>A list of one or more dashboard IDs that you want anonymous users to have tempporary access to. Currently, the <code>IdentityType</code> parameter must be set to <code>ANONYMOUS</code> because other identity types authenticate as Amazon QuickSight or IAM users. For example, if you set \"<code>--dashboard-id dash_id1 --dashboard-id dash_id2 dash_id3 identity-type ANONYMOUS</code>\", the session can access all three dashboards.</p>",
          "location": "querystring",
          "locationName": "additional-dashboard-ids",
          "shape": "AdditionalDashboardIdList"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the dashboard that you're embedding.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard, also added to the Identity and Access Management (IAM) policy.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "IdentityType": {
          "documentation": "<p>The authentication method that the user uses to sign in.</p>",
          "location": "querystring",
          "locationName": "creds-type",
          "shape": "EmbeddingIdentityType"
        },
        "Namespace": {
          "documentation": "<p>The Amazon QuickSight namespace that contains the dashboard IDs in this request. If you're not using a custom namespace, set <code>Namespace = default</code>.</p>",
          "location": "querystring",
          "locationName": "namespace",
          "shape": "Namespace"
        },
        "ResetDisabled": {
          "documentation": "<p>Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.</p>",
          "location": "querystring",
          "locationName": "reset-disabled",
          "shape": "Boolean"
        },
        "SessionLifetimeInMinutes": {
          "documentation": "<p>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</p>",
          "location": "querystring",
          "locationName": "session-lifetime",
          "shape": "SessionLifetimeInMinutes"
        },
        "StatePersistenceEnabled": {
          "documentation": "<p>Adds persistence of state for the user session in an embedded dashboard. Persistence applies to the sheet and the parameter settings. These are control settings that the dashboard subscriber (Amazon QuickSight reader) chooses while viewing the dashboard. If this is set to <code>TRUE</code>, the settings are the same when the subscriber reopens the same dashboard URL. The state is stored in Amazon QuickSight, not in a browser cookie. If this is set to FALSE, the state of the user session is not persisted. The default is <code>FALSE</code>.</p>",
          "location": "querystring",
          "locationName": "state-persistence-enabled",
          "shape": "Boolean"
        },
        "UndoRedoDisabled": {
          "documentation": "<p>Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.</p>",
          "location": "querystring",
          "locationName": "undo-redo-disabled",
          "shape": "Boolean"
        },
        "UserArn": {
          "documentation": "<p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul> <p>Omit this parameter for users in the third group \u2013 IAM users and IAM role-based sessions.</p>",
          "location": "querystring",
          "locationName": "user-arn",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "IdentityType"
      ],
      "type": "structure"
    },
    "GetDashboardEmbedUrlResponse": {
      "documentation": "<p>Output returned from the <code>GetDashboardEmbedUrl</code> operation.</p>",
      "members": {
        "EmbedUrl": {
          "documentation": "<p>A single-use URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. </p>",
          "shape": "EmbeddingUrl"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "GetSessionEmbedUrlRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account associated with your Amazon QuickSight subscription.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "EntryPoint": {
          "documentation": "<p>The URL you use to access the embedded session. The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/<i>DashboardId</i> </code> - where <code>DashboardId</code> is the actual ID key from the Amazon QuickSight console URL of the dashboard</p> </li> <li> <p> <code>/analyses/<i>AnalysisId</i> </code> - where <code>AnalysisId</code> is the actual ID key from the Amazon QuickSight console URL of the analysis</p> </li> </ul>",
          "location": "querystring",
          "locationName": "entry-point",
          "shape": "EntryPoint"
        },
        "SessionLifetimeInMinutes": {
          "documentation": "<p>How many minutes the session is valid. The session lifetime must be 15-600 minutes.</p>",
          "location": "querystring",
          "locationName": "session-lifetime",
          "shape": "SessionLifetimeInMinutes"
        },
        "UserArn": {
          "documentation": "<p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any type of Amazon QuickSight users in your account (readers, authors, or admins). They need to be authenticated as one of the following:</p> <ol> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>Identity and Access Management (IAM) users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation</p> </li> </ol> <p>Omit this parameter for users in the third group, IAM users and IAM role-based sessions.</p>",
          "location": "querystring",
          "locationName": "user-arn",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "GetSessionEmbedUrlResponse": {
      "members": {
        "EmbedUrl": {
          "documentation": "<p>A single-use URL that you can put into your server-side web page to embed your Amazon QuickSight session. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. </p>",
          "shape": "EmbeddingUrl"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "Group": {
      "documentation": "<p>A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. </p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the group.</p>",
          "shape": "Arn"
        },
        "Description": {
          "documentation": "<p>The group description.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "GroupName"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the group.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GroupDescription": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "GroupFilterAttribute": {
      "enum": [
        "GROUP_NAME"
      ],
      "type": "string"
    },
    "GroupFilterOperator": {
      "enum": [
        "StartsWith"
      ],
      "type": "string"
    },
    "GroupList": {
      "member": {
        "shape": "Group"
      },
      "type": "list"
    },
    "GroupMember": {
      "documentation": "<p>A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the group member (user).</p>",
          "shape": "Arn"
        },
        "MemberName": {
          "documentation": "<p>The name of the group member (user).</p>",
          "shape": "GroupMemberName"
        }
      },
      "type": "structure"
    },
    "GroupMemberList": {
      "member": {
        "shape": "GroupMember"
      },
      "type": "list"
    },
    "GroupMemberName": {
      "max": 256,
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "GroupName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "GroupSearchFilter": {
      "documentation": "<p>A <code>GroupSearchFilter</code> object that you want to apply to your search.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the value that you want to use as a filter, for example <code>\"Name\": \"GROUP_NAME\"</code>. Currently, the only supported name is <code>GROUP_NAME</code>.</p>",
          "shape": "GroupFilterAttribute"
        },
        "Operator": {
          "documentation": "<p>The comparison operator that you want to use as a filter, for example <code>\"Operator\": \"StartsWith\"</code>. Currently, the only supported operator is <code>StartsWith</code>.</p>",
          "shape": "GroupFilterOperator"
        },
        "Value": {
          "documentation": "<p>The value of the named item, in this case <code>GROUP_NAME</code>, that you want to use as a filter.</p>",
          "shape": "String"
        }
      },
      "required": [
        "Operator",
        "Name",
        "Value"
      ],
      "type": "structure"
    },
    "GroupSearchFilterList": {
      "max": 1,
      "member": {
        "shape": "GroupSearchFilter"
      },
      "min": 1,
      "type": "list"
    },
    "GroupsList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "GutterStyle": {
      "documentation": "<p>The display options for gutter spacing between tiles on a sheet.</p>",
      "members": {
        "Show": {
          "box": true,
          "documentation": "<p>This Boolean value controls whether to display a gutter space between sheet tiles. </p>",
          "shape": "boolean"
        }
      },
      "type": "structure"
    },
    "HexColor": {
      "pattern": "^#[A-F0-9]{6}$",
      "type": "string"
    },
    "Host": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "IAMPolicyAssignment": {
      "documentation": "<p>An Identity and Access Management (IAM) policy assignment.</p>",
      "members": {
        "AssignmentId": {
          "documentation": "<p>Assignment ID.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>Assignment name.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>Assignment status.</p>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>Identities.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the IAM policy.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "IAMPolicyAssignmentName": {
      "min": 1,
      "pattern": "(?=^.{2,256}$)(?!.*\\s)[0-9a-zA-Z-_.:=+@]*$",
      "type": "string"
    },
    "IAMPolicyAssignmentSummary": {
      "documentation": "<p>IAM policy assignment summary.</p>",
      "members": {
        "AssignmentName": {
          "documentation": "<p>Assignment name.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>Assignment status.</p>",
          "shape": "AssignmentStatus"
        }
      },
      "type": "structure"
    },
    "IAMPolicyAssignmentSummaryList": {
      "member": {
        "shape": "IAMPolicyAssignmentSummary"
      },
      "type": "list"
    },
    "IdentityMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "IdentityNameList"
      }
    },
    "IdentityName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "IdentityNameList": {
      "member": {
        "shape": "IdentityName"
      },
      "type": "list"
    },
    "IdentityStore": {
      "enum": [
        "QUICKSIGHT"
      ],
      "type": "string"
    },
    "IdentityType": {
      "enum": [
        "IAM",
        "QUICKSIGHT"
      ],
      "type": "string"
    },
    "IdentityTypeNotSupportedException": {
      "documentation": "<p>The identity type specified isn't supported. Supported identity types include <code>IAM</code> and <code>QUICKSIGHT</code>.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Ingestion": {
      "documentation": "<p>Information about the SPICE ingestion for a dataset.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this ingestion started.</p>",
          "shape": "Timestamp"
        },
        "ErrorInfo": {
          "documentation": "<p>Error information for this ingestion.</p>",
          "shape": "ErrorInfo"
        },
        "IngestionId": {
          "documentation": "<p>Ingestion ID.</p>",
          "shape": "IngestionId"
        },
        "IngestionSizeInBytes": {
          "box": true,
          "documentation": "<p>The size of the data ingested, in bytes.</p>",
          "shape": "Long"
        },
        "IngestionStatus": {
          "documentation": "<p>Ingestion status.</p>",
          "shape": "IngestionStatus"
        },
        "IngestionTimeInSeconds": {
          "box": true,
          "documentation": "<p>The time that this ingestion took, measured in seconds.</p>",
          "shape": "Long"
        },
        "QueueInfo": {
          "shape": "QueueInfo"
        },
        "RequestSource": {
          "documentation": "<p>Event source for this ingestion.</p>",
          "shape": "IngestionRequestSource"
        },
        "RequestType": {
          "documentation": "<p>Type of this ingestion.</p>",
          "shape": "IngestionRequestType"
        },
        "RowInfo": {
          "shape": "RowInfo"
        }
      },
      "required": [
        "Arn",
        "IngestionStatus",
        "CreatedTime"
      ],
      "type": "structure"
    },
    "IngestionErrorType": {
      "enum": [
        "FAILURE_TO_ASSUME_ROLE",
        "INGESTION_SUPERSEDED",
        "INGESTION_CANCELED",
        "DATA_SET_DELETED",
        "DATA_SET_NOT_SPICE",
        "S3_UPLOADED_FILE_DELETED",
        "S3_MANIFEST_ERROR",
        "DATA_TOLERANCE_EXCEPTION",
        "SPICE_TABLE_NOT_FOUND",
        "DATA_SET_SIZE_LIMIT_EXCEEDED",
        "ROW_SIZE_LIMIT_EXCEEDED",
        "ACCOUNT_CAPACITY_LIMIT_EXCEEDED",
        "CUSTOMER_ERROR",
        "DATA_SOURCE_NOT_FOUND",
        "IAM_ROLE_NOT_AVAILABLE",
        "CONNECTION_FAILURE",
        "SQL_TABLE_NOT_FOUND",
        "PERMISSION_DENIED",
        "SSL_CERTIFICATE_VALIDATION_FAILURE",
        "OAUTH_TOKEN_FAILURE",
        "SOURCE_API_LIMIT_EXCEEDED_FAILURE",
        "PASSWORD_AUTHENTICATION_FAILURE",
        "SQL_SCHEMA_MISMATCH_ERROR",
        "INVALID_DATE_FORMAT",
        "INVALID_DATAPREP_SYNTAX",
        "SOURCE_RESOURCE_LIMIT_EXCEEDED",
        "SQL_INVALID_PARAMETER_VALUE",
        "QUERY_TIMEOUT",
        "SQL_NUMERIC_OVERFLOW",
        "UNRESOLVABLE_HOST",
        "UNROUTABLE_HOST",
        "SQL_EXCEPTION",
        "S3_FILE_INACCESSIBLE",
        "IOT_FILE_NOT_FOUND",
        "IOT_DATA_SET_FILE_EMPTY",
        "INVALID_DATA_SOURCE_CONFIG",
        "DATA_SOURCE_AUTH_FAILED",
        "DATA_SOURCE_CONNECTION_FAILED",
        "FAILURE_TO_PROCESS_JSON_FILE",
        "INTERNAL_SERVICE_ERROR",
        "REFRESH_SUPPRESSED_BY_EDIT",
        "PERMISSION_NOT_FOUND",
        "ELASTICSEARCH_CURSOR_NOT_ENABLED",
        "CURSOR_NOT_ENABLED"
      ],
      "type": "string"
    },
    "IngestionId": {
      "max": 128,
      "min": 1,
      "pattern": "^[a-zA-Z0-9-_]+$",
      "type": "string"
    },
    "IngestionMaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "IngestionRequestSource": {
      "enum": [
        "MANUAL",
        "SCHEDULED"
      ],
      "type": "string"
    },
    "IngestionRequestType": {
      "documentation": "This defines the type of ingestion request. This is returned as part of create ingestion response.",
      "enum": [
        "INITIAL_INGESTION",
        "EDIT",
        "INCREMENTAL_REFRESH",
        "FULL_REFRESH"
      ],
      "type": "string"
    },
    "IngestionStatus": {
      "enum": [
        "INITIALIZED",
        "QUEUED",
        "RUNNING",
        "FAILED",
        "COMPLETED",
        "CANCELLED"
      ],
      "type": "string"
    },
    "IngestionType": {
      "documentation": "This defines the type of ingestion user wants to trigger. This is part of create ingestion request.",
      "enum": [
        "INCREMENTAL_REFRESH",
        "FULL_REFRESH"
      ],
      "type": "string"
    },
    "Ingestions": {
      "member": {
        "shape": "Ingestion"
      },
      "type": "list"
    },
    "InputColumn": {
      "documentation": "<p>Metadata for a column that is used as the input of a transform operation.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of this column in the underlying data source.</p>",
          "shape": "ColumnName"
        },
        "Type": {
          "documentation": "<p>The data type of the column.</p>",
          "shape": "InputColumnDataType"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "type": "structure"
    },
    "InputColumnDataType": {
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME",
        "BIT",
        "BOOLEAN",
        "JSON"
      ],
      "type": "string"
    },
    "InputColumnList": {
      "max": 2048,
      "member": {
        "shape": "InputColumn"
      },
      "min": 1,
      "type": "list"
    },
    "InstanceId": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "IntegerParameter": {
      "documentation": "<p>An integer parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of the integer parameter.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>The values for the integer parameter.</p>",
          "shape": "LongList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "IntegerParameterList": {
      "max": 100,
      "member": {
        "shape": "IntegerParameter"
      },
      "type": "list"
    },
    "InternalFailureException": {
      "documentation": "<p>An internal failure occurred.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidNextTokenException": {
      "documentation": "<p>The <code>NextToken</code> value isn't valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "InvalidParameterValueException": {
      "documentation": "<p>One or more parameters has a value that isn't valid.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "IpRestrictionRuleDescription": {
      "max": 150,
      "min": 0,
      "type": "string"
    },
    "IpRestrictionRuleMap": {
      "key": {
        "shape": "CIDR"
      },
      "type": "map",
      "value": {
        "shape": "IpRestrictionRuleDescription"
      }
    },
    "JiraParameters": {
      "documentation": "<p>The parameters for Jira.</p>",
      "members": {
        "SiteBaseUrl": {
          "documentation": "<p>The base URL of the Jira site.</p>",
          "shape": "SiteBaseUrl"
        }
      },
      "required": [
        "SiteBaseUrl"
      ],
      "type": "structure"
    },
    "JoinInstruction": {
      "documentation": "<p>The instructions associated with a join. </p>",
      "members": {
        "LeftJoinKeyProperties": {
          "documentation": "<p>Join key properties of the left operand.</p>",
          "shape": "JoinKeyProperties"
        },
        "LeftOperand": {
          "documentation": "<p>The operand on the left side of a join.</p>",
          "shape": "LogicalTableId"
        },
        "OnClause": {
          "documentation": "<p>The join instructions provided in the <code>ON</code> clause of a join.</p>",
          "shape": "OnClause"
        },
        "RightJoinKeyProperties": {
          "documentation": "<p>Join key properties of the right operand.</p>",
          "shape": "JoinKeyProperties"
        },
        "RightOperand": {
          "documentation": "<p>The operand on the right side of a join.</p>",
          "shape": "LogicalTableId"
        },
        "Type": {
          "documentation": "<p>The type of join that it is.</p>",
          "shape": "JoinType"
        }
      },
      "required": [
        "LeftOperand",
        "RightOperand",
        "Type",
        "OnClause"
      ],
      "type": "structure"
    },
    "JoinKeyProperties": {
      "documentation": "<p>Properties associated with the columns participating in a join.</p>",
      "members": {
        "UniqueKey": {
          "box": true,
          "documentation": "<p>A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "JoinType": {
      "enum": [
        "INNER",
        "OUTER",
        "LEFT",
        "RIGHT"
      ],
      "type": "string"
    },
    "LimitExceededException": {
      "documentation": "<p>A limit is exceeded.</p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>Limit exceeded.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "LinkSharingConfiguration": {
      "documentation": "<p>A structure that contains the configuration of a shareable link to the dashboard.</p>",
      "members": {
        "Permissions": {
          "documentation": "<p>A structure that contains the permissions of a shareable link.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "type": "structure"
    },
    "ListAnalysesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analyses.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListAnalysesResponse": {
      "members": {
        "AnalysisSummaryList": {
          "documentation": "<p>Metadata describing each of the analyses that are listed.</p>",
          "shape": "AnalysisSummaryList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDashboardVersionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're listing versions for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "ListDashboardVersionsResponse": {
      "members": {
        "DashboardVersionSummaryList": {
          "documentation": "<p>A structure that contains information about each version of the dashboard.</p>",
          "shape": "DashboardVersionSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDashboardsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboards that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDashboardsResponse": {
      "members": {
        "DashboardSummaryList": {
          "documentation": "<p>A structure that contains all of the dashboards in your Amazon Web Services account. This structure provides basic information about the dashboards.</p>",
          "shape": "DashboardSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDataSetsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDataSetsResponse": {
      "members": {
        "DataSetSummaries": {
          "documentation": "<p>The list of dataset summaries.</p>",
          "shape": "DataSetSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListDataSourcesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListDataSourcesResponse": {
      "members": {
        "DataSources": {
          "documentation": "<p>A list of data sources.</p>",
          "shape": "DataSourceList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListFolderMembersRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "ListFolderMembersResponse": {
      "members": {
        "FolderMemberList": {
          "documentation": "<p>A structure that contains all of the folder members (dashboards, analyses, and datasets) in the folder.</p>",
          "shape": "FolderMemberList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListFoldersRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListFoldersResponse": {
      "members": {
        "FolderSummaryList": {
          "documentation": "<p>A structure that contains all of the folders in the Amazon Web Services account. This structure provides basic information about the folders.</p>",
          "shape": "FolderSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListGroupMembershipsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to see a membership list of.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the group that you want a list of users from.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListGroupMembershipsResponse": {
      "members": {
        "GroupMemberList": {
          "documentation": "<p>The list of the members of the group.</p>",
          "shape": "GroupMemberList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListGroupsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want a list of groups from.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListGroupsResponse": {
      "members": {
        "GroupList": {
          "documentation": "<p>The list of the groups.</p>",
          "shape": "GroupList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsForUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the assignments.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "UserName": {
          "documentation": "<p>The name of the user.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "AwsAccountId",
        "UserName",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsForUserResponse": {
      "members": {
        "ActiveAssignments": {
          "documentation": "<p>The active assignments for this user.</p>",
          "shape": "ActiveIAMPolicyAssignmentList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsRequest": {
      "members": {
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignments.</p>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains these IAM policy assignments.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace for the assignments.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListIAMPolicyAssignmentsResponse": {
      "members": {
        "IAMPolicyAssignments": {
          "documentation": "<p>Information describing the IAM policy assignments.</p>",
          "shape": "IAMPolicyAssignmentSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListIngestionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID of the dataset used in the ingestion.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "String"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "IngestionMaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "DataSetId",
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListIngestionsResponse": {
      "members": {
        "Ingestions": {
          "documentation": "<p>A list of the ingestions.</p>",
          "shape": "Ingestions"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListNamespacesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the Amazon QuickSight namespaces that you want to list.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A unique pagination token that can be used in a subsequent request. You will receive a pagination token in the response body of a previous <code>ListNameSpaces</code> API call if there is more data that can be returned. To receive the data, make another <code>ListNamespaces</code> API call with the returned token to retrieve the next page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code> API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code> error.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListNamespacesResponse": {
      "members": {
        "Namespaces": {
          "documentation": "<p>The information about the namespaces in this Amazon Web Services account. The response includes the namespace ARN, name, Amazon Web Services Region, notification email address, creation status, and identity store.</p>",
          "shape": "Namespaces"
        },
        "NextToken": {
          "documentation": "<p>A unique pagination token that can be used in a subsequent request. Receiving <code>NextToken</code> in your response inticates that there is more data that can be returned. To receive the data, make another <code>ListNamespaces</code> API call with the returned token to retrieve the next page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code> API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code> error.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want a list of tags for.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        }
      },
      "type": "structure"
    },
    "ListTemplateAliasesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template aliases that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-result",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "ListTemplateAliasesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAliasList": {
          "documentation": "<p>A structure containing the list of the template's aliases.</p>",
          "shape": "TemplateAliasList"
        }
      },
      "type": "structure"
    },
    "ListTemplateVersionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the templates that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "ListTemplateVersionsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateVersionSummaryList": {
          "documentation": "<p>A structure containing a list of all the versions of the specified template.</p>",
          "shape": "TemplateVersionSummaryList"
        }
      },
      "type": "structure"
    },
    "ListTemplatesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the templates that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-result",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListTemplatesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateSummaryList": {
          "documentation": "<p>A structure containing information about the templates in the list.</p>",
          "shape": "TemplateSummaryList"
        }
      },
      "type": "structure"
    },
    "ListThemeAliasesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme aliases that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-result",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "ListThemeAliasesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeAliasList": {
          "documentation": "<p>A structure containing the list of the theme's aliases.</p>",
          "shape": "ThemeAliasList"
        }
      },
      "type": "structure"
    },
    "ListThemeVersionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the themes that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "ListThemeVersionsResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeVersionSummaryList": {
          "documentation": "<p>A structure containing a list of all the versions of the specified theme.</p>",
          "shape": "ThemeVersionSummaryList"
        }
      },
      "type": "structure"
    },
    "ListThemesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the themes that you're listing.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>The type of themes that you want to list. Valid options include the following:</p> <ul> <li> <p> <code>ALL (default)</code>- Display all existing themes.</p> </li> <li> <p> <code>CUSTOM</code> - Display only the themes created by people using Amazon QuickSight.</p> </li> <li> <p> <code>QUICKSIGHT</code> - Display only the starting themes defined by Amazon QuickSight.</p> </li> </ul>",
          "location": "querystring",
          "locationName": "type",
          "shape": "ThemeType"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "ListThemesResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeSummaryList": {
          "documentation": "<p>Information about the themes in the list.</p>",
          "shape": "ThemeSummaryList"
        }
      },
      "type": "structure"
    },
    "ListUserGroupsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to list group memberships for.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListUserGroupsResponse": {
      "members": {
        "GroupList": {
          "documentation": "<p>The list of groups the user is a member of.</p>",
          "shape": "GroupList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "ListUsersRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "ListUsersResponse": {
      "members": {
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "UserList": {
          "documentation": "<p>The list of users.</p>",
          "shape": "UserList"
        }
      },
      "type": "structure"
    },
    "LogicalTable": {
      "documentation": "<p>A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.</p>",
      "members": {
        "Alias": {
          "documentation": "<p>A display name for the logical table.</p>",
          "shape": "LogicalTableAlias"
        },
        "DataTransforms": {
          "documentation": "<p>Transform operations that act on this logical table.</p>",
          "shape": "TransformOperationList"
        },
        "Source": {
          "documentation": "<p>Source of this logical table.</p>",
          "shape": "LogicalTableSource"
        }
      },
      "required": [
        "Alias",
        "Source"
      ],
      "type": "structure"
    },
    "LogicalTableAlias": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "LogicalTableId": {
      "max": 64,
      "min": 1,
      "pattern": "[0-9a-zA-Z-]*",
      "type": "string"
    },
    "LogicalTableMap": {
      "key": {
        "shape": "LogicalTableId"
      },
      "max": 64,
      "min": 1,
      "type": "map",
      "value": {
        "shape": "LogicalTable"
      }
    },
    "LogicalTableSource": {
      "documentation": "<p>Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "DataSetArn": {
          "documentation": "<p>The Amazon Resource Number (ARN) of the parent dataset.</p>",
          "shape": "Arn"
        },
        "JoinInstruction": {
          "documentation": "<p>Specifies the result of a join of two logical tables.</p>",
          "shape": "JoinInstruction"
        },
        "PhysicalTableId": {
          "documentation": "<p>Physical table ID.</p>",
          "shape": "PhysicalTableId"
        }
      },
      "type": "structure"
    },
    "Long": {
      "type": "long"
    },
    "LongList": {
      "member": {
        "shape": "Long"
      },
      "type": "list"
    },
    "ManifestFileLocation": {
      "documentation": "<p>Amazon S3 manifest file location.</p>",
      "members": {
        "Bucket": {
          "documentation": "<p>Amazon S3 bucket.</p>",
          "shape": "S3Bucket"
        },
        "Key": {
          "documentation": "<p>Amazon S3 key that identifies an object.</p>",
          "shape": "S3Key"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "type": "structure"
    },
    "MarginStyle": {
      "documentation": "<p>The display options for margins around the outside edge of sheets.</p>",
      "members": {
        "Show": {
          "box": true,
          "documentation": "<p>This Boolean value controls whether to display sheet margins.</p>",
          "shape": "boolean"
        }
      },
      "type": "structure"
    },
    "MariaDbParameters": {
      "documentation": "<p>The parameters for MariaDB.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "MaxResults": {
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "MemberIdArnPair": {
      "documentation": "<p>An object that consists of a member Amazon Resource Name (ARN) and a member ID.</p>",
      "members": {
        "MemberArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the member.</p>",
          "shape": "Arn"
        },
        "MemberId": {
          "documentation": "<p>The ID of the member.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "MemberType": {
      "enum": [
        "DASHBOARD",
        "ANALYSIS",
        "DATASET"
      ],
      "type": "string"
    },
    "MySqlParameters": {
      "documentation": "<p>The parameters for MySQL.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "Namespace": {
      "max": 64,
      "pattern": "^[a-zA-Z0-9._-]*$",
      "type": "string"
    },
    "NamespaceError": {
      "documentation": "<p>Errors that occur during namespace creation.</p>",
      "members": {
        "Message": {
          "documentation": "<p>The message for the error.</p>",
          "shape": "String"
        },
        "Type": {
          "documentation": "<p>The error type.</p>",
          "shape": "NamespaceErrorType"
        }
      },
      "type": "structure"
    },
    "NamespaceErrorType": {
      "enum": [
        "PERMISSION_DENIED",
        "INTERNAL_SERVICE_ERROR"
      ],
      "type": "string"
    },
    "NamespaceInfoV2": {
      "documentation": "<p>The error type.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The namespace ARN.</p>",
          "shape": "Arn"
        },
        "CapacityRegion": {
          "documentation": "<p>The namespace Amazon Web Services Region.</p>",
          "shape": "String"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of a namespace that is not yet completely created.</p>",
          "shape": "NamespaceStatus"
        },
        "IdentityStore": {
          "documentation": "<p>The identity store used for the namespace.</p>",
          "shape": "IdentityStore"
        },
        "Name": {
          "documentation": "<p>The name of the error.</p>",
          "shape": "Namespace"
        },
        "NamespaceError": {
          "documentation": "<p>An error that occurred when the namespace was created.</p>",
          "shape": "NamespaceError"
        }
      },
      "type": "structure"
    },
    "NamespaceStatus": {
      "enum": [
        "CREATED",
        "CREATING",
        "DELETING",
        "RETRYABLE_FAILURE",
        "NON_RETRYABLE_FAILURE"
      ],
      "type": "string"
    },
    "Namespaces": {
      "member": {
        "shape": "NamespaceInfoV2"
      },
      "type": "list"
    },
    "NonEmptyString": {
      "pattern": ".*\\S.*",
      "type": "string"
    },
    "NullableBoolean": {
      "type": "boolean"
    },
    "OnClause": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "OptionalPort": {
      "max": 65535,
      "min": 0,
      "type": "integer"
    },
    "OracleParameters": {
      "documentation": "<p>The parameters for Oracle.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>An Oracle host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "OutputColumn": {
      "documentation": "<p>Output column.</p>",
      "members": {
        "Description": {
          "documentation": "<p>A description for a column.</p>",
          "shape": "ColumnDescriptiveText"
        },
        "Name": {
          "documentation": "<p>A display name for the dataset.</p>",
          "shape": "ColumnName"
        },
        "Type": {
          "documentation": "<p>Type.</p>",
          "shape": "ColumnDataType"
        }
      },
      "type": "structure"
    },
    "OutputColumnList": {
      "member": {
        "shape": "OutputColumn"
      },
      "type": "list"
    },
    "Parameters": {
      "documentation": "<p>A list of Amazon QuickSight parameters and the list's override values.</p>",
      "members": {
        "DateTimeParameters": {
          "documentation": "<p>The parameters that have a data type of date-time.</p>",
          "shape": "DateTimeParameterList"
        },
        "DecimalParameters": {
          "documentation": "<p>The parameters that have a data type of decimal.</p>",
          "shape": "DecimalParameterList"
        },
        "IntegerParameters": {
          "documentation": "<p>The parameters that have a data type of integer.</p>",
          "shape": "IntegerParameterList"
        },
        "StringParameters": {
          "documentation": "<p>The parameters that have a data type of string.</p>",
          "shape": "StringParameterList"
        }
      },
      "type": "structure"
    },
    "Password": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "Path": {
      "max": 10,
      "member": {
        "shape": "Arn"
      },
      "min": 1,
      "type": "list"
    },
    "PhysicalTable": {
      "documentation": "<p>A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "CustomSql": {
          "documentation": "<p>A physical table type built from the results of the custom SQL query.</p>",
          "shape": "CustomSql"
        },
        "RelationalTable": {
          "documentation": "<p>A physical table type for relational data sources.</p>",
          "shape": "RelationalTable"
        },
        "S3Source": {
          "documentation": "<p>A physical table type for as S3 data source.</p>",
          "shape": "S3Source"
        }
      },
      "type": "structure"
    },
    "PhysicalTableId": {
      "max": 64,
      "min": 1,
      "pattern": "[0-9a-zA-Z-]*",
      "type": "string"
    },
    "PhysicalTableMap": {
      "key": {
        "shape": "PhysicalTableId"
      },
      "max": 32,
      "min": 0,
      "type": "map",
      "value": {
        "shape": "PhysicalTable"
      }
    },
    "Port": {
      "max": 65535,
      "min": 1,
      "type": "integer"
    },
    "PositiveInteger": {
      "min": 1,
      "type": "integer"
    },
    "PostgreSqlParameters": {
      "documentation": "<p>The parameters for PostgreSQL.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "PreconditionNotMetException": {
      "documentation": "<p>One or more preconditions aren't met.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "PrestoParameters": {
      "documentation": "<p>The parameters for Presto.</p>",
      "members": {
        "Catalog": {
          "documentation": "<p>Catalog.</p>",
          "shape": "Catalog"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Catalog"
      ],
      "type": "structure"
    },
    "Principal": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "PrincipalList": {
      "max": 100,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "ProjectOperation": {
      "documentation": "<p>A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.</p>",
      "members": {
        "ProjectedColumns": {
          "documentation": "<p>Projected columns.</p>",
          "shape": "ProjectedColumnList"
        }
      },
      "required": [
        "ProjectedColumns"
      ],
      "type": "structure"
    },
    "ProjectedColumnList": {
      "max": 2000,
      "member": {
        "shape": "String"
      },
      "min": 1,
      "type": "list"
    },
    "Query": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "QueueInfo": {
      "documentation": "<p>Information about a queued dataset SPICE ingestion.</p>",
      "members": {
        "QueuedIngestion": {
          "documentation": "<p>The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.</p>",
          "shape": "String"
        },
        "WaitingOnIngestion": {
          "documentation": "<p>The ID of the queued ingestion.</p>",
          "shape": "String"
        }
      },
      "required": [
        "WaitingOnIngestion",
        "QueuedIngestion"
      ],
      "type": "structure"
    },
    "QuickSightUserNotFoundException": {
      "documentation": "<p>The user with the provided name isn't found. This error can happen in any operation that requires finding a user based on a provided user name, such as <code>DeleteUser</code>, <code>DescribeUser</code>, and so on.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RdsParameters": {
      "documentation": "<p>The parameters for Amazon RDS.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "InstanceId": {
          "documentation": "<p>Instance ID.</p>",
          "shape": "InstanceId"
        }
      },
      "required": [
        "InstanceId",
        "Database"
      ],
      "type": "structure"
    },
    "RecoveryWindowInDays": {
      "max": 30,
      "min": 7,
      "type": "long"
    },
    "RedshiftParameters": {
      "documentation": "<p>The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>",
      "members": {
        "ClusterId": {
          "documentation": "<p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are provided.</p>",
          "shape": "ClusterId"
        },
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>",
          "shape": "OptionalPort"
        }
      },
      "required": [
        "Database"
      ],
      "type": "structure"
    },
    "RegisterUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "CustomFederationProviderUrl": {
          "documentation": "<p>The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.</p>",
          "shape": "String"
        },
        "CustomPermissionsName": {
          "documentation": "<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html\">UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>",
          "shape": "RoleName"
        },
        "Email": {
          "documentation": "<p>The email address of the user that you want to register.</p>",
          "shape": "String"
        },
        "ExternalLoginFederationProviderType": {
          "documentation": "<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don\u2019t use the \"CustomFederationProviderUrl\" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>",
          "shape": "String"
        },
        "ExternalLoginId": {
          "documentation": "<p>The identity ID for a user in the external login provider.</p>",
          "shape": "String"
        },
        "IamArn": {
          "documentation": "<p>The ARN of the IAM user or role that you are registering with Amazon QuickSight. </p>",
          "shape": "String"
        },
        "IdentityType": {
          "documentation": "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>",
          "shape": "IdentityType"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "SessionName": {
          "documentation": "<p>You need to use this parameter only when you register one or more users using an assumed IAM role. You don't need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>CLI Reference.</i> </p>",
          "shape": "RoleSessionName"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to create for the user you are registering.</p>",
          "shape": "UserName"
        },
        "UserRole": {
          "documentation": "<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>",
          "shape": "UserRole"
        }
      },
      "required": [
        "IdentityType",
        "Email",
        "UserRole",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "RegisterUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The user's user name.</p>",
          "shape": "User"
        },
        "UserInvitationUrl": {
          "documentation": "<p>The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RegisteredUserDashboardEmbeddingConfiguration": {
      "documentation": "<p>Information about the dashboard you want to embed.</p>",
      "members": {
        "InitialDashboardId": {
          "documentation": "<p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard if the user has permissions to view it.</p> <p>If the user does not have permission to view this dashboard, they see a permissions error message.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "InitialDashboardId"
      ],
      "type": "structure"
    },
    "RegisteredUserDashboardVisualEmbeddingConfiguration": {
      "documentation": "<p>The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.</p>",
      "members": {
        "InitialDashboardVisualId": {
          "documentation": "<p>The visual ID for the visual that you want the user to embed. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this visual.</p> <p>The Amazon Resource Name (ARN) of the dashboard that the visual belongs to must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>",
          "shape": "DashboardVisualId"
        }
      },
      "required": [
        "InitialDashboardVisualId"
      ],
      "type": "structure"
    },
    "RegisteredUserEmbeddingExperienceConfiguration": {
      "documentation": "<p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p> </note>",
      "members": {
        "Dashboard": {
          "documentation": "<p>The configuration details for providing a dashboard embedding experience.</p>",
          "shape": "RegisteredUserDashboardEmbeddingConfiguration"
        },
        "DashboardVisual": {
          "documentation": "<p>The type of embedding experience. In this case, Amazon QuickSight visuals.</p>",
          "shape": "RegisteredUserDashboardVisualEmbeddingConfiguration"
        },
        "QSearchBar": {
          "documentation": "<p>The configuration details for embedding the Q search bar.</p> <p>For more information about embedding the Q search bar, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html\">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>",
          "shape": "RegisteredUserQSearchBarEmbeddingConfiguration"
        },
        "QuickSightConsole": {
          "documentation": "<p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html\">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>Use <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html\">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html\">UpdateUser</a> </code> API operation. Use the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html\">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html\">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html\">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html\">Amazon QuickSight Developer Portal</a>.</p>",
          "shape": "RegisteredUserQuickSightConsoleEmbeddingConfiguration"
        }
      },
      "type": "structure"
    },
    "RegisteredUserQSearchBarEmbeddingConfiguration": {
      "documentation": "<p>Information about the Q search bar embedding experience.</p>",
      "members": {
        "InitialTopicId": {
          "documentation": "<p>The ID of the Q topic that you want to make the starting topic in the Q search bar. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p> <p>If you don't specify an initial topic, a list of all shared topics is shown in the Q bar for your readers. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the available ones in the list.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "RegisteredUserQuickSightConsoleEmbeddingConfiguration": {
      "documentation": "<p>Information about the Amazon QuickSight console that you want to embed.</p>",
      "members": {
        "InitialPath": {
          "documentation": "<p>The initial URL path for the Amazon QuickSight console. <code>InitialPath</code> is required.</p> <p>The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/DashboardId</code>. <i>DashboardId</i> is the actual ID key from the Amazon QuickSight console URL of the dashboard.</p> </li> <li> <p> <code>/analyses/AnalysisId</code>. <i>AnalysisId</i> is the actual ID key from the Amazon QuickSight console URL of the analysis.</p> </li> </ul>",
          "shape": "EntryPath"
        }
      },
      "type": "structure"
    },
    "RelationalTable": {
      "documentation": "<p>A physical table type for relational data sources.</p>",
      "members": {
        "Catalog": {
          "documentation": "<p>The catalog associated with a table.</p>",
          "shape": "RelationalTableCatalog"
        },
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "shape": "Arn"
        },
        "InputColumns": {
          "documentation": "<p>The column schema of the table.</p>",
          "shape": "InputColumnList"
        },
        "Name": {
          "documentation": "<p>The name of the relational table.</p>",
          "shape": "RelationalTableName"
        },
        "Schema": {
          "documentation": "<p>The schema name. This name applies to certain relational database engines.</p>",
          "shape": "RelationalTableSchema"
        }
      },
      "required": [
        "DataSourceArn",
        "Name",
        "InputColumns"
      ],
      "type": "structure"
    },
    "RelationalTableCatalog": {
      "max": 256,
      "type": "string"
    },
    "RelationalTableName": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "RelationalTableSchema": {
      "max": 64,
      "type": "string"
    },
    "RenameColumnOperation": {
      "documentation": "<p>A transform operation that renames a column.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The name of the column to be renamed.</p>",
          "shape": "ColumnName"
        },
        "NewColumnName": {
          "documentation": "<p>The new name for the column.</p>",
          "shape": "ColumnName"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnName"
      ],
      "type": "structure"
    },
    "ResourceExistsException": {
      "documentation": "<p>The resource specified already exists. </p>",
      "error": {
        "httpStatusCode": 409
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The resource type for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "ResourceId": {
      "type": "string"
    },
    "ResourceName": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>One or more resources can't be found.</p>",
      "error": {
        "httpStatusCode": 404
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The resource type for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "ResourcePermission": {
      "documentation": "<p>Permission for the resource.</p>",
      "members": {
        "Actions": {
          "documentation": "<p>The IAM action to grant or revoke permissions on.</p>",
          "shape": "ActionList"
        },
        "Principal": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the following:</p> <ul> <li> <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p> </li> <li> <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p> </li> <li> <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight ARN. Use this option only to share resources (templates) across Amazon Web Services accounts. (This is less common.) </p> </li> </ul>",
          "shape": "Principal"
        }
      },
      "required": [
        "Principal",
        "Actions"
      ],
      "type": "structure"
    },
    "ResourcePermissionList": {
      "max": 64,
      "member": {
        "shape": "ResourcePermission"
      },
      "min": 1,
      "type": "list"
    },
    "ResourceStatus": {
      "enum": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ],
      "type": "string"
    },
    "ResourceUnavailableException": {
      "documentation": "<p>This resource is currently unavailable.</p>",
      "error": {
        "httpStatusCode": 503
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        },
        "ResourceType": {
          "documentation": "<p>The resource type for this request.</p>",
          "shape": "ExceptionResourceType"
        }
      },
      "type": "structure"
    },
    "RestoreAnalysisRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis that you're restoring.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analysis.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId"
      ],
      "type": "structure"
    },
    "RestoreAnalysisResponse": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis that you're restoring. </p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the analysis that you're restoring.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "RestrictiveResourceId": {
      "max": 2048,
      "min": 1,
      "pattern": "[\\w\\-]+",
      "type": "string"
    },
    "RoleName": {
      "max": 64,
      "min": 1,
      "pattern": "^[a-zA-Z0-9+=,.@_-]+$",
      "type": "string"
    },
    "RoleSessionName": {
      "max": 64,
      "min": 2,
      "pattern": "[\\w+=.@-]*",
      "type": "string"
    },
    "RowInfo": {
      "documentation": "<p>Information about rows for a data set SPICE ingestion.</p>",
      "members": {
        "RowsDropped": {
          "box": true,
          "documentation": "<p>The number of rows that were not ingested.</p>",
          "shape": "Long"
        },
        "RowsIngested": {
          "box": true,
          "documentation": "<p>The number of rows that were ingested.</p>",
          "shape": "Long"
        },
        "TotalRowsInDataset": {
          "box": true,
          "documentation": "<p>The total number of rows in the dataset.</p>",
          "shape": "Long"
        }
      },
      "type": "structure"
    },
    "RowLevelPermissionDataSet": {
      "documentation": "<p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html\">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</p>",
          "shape": "Arn"
        },
        "FormatVersion": {
          "documentation": "<p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>",
          "shape": "RowLevelPermissionFormatVersion"
        },
        "Namespace": {
          "documentation": "<p>The namespace associated with the dataset that contains permissions for RLS.</p>",
          "shape": "Namespace"
        },
        "PermissionPolicy": {
          "documentation": "<p>The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.</p>",
          "shape": "RowLevelPermissionPolicy"
        },
        "Status": {
          "documentation": "<p>The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.</p>",
          "shape": "Status"
        }
      },
      "required": [
        "Arn",
        "PermissionPolicy"
      ],
      "type": "structure"
    },
    "RowLevelPermissionFormatVersion": {
      "enum": [
        "VERSION_1",
        "VERSION_2"
      ],
      "type": "string"
    },
    "RowLevelPermissionPolicy": {
      "enum": [
        "GRANT_ACCESS",
        "DENY_ACCESS"
      ],
      "type": "string"
    },
    "RowLevelPermissionTagConfiguration": {
      "documentation": "<p>The configuration of tags on a dataset to set row-level security. </p>",
      "members": {
        "Status": {
          "documentation": "<p>The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.</p>",
          "shape": "Status"
        },
        "TagRules": {
          "documentation": "<p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>",
          "shape": "RowLevelPermissionTagRuleList"
        }
      },
      "required": [
        "TagRules"
      ],
      "type": "structure"
    },
    "RowLevelPermissionTagDelimiter": {
      "max": 10,
      "type": "string"
    },
    "RowLevelPermissionTagRule": {
      "documentation": "<p>A set of rules associated with a tag.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The column name that a tag key is assigned to.</p>",
          "shape": "String"
        },
        "MatchAllValue": {
          "documentation": "<p>A string that you want to use to filter by all the values in a column in the dataset and don\u2019t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>",
          "shape": "SessionTagValue"
        },
        "TagKey": {
          "documentation": "<p>The unique key for a tag.</p>",
          "shape": "SessionTagKey"
        },
        "TagMultiValueDelimiter": {
          "documentation": "<p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>",
          "shape": "RowLevelPermissionTagDelimiter"
        }
      },
      "required": [
        "TagKey",
        "ColumnName"
      ],
      "type": "structure"
    },
    "RowLevelPermissionTagRuleList": {
      "max": 50,
      "member": {
        "shape": "RowLevelPermissionTagRule"
      },
      "min": 1,
      "type": "list"
    },
    "S3Bucket": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "S3Key": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "S3Parameters": {
      "documentation": "<p>The parameters for S3.</p>",
      "members": {
        "ManifestFileLocation": {
          "documentation": "<p>Location of the Amazon S3 manifest file. This is NULL if the manifest file was uploaded into Amazon QuickSight.</p>",
          "shape": "ManifestFileLocation"
        }
      },
      "required": [
        "ManifestFileLocation"
      ],
      "type": "structure"
    },
    "S3Source": {
      "documentation": "<p>A physical table type for an S3 data source.</p>",
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "shape": "Arn"
        },
        "InputColumns": {
          "documentation": "<p>A physical table type for an S3 data source.</p> <note> <p>For files that aren't JSON, only <code>STRING</code> data types are supported in input columns.</p> </note>",
          "shape": "InputColumnList"
        },
        "UploadSettings": {
          "documentation": "<p>Information about the format for the S3 source file or files.</p>",
          "shape": "UploadSettings"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns"
      ],
      "type": "structure"
    },
    "SearchAnalysesRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analyses that you're searching for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Filters": {
          "documentation": "<p>The structure for the search filters that you want to apply to your search. </p>",
          "shape": "AnalysisSearchFilterList"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Filters"
      ],
      "type": "structure"
    },
    "SearchAnalysesResponse": {
      "members": {
        "AnalysisSummaryList": {
          "documentation": "<p>Metadata describing the analyses that you searched for.</p>",
          "shape": "AnalysisSummaryList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request. </p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "SearchDashboardsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the user whose dashboards you're searching for. </p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Filters": {
          "documentation": "<p>The filters to apply to the search. Currently, you can search only by user name, for example, <code>\"Filters\": [ { \"Name\": \"QUICKSIGHT_USER\", \"Operator\": \"StringEquals\", \"Value\": \"arn:aws:quicksight:us-east-1:1:user/default/UserName1\" } ]</code> </p>",
          "shape": "DashboardSearchFilterList"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Filters"
      ],
      "type": "structure"
    },
    "SearchDashboardsResponse": {
      "members": {
        "DashboardSummaryList": {
          "documentation": "<p>The list of dashboards owned by the user specified in <code>Filters</code> in your request.</p>",
          "shape": "DashboardSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "SearchFoldersRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Filters": {
          "documentation": "<p>The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>\"Filters\": [ { \"Name\": \"PARENT_FOLDER_ARN\", \"Operator\": \"StringEquals\", \"Value\": \"arn:aws:quicksight:us-east-1:1:folder/folderId\" } ]</code>.</p>",
          "shape": "FolderSearchFilterList"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to be returned per request.</p>",
          "shape": "MaxResults"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Filters"
      ],
      "type": "structure"
    },
    "SearchFoldersResponse": {
      "members": {
        "FolderSummaryList": {
          "documentation": "<p>A structure that contains all of the folders in the Amazon Web Services account. This structure provides basic information about the folders.</p>",
          "shape": "FolderSummaryList"
        },
        "NextToken": {
          "documentation": "<p>The token for the next set of results, or null if there are no more results.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "SearchGroupsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Filters": {
          "documentation": "<p>The structure for the search filters that you want to apply to your search.</p>",
          "shape": "GroupSearchFilterList"
        },
        "MaxResults": {
          "box": true,
          "documentation": "<p>The maximum number of results to return from this request.</p>",
          "location": "querystring",
          "locationName": "max-results",
          "shape": "MaxResults"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want to search.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "location": "querystring",
          "locationName": "next-token",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "Namespace",
        "Filters"
      ],
      "type": "structure"
    },
    "SearchGroupsResponse": {
      "members": {
        "GroupList": {
          "documentation": "<p>A list of groups in a specified namespace that match the filters you set in your <code>SearchGroups</code> request.</p>",
          "shape": "GroupList"
        },
        "NextToken": {
          "documentation": "<p>A pagination token that can be used in a subsequent request.</p>",
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "SecretArn": {
      "max": 2048,
      "min": 1,
      "pattern": "^arn:[-a-z0-9]*:secretsmanager:[-a-z0-9]*:[0-9]{12}:secret:.+",
      "type": "string"
    },
    "ServiceNowParameters": {
      "documentation": "<p>The parameters for ServiceNow.</p>",
      "members": {
        "SiteBaseUrl": {
          "documentation": "<p>URL of the base site.</p>",
          "shape": "SiteBaseUrl"
        }
      },
      "required": [
        "SiteBaseUrl"
      ],
      "type": "structure"
    },
    "SessionLifetimeInMinutes": {
      "max": 600,
      "min": 15,
      "type": "long"
    },
    "SessionLifetimeInMinutesInvalidException": {
      "documentation": "<p>The number of minutes specified for the lifetime of a session isn't valid. The session lifetime must be 15-600 minutes.</p>",
      "error": {
        "httpStatusCode": 400
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SessionTag": {
      "documentation": "<p>The key-value pair used for the row-level security tags feature.</p>",
      "members": {
        "Key": {
          "documentation": "<p>The key for the tag.</p>",
          "shape": "SessionTagKey"
        },
        "Value": {
          "documentation": "<p>The value that you want to assign the tag.</p>",
          "shape": "SessionTagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "SessionTagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "SessionTagList": {
      "max": 50,
      "member": {
        "shape": "SessionTag"
      },
      "min": 1,
      "type": "list"
    },
    "SessionTagValue": {
      "max": 256,
      "min": 1,
      "sensitive": true,
      "type": "string"
    },
    "Sheet": {
      "documentation": "<p>A <i>sheet</i>, which is an object that contains a set of visuals that are viewed together on one page in Amazon QuickSight. Every analysis and dashboard contains at least one sheet. Each sheet contains at least one visualization widget, for example a chart, pivot table, or narrative insight. Sheets can be associated with other components, such as controls, filters, and so on.</p>",
      "members": {
        "Name": {
          "documentation": "<p>The name of a sheet. This name is displayed on the sheet's tab in the Amazon QuickSight console.</p>",
          "shape": "NonEmptyString"
        },
        "SheetId": {
          "documentation": "<p>The unique identifier associated with a sheet.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "SheetControlsOption": {
      "documentation": "<p>Sheet controls option.</p>",
      "members": {
        "VisibilityState": {
          "documentation": "<p>Visibility state.</p>",
          "shape": "DashboardUIState"
        }
      },
      "type": "structure"
    },
    "SheetList": {
      "max": 20,
      "member": {
        "shape": "Sheet"
      },
      "type": "list"
    },
    "SheetStyle": {
      "documentation": "<p>The theme display options for sheets. </p>",
      "members": {
        "Tile": {
          "documentation": "<p>The display options for tiles.</p>",
          "shape": "TileStyle"
        },
        "TileLayout": {
          "documentation": "<p>The layout options for tiles.</p>",
          "shape": "TileLayoutStyle"
        }
      },
      "type": "structure"
    },
    "SignupResponse": {
      "documentation": "<p>A <code>SignupResponse</code> object that contains a summary of a newly created account.</p>",
      "members": {
        "IAMUser": {
          "documentation": "<p>A Boolean that is <code>TRUE</code> if the Amazon QuickSight uses IAM as an authentication method.</p>",
          "shape": "Boolean"
        },
        "accountName": {
          "documentation": "<p>The name of your Amazon QuickSight account.</p>",
          "shape": "String"
        },
        "directoryType": {
          "documentation": "<p>The type of Active Directory that is being used to authenticate the Amazon QuickSight account. Valid values are <code>SIMPLE_AD</code>, <code>AD_CONNECTOR</code>, and <code>MICROSOFT_AD</code>.</p>",
          "shape": "String"
        },
        "userLoginName": {
          "documentation": "<p>The user login name for your Amazon QuickSight account.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SiteBaseUrl": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "SnowflakeParameters": {
      "documentation": "<p>The parameters for Snowflake.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Warehouse": {
          "documentation": "<p>Warehouse.</p>",
          "shape": "Warehouse"
        }
      },
      "required": [
        "Host",
        "Database",
        "Warehouse"
      ],
      "type": "structure"
    },
    "SparkParameters": {
      "documentation": "<p>The parameters for Spark.</p>",
      "members": {
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port"
      ],
      "type": "structure"
    },
    "SqlQuery": {
      "max": 65536,
      "min": 1,
      "type": "string"
    },
    "SqlServerParameters": {
      "documentation": "<p>The parameters for SQL Server.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "SslProperties": {
      "documentation": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.</p>",
      "members": {
        "DisableSsl": {
          "documentation": "<p>A Boolean option to control whether SSL should be disabled.</p>",
          "shape": "Boolean"
        }
      },
      "type": "structure"
    },
    "Status": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "StatusCode": {
      "type": "integer"
    },
    "String": {
      "type": "string"
    },
    "StringList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "StringParameter": {
      "documentation": "<p>A string parameter.</p>",
      "members": {
        "Name": {
          "documentation": "<p>A display name for a string parameter.</p>",
          "shape": "NonEmptyString"
        },
        "Values": {
          "documentation": "<p>The values of a string parameter.</p>",
          "shape": "StringList"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "structure"
    },
    "StringParameterList": {
      "max": 100,
      "member": {
        "shape": "StringParameter"
      },
      "type": "list"
    },
    "Tag": {
      "documentation": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
      "members": {
        "Key": {
          "documentation": "<p>Tag key.</p>",
          "shape": "TagKey"
        },
        "Value": {
          "documentation": "<p>Tag value.</p>",
          "shape": "TagValue"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "structure"
    },
    "TagColumnOperation": {
      "documentation": "<p>A transform operation that tags a column with additional information.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The column that this operation acts on.</p>",
          "shape": "ColumnName"
        },
        "Tags": {
          "documentation": "<p>The dataset column tag, currently only used for geospatial type tagging.</p> <note> <p>This is not tags for the Amazon Web Services tagging feature.</p> </note>",
          "shape": "ColumnTagList"
        }
      },
      "required": [
        "ColumnName",
        "Tags"
      ],
      "type": "structure"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "TagKeyList": {
      "max": 200,
      "member": {
        "shape": "TagKey"
      },
      "min": 1,
      "type": "list"
    },
    "TagList": {
      "max": 200,
      "member": {
        "shape": "Tag"
      },
      "min": 1,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to tag.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "Tags": {
          "documentation": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "shape": "TagList"
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 1,
      "type": "string"
    },
    "Template": {
      "documentation": "<p>A template object. A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>Time when this was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>Time when this was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The display name of the template.</p>",
          "shape": "TemplateName"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template. This is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Version": {
          "documentation": "<p>A structure describing the versions of the template.</p>",
          "shape": "TemplateVersion"
        }
      },
      "type": "structure"
    },
    "TemplateAlias": {
      "documentation": "<p>The template alias.</p>",
      "members": {
        "AliasName": {
          "documentation": "<p>The display name of the template alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template alias.</p>",
          "shape": "Arn"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template alias.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateAliasList": {
      "max": 100,
      "member": {
        "shape": "TemplateAlias"
      },
      "type": "list"
    },
    "TemplateError": {
      "documentation": "<p>List of errors that occurred when the template version creation failed.</p>",
      "members": {
        "Message": {
          "documentation": "<p>Description of the error type.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>Type of error.</p>",
          "shape": "TemplateErrorType"
        }
      },
      "type": "structure"
    },
    "TemplateErrorList": {
      "member": {
        "shape": "TemplateError"
      },
      "min": 1,
      "type": "list"
    },
    "TemplateErrorType": {
      "enum": [
        "SOURCE_NOT_FOUND",
        "DATA_SET_NOT_FOUND",
        "INTERNAL_FAILURE",
        "ACCESS_DENIED"
      ],
      "type": "string"
    },
    "TemplateName": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "TemplateSourceAnalysis": {
      "documentation": "<p>The source analysis of the template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "DataSetReferences": {
          "documentation": "<p>A structure containing information about the dataset references used as placeholders in the template.</p>",
          "shape": "DataSetReferenceList"
        }
      },
      "required": [
        "Arn",
        "DataSetReferences"
      ],
      "type": "structure"
    },
    "TemplateSourceEntity": {
      "documentation": "<p>The source entity of the template.</p>",
      "members": {
        "SourceAnalysis": {
          "documentation": "<p>The source analysis, if it is based on an analysis.</p>",
          "shape": "TemplateSourceAnalysis"
        },
        "SourceTemplate": {
          "documentation": "<p>The source template, if it is based on an template.</p>",
          "shape": "TemplateSourceTemplate"
        }
      },
      "type": "structure"
    },
    "TemplateSourceTemplate": {
      "documentation": "<p>The source template of the template.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "Arn"
      ],
      "type": "structure"
    },
    "TemplateSummary": {
      "documentation": "<p>The template summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>A summary of a template.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The last time that this template was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last time that this template was updated.</p>",
          "shape": "Timestamp"
        },
        "LatestVersionNumber": {
          "documentation": "<p>A structure containing a list of version numbers for the template summary.</p>",
          "shape": "VersionNumber"
        },
        "Name": {
          "documentation": "<p>A display name for the template.</p>",
          "shape": "TemplateName"
        },
        "TemplateId": {
          "documentation": "<p>The ID of the template. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "TemplateSummaryList": {
      "max": 100,
      "member": {
        "shape": "TemplateSummary"
      },
      "type": "list"
    },
    "TemplateVersion": {
      "documentation": "<p>A version of a template.</p>",
      "members": {
        "CreatedTime": {
          "documentation": "<p>The time that this template version was created.</p>",
          "shape": "Timestamp"
        },
        "DataSetConfigurations": {
          "documentation": "<p>Schema of the dataset identified by the placeholder. Any dashboard created from this template should be bound to new datasets matching the same schema described through this API operation.</p>",
          "shape": "DataSetConfigurationList"
        },
        "Description": {
          "documentation": "<p>The description of the template.</p>",
          "shape": "VersionDescription"
        },
        "Errors": {
          "documentation": "<p>Errors associated with this template version.</p>",
          "shape": "TemplateErrorList"
        },
        "Sheets": {
          "documentation": "<p>A list of the associated sheets with the unique identifier and name of each sheet.</p>",
          "shape": "SheetList"
        },
        "SourceEntityArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of an analysis or template that was used to create this template.</p>",
          "shape": "Arn"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "ThemeArn": {
          "documentation": "<p>The ARN of the theme associated with this version of the template.</p>",
          "shape": "Arn"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the template version.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateVersionSummary": {
      "documentation": "<p>The template version.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template version.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The time that this template version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the template version.</p>",
          "shape": "VersionDescription"
        },
        "Status": {
          "documentation": "<p>The status of the template version.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the template version.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "TemplateVersionSummaryList": {
      "max": 100,
      "member": {
        "shape": "TemplateVersionSummary"
      },
      "type": "list"
    },
    "TeradataParameters": {
      "documentation": "<p>The parameters for Teradata.</p>",
      "members": {
        "Database": {
          "documentation": "<p>Database.</p>",
          "shape": "Database"
        },
        "Host": {
          "documentation": "<p>Host.</p>",
          "shape": "Host"
        },
        "Port": {
          "documentation": "<p>Port.</p>",
          "shape": "Port"
        }
      },
      "required": [
        "Host",
        "Port",
        "Database"
      ],
      "type": "structure"
    },
    "TextQualifier": {
      "enum": [
        "DOUBLE_QUOTE",
        "SINGLE_QUOTE"
      ],
      "type": "string"
    },
    "Theme": {
      "documentation": "<p>Summary information about a theme.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The date and time that the theme was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The date and time that the theme was last updated.</p>",
          "shape": "Timestamp"
        },
        "Name": {
          "documentation": "<p>The name that the user gives to the theme.</p>",
          "shape": "ThemeName"
        },
        "ThemeId": {
          "documentation": "<p>The identifier that the user gives to the theme.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Type": {
          "documentation": "<p>The type of theme, based on how it was created. Valid values include: <code>QUICKSIGHT</code> and <code>CUSTOM</code>.</p>",
          "shape": "ThemeType"
        },
        "Version": {
          "shape": "ThemeVersion"
        }
      },
      "type": "structure"
    },
    "ThemeAlias": {
      "documentation": "<p>An alias for a theme.</p>",
      "members": {
        "AliasName": {
          "documentation": "<p>The display name of the theme alias.</p>",
          "shape": "AliasName"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme alias.</p>",
          "shape": "Arn"
        },
        "ThemeVersionNumber": {
          "documentation": "<p>The version number of the theme alias.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ThemeAliasList": {
      "max": 100,
      "member": {
        "shape": "ThemeAlias"
      },
      "type": "list"
    },
    "ThemeConfiguration": {
      "documentation": "<p>The theme configuration. This configuration contains all of the display properties for a theme.</p>",
      "members": {
        "DataColorPalette": {
          "documentation": "<p>Color properties that apply to chart data colors.</p>",
          "shape": "DataColorPalette"
        },
        "Sheet": {
          "documentation": "<p>Display options related to sheets.</p>",
          "shape": "SheetStyle"
        },
        "UIColorPalette": {
          "documentation": "<p>Color properties that apply to the UI and to charts, excluding the colors that apply to data. </p>",
          "shape": "UIColorPalette"
        }
      },
      "type": "structure"
    },
    "ThemeError": {
      "documentation": "<p>Theme error.</p>",
      "members": {
        "Message": {
          "documentation": "<p>The error message.</p>",
          "shape": "NonEmptyString"
        },
        "Type": {
          "documentation": "<p>The type of error.</p>",
          "shape": "ThemeErrorType"
        }
      },
      "type": "structure"
    },
    "ThemeErrorList": {
      "member": {
        "shape": "ThemeError"
      },
      "min": 1,
      "type": "list"
    },
    "ThemeErrorType": {
      "enum": [
        "INTERNAL_FAILURE"
      ],
      "type": "string"
    },
    "ThemeName": {
      "max": 2048,
      "min": 1,
      "type": "string"
    },
    "ThemeSummary": {
      "documentation": "<p>The theme summary.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The date and time that this theme was created.</p>",
          "shape": "Timestamp"
        },
        "LastUpdatedTime": {
          "documentation": "<p>The last date and time that this theme was updated.</p>",
          "shape": "Timestamp"
        },
        "LatestVersionNumber": {
          "documentation": "<p>The latest version number for the theme. </p>",
          "shape": "VersionNumber"
        },
        "Name": {
          "documentation": "<p>the display name for the theme.</p>",
          "shape": "ThemeName"
        },
        "ThemeId": {
          "documentation": "<p>The ID of the theme. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "ThemeSummaryList": {
      "max": 100,
      "member": {
        "shape": "ThemeSummary"
      },
      "type": "list"
    },
    "ThemeType": {
      "enum": [
        "QUICKSIGHT",
        "CUSTOM",
        "ALL"
      ],
      "type": "string"
    },
    "ThemeVersion": {
      "documentation": "<p>A version of a theme.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "BaseThemeId": {
          "documentation": "<p>The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Configuration": {
          "documentation": "<p>The theme configuration, which contains all the theme display properties.</p>",
          "shape": "ThemeConfiguration"
        },
        "CreatedTime": {
          "documentation": "<p>The date and time that this theme version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the theme.</p>",
          "shape": "VersionDescription"
        },
        "Errors": {
          "documentation": "<p>Errors associated with the theme.</p>",
          "shape": "ThemeErrorList"
        },
        "Status": {
          "documentation": "<p>The status of the theme version.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the theme.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ThemeVersionSummary": {
      "documentation": "<p>The theme version.</p>",
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme version.</p>",
          "shape": "Arn"
        },
        "CreatedTime": {
          "documentation": "<p>The date and time that this theme version was created.</p>",
          "shape": "Timestamp"
        },
        "Description": {
          "documentation": "<p>The description of the theme version.</p>",
          "shape": "VersionDescription"
        },
        "Status": {
          "documentation": "<p>The status of the theme version.</p>",
          "shape": "ResourceStatus"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the theme version.</p>",
          "shape": "VersionNumber"
        }
      },
      "type": "structure"
    },
    "ThemeVersionSummaryList": {
      "max": 100,
      "member": {
        "shape": "ThemeVersionSummary"
      },
      "type": "list"
    },
    "ThrottlingException": {
      "documentation": "<p>Access is throttled.</p>",
      "error": {
        "httpStatusCode": 429
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "TileLayoutStyle": {
      "documentation": "<p>The display options for the layout of tiles on a sheet.</p>",
      "members": {
        "Gutter": {
          "documentation": "<p>The gutter settings that apply between tiles. </p>",
          "shape": "GutterStyle"
        },
        "Margin": {
          "documentation": "<p>The margin settings that apply around the outside edge of sheets.</p>",
          "shape": "MarginStyle"
        }
      },
      "type": "structure"
    },
    "TileStyle": {
      "documentation": "<p>Display options related to tiles on a sheet.</p>",
      "members": {
        "Border": {
          "documentation": "<p>The border around a tile.</p>",
          "shape": "BorderStyle"
        }
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TimestampList": {
      "member": {
        "shape": "Timestamp"
      },
      "type": "list"
    },
    "TransformOperation": {
      "documentation": "<p>A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.</p>",
      "members": {
        "CastColumnTypeOperation": {
          "documentation": "<p>A transform operation that casts a column to a different type.</p>",
          "shape": "CastColumnTypeOperation"
        },
        "CreateColumnsOperation": {
          "documentation": "<p>An operation that creates calculated columns. Columns created in one such operation form a lexical closure.</p>",
          "shape": "CreateColumnsOperation"
        },
        "FilterOperation": {
          "documentation": "<p>An operation that filters rows based on some condition.</p>",
          "shape": "FilterOperation"
        },
        "ProjectOperation": {
          "documentation": "<p>An operation that projects columns. Operations that come after a projection can only refer to projected columns.</p>",
          "shape": "ProjectOperation"
        },
        "RenameColumnOperation": {
          "documentation": "<p>An operation that renames a column.</p>",
          "shape": "RenameColumnOperation"
        },
        "TagColumnOperation": {
          "documentation": "<p>An operation that tags a column with additional information.</p>",
          "shape": "TagColumnOperation"
        },
        "UntagColumnOperation": {
          "shape": "UntagColumnOperation"
        }
      },
      "type": "structure"
    },
    "TransformOperationList": {
      "max": 2048,
      "member": {
        "shape": "TransformOperation"
      },
      "min": 1,
      "type": "list"
    },
    "TwitterParameters": {
      "documentation": "<p>The parameters for Twitter.</p>",
      "members": {
        "MaxRows": {
          "documentation": "<p>Maximum number of rows to query Twitter.</p>",
          "shape": "PositiveInteger"
        },
        "Query": {
          "documentation": "<p>Twitter query string.</p>",
          "shape": "Query"
        }
      },
      "required": [
        "Query",
        "MaxRows"
      ],
      "type": "structure"
    },
    "TypeCastFormat": {
      "max": 32,
      "type": "string"
    },
    "UIColorPalette": {
      "documentation": "<p>The theme colors that apply to UI and to charts, excluding data colors. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html\">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> </p>",
      "members": {
        "Accent": {
          "documentation": "<p>This color is that applies to selected states and buttons.</p>",
          "shape": "HexColor"
        },
        "AccentForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the accent color.</p>",
          "shape": "HexColor"
        },
        "Danger": {
          "documentation": "<p>The color that applies to error messages.</p>",
          "shape": "HexColor"
        },
        "DangerForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the error color.</p>",
          "shape": "HexColor"
        },
        "Dimension": {
          "documentation": "<p>The color that applies to the names of fields that are identified as dimensions.</p>",
          "shape": "HexColor"
        },
        "DimensionForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the dimension color.</p>",
          "shape": "HexColor"
        },
        "Measure": {
          "documentation": "<p>The color that applies to the names of fields that are identified as measures.</p>",
          "shape": "HexColor"
        },
        "MeasureForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the measure color.</p>",
          "shape": "HexColor"
        },
        "PrimaryBackground": {
          "documentation": "<p>The background color that applies to visuals and other high emphasis UI.</p>",
          "shape": "HexColor"
        },
        "PrimaryForeground": {
          "documentation": "<p>The color of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.</p>",
          "shape": "HexColor"
        },
        "SecondaryBackground": {
          "documentation": "<p>The background color that applies to the sheet background and sheet controls.</p>",
          "shape": "HexColor"
        },
        "SecondaryForeground": {
          "documentation": "<p>The foreground color that applies to any sheet title, sheet control text, or UI that appears over the secondary background.</p>",
          "shape": "HexColor"
        },
        "Success": {
          "documentation": "<p>The color that applies to success messages, for example the check mark for a successful download.</p>",
          "shape": "HexColor"
        },
        "SuccessForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the success color.</p>",
          "shape": "HexColor"
        },
        "Warning": {
          "documentation": "<p>This color that applies to warning and informational messages.</p>",
          "shape": "HexColor"
        },
        "WarningForeground": {
          "documentation": "<p>The foreground color that applies to any text or other elements that appear over the warning color.</p>",
          "shape": "HexColor"
        }
      },
      "type": "structure"
    },
    "UnsupportedPricingPlanException": {
      "documentation": "<p>This error indicates that you are calling an embedding operation in Amazon QuickSight without the required pricing plan on your Amazon Web Services account. Before you can use embedding for anonymous users, a QuickSight administrator needs to add capacity pricing to Amazon QuickSight. You can do this on the <b>Manage Amazon QuickSight</b> page. </p> <p>After capacity pricing is added, you can use the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GetDashboardEmbedUrl.html\">GetDashboardEmbedUrl</a> </code> API operation with the <code>--identity-type ANONYMOUS</code> option.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UnsupportedUserEditionException": {
      "documentation": "<p>This error indicates that you are calling an operation on an Amazon QuickSight subscription where the edition doesn't include support for that operation. Amazon Amazon QuickSight currently has Standard Edition and Enterprise Edition. Not every operation and capability is available in every edition.</p>",
      "error": {
        "httpStatusCode": 403
      },
      "exception": true,
      "members": {
        "Message": {
          "shape": "String"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this request.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "UntagColumnOperation": {
      "documentation": "<p>A transform operation that removes tags associated with a column.</p>",
      "members": {
        "ColumnName": {
          "documentation": "<p>The column that this operation acts on.</p>",
          "shape": "ColumnName"
        },
        "TagNames": {
          "documentation": "<p>The column tags to remove from this column.</p>",
          "shape": "ColumnTagNames"
        }
      },
      "required": [
        "ColumnName",
        "TagNames"
      ],
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "ResourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource that you want to untag.</p>",
          "location": "uri",
          "locationName": "ResourceArn",
          "shape": "Arn"
        },
        "TagKeys": {
          "documentation": "<p>The keys of the key-value pairs for the resource tag or tags assigned to the resource.</p>",
          "location": "querystring",
          "locationName": "keys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateAccountCustomizationRequest": {
      "members": {
        "AccountCustomization": {
          "documentation": "<p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>",
          "shape": "AccountCustomization"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace that you want to update Amazon QuickSight customizations for.</p>",
          "location": "querystring",
          "locationName": "namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "AwsAccountId",
        "AccountCustomization"
      ],
      "type": "structure"
    },
    "UpdateAccountCustomizationResponse": {
      "members": {
        "AccountCustomization": {
          "documentation": "<p>The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. </p>",
          "shape": "AccountCustomization"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the updated customization for this Amazon Web Services account.</p>",
          "shape": "Arn"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.</p>",
          "shape": "AwsAccountId"
        },
        "Namespace": {
          "documentation": "<p>The namespace associated with the customization that you're updating.</p>",
          "shape": "Namespace"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateAccountSettingsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the Amazon QuickSight settings that you want to list.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DefaultNamespace": {
          "documentation": "<p>The default namespace for this Amazon Web Services account. Currently, the default is <code>default</code>. Identity and Access Management (IAM) users that register for the first time with Amazon QuickSight provide an email address that becomes associated with the default namespace. </p>",
          "shape": "Namespace"
        },
        "NotificationEmail": {
          "documentation": "<p>The email address that you want Amazon QuickSight to send notifications to regarding your Amazon Web Services account or Amazon QuickSight subscription.</p>",
          "shape": "String"
        }
      },
      "required": [
        "AwsAccountId",
        "DefaultNamespace"
      ],
      "type": "structure"
    },
    "UpdateAccountSettingsResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateAnalysisPermissionsRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis whose permissions you're updating. The ID is part of the analysis URL.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analysis whose permissions you're updating. You must be using the Amazon Web Services account that the analysis is in.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GrantPermissions": {
          "documentation": "<p>A structure that describes the permissions to add and the principal to add them to.</p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A structure that describes the permissions to remove and the principal to remove them from.</p>",
          "shape": "UpdateResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId"
      ],
      "type": "structure"
    },
    "UpdateAnalysisPermissionsResponse": {
      "members": {
        "AnalysisArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the analysis that you updated.</p>",
          "shape": "Arn"
        },
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis that you updated permissions for.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>A structure that describes the principals and the resource-level permissions on an analysis.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateAnalysisRequest": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID for the analysis that you're updating. This ID displays in the URL of the analysis.</p>",
          "location": "uri",
          "locationName": "AnalysisId",
          "shape": "RestrictiveResourceId"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the analysis that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>A descriptive name for the analysis that you're updating. This name displays for the analysis in the Amazon QuickSight console.</p>",
          "shape": "AnalysisName"
        },
        "Parameters": {
          "documentation": "<p>The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. </p>",
          "shape": "Parameters"
        },
        "SourceEntity": {
          "documentation": "<p>A source entity to use for the analysis that you're updating. This metadata structure contains details that describe a source template and one or more datasets.</p>",
          "shape": "AnalysisSourceEntity"
        },
        "ThemeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AnalysisId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "UpdateAnalysisResponse": {
      "members": {
        "AnalysisId": {
          "documentation": "<p>The ID of the analysis.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Arn": {
          "documentation": "<p>The ARN of the analysis that you're updating.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "UpdateStatus": {
          "documentation": "<p>The update status of the last update that was made to the analysis.</p>",
          "shape": "ResourceStatus"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard whose permissions you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "GrantLinkPermissions": {
          "documentation": "<p>Grants link permissions to all users in a defined namespace.</p>",
          "shape": "UpdateLinkPermissionList"
        },
        "GrantPermissions": {
          "documentation": "<p>The permissions that you want to grant on this resource.</p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokeLinkPermissions": {
          "documentation": "<p>Revokes link permissions from all users in a defined namespace.</p>",
          "shape": "UpdateLinkPermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>The permissions that you want to revoke from this resource.</p>",
          "shape": "UpdateResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId"
      ],
      "type": "structure"
    },
    "UpdateDashboardPermissionsResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "LinkSharingConfiguration": {
          "documentation": "<p>Updates the permissions of a shared link to an Amazon QuickSight dashboard.</p>",
          "shape": "LinkSharingConfiguration"
        },
        "Permissions": {
          "documentation": "<p>Information about the permissions on the dashboard.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardPublishedVersionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "VersionNumber": {
          "documentation": "<p>The version number of the dashboard.</p>",
          "location": "uri",
          "locationName": "VersionNumber",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "VersionNumber"
      ],
      "type": "structure"
    },
    "UpdateDashboardPublishedVersionResponse": {
      "members": {
        "DashboardArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dashboard.</p>",
          "shape": "Arn"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDashboardRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the dashboard that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "location": "uri",
          "locationName": "DashboardId",
          "shape": "RestrictiveResourceId"
        },
        "DashboardPublishOptions": {
          "documentation": "<p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>",
          "shape": "DashboardPublishOptions"
        },
        "Name": {
          "documentation": "<p>The display name of the dashboard.</p>",
          "shape": "DashboardName"
        },
        "Parameters": {
          "documentation": "<p>A structure that contains the parameters of the dashboard. These are parameter overrides for a dashboard. A dashboard can have any type of parameters, and some parameters might accept multiple values.</p>",
          "shape": "Parameters"
        },
        "SourceEntity": {
          "documentation": "<p>The entity that you are using as a source when you update the dashboard. In <code>SourceEntity</code>, you specify the type of object you're using as source. You can only update a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to update a dashboard from an analysis, first convert the analysis to a template by using the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html\">CreateTemplate</a> </code> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>",
          "shape": "DashboardSourceEntity"
        },
        "ThemeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.</p>",
          "shape": "Arn"
        },
        "VersionDescription": {
          "documentation": "<p>A description for the first version of the dashboard being created.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "DashboardId",
        "Name",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "UpdateDashboardResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of the request.</p>",
          "shape": "ResourceStatus"
        },
        "DashboardId": {
          "documentation": "<p>The ID for the dashboard.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "StatusCode"
        },
        "VersionArn": {
          "documentation": "<p>The ARN of the dashboard, including the version number.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateDataSetPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>The resource permissions that you want to grant to the dataset.</p>",
          "shape": "ResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>The resource permissions that you want to revoke from the dataset.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId"
      ],
      "type": "structure"
    },
    "UpdateDataSetPermissionsResponse": {
      "members": {
        "DataSetArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSetRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ColumnGroups": {
          "documentation": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
          "shape": "ColumnGroupList"
        },
        "ColumnLevelPermissionRules": {
          "documentation": "<p>A set of one or more definitions of a <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a> </code>.</p>",
          "shape": "ColumnLevelPermissionRuleList"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "DataSetId",
          "shape": "ResourceId"
        },
        "DataSetUsageConfiguration": {
          "shape": "DataSetUsageConfiguration"
        },
        "FieldFolders": {
          "documentation": "<p>The folder that contains fields and nested subfolders for your dataset.</p>",
          "shape": "FieldFolderMap"
        },
        "ImportMode": {
          "documentation": "<p>Indicates whether you want to import the data into SPICE.</p>",
          "shape": "DataSetImportMode"
        },
        "LogicalTableMap": {
          "documentation": "<p>Configures the combination and transformation of the data from the physical tables.</p>",
          "shape": "LogicalTableMap"
        },
        "Name": {
          "documentation": "<p>The display name for the dataset.</p>",
          "shape": "ResourceName"
        },
        "PhysicalTableMap": {
          "documentation": "<p>Declares the physical tables that are available in the underlying data sources.</p>",
          "shape": "PhysicalTableMap"
        },
        "RowLevelPermissionDataSet": {
          "documentation": "<p>The row-level security configuration for the data you want to create.</p>",
          "shape": "RowLevelPermissionDataSet"
        },
        "RowLevelPermissionTagConfiguration": {
          "documentation": "<p>The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.</p>",
          "shape": "RowLevelPermissionTagConfiguration"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSetId",
        "Name",
        "PhysicalTableMap",
        "ImportMode"
      ],
      "type": "structure"
    },
    "UpdateDataSetResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the dataset.</p>",
          "shape": "Arn"
        },
        "DataSetId": {
          "documentation": "<p>The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "IngestionArn": {
          "documentation": "<p>The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "Arn"
        },
        "IngestionId": {
          "documentation": "<p>The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSourcePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. </p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>A list of resource permissions that you want to grant on the data source.</p>",
          "shape": "ResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A list of resource permissions that you want to revoke on the data source.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId"
      ],
      "type": "structure"
    },
    "UpdateDataSourcePermissionsResponse": {
      "members": {
        "DataSourceArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateDataSourceRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Credentials": {
          "documentation": "<p>The credentials that Amazon QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.</p>",
          "shape": "DataSourceCredentials"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. </p>",
          "location": "uri",
          "locationName": "DataSourceId",
          "shape": "ResourceId"
        },
        "DataSourceParameters": {
          "documentation": "<p>The parameters that Amazon QuickSight uses to connect to your underlying source.</p>",
          "shape": "DataSourceParameters"
        },
        "Name": {
          "documentation": "<p>A display name for the data source.</p>",
          "shape": "ResourceName"
        },
        "SslProperties": {
          "documentation": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.</p>",
          "shape": "SslProperties"
        },
        "VpcConnectionProperties": {
          "documentation": "<p>Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.</p>",
          "shape": "VpcConnectionProperties"
        }
      },
      "required": [
        "AwsAccountId",
        "DataSourceId",
        "Name"
      ],
      "type": "structure"
    },
    "UpdateDataSourceResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "shape": "Arn"
        },
        "DataSourceId": {
          "documentation": "<p>The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.</p>",
          "shape": "ResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "UpdateStatus": {
          "documentation": "<p>The update status of the data source's last update.</p>",
          "shape": "ResourceStatus"
        }
      },
      "type": "structure"
    },
    "UpdateFolderPermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder to update.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "GrantPermissions": {
          "documentation": "<p>The permissions that you want to grant on a resource.</p>",
          "shape": "ResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>The permissions that you want to revoke from a resource.</p>",
          "shape": "ResourcePermissionList"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId"
      ],
      "type": "structure"
    },
    "UpdateFolderPermissionsResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Permissions": {
          "documentation": "<p>Information about the permissions for the folder.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateFolderRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that contains the folder to update.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "location": "uri",
          "locationName": "FolderId",
          "shape": "RestrictiveResourceId"
        },
        "Name": {
          "documentation": "<p>The name of the folder.</p>",
          "shape": "FolderName"
        }
      },
      "required": [
        "AwsAccountId",
        "FolderId",
        "Name"
      ],
      "type": "structure"
    },
    "UpdateFolderResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the folder.</p>",
          "shape": "Arn"
        },
        "FolderId": {
          "documentation": "<p>The ID of the folder.</p>",
          "shape": "RestrictiveResourceId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateGroupRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Description": {
          "documentation": "<p>The description for the group that you want to update.</p>",
          "shape": "GroupDescription"
        },
        "GroupName": {
          "documentation": "<p>The name of the group that you want to update.</p>",
          "location": "uri",
          "locationName": "GroupName",
          "shape": "GroupName"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the group that you want to update.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        }
      },
      "required": [
        "GroupName",
        "AwsAccountId",
        "Namespace"
      ],
      "type": "structure"
    },
    "UpdateGroupResponse": {
      "members": {
        "Group": {
          "documentation": "<p>The name of the group.</p>",
          "shape": "Group"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateIAMPolicyAssignmentRequest": {
      "members": {
        "AssignmentName": {
          "documentation": "<p>The name of the assignment, also called a rule. This name must be unique within an Amazon Web Services account.</p>",
          "location": "uri",
          "locationName": "AssignmentName",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the IAM policy assignment. </p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Identities": {
          "documentation": "<p>The Amazon QuickSight users, groups, or both that you want to assign the policy to.</p>",
          "shape": "IdentityMap"
        },
        "Namespace": {
          "documentation": "<p>The namespace of the assignment.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "AwsAccountId",
        "AssignmentName",
        "Namespace"
      ],
      "type": "structure"
    },
    "UpdateIAMPolicyAssignmentResponse": {
      "members": {
        "AssignmentId": {
          "documentation": "<p>The ID of the assignment.</p>",
          "shape": "String"
        },
        "AssignmentName": {
          "documentation": "<p>The name of the assignment or rule.</p>",
          "shape": "IAMPolicyAssignmentName"
        },
        "AssignmentStatus": {
          "documentation": "<p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>",
          "shape": "AssignmentStatus"
        },
        "Identities": {
          "documentation": "<p>The Amazon QuickSight users, groups, or both that the IAM policy is assigned to.</p>",
          "shape": "IdentityMap"
        },
        "PolicyArn": {
          "documentation": "<p>The ARN for the IAM policy applied to the Amazon QuickSight users and groups specified in this assignment.</p>",
          "shape": "Arn"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateIpRestrictionRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the IP rules.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Enabled": {
          "documentation": "<p>A value that specifies whether IP rules are turned on.</p>",
          "shape": "NullableBoolean"
        },
        "IpRestrictionRuleMap": {
          "documentation": "<p>A map that describes the updated IP rules with CIDR ranges and descriptions.</p>",
          "shape": "IpRestrictionRuleMap"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "UpdateIpRestrictionResponse": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the IP rules.</p>",
          "shape": "AwsAccountId"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request. </p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateLinkPermissionList": {
      "max": 2,
      "member": {
        "shape": "ResourcePermission"
      },
      "type": "list"
    },
    "UpdatePublicSharingSettingsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The Amazon Web Services account ID associated with your Amazon QuickSight subscription.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "PublicSharingEnabled": {
          "documentation": "<p>A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "AwsAccountId"
      ],
      "type": "structure"
    },
    "UpdatePublicSharingSettingsResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        }
      },
      "type": "structure"
    },
    "UpdateResourcePermissionList": {
      "max": 100,
      "member": {
        "shape": "ResourcePermission"
      },
      "type": "list"
    },
    "UpdateTemplateAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template alias that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "TemplateVersionNumber": {
          "documentation": "<p>The version number of the template.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "AliasName",
        "TemplateVersionNumber"
      ],
      "type": "structure"
    },
    "UpdateTemplateAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateAlias": {
          "documentation": "<p>The template alias.</p>",
          "shape": "TemplateAlias"
        }
      },
      "type": "structure"
    },
    "UpdateTemplatePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GrantPermissions": {
          "documentation": "<p>A list of resource permissions to be granted on the template. </p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A list of resource permissions to be revoked from the template. </p>",
          "shape": "UpdateResourcePermissionList"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId"
      ],
      "type": "structure"
    },
    "UpdateTemplatePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>A list of resource permissions to be set on the template.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "Arn"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "UpdateTemplateRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the template that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "Name": {
          "documentation": "<p>The name for the template.</p>",
          "shape": "TemplateName"
        },
        "SourceEntity": {
          "documentation": "<p>The entity that you are using as a source when you update the template. In <code>SourceEntity</code>, you specify the type of object you're using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>",
          "shape": "TemplateSourceEntity"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "location": "uri",
          "locationName": "TemplateId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "TemplateId",
        "SourceEntity"
      ],
      "type": "structure"
    },
    "UpdateTemplateResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the template.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of the template.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "TemplateId": {
          "documentation": "<p>The ID for the template.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The ARN for the template, including the version information of the first version.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateThemeAliasRequest": {
      "members": {
        "AliasName": {
          "documentation": "<p>The name of the theme alias that you want to update.</p>",
          "location": "uri",
          "locationName": "AliasName",
          "shape": "AliasName"
        },
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme alias that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "ThemeVersionNumber": {
          "documentation": "<p>The version number of the theme that the alias should reference.</p>",
          "shape": "VersionNumber"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "AliasName",
        "ThemeVersionNumber"
      ],
      "type": "structure"
    },
    "UpdateThemeAliasResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeAlias": {
          "documentation": "<p>Information about the theme alias.</p>",
          "shape": "ThemeAlias"
        }
      },
      "type": "structure"
    },
    "UpdateThemePermissionsRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "GrantPermissions": {
          "documentation": "<p>A list of resource permissions to be granted for the theme.</p>",
          "shape": "UpdateResourcePermissionList"
        },
        "RevokePermissions": {
          "documentation": "<p>A list of resource permissions to be revoked from the theme.</p>",
          "shape": "UpdateResourcePermissionList"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId"
      ],
      "type": "structure"
    },
    "UpdateThemePermissionsResponse": {
      "members": {
        "Permissions": {
          "documentation": "<p>The resulting list of resource permissions for the theme.</p>",
          "shape": "ResourcePermissionList"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the theme.</p>",
          "shape": "Arn"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "shape": "RestrictiveResourceId"
        }
      },
      "type": "structure"
    },
    "UpdateThemeRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID of the Amazon Web Services account that contains the theme that you're updating.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "BaseThemeId": {
          "documentation": "<p>The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.</p>",
          "shape": "RestrictiveResourceId"
        },
        "Configuration": {
          "documentation": "<p>The theme configuration, which contains the theme display properties.</p>",
          "shape": "ThemeConfiguration"
        },
        "Name": {
          "documentation": "<p>The name for the theme.</p>",
          "shape": "ThemeName"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "location": "uri",
          "locationName": "ThemeId",
          "shape": "RestrictiveResourceId"
        },
        "VersionDescription": {
          "documentation": "<p>A description of the theme version that you're updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.</p>",
          "shape": "VersionDescription"
        }
      },
      "required": [
        "AwsAccountId",
        "ThemeId",
        "BaseThemeId"
      ],
      "type": "structure"
    },
    "UpdateThemeResponse": {
      "members": {
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the theme.</p>",
          "shape": "Arn"
        },
        "CreationStatus": {
          "documentation": "<p>The creation status of the theme.</p>",
          "shape": "ResourceStatus"
        },
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "ThemeId": {
          "documentation": "<p>The ID for the theme.</p>",
          "shape": "RestrictiveResourceId"
        },
        "VersionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the new version of the theme.</p>",
          "shape": "Arn"
        }
      },
      "type": "structure"
    },
    "UpdateUserRequest": {
      "members": {
        "AwsAccountId": {
          "documentation": "<p>The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.</p>",
          "location": "uri",
          "locationName": "AwsAccountId",
          "shape": "AwsAccountId"
        },
        "CustomFederationProviderUrl": {
          "documentation": "<p>The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.</p>",
          "shape": "String"
        },
        "CustomPermissionsName": {
          "documentation": "<p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>",
          "shape": "RoleName"
        },
        "Email": {
          "documentation": "<p>The email address of the user that you want to update.</p>",
          "shape": "String"
        },
        "ExternalLoginFederationProviderType": {
          "documentation": "<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don\u2019t use the \"CustomFederationProviderUrl\" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use the <code> <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeUser.html\">DescribeUser</a> </code> API operation to check the external login information.</p> </li> </ul>",
          "shape": "String"
        },
        "ExternalLoginId": {
          "documentation": "<p>The identity ID for a user in the external login provider.</p>",
          "shape": "String"
        },
        "Namespace": {
          "documentation": "<p>The namespace. Currently, you should set this to <code>default</code>.</p>",
          "location": "uri",
          "locationName": "Namespace",
          "shape": "Namespace"
        },
        "Role": {
          "documentation": "<p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the Amazon QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>",
          "shape": "UserRole"
        },
        "UnapplyCustomPermissions": {
          "documentation": "<p>A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.</p>",
          "shape": "Boolean"
        },
        "UserName": {
          "documentation": "<p>The Amazon QuickSight user name that you want to update.</p>",
          "location": "uri",
          "locationName": "UserName",
          "shape": "UserName"
        }
      },
      "required": [
        "UserName",
        "AwsAccountId",
        "Namespace",
        "Email",
        "Role"
      ],
      "type": "structure"
    },
    "UpdateUserResponse": {
      "members": {
        "RequestId": {
          "documentation": "<p>The Amazon Web Services request ID for this operation.</p>",
          "shape": "String"
        },
        "Status": {
          "documentation": "<p>The HTTP status of the request.</p>",
          "location": "statusCode",
          "shape": "StatusCode"
        },
        "User": {
          "documentation": "<p>The Amazon QuickSight user.</p>",
          "shape": "User"
        }
      },
      "type": "structure"
    },
    "UploadSettings": {
      "documentation": "<p>Information about the format for a source file or files.</p>",
      "members": {
        "ContainsHeader": {
          "box": true,
          "documentation": "<p>Whether the file has a header row, or the files each have a header row.</p>",
          "shape": "Boolean"
        },
        "Delimiter": {
          "documentation": "<p>The delimiter between values in the file.</p>",
          "shape": "Delimiter"
        },
        "Format": {
          "documentation": "<p>File format.</p>",
          "shape": "FileFormat"
        },
        "StartFromRow": {
          "box": true,
          "documentation": "<p>A row number to start reading data from.</p>",
          "shape": "PositiveInteger"
        },
        "TextQualifier": {
          "documentation": "<p>Text qualifier.</p>",
          "shape": "TextQualifier"
        }
      },
      "type": "structure"
    },
    "User": {
      "documentation": "<p>A registered user of Amazon QuickSight. </p>",
      "members": {
        "Active": {
          "documentation": "<p>The active status of user. When you create an Amazon QuickSight user that\u2019s not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.</p>",
          "shape": "Boolean"
        },
        "Arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the user.</p>",
          "shape": "Arn"
        },
        "CustomPermissionsName": {
          "documentation": "<p>The custom permissions profile associated with this user.</p>",
          "shape": "RoleName"
        },
        "Email": {
          "documentation": "<p>The user's email address.</p>",
          "shape": "String"
        },
        "ExternalLoginFederationProviderType": {
          "documentation": "<p>The type of supported external login provider that provides identity to let the user federate into Amazon QuickSight with an associated IAM role. The type can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider.</p> </li> </ul>",
          "shape": "String"
        },
        "ExternalLoginFederationProviderUrl": {
          "documentation": "<p>The URL of the external login provider.</p>",
          "shape": "String"
        },
        "ExternalLoginId": {
          "documentation": "<p>The identity ID for the user in the external login provider.</p>",
          "shape": "String"
        },
        "IdentityType": {
          "documentation": "<p>The type of identity authentication used by the user.</p>",
          "shape": "IdentityType"
        },
        "PrincipalId": {
          "documentation": "<p>The principal ID of the user.</p>",
          "shape": "String"
        },
        "Role": {
          "documentation": "<p>The Amazon QuickSight role for the user. The user role can be one of the following:.</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>",
          "shape": "UserRole"
        },
        "UserName": {
          "documentation": "<p>The user's user name. This value is required if you are registering a user that will be managed in Amazon QuickSight. In the output, the value for <code>UserName</code> is <code>N/A</code> when the value for <code>IdentityType</code> is <code>IAM</code> and the corresponding IAM user is deleted.</p>",
          "shape": "UserName"
        }
      },
      "type": "structure"
    },
    "UserList": {
      "member": {
        "shape": "User"
      },
      "type": "list"
    },
    "UserName": {
      "min": 1,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string"
    },
    "UserRole": {
      "enum": [
        "ADMIN",
        "AUTHOR",
        "READER",
        "RESTRICTED_AUTHOR",
        "RESTRICTED_READER"
      ],
      "type": "string"
    },
    "Username": {
      "max": 64,
      "min": 1,
      "type": "string"
    },
    "VersionDescription": {
      "max": 512,
      "min": 1,
      "type": "string"
    },
    "VersionNumber": {
      "min": 1,
      "type": "long"
    },
    "VpcConnectionProperties": {
      "documentation": "<p>VPC connection properties.</p>",
      "members": {
        "VpcConnectionArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the VPC connection.</p>",
          "shape": "Arn"
        }
      },
      "required": [
        "VpcConnectionArn"
      ],
      "type": "structure"
    },
    "Warehouse": {
      "max": 128,
      "type": "string"
    },
    "WorkGroup": {
      "max": 128,
      "min": 1,
      "type": "string"
    },
    "boolean": {
      "type": "boolean"
    }
  },
  "version": "2.0"
}
