{
  "version": 2,
  "waiters": {
    "BundleTaskComplete": {
      "acceptors": [
        {
          "argument": "BundleTasks[].State",
          "expected": "complete",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "BundleTasks[].State",
          "expected": "failed",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeBundleTasks"
    },
    "ConversionTaskCancelled": {
      "acceptors": [
        {
          "argument": "ConversionTasks[].State",
          "expected": "cancelled",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeConversionTasks"
    },
    "ConversionTaskCompleted": {
      "acceptors": [
        {
          "argument": "ConversionTasks[].State",
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "ConversionTasks[].State",
          "expected": "cancelled",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "ConversionTasks[].State",
          "expected": "cancelling",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeConversionTasks"
    },
    "ConversionTaskDeleted": {
      "acceptors": [
        {
          "argument": "ConversionTasks[].State",
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeConversionTasks"
    },
    "CustomerGatewayAvailable": {
      "acceptors": [
        {
          "argument": "CustomerGateways[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "CustomerGateways[].State",
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "CustomerGateways[].State",
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeCustomerGateways"
    },
    "ExportTaskCancelled": {
      "acceptors": [
        {
          "argument": "ExportTasks[].State",
          "expected": "cancelled",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeExportTasks"
    },
    "ExportTaskCompleted": {
      "acceptors": [
        {
          "argument": "ExportTasks[].State",
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeExportTasks"
    },
    "ImageAvailable": {
      "acceptors": [
        {
          "argument": "Images[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Images[].State",
          "expected": "failed",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeImages"
    },
    "ImageExists": {
      "acceptors": [
        {
          "argument": "length(Images[]) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        },
        {
          "expected": "InvalidAMIID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeImages"
    },
    "InstanceExists": {
      "acceptors": [
        {
          "argument": "length(Reservations[]) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        },
        {
          "expected": "InvalidInstanceID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 5,
      "maxAttempts": 40,
      "operation": "DescribeInstances"
    },
    "InstanceRunning": {
      "acceptors": [
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "running",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "shutting-down",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "terminated",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "stopping",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "expected": "InvalidInstanceID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeInstances"
    },
    "InstanceStatusOk": {
      "acceptors": [
        {
          "argument": "InstanceStatuses[].InstanceStatus.Status",
          "expected": "ok",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "expected": "InvalidInstanceID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeInstanceStatus"
    },
    "InstanceStopped": {
      "acceptors": [
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "stopped",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "terminated",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeInstances"
    },
    "InstanceTerminated": {
      "acceptors": [
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "terminated",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "Reservations[].Instances[].State.Name",
          "expected": "stopping",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeInstances"
    },
    "InternetGatewayExists": {
      "acceptors": [
        {
          "argument": "length(InternetGateways[].InternetGatewayId) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        },
        {
          "expected": "InvalidInternetGateway.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 5,
      "maxAttempts": 6,
      "operation": "DescribeInternetGateways"
    },
    "KeyPairExists": {
      "acceptors": [
        {
          "argument": "length(KeyPairs[].KeyName) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        },
        {
          "expected": "InvalidKeyPair.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 5,
      "maxAttempts": 6,
      "operation": "DescribeKeyPairs"
    },
    "NatGatewayAvailable": {
      "acceptors": [
        {
          "argument": "NatGateways[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "NatGateways[].State",
          "expected": "failed",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "NatGateways[].State",
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "NatGateways[].State",
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "expected": "NatGatewayNotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeNatGateways"
    },
    "NatGatewayDeleted": {
      "acceptors": [
        {
          "argument": "NatGateways[].State",
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "expected": "NatGatewayNotFound",
          "matcher": "error",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeNatGateways"
    },
    "NetworkInterfaceAvailable": {
      "acceptors": [
        {
          "argument": "NetworkInterfaces[].Status",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "expected": "InvalidNetworkInterfaceID.NotFound",
          "matcher": "error",
          "state": "failure"
        }
      ],
      "delay": 20,
      "maxAttempts": 10,
      "operation": "DescribeNetworkInterfaces"
    },
    "PasswordDataAvailable": {
      "acceptors": [
        {
          "argument": "length(PasswordData) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "GetPasswordData"
    },
    "SecurityGroupExists": {
      "acceptors": [
        {
          "argument": "length(SecurityGroups[].GroupId) > `0`",
          "expected": true,
          "matcher": "path",
          "state": "success"
        },
        {
          "expected": "InvalidGroup.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 5,
      "maxAttempts": 6,
      "operation": "DescribeSecurityGroups"
    },
    "SnapshotCompleted": {
      "acceptors": [
        {
          "argument": "Snapshots[].State",
          "expected": "completed",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Snapshots[].State",
          "expected": "error",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeSnapshots"
    },
    "SpotInstanceRequestFulfilled": {
      "acceptors": [
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "fulfilled",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "request-canceled-and-instance-running",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "schedule-expired",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "canceled-before-fulfillment",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "bad-parameters",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "SpotInstanceRequests[].Status.Code",
          "expected": "system-error",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "expected": "InvalidSpotInstanceRequestID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeSpotInstanceRequests"
    },
    "SubnetAvailable": {
      "acceptors": [
        {
          "argument": "Subnets[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeSubnets"
    },
    "SystemStatusOk": {
      "acceptors": [
        {
          "argument": "InstanceStatuses[].SystemStatus.Status",
          "expected": "ok",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeInstanceStatus"
    },
    "VolumeAvailable": {
      "acceptors": [
        {
          "argument": "Volumes[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Volumes[].State",
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVolumes"
    },
    "VolumeDeleted": {
      "acceptors": [
        {
          "argument": "Volumes[].State",
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "expected": "InvalidVolume.NotFound",
          "matcher": "error",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVolumes"
    },
    "VolumeInUse": {
      "acceptors": [
        {
          "argument": "Volumes[].State",
          "expected": "in-use",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "Volumes[].State",
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVolumes"
    },
    "VpcAvailable": {
      "acceptors": [
        {
          "argument": "Vpcs[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVpcs"
    },
    "VpcExists": {
      "acceptors": [
        {
          "expected": 200,
          "matcher": "status",
          "state": "success"
        },
        {
          "expected": "InvalidVpcID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 1,
      "maxAttempts": 5,
      "operation": "DescribeVpcs"
    },
    "VpcPeeringConnectionDeleted": {
      "acceptors": [
        {
          "argument": "VpcPeeringConnections[].Status.Code",
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "expected": "InvalidVpcPeeringConnectionID.NotFound",
          "matcher": "error",
          "state": "success"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVpcPeeringConnections"
    },
    "VpcPeeringConnectionExists": {
      "acceptors": [
        {
          "expected": 200,
          "matcher": "status",
          "state": "success"
        },
        {
          "expected": "InvalidVpcPeeringConnectionID.NotFound",
          "matcher": "error",
          "state": "retry"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVpcPeeringConnections"
    },
    "VpnConnectionAvailable": {
      "acceptors": [
        {
          "argument": "VpnConnections[].State",
          "expected": "available",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "VpnConnections[].State",
          "expected": "deleting",
          "matcher": "pathAny",
          "state": "failure"
        },
        {
          "argument": "VpnConnections[].State",
          "expected": "deleted",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVpnConnections"
    },
    "VpnConnectionDeleted": {
      "acceptors": [
        {
          "argument": "VpnConnections[].State",
          "expected": "deleted",
          "matcher": "pathAll",
          "state": "success"
        },
        {
          "argument": "VpnConnections[].State",
          "expected": "pending",
          "matcher": "pathAny",
          "state": "failure"
        }
      ],
      "delay": 15,
      "maxAttempts": 40,
      "operation": "DescribeVpnConnections"
    }
  }
}
