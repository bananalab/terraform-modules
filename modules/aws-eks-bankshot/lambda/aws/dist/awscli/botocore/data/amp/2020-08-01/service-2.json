{
  "documentation": "<p>Amazon Managed Service for Prometheus</p>",
  "metadata": {
    "apiVersion": "2020-08-01",
    "endpointPrefix": "aps",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "Amazon Prometheus Service",
    "serviceId": "amp",
    "signatureVersion": "v4",
    "signingName": "aps",
    "uid": "amp-2020-08-01"
  },
  "operations": {
    "CreateAlertManagerDefinition": {
      "documentation": "<p>Create an alert manager definition.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/alertmanager/definition",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "CreateAlertManagerDefinitionRequest"
      },
      "name": "CreateAlertManagerDefinition",
      "output": {
        "shape": "CreateAlertManagerDefinitionResponse"
      }
    },
    "CreateLoggingConfiguration": {
      "documentation": "<p>Create logging configuration.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/logging",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "CreateLoggingConfigurationRequest"
      },
      "name": "CreateLoggingConfiguration",
      "output": {
        "shape": "CreateLoggingConfigurationResponse"
      }
    },
    "CreateRuleGroupsNamespace": {
      "documentation": "<p>Create a rule group namespace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/rulegroupsnamespaces",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "CreateRuleGroupsNamespaceRequest"
      },
      "name": "CreateRuleGroupsNamespace",
      "output": {
        "shape": "CreateRuleGroupsNamespaceResponse"
      }
    },
    "CreateWorkspace": {
      "documentation": "<p>Creates a new AMP workspace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "CreateWorkspaceRequest"
      },
      "name": "CreateWorkspace",
      "output": {
        "shape": "CreateWorkspaceResponse"
      }
    },
    "DeleteAlertManagerDefinition": {
      "documentation": "<p>Deletes an alert manager definition.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/alertmanager/definition",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteAlertManagerDefinitionRequest"
      },
      "name": "DeleteAlertManagerDefinition"
    },
    "DeleteLoggingConfiguration": {
      "documentation": "<p>Delete logging configuration.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/logging",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteLoggingConfigurationRequest"
      },
      "name": "DeleteLoggingConfiguration"
    },
    "DeleteRuleGroupsNamespace": {
      "documentation": "<p>Delete a rule groups namespace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}/rulegroupsnamespaces/{name}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteRuleGroupsNamespaceRequest"
      },
      "name": "DeleteRuleGroupsNamespace"
    },
    "DeleteWorkspace": {
      "documentation": "<p>Deletes an AMP workspace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteWorkspaceRequest"
      },
      "name": "DeleteWorkspace"
    },
    "DescribeAlertManagerDefinition": {
      "documentation": "<p>Describes an alert manager definition.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/alertmanager/definition",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeAlertManagerDefinitionRequest"
      },
      "name": "DescribeAlertManagerDefinition",
      "output": {
        "shape": "DescribeAlertManagerDefinitionResponse"
      }
    },
    "DescribeLoggingConfiguration": {
      "documentation": "<p>Describes logging configuration.</p>",
      "errors": [
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/logging",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeLoggingConfigurationRequest"
      },
      "name": "DescribeLoggingConfiguration",
      "output": {
        "shape": "DescribeLoggingConfigurationResponse"
      }
    },
    "DescribeRuleGroupsNamespace": {
      "documentation": "<p>Describe a rule groups namespace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/rulegroupsnamespaces/{name}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeRuleGroupsNamespaceRequest"
      },
      "name": "DescribeRuleGroupsNamespace",
      "output": {
        "shape": "DescribeRuleGroupsNamespaceResponse"
      }
    },
    "DescribeWorkspace": {
      "documentation": "<p>Describes an existing AMP workspace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeWorkspaceRequest"
      },
      "name": "DescribeWorkspace",
      "output": {
        "shape": "DescribeWorkspaceResponse"
      }
    },
    "ListRuleGroupsNamespaces": {
      "documentation": "<p>Lists rule groups namespaces.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces/{workspaceId}/rulegroupsnamespaces",
        "responseCode": 200
      },
      "input": {
        "shape": "ListRuleGroupsNamespacesRequest"
      },
      "name": "ListRuleGroupsNamespaces",
      "output": {
        "shape": "ListRuleGroupsNamespacesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists the tags you have assigned to the resource.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListWorkspaces": {
      "documentation": "<p>Lists all AMP workspaces, including workspaces being created or deleted.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/workspaces",
        "responseCode": 200
      },
      "input": {
        "shape": "ListWorkspacesRequest"
      },
      "name": "ListWorkspaces",
      "output": {
        "shape": "ListWorkspacesResponse"
      }
    },
    "PutAlertManagerDefinition": {
      "documentation": "<p>Update an alert manager definition.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/alertmanager/definition",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "PutAlertManagerDefinitionRequest"
      },
      "name": "PutAlertManagerDefinition",
      "output": {
        "shape": "PutAlertManagerDefinitionResponse"
      }
    },
    "PutRuleGroupsNamespace": {
      "documentation": "<p>Update a rule groups namespace.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/rulegroupsnamespaces/{name}",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "PutRuleGroupsNamespaceRequest"
      },
      "name": "PutRuleGroupsNamespace",
      "output": {
        "shape": "PutRuleGroupsNamespaceResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Creates tags for the specified resource.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Deletes tags from the specified resource.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateLoggingConfiguration": {
      "documentation": "<p>Update logging configuration.</p>",
      "errors": [
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/workspaces/{workspaceId}/logging",
        "responseCode": 202
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateLoggingConfigurationRequest"
      },
      "name": "UpdateLoggingConfiguration",
      "output": {
        "shape": "UpdateLoggingConfigurationResponse"
      }
    },
    "UpdateWorkspaceAlias": {
      "documentation": "<p>Updates an AMP workspace alias.</p>",
      "errors": [
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/workspaces/{workspaceId}/alias",
        "responseCode": 204
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateWorkspaceAliasRequest"
      },
      "name": "UpdateWorkspaceAlias"
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>User does not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "AlertManagerDefinitionData": {
      "documentation": "<p>The alert manager definition data.</p>",
      "type": "blob"
    },
    "AlertManagerDefinitionDescription": {
      "documentation": "<p>Represents the properties of an alert manager definition.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The time when the alert manager definition was created.</p>",
          "shape": "Timestamp"
        },
        "data": {
          "documentation": "<p>The alert manager definition.</p>",
          "shape": "AlertManagerDefinitionData"
        },
        "modifiedAt": {
          "documentation": "<p>The time when the alert manager definition was modified.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The status of alert manager definition.</p>",
          "shape": "AlertManagerDefinitionStatus"
        }
      },
      "required": [
        "createdAt",
        "data",
        "modifiedAt",
        "status"
      ],
      "type": "structure"
    },
    "AlertManagerDefinitionStatus": {
      "documentation": "<p>Represents the status of a definition.</p>",
      "members": {
        "statusCode": {
          "documentation": "<p>Status code of this definition.</p>",
          "shape": "AlertManagerDefinitionStatusCode"
        },
        "statusReason": {
          "documentation": "<p>The reason for failure if any.</p>",
          "shape": "String"
        }
      },
      "required": [
        "statusCode"
      ],
      "type": "structure"
    },
    "AlertManagerDefinitionStatusCode": {
      "documentation": "<p>State of an alert manager definition.</p>",
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "CREATION_FAILED",
        "UPDATE_FAILED"
      ],
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>Updating or deleting a resource can cause an inconsistent state.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "resourceId": {
          "documentation": "<p>Identifier of the resource affected.</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>Type of the resource affected.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "resourceId",
        "resourceType"
      ],
      "type": "structure"
    },
    "CreateAlertManagerDefinitionRequest": {
      "documentation": "<p>Represents the input of a CreateAlertManagerDefinition operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "data": {
          "documentation": "<p>The alert manager definition data.</p>",
          "shape": "AlertManagerDefinitionData"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace in which to create the alert manager definition.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "data",
        "workspaceId"
      ],
      "type": "structure"
    },
    "CreateAlertManagerDefinitionResponse": {
      "documentation": "<p>Represents the output of a CreateAlertManagerDefinition operation.</p>",
      "members": {
        "status": {
          "documentation": "<p>The status of alert manager definition.</p>",
          "shape": "AlertManagerDefinitionStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "CreateLoggingConfigurationRequest": {
      "documentation": "<p>Represents the input of a CreateLoggingConfiguration operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "logGroupArn": {
          "documentation": "<p>The ARN of the CW log group to which the vended log data will be published.</p>",
          "shape": "LogGroupArn"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to vend logs to.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "logGroupArn",
        "workspaceId"
      ],
      "type": "structure"
    },
    "CreateLoggingConfigurationResponse": {
      "documentation": "<p>Represents the output of a CreateLoggingConfiguration operation.</p>",
      "members": {
        "status": {
          "documentation": "<p>The status of the logging configuration.</p>",
          "shape": "LoggingConfigurationStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "CreateRuleGroupsNamespaceRequest": {
      "documentation": "<p>Represents the input of a CreateRuleGroupsNamespace operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "data": {
          "documentation": "<p>The namespace data that define the rule groups.</p>",
          "shape": "RuleGroupsNamespaceData"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "shape": "RuleGroupsNamespaceName"
        },
        "tags": {
          "documentation": "<p>Optional, user-provided tags for this rule groups namespace.</p>",
          "shape": "TagMap"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace in which to create the rule group namespace.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "data",
        "name",
        "workspaceId"
      ],
      "type": "structure"
    },
    "CreateRuleGroupsNamespaceResponse": {
      "documentation": "<p>Represents the output of a CreateRuleGroupsNamespace operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of this rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceArn"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "shape": "RuleGroupsNamespaceName"
        },
        "status": {
          "documentation": "<p>The status of rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this rule groups namespace.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "name",
        "status"
      ],
      "type": "structure"
    },
    "CreateWorkspaceRequest": {
      "documentation": "<p>Represents the input of a CreateWorkspace operation.</p>",
      "members": {
        "alias": {
          "documentation": "<p>An optional user-assigned alias for this workspace. This alias is for user reference and does not need to be unique.</p>",
          "shape": "WorkspaceAlias"
        },
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "tags": {
          "documentation": "<p>Optional, user-provided tags for this workspace.</p>",
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "CreateWorkspaceResponse": {
      "documentation": "<p>Represents the output of a CreateWorkspace operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The ARN of the workspace that was just created.</p>",
          "shape": "WorkspaceArn"
        },
        "status": {
          "documentation": "<p>The status of the workspace that was just created (usually CREATING).</p>",
          "shape": "WorkspaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this workspace.</p>",
          "shape": "TagMap"
        },
        "workspaceId": {
          "documentation": "<p>The generated ID of the workspace that was just created.</p>",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "arn",
        "status",
        "workspaceId"
      ],
      "type": "structure"
    },
    "DeleteAlertManagerDefinitionRequest": {
      "documentation": "<p>Represents the input of a DeleteAlertManagerDefinition operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "IdempotencyToken"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace in which to delete the alert manager definition.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DeleteLoggingConfigurationRequest": {
      "documentation": "<p>Represents the input of a DeleteLoggingConfiguration operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "IdempotencyToken"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to vend logs to.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DeleteRuleGroupsNamespaceRequest": {
      "documentation": "<p>Represents the input of a DeleteRuleGroupsNamespace operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "IdempotencyToken"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "RuleGroupsNamespaceName"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to delete rule group definition.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "name",
        "workspaceId"
      ],
      "type": "structure"
    },
    "DeleteWorkspaceRequest": {
      "documentation": "<p>Represents the input of a DeleteWorkspace operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "location": "querystring",
          "locationName": "clientToken",
          "shape": "IdempotencyToken"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to delete.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DescribeAlertManagerDefinitionRequest": {
      "documentation": "<p>Represents the input of a DescribeAlertManagerDefinition operation.</p>",
      "members": {
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to describe.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DescribeAlertManagerDefinitionResponse": {
      "documentation": "<p>Represents the output of a DescribeAlertManagerDefinition operation.</p>",
      "members": {
        "alertManagerDefinition": {
          "documentation": "<p>The properties of the selected workspace's alert manager definition.</p>",
          "shape": "AlertManagerDefinitionDescription"
        }
      },
      "required": [
        "alertManagerDefinition"
      ],
      "type": "structure"
    },
    "DescribeLoggingConfigurationRequest": {
      "documentation": "<p>Represents the input of a DescribeLoggingConfiguration operation.</p>",
      "members": {
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to vend logs to.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DescribeLoggingConfigurationResponse": {
      "documentation": "<p>Represents the output of a DescribeLoggingConfiguration operation.</p>",
      "members": {
        "loggingConfiguration": {
          "documentation": "<p>Metadata object containing information about the logging configuration of a workspace.</p>",
          "shape": "LoggingConfigurationMetadata"
        }
      },
      "required": [
        "loggingConfiguration"
      ],
      "type": "structure"
    },
    "DescribeRuleGroupsNamespaceRequest": {
      "documentation": "<p>Represents the input of a DescribeRuleGroupsNamespace operation.</p>",
      "members": {
        "name": {
          "documentation": "<p>The rule groups namespace.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "RuleGroupsNamespaceName"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to describe.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "name",
        "workspaceId"
      ],
      "type": "structure"
    },
    "DescribeRuleGroupsNamespaceResponse": {
      "documentation": "<p>Represents the output of a DescribeRuleGroupsNamespace operation.</p>",
      "members": {
        "ruleGroupsNamespace": {
          "documentation": "<p>The selected rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceDescription"
        }
      },
      "required": [
        "ruleGroupsNamespace"
      ],
      "type": "structure"
    },
    "DescribeWorkspaceRequest": {
      "documentation": "<p>Represents the input of a DescribeWorkspace operation.</p>",
      "members": {
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to describe.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "DescribeWorkspaceResponse": {
      "documentation": "<p>Represents the output of a DescribeWorkspace operation.</p>",
      "members": {
        "workspace": {
          "documentation": "<p>The properties of the selected workspace.</p>",
          "shape": "WorkspaceDescription"
        }
      },
      "required": [
        "workspace"
      ],
      "type": "structure"
    },
    "IdempotencyToken": {
      "documentation": "<p>An identifier used to ensure the idempotency of a write request.</p>",
      "max": 64,
      "min": 1,
      "pattern": "[!-~]+",
      "type": "string"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InternalServerException": {
      "documentation": "<p>Unexpected error during processing of request.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "retryAfterSeconds": {
          "documentation": "<p>Advice to clients on when the call can be safely retried.</p>",
          "location": "header",
          "locationName": "Retry-After",
          "shape": "Integer"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "ListRuleGroupsNamespacesRequest": {
      "documentation": "<p>Represents the input of a ListRuleGroupsNamespaces operation.</p>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum results to return in response (default=100, maximum=1000).</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListRuleGroupsNamespacesRequestMaxResultsInteger"
        },
        "name": {
          "documentation": "<p>Optional filter for rule groups namespace name. Only the rule groups namespace that begin with this value will be returned.</p>",
          "location": "querystring",
          "locationName": "name",
          "shape": "RuleGroupsNamespaceName"
        },
        "nextToken": {
          "documentation": "<p>Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListRuleGroupsNamespaces request.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "ListRuleGroupsNamespacesRequestMaxResultsInteger": {
      "box": true,
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "ListRuleGroupsNamespacesResponse": {
      "documentation": "<p>Represents the output of a ListRuleGroupsNamespaces operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>Pagination token to use when requesting the next page in this list.</p>",
          "shape": "PaginationToken"
        },
        "ruleGroupsNamespaces": {
          "documentation": "<p>The list of the selected rule groups namespaces.</p>",
          "shape": "RuleGroupsNamespaceSummaryList"
        }
      },
      "required": [
        "ruleGroupsNamespaces"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "ListWorkspacesRequest": {
      "documentation": "<p>Represents the input of a ListWorkspaces operation.</p>",
      "members": {
        "alias": {
          "documentation": "<p>Optional filter for workspace alias. Only the workspaces with aliases that begin with this value will be returned.</p>",
          "location": "querystring",
          "locationName": "alias",
          "shape": "WorkspaceAlias"
        },
        "maxResults": {
          "documentation": "<p>Maximum results to return in response (default=100, maximum=1000).</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListWorkspacesRequestMaxResultsInteger"
        },
        "nextToken": {
          "documentation": "<p>Pagination token to request the next page in a paginated list. This token is obtained from the output of the previous ListWorkspaces request.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "PaginationToken"
        }
      },
      "type": "structure"
    },
    "ListWorkspacesRequestMaxResultsInteger": {
      "box": true,
      "max": 1000,
      "min": 1,
      "type": "integer"
    },
    "ListWorkspacesResponse": {
      "documentation": "<p>Represents the output of a ListWorkspaces operation.</p>",
      "members": {
        "nextToken": {
          "documentation": "<p>Pagination token to use when requesting the next page in this list.</p>",
          "shape": "PaginationToken"
        },
        "workspaces": {
          "documentation": "<p>The list of existing workspaces, including those undergoing creation or deletion.</p>",
          "shape": "WorkspaceSummaryList"
        }
      },
      "required": [
        "workspaces"
      ],
      "type": "structure"
    },
    "LogGroupArn": {
      "pattern": "^arn:aws[a-z0-9-]*:logs:[a-z0-9-]+:\\d{12}:log-group:[A-Za-z0-9\\.\\-\\_\\#/]{1,512}\\:\\*$",
      "type": "string"
    },
    "LoggingConfigurationMetadata": {
      "documentation": "<p>Represents the properties of a logging configuration metadata.</p>",
      "members": {
        "createdAt": {
          "documentation": "<p>The time when the logging configuration was created.</p>",
          "shape": "Timestamp"
        },
        "logGroupArn": {
          "documentation": "<p>The ARN of the CW log group to which the vended log data will be published.</p>",
          "shape": "LogGroupArn"
        },
        "modifiedAt": {
          "documentation": "<p>The time when the logging configuration was modified.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The status of the logging configuration.</p>",
          "shape": "LoggingConfigurationStatus"
        },
        "workspace": {
          "documentation": "<p>The workspace where the logging configuration exists.</p>",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "createdAt",
        "logGroupArn",
        "modifiedAt",
        "status",
        "workspace"
      ],
      "type": "structure"
    },
    "LoggingConfigurationStatus": {
      "documentation": "<p>Represents the status of a logging configuration.</p>",
      "members": {
        "statusCode": {
          "documentation": "<p>Status code of the logging configuration.</p>",
          "shape": "LoggingConfigurationStatusCode"
        },
        "statusReason": {
          "documentation": "<p>The reason for failure if any.</p>",
          "shape": "String"
        }
      },
      "required": [
        "statusCode"
      ],
      "type": "structure"
    },
    "LoggingConfigurationStatusCode": {
      "documentation": "<p>State of a logging configuration.</p>",
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "CREATION_FAILED",
        "UPDATE_FAILED"
      ],
      "type": "string"
    },
    "PaginationToken": {
      "documentation": "<p>A token used to access the next page in a paginated result set.</p>",
      "type": "string"
    },
    "PutAlertManagerDefinitionRequest": {
      "documentation": "<p>Represents the input of a PutAlertManagerDefinition operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "data": {
          "documentation": "<p>The alert manager definition data.</p>",
          "shape": "AlertManagerDefinitionData"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace in which to update the alert manager definition.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "data",
        "workspaceId"
      ],
      "type": "structure"
    },
    "PutAlertManagerDefinitionResponse": {
      "documentation": "<p>Represents the output of a PutAlertManagerDefinition operation.</p>",
      "members": {
        "status": {
          "documentation": "<p>The status of alert manager definition.</p>",
          "shape": "AlertManagerDefinitionStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "PutRuleGroupsNamespaceRequest": {
      "documentation": "<p>Represents the input of a PutRuleGroupsNamespace operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "data": {
          "documentation": "<p>The namespace data that define the rule groups.</p>",
          "shape": "RuleGroupsNamespaceData"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "location": "uri",
          "locationName": "name",
          "shape": "RuleGroupsNamespaceName"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace in which to update the rule group namespace.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "data",
        "name",
        "workspaceId"
      ],
      "type": "structure"
    },
    "PutRuleGroupsNamespaceResponse": {
      "documentation": "<p>Represents the output of a PutRuleGroupsNamespace operation.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of this rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceArn"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "shape": "RuleGroupsNamespaceName"
        },
        "status": {
          "documentation": "<p>The status of rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this rule groups namespace.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "name",
        "status"
      ],
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>Request references a resource which does not exist.</p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "resourceId": {
          "documentation": "<p>Identifier of the resource affected.</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>Type of the resource affected.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "resourceId",
        "resourceType"
      ],
      "type": "structure"
    },
    "RuleGroupsNamespaceArn": {
      "documentation": "<p>An ARN identifying a rule groups namespace.</p>",
      "type": "string"
    },
    "RuleGroupsNamespaceData": {
      "documentation": "<p>The rule groups namespace data.</p>",
      "type": "blob"
    },
    "RuleGroupsNamespaceDescription": {
      "documentation": "<p>Represents a description of the rule groups namespace.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of this rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceArn"
        },
        "createdAt": {
          "documentation": "<p>The time when the rule groups namespace was created.</p>",
          "shape": "Timestamp"
        },
        "data": {
          "documentation": "<p>The rule groups namespace data.</p>",
          "shape": "RuleGroupsNamespaceData"
        },
        "modifiedAt": {
          "documentation": "<p>The time when the rule groups namespace was modified.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "shape": "RuleGroupsNamespaceName"
        },
        "status": {
          "documentation": "<p>The status of rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this rule groups namespace.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "createdAt",
        "data",
        "modifiedAt",
        "name",
        "status"
      ],
      "type": "structure"
    },
    "RuleGroupsNamespaceName": {
      "documentation": "<p>The namespace name that the rule group belong to.</p>",
      "max": 64,
      "min": 1,
      "pattern": "[0-9A-Za-z][-.0-9A-Z_a-z]*",
      "type": "string"
    },
    "RuleGroupsNamespaceStatus": {
      "documentation": "<p>Represents the status of a namespace.</p>",
      "members": {
        "statusCode": {
          "documentation": "<p>Status code of this namespace.</p>",
          "shape": "RuleGroupsNamespaceStatusCode"
        },
        "statusReason": {
          "documentation": "<p>The reason for failure if any.</p>",
          "shape": "String"
        }
      },
      "required": [
        "statusCode"
      ],
      "type": "structure"
    },
    "RuleGroupsNamespaceStatusCode": {
      "documentation": "<p>State of a namespace.</p>",
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "CREATION_FAILED",
        "UPDATE_FAILED"
      ],
      "type": "string"
    },
    "RuleGroupsNamespaceSummary": {
      "documentation": "<p>Represents a summary of the rule groups namespace.</p>",
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of this rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceArn"
        },
        "createdAt": {
          "documentation": "<p>The time when the rule groups namespace was created.</p>",
          "shape": "Timestamp"
        },
        "modifiedAt": {
          "documentation": "<p>The time when the rule groups namespace was modified.</p>",
          "shape": "Timestamp"
        },
        "name": {
          "documentation": "<p>The rule groups namespace name.</p>",
          "shape": "RuleGroupsNamespaceName"
        },
        "status": {
          "documentation": "<p>The status of rule groups namespace.</p>",
          "shape": "RuleGroupsNamespaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this rule groups namespace.</p>",
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "createdAt",
        "modifiedAt",
        "name",
        "status"
      ],
      "type": "structure"
    },
    "RuleGroupsNamespaceSummaryList": {
      "documentation": "<p>A list of rule groups namespace summary.</p>",
      "member": {
        "shape": "RuleGroupsNamespaceSummary"
      },
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>Request would cause a service quota to be exceeded.</p>",
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "quotaCode": {
          "documentation": "<p>Service Quotas requirement to identify originating quota.</p>",
          "shape": "String"
        },
        "resourceId": {
          "documentation": "<p>Identifier of the resource affected.</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>Type of the resource affected.</p>",
          "shape": "String"
        },
        "serviceCode": {
          "documentation": "<p>Service Quotas requirement to identify originating service.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "quotaCode",
        "resourceId",
        "resourceType",
        "serviceCode"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "TagKeys": {
      "member": {
        "shape": "TagKey"
      },
      "type": "list"
    },
    "TagMap": {
      "documentation": "<p>The list of tags assigned to the resource.</p>",
      "key": {
        "documentation": "<p>The key of the tag.</p> <p>Constraints: Tag keys are case-sensitive and accept a maximum of 128 Unicode characters. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @ May not begin with <code>aws:</code>.</p>",
        "shape": "TagKey"
      },
      "max": 50,
      "min": 0,
      "type": "map",
      "value": {
        "documentation": "<p>The value of the tag.</p> <p>Constraints: Tag values are case-sensitive and accept a maximum of 256 Unicode characters. Valid characters are Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @</p>",
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "TagValue": {
      "max": 256,
      "min": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>Request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "quotaCode": {
          "documentation": "<p>Service Quotas requirement to identify originating quota.</p>",
          "shape": "String"
        },
        "retryAfterSeconds": {
          "documentation": "<p>Advice to clients on when the call can be safely retried.</p>",
          "location": "header",
          "locationName": "Retry-After",
          "shape": "Integer"
        },
        "serviceCode": {
          "documentation": "<p>Service Quotas requirement to identify originating service.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "UntagResourceRequest": {
      "members": {
        "resourceArn": {
          "documentation": "<p>The ARN of the resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tagKeys": {
          "documentation": "<p>One or more tag keys</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeys"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateLoggingConfigurationRequest": {
      "documentation": "<p>Represents the input of an UpdateLoggingConfiguration operation.</p>",
      "members": {
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "logGroupArn": {
          "documentation": "<p>The ARN of the CW log group to which the vended log data will be published.</p>",
          "shape": "LogGroupArn"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace to vend logs to.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "logGroupArn",
        "workspaceId"
      ],
      "type": "structure"
    },
    "UpdateLoggingConfigurationResponse": {
      "documentation": "<p>Represents the output of an UpdateLoggingConfiguration operation.</p>",
      "members": {
        "status": {
          "documentation": "<p>The status of the logging configuration.</p>",
          "shape": "LoggingConfigurationStatus"
        }
      },
      "required": [
        "status"
      ],
      "type": "structure"
    },
    "UpdateWorkspaceAliasRequest": {
      "documentation": "<p>Represents the input of an UpdateWorkspaceAlias operation.</p>",
      "members": {
        "alias": {
          "documentation": "<p>The new alias of the workspace.</p>",
          "shape": "WorkspaceAlias"
        },
        "clientToken": {
          "documentation": "<p>Optional, unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "IdempotencyToken"
        },
        "workspaceId": {
          "documentation": "<p>The ID of the workspace being updated.</p>",
          "location": "uri",
          "locationName": "workspaceId",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "workspaceId"
      ],
      "type": "structure"
    },
    "Uri": {
      "max": 1024,
      "min": 1,
      "type": "string"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "fieldList": {
          "documentation": "<p>The field that caused the error, if applicable. If more than one field caused the error, pick one and elaborate in the message.</p>",
          "shape": "ValidationExceptionFieldList"
        },
        "message": {
          "documentation": "<p>Description of the error.</p>",
          "shape": "String"
        },
        "reason": {
          "documentation": "<p>Reason the request failed validation.</p>",
          "shape": "ValidationExceptionReason"
        }
      },
      "required": [
        "message",
        "reason"
      ],
      "type": "structure"
    },
    "ValidationExceptionField": {
      "documentation": "<p>Stores information about a field passed inside a request that resulted in an exception.</p>",
      "members": {
        "message": {
          "documentation": "<p>Message describing why the field failed validation.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>The field name.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "name"
      ],
      "type": "structure"
    },
    "ValidationExceptionFieldList": {
      "documentation": "<p>A list of fields.</p>",
      "member": {
        "shape": "ValidationExceptionField"
      },
      "type": "list"
    },
    "ValidationExceptionReason": {
      "documentation": "<p>Possible reasons a request failed validation.</p>",
      "enum": [
        "UNKNOWN_OPERATION",
        "CANNOT_PARSE",
        "FIELD_VALIDATION_FAILED",
        "OTHER"
      ],
      "type": "string"
    },
    "WorkspaceAlias": {
      "documentation": "<p>A user-assigned workspace alias.</p>",
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "WorkspaceArn": {
      "documentation": "<p>An ARN identifying a Workspace.</p>",
      "type": "string"
    },
    "WorkspaceDescription": {
      "documentation": "<p>Represents the properties of a workspace.</p>",
      "members": {
        "alias": {
          "documentation": "<p>Alias of this workspace.</p>",
          "shape": "WorkspaceAlias"
        },
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of this workspace.</p>",
          "shape": "WorkspaceArn"
        },
        "createdAt": {
          "documentation": "<p>The time when the workspace was created.</p>",
          "shape": "Timestamp"
        },
        "prometheusEndpoint": {
          "documentation": "<p>Prometheus endpoint URI.</p>",
          "shape": "Uri"
        },
        "status": {
          "documentation": "<p>The status of this workspace.</p>",
          "shape": "WorkspaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this workspace.</p>",
          "shape": "TagMap"
        },
        "workspaceId": {
          "documentation": "<p>Unique string identifying this workspace.</p>",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "arn",
        "createdAt",
        "status",
        "workspaceId"
      ],
      "type": "structure"
    },
    "WorkspaceId": {
      "documentation": "<p>A workspace ID.</p>",
      "max": 64,
      "min": 1,
      "pattern": "[0-9A-Za-z][-.0-9A-Z_a-z]*",
      "type": "string"
    },
    "WorkspaceStatus": {
      "documentation": "<p>Represents the status of a workspace.</p>",
      "members": {
        "statusCode": {
          "documentation": "<p>Status code of this workspace.</p>",
          "shape": "WorkspaceStatusCode"
        }
      },
      "required": [
        "statusCode"
      ],
      "type": "structure"
    },
    "WorkspaceStatusCode": {
      "documentation": "<p>State of a workspace.</p>",
      "enum": [
        "CREATING",
        "ACTIVE",
        "UPDATING",
        "DELETING",
        "CREATION_FAILED"
      ],
      "type": "string"
    },
    "WorkspaceSummary": {
      "documentation": "<p>Represents a summary of the properties of a workspace.</p>",
      "members": {
        "alias": {
          "documentation": "<p>Alias of this workspace.</p>",
          "shape": "WorkspaceAlias"
        },
        "arn": {
          "documentation": "<p>The AmazonResourceName of this workspace.</p>",
          "shape": "WorkspaceArn"
        },
        "createdAt": {
          "documentation": "<p>The time when the workspace was created.</p>",
          "shape": "Timestamp"
        },
        "status": {
          "documentation": "<p>The status of this workspace.</p>",
          "shape": "WorkspaceStatus"
        },
        "tags": {
          "documentation": "<p>The tags of this workspace.</p>",
          "shape": "TagMap"
        },
        "workspaceId": {
          "documentation": "<p>Unique string identifying this workspace.</p>",
          "shape": "WorkspaceId"
        }
      },
      "required": [
        "arn",
        "createdAt",
        "status",
        "workspaceId"
      ],
      "type": "structure"
    },
    "WorkspaceSummaryList": {
      "documentation": "<p>A list of workspace summaries.</p>",
      "member": {
        "shape": "WorkspaceSummary"
      },
      "type": "list"
    }
  },
  "version": "2.0"
}
