{
  "documentation": "<p>Welcome to the AWS Ground Station API Reference. AWS Ground Station is a fully managed service that enables you to control satellite communications, downlink and process satellite data, and scale your satellite operations efficiently and cost-effectively without having to build or manage your own ground station infrastructure.</p>",
  "metadata": {
    "apiVersion": "2019-05-23",
    "endpointPrefix": "groundstation",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AWS Ground Station",
    "serviceId": "GroundStation",
    "signatureVersion": "v4",
    "signingName": "groundstation",
    "uid": "groundstation-2019-05-23"
  },
  "operations": {
    "CancelContact": {
      "documentation": "<p>Cancels a contact with a specified contact ID.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/contact/{contactId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CancelContactRequest"
      },
      "name": "CancelContact",
      "output": {
        "shape": "ContactIdResponse"
      }
    },
    "CreateConfig": {
      "documentation": "<p>Creates a <code>Config</code> with the specified <code>configData</code> parameters.</p> <p>Only one type of <code>configData</code> can be specified.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceLimitExceededException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/config",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateConfigRequest"
      },
      "name": "CreateConfig",
      "output": {
        "shape": "ConfigIdResponse"
      }
    },
    "CreateDataflowEndpointGroup": {
      "documentation": "<p>Creates a <code>DataflowEndpoint</code> group containing the specified list of <code>DataflowEndpoint</code> objects.</p> <p>The <code>name</code> field in each endpoint is used in your mission profile <code>DataflowEndpointConfig</code> to specify which endpoints to use during a contact.</p> <p>When a contact uses multiple <code>DataflowEndpointConfig</code> objects, each <code>Config</code> must match a <code>DataflowEndpoint</code> in the same group.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/dataflowEndpointGroup",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateDataflowEndpointGroupRequest"
      },
      "name": "CreateDataflowEndpointGroup",
      "output": {
        "shape": "DataflowEndpointGroupIdResponse"
      }
    },
    "CreateMissionProfile": {
      "documentation": "<p>Creates a mission profile.</p> <p> <code>dataflowEdges</code> is a list of lists of strings. Each lower level list of strings has two elements: a <i>from</i> ARN and a <i>to</i> ARN.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/missionprofile",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateMissionProfileRequest"
      },
      "name": "CreateMissionProfile",
      "output": {
        "shape": "MissionProfileIdResponse"
      }
    },
    "DeleteConfig": {
      "documentation": "<p>Deletes a <code>Config</code>.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/config/{configType}/{configId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteConfigRequest"
      },
      "name": "DeleteConfig",
      "output": {
        "shape": "ConfigIdResponse"
      }
    },
    "DeleteDataflowEndpointGroup": {
      "documentation": "<p>Deletes a dataflow endpoint group.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteDataflowEndpointGroupRequest"
      },
      "name": "DeleteDataflowEndpointGroup",
      "output": {
        "shape": "DataflowEndpointGroupIdResponse"
      }
    },
    "DeleteMissionProfile": {
      "documentation": "<p>Deletes a mission profile.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/missionprofile/{missionProfileId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteMissionProfileRequest"
      },
      "name": "DeleteMissionProfile",
      "output": {
        "shape": "MissionProfileIdResponse"
      }
    },
    "DescribeContact": {
      "documentation": "<p>Describes an existing contact.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/contact/{contactId}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeContactRequest"
      },
      "name": "DescribeContact",
      "output": {
        "shape": "DescribeContactResponse"
      }
    },
    "GetConfig": {
      "documentation": "<p>Returns <code>Config</code> information.</p> <p>Only one <code>Config</code> response can be returned.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/config/{configType}/{configId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetConfigRequest"
      },
      "name": "GetConfig",
      "output": {
        "shape": "GetConfigResponse"
      }
    },
    "GetDataflowEndpointGroup": {
      "documentation": "<p>Returns the dataflow endpoint group.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataflowEndpointGroup/{dataflowEndpointGroupId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDataflowEndpointGroupRequest"
      },
      "name": "GetDataflowEndpointGroup",
      "output": {
        "shape": "GetDataflowEndpointGroupResponse"
      }
    },
    "GetMinuteUsage": {
      "documentation": "<p>Returns the number of minutes used by account.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/minute-usage",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMinuteUsageRequest"
      },
      "name": "GetMinuteUsage",
      "output": {
        "shape": "GetMinuteUsageResponse"
      }
    },
    "GetMissionProfile": {
      "documentation": "<p>Returns a mission profile.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/missionprofile/{missionProfileId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetMissionProfileRequest"
      },
      "name": "GetMissionProfile",
      "output": {
        "shape": "GetMissionProfileResponse"
      }
    },
    "GetSatellite": {
      "documentation": "<p>Returns a satellite.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/satellite/{satelliteId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetSatelliteRequest"
      },
      "name": "GetSatellite",
      "output": {
        "shape": "GetSatelliteResponse"
      }
    },
    "ListConfigs": {
      "documentation": "<p>Returns a list of <code>Config</code> objects.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/config",
        "responseCode": 200
      },
      "input": {
        "shape": "ListConfigsRequest"
      },
      "name": "ListConfigs",
      "output": {
        "shape": "ListConfigsResponse"
      }
    },
    "ListContacts": {
      "documentation": "<p>Returns a list of contacts.</p> <p>If <code>statusList</code> contains AVAILABLE, the request must include <code>groundStation</code>, <code>missionprofileArn</code>, and <code>satelliteArn</code>. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/contacts",
        "responseCode": 200
      },
      "input": {
        "shape": "ListContactsRequest"
      },
      "name": "ListContacts",
      "output": {
        "shape": "ListContactsResponse"
      }
    },
    "ListDataflowEndpointGroups": {
      "documentation": "<p>Returns a list of <code>DataflowEndpoint</code> groups.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/dataflowEndpointGroup",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDataflowEndpointGroupsRequest"
      },
      "name": "ListDataflowEndpointGroups",
      "output": {
        "shape": "ListDataflowEndpointGroupsResponse"
      }
    },
    "ListGroundStations": {
      "documentation": "<p>Returns a list of ground stations. </p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/groundstation",
        "responseCode": 200
      },
      "input": {
        "shape": "ListGroundStationsRequest"
      },
      "name": "ListGroundStations",
      "output": {
        "shape": "ListGroundStationsResponse"
      }
    },
    "ListMissionProfiles": {
      "documentation": "<p>Returns a list of mission profiles.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/missionprofile",
        "responseCode": 200
      },
      "input": {
        "shape": "ListMissionProfilesRequest"
      },
      "name": "ListMissionProfiles",
      "output": {
        "shape": "ListMissionProfilesResponse"
      }
    },
    "ListSatellites": {
      "documentation": "<p>Returns a list of satellites.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/satellite",
        "responseCode": 200
      },
      "input": {
        "shape": "ListSatellitesRequest"
      },
      "name": "ListSatellites",
      "output": {
        "shape": "ListSatellitesResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Returns a list of tags for a specified resource.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ReserveContact": {
      "documentation": "<p>Reserves a contact using specified parameters.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/contact",
        "responseCode": 200
      },
      "input": {
        "shape": "ReserveContactRequest"
      },
      "name": "ReserveContact",
      "output": {
        "shape": "ContactIdResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Assigns a tag to a resource.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource",
      "output": {
        "shape": "TagResourceResponse"
      }
    },
    "UntagResource": {
      "documentation": "<p>Deassigns a resource tag.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{resourceArn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource",
      "output": {
        "shape": "UntagResourceResponse"
      }
    },
    "UpdateConfig": {
      "documentation": "<p>Updates the <code>Config</code> used when scheduling contacts.</p> <p>Updating a <code>Config</code> will not update the execution parameters for existing future contacts scheduled with this <code>Config</code>.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/config/{configType}/{configId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateConfigRequest"
      },
      "name": "UpdateConfig",
      "output": {
        "shape": "ConfigIdResponse"
      }
    },
    "UpdateMissionProfile": {
      "documentation": "<p>Updates a mission profile.</p> <p>Updating a mission profile will not update the execution parameters for existing future contacts.</p>",
      "errors": [
        {
          "shape": "InvalidParameterException"
        },
        {
          "shape": "DependencyException"
        },
        {
          "shape": "ResourceNotFoundException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/missionprofile/{missionProfileId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateMissionProfileRequest"
      },
      "name": "UpdateMissionProfile",
      "output": {
        "shape": "MissionProfileIdResponse"
      }
    }
  },
  "shapes": {
    "AngleUnits": {
      "enum": [
        "DEGREE_ANGLE",
        "RADIAN"
      ],
      "type": "string"
    },
    "AntennaDemodDecodeDetails": {
      "documentation": "<p>Details about an antenna demod decode <code>Config</code> used in a contact.</p>",
      "members": {
        "outputNode": {
          "documentation": "<p>Name of an antenna demod decode output node used in a contact.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "AntennaDownlinkConfig": {
      "documentation": "<p>Information about how AWS Ground Station should configure an antenna for downlink during a contact.</p>",
      "members": {
        "spectrumConfig": {
          "documentation": "<p>Object that describes a spectral <code>Config</code>.</p>",
          "shape": "SpectrumConfig"
        }
      },
      "required": [
        "spectrumConfig"
      ],
      "type": "structure"
    },
    "AntennaDownlinkDemodDecodeConfig": {
      "documentation": "<p>Information about how AWS Ground Station should con\ufb01gure an antenna for downlink demod decode during a contact.</p>",
      "members": {
        "decodeConfig": {
          "documentation": "<p>Information about the decode <code>Config</code>.</p>",
          "shape": "DecodeConfig"
        },
        "demodulationConfig": {
          "documentation": "<p>Information about the demodulation <code>Config</code>.</p>",
          "shape": "DemodulationConfig"
        },
        "spectrumConfig": {
          "documentation": "<p>Information about the spectral <code>Config</code>.</p>",
          "shape": "SpectrumConfig"
        }
      },
      "required": [
        "decodeConfig",
        "demodulationConfig",
        "spectrumConfig"
      ],
      "type": "structure"
    },
    "AntennaUplinkConfig": {
      "documentation": "<p>Information about the uplink <code>Config</code> of an antenna.</p>",
      "members": {
        "spectrumConfig": {
          "documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>",
          "shape": "UplinkSpectrumConfig"
        },
        "targetEirp": {
          "documentation": "<p>EIRP of the target.</p>",
          "shape": "Eirp"
        },
        "transmitDisabled": {
          "documentation": "<p>Whether or not uplink transmit is disabled.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "spectrumConfig",
        "targetEirp"
      ],
      "type": "structure"
    },
    "BandwidthUnits": {
      "enum": [
        "GHz",
        "MHz",
        "kHz"
      ],
      "type": "string"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "BucketArn": {
      "type": "string"
    },
    "CancelContactRequest": {
      "documentation": "<p/>",
      "members": {
        "contactId": {
          "documentation": "<p>UUID of a contact.</p>",
          "location": "uri",
          "locationName": "contactId",
          "shape": "String"
        }
      },
      "required": [
        "contactId"
      ],
      "type": "structure"
    },
    "ConfigArn": {
      "type": "string"
    },
    "ConfigCapabilityType": {
      "enum": [
        "antenna-downlink",
        "antenna-downlink-demod-decode",
        "antenna-uplink",
        "dataflow-endpoint",
        "tracking",
        "uplink-echo",
        "s3-recording"
      ],
      "type": "string"
    },
    "ConfigDetails": {
      "documentation": "<p>Details for certain <code>Config</code> object types in a contact.</p>",
      "members": {
        "antennaDemodDecodeDetails": {
          "documentation": "<p>Details for antenna demod decode <code>Config</code> in a contact.</p>",
          "shape": "AntennaDemodDecodeDetails"
        },
        "endpointDetails": {
          "shape": "EndpointDetails"
        },
        "s3RecordingDetails": {
          "documentation": "<p>Details for an S3 recording <code>Config</code> in a contact.</p>",
          "shape": "S3RecordingDetails"
        }
      },
      "type": "structure",
      "union": true
    },
    "ConfigIdResponse": {
      "documentation": "<p/>",
      "members": {
        "configArn": {
          "documentation": "<p>ARN of a <code>Config</code>.</p>",
          "shape": "ConfigArn"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "shape": "ConfigCapabilityType"
        }
      },
      "type": "structure"
    },
    "ConfigList": {
      "member": {
        "shape": "ConfigListItem"
      },
      "type": "list"
    },
    "ConfigListItem": {
      "documentation": "<p>An item in a list of <code>Config</code> objects.</p>",
      "members": {
        "configArn": {
          "documentation": "<p>ARN of a <code>Config</code>.</p>",
          "shape": "ConfigArn"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "shape": "ConfigCapabilityType"
        },
        "name": {
          "documentation": "<p>Name of a <code>Config</code>.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ConfigTypeData": {
      "documentation": "<p>Object containing the parameters of a <code>Config</code>.</p> <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>",
      "members": {
        "antennaDownlinkConfig": {
          "documentation": "<p>Information about how AWS Ground Station should configure an antenna for downlink during a contact.</p>",
          "shape": "AntennaDownlinkConfig"
        },
        "antennaDownlinkDemodDecodeConfig": {
          "documentation": "<p>Information about how AWS Ground Station should con\ufb01gure an antenna for downlink demod decode during a contact.</p>",
          "shape": "AntennaDownlinkDemodDecodeConfig"
        },
        "antennaUplinkConfig": {
          "documentation": "<p>Information about how AWS Ground Station should con\ufb01gure an antenna for uplink during a contact.</p>",
          "shape": "AntennaUplinkConfig"
        },
        "dataflowEndpointConfig": {
          "documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>",
          "shape": "DataflowEndpointConfig"
        },
        "s3RecordingConfig": {
          "documentation": "<p>Information about an S3 recording <code>Config</code>.</p>",
          "shape": "S3RecordingConfig"
        },
        "trackingConfig": {
          "documentation": "<p>Object that determines whether tracking should be used during a contact executed with this <code>Config</code> in the mission profile. </p>",
          "shape": "TrackingConfig"
        },
        "uplinkEchoConfig": {
          "documentation": "<p>Information about an uplink echo <code>Config</code>.</p> <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> is used in a contact.</p>",
          "shape": "UplinkEchoConfig"
        }
      },
      "type": "structure",
      "union": true
    },
    "ContactData": {
      "documentation": "<p>Data describing a contact.</p>",
      "members": {
        "contactId": {
          "documentation": "<p>UUID of a contact.</p>",
          "shape": "String"
        },
        "contactStatus": {
          "documentation": "<p>Status of a contact.</p>",
          "shape": "ContactStatus"
        },
        "endTime": {
          "documentation": "<p>End time of a contact.</p>",
          "shape": "Timestamp"
        },
        "errorMessage": {
          "documentation": "<p>Error message of a contact.</p>",
          "shape": "String"
        },
        "groundStation": {
          "documentation": "<p>Name of a ground station.</p>",
          "shape": "String"
        },
        "maximumElevation": {
          "documentation": "<p>Maximum elevation angle of a contact.</p>",
          "shape": "Elevation"
        },
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "postPassEndTime": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "Timestamp"
        },
        "prePassStartTime": {
          "documentation": "<p>Amount of time prior to contact start you\u2019d like to receive a CloudWatch event indicating an upcoming pass.</p>",
          "shape": "Timestamp"
        },
        "region": {
          "documentation": "<p>Region of a contact.</p>",
          "shape": "String"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite.</p>",
          "shape": "satelliteArn"
        },
        "startTime": {
          "documentation": "<p>Start time of a contact.</p>",
          "shape": "Timestamp"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a contact.</p>",
          "shape": "TagsMap"
        }
      },
      "type": "structure"
    },
    "ContactIdResponse": {
      "documentation": "<p/>",
      "members": {
        "contactId": {
          "documentation": "<p>UUID of a contact.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ContactList": {
      "member": {
        "shape": "ContactData"
      },
      "type": "list"
    },
    "ContactStatus": {
      "enum": [
        "AVAILABLE",
        "AWS_CANCELLED",
        "AWS_FAILED",
        "CANCELLED",
        "CANCELLING",
        "COMPLETED",
        "FAILED",
        "FAILED_TO_SCHEDULE",
        "PASS",
        "POSTPASS",
        "PREPASS",
        "SCHEDULED",
        "SCHEDULING"
      ],
      "type": "string"
    },
    "CreateConfigRequest": {
      "documentation": "<p/>",
      "members": {
        "configData": {
          "documentation": "<p>Parameters of a <code>Config</code>.</p>",
          "shape": "ConfigTypeData"
        },
        "name": {
          "documentation": "<p>Name of a <code>Config</code>.</p>",
          "shape": "SafeName"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a <code>Config</code>.</p>",
          "shape": "TagsMap"
        }
      },
      "required": [
        "configData",
        "name"
      ],
      "type": "structure"
    },
    "CreateDataflowEndpointGroupRequest": {
      "documentation": "<p/>",
      "members": {
        "endpointDetails": {
          "documentation": "<p>Endpoint details of each endpoint in the dataflow endpoint group.</p>",
          "shape": "EndpointDetailsList"
        },
        "tags": {
          "documentation": "<p>Tags of a dataflow endpoint group.</p>",
          "shape": "TagsMap"
        }
      },
      "required": [
        "endpointDetails"
      ],
      "type": "structure"
    },
    "CreateMissionProfileRequest": {
      "documentation": "<p/>",
      "members": {
        "contactPostPassDurationSeconds": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "DurationInSeconds"
        },
        "contactPrePassDurationSeconds": {
          "documentation": "<p>Amount of time prior to contact start you\u2019d like to receive a CloudWatch event indicating an upcoming pass.</p>",
          "shape": "DurationInSeconds"
        },
        "dataflowEdges": {
          "documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i> <code>Config</code> and a <i>to</i> <code>Config</code>.</p>",
          "shape": "DataflowEdgeList"
        },
        "minimumViableContactDurationSeconds": {
          "documentation": "<p>Smallest amount of time in seconds that you\u2019d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
          "shape": "DurationInSeconds"
        },
        "name": {
          "documentation": "<p>Name of a mission profile.</p>",
          "shape": "SafeName"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a mission profile.</p>",
          "shape": "TagsMap"
        },
        "trackingConfigArn": {
          "documentation": "<p>ARN of a tracking <code>Config</code>.</p>",
          "shape": "ConfigArn"
        }
      },
      "required": [
        "dataflowEdges",
        "minimumViableContactDurationSeconds",
        "name",
        "trackingConfigArn"
      ],
      "type": "structure"
    },
    "Criticality": {
      "enum": [
        "PREFERRED",
        "REMOVED",
        "REQUIRED"
      ],
      "type": "string"
    },
    "DataflowDetail": {
      "documentation": "<p>Information about a dataflow edge used in a contact.</p>",
      "members": {
        "destination": {
          "shape": "Destination"
        },
        "errorMessage": {
          "documentation": "<p>Error message for a dataflow.</p>",
          "shape": "String"
        },
        "source": {
          "shape": "Source"
        }
      },
      "type": "structure"
    },
    "DataflowEdge": {
      "max": 2,
      "member": {
        "shape": "ConfigArn"
      },
      "min": 2,
      "type": "list"
    },
    "DataflowEdgeList": {
      "member": {
        "shape": "DataflowEdge"
      },
      "type": "list"
    },
    "DataflowEndpoint": {
      "documentation": "<p>Information about a dataflow endpoint.</p>",
      "members": {
        "address": {
          "documentation": "<p>Socket address of a dataflow endpoint.</p>",
          "shape": "SocketAddress"
        },
        "mtu": {
          "documentation": "<p>Maximum transmission unit (MTU) size in bytes of a dataflow endpoint.</p>",
          "shape": "DataflowEndpointMtuInteger"
        },
        "name": {
          "documentation": "<p>Name of a dataflow endpoint.</p>",
          "shape": "SafeName"
        },
        "status": {
          "documentation": "<p>Status of a dataflow endpoint.</p>",
          "shape": "EndpointStatus"
        }
      },
      "type": "structure"
    },
    "DataflowEndpointConfig": {
      "documentation": "<p>Information about the dataflow endpoint <code>Config</code>.</p>",
      "members": {
        "dataflowEndpointName": {
          "documentation": "<p>Name of a dataflow endpoint.</p>",
          "shape": "String"
        },
        "dataflowEndpointRegion": {
          "documentation": "<p>Region of a dataflow endpoint.</p>",
          "shape": "String"
        }
      },
      "required": [
        "dataflowEndpointName"
      ],
      "type": "structure"
    },
    "DataflowEndpointGroupArn": {
      "type": "string"
    },
    "DataflowEndpointGroupIdResponse": {
      "documentation": "<p/>",
      "members": {
        "dataflowEndpointGroupId": {
          "documentation": "<p>UUID of a dataflow endpoint group.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DataflowEndpointGroupList": {
      "member": {
        "shape": "DataflowEndpointListItem"
      },
      "type": "list"
    },
    "DataflowEndpointListItem": {
      "documentation": "<p>Item in a list of <code>DataflowEndpoint</code> groups.</p>",
      "members": {
        "dataflowEndpointGroupArn": {
          "documentation": "<p>ARN of a dataflow endpoint group.</p>",
          "shape": "DataflowEndpointGroupArn"
        },
        "dataflowEndpointGroupId": {
          "documentation": "<p>UUID of a dataflow endpoint group.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DataflowEndpointMtuInteger": {
      "box": true,
      "max": 1500,
      "min": 1400,
      "type": "integer"
    },
    "DataflowList": {
      "member": {
        "shape": "DataflowDetail"
      },
      "type": "list"
    },
    "DecodeConfig": {
      "documentation": "<p>Information about the decode <code>Config</code>.</p>",
      "members": {
        "unvalidatedJSON": {
          "documentation": "<p>Unvalidated JSON of a decode <code>Config</code>.</p>",
          "shape": "JsonString"
        }
      },
      "required": [
        "unvalidatedJSON"
      ],
      "type": "structure"
    },
    "DeleteConfigRequest": {
      "documentation": "<p/>",
      "members": {
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configId",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configType",
          "shape": "ConfigCapabilityType"
        }
      },
      "required": [
        "configId",
        "configType"
      ],
      "type": "structure"
    },
    "DeleteDataflowEndpointGroupRequest": {
      "documentation": "<p/>",
      "members": {
        "dataflowEndpointGroupId": {
          "documentation": "<p>UUID of a dataflow endpoint group.</p>",
          "location": "uri",
          "locationName": "dataflowEndpointGroupId",
          "shape": "String"
        }
      },
      "required": [
        "dataflowEndpointGroupId"
      ],
      "type": "structure"
    },
    "DeleteMissionProfileRequest": {
      "documentation": "<p/>",
      "members": {
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "location": "uri",
          "locationName": "missionProfileId",
          "shape": "String"
        }
      },
      "required": [
        "missionProfileId"
      ],
      "type": "structure"
    },
    "DemodulationConfig": {
      "documentation": "<p>Information about the demodulation <code>Config</code>.</p>",
      "members": {
        "unvalidatedJSON": {
          "documentation": "<p>Unvalidated JSON of a demodulation <code>Config</code>.</p>",
          "shape": "JsonString"
        }
      },
      "required": [
        "unvalidatedJSON"
      ],
      "type": "structure"
    },
    "DependencyException": {
      "documentation": "<p>Dependency encountered an error.</p>",
      "error": {
        "httpStatusCode": 531
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "parameterName": {
          "documentation": "<p/>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "DescribeContactRequest": {
      "documentation": "<p/>",
      "members": {
        "contactId": {
          "documentation": "<p>UUID of a contact.</p>",
          "location": "uri",
          "locationName": "contactId",
          "shape": "String"
        }
      },
      "required": [
        "contactId"
      ],
      "type": "structure"
    },
    "DescribeContactResponse": {
      "documentation": "<p/>",
      "members": {
        "contactId": {
          "documentation": "<p>UUID of a contact.</p>",
          "shape": "String"
        },
        "contactStatus": {
          "documentation": "<p>Status of a contact.</p>",
          "shape": "ContactStatus"
        },
        "dataflowList": {
          "documentation": "<p>List describing source and destination details for each dataflow edge.</p>",
          "shape": "DataflowList"
        },
        "endTime": {
          "documentation": "<p>End time of a contact.</p>",
          "shape": "Timestamp"
        },
        "errorMessage": {
          "documentation": "<p>Error message for a contact.</p>",
          "shape": "String"
        },
        "groundStation": {
          "documentation": "<p>Ground station for a contact.</p>",
          "shape": "String"
        },
        "maximumElevation": {
          "documentation": "<p>Maximum elevation angle of a contact.</p>",
          "shape": "Elevation"
        },
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "postPassEndTime": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "Timestamp"
        },
        "prePassStartTime": {
          "documentation": "<p>Amount of time prior to contact start you\u2019d like to receive a CloudWatch event indicating an upcoming pass.</p>",
          "shape": "Timestamp"
        },
        "region": {
          "documentation": "<p>Region of a contact.</p>",
          "shape": "String"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite.</p>",
          "shape": "satelliteArn"
        },
        "startTime": {
          "documentation": "<p>Start time of a contact.</p>",
          "shape": "Timestamp"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a contact.</p>",
          "shape": "TagsMap"
        }
      },
      "type": "structure"
    },
    "Destination": {
      "documentation": "<p>Dataflow details for the destination side.</p>",
      "members": {
        "configDetails": {
          "documentation": "<p>Additional details for a <code>Config</code>, if type is dataflow endpoint or antenna demod decode.</p>",
          "shape": "ConfigDetails"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "shape": "ConfigCapabilityType"
        },
        "dataflowDestinationRegion": {
          "documentation": "<p>Region of a dataflow destination.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Double": {
      "box": true,
      "type": "double"
    },
    "DurationInSeconds": {
      "box": true,
      "max": 21600,
      "min": 1,
      "type": "integer"
    },
    "Eirp": {
      "documentation": "<p>Object that represents EIRP.</p>",
      "members": {
        "units": {
          "documentation": "<p>Units of an EIRP.</p>",
          "shape": "EirpUnits"
        },
        "value": {
          "documentation": "<p>Value of an EIRP. Valid values are between 20.0 to 50.0 dBW.</p>",
          "shape": "Double"
        }
      },
      "required": [
        "units",
        "value"
      ],
      "type": "structure"
    },
    "EirpUnits": {
      "enum": [
        "dBW"
      ],
      "type": "string"
    },
    "Elevation": {
      "documentation": "<p>Elevation angle of the satellite in the sky during a contact.</p>",
      "members": {
        "unit": {
          "documentation": "<p>Elevation angle units.</p>",
          "shape": "AngleUnits"
        },
        "value": {
          "documentation": "<p>Elevation angle value.</p>",
          "shape": "Double"
        }
      },
      "required": [
        "unit",
        "value"
      ],
      "type": "structure"
    },
    "EndpointDetails": {
      "documentation": "<p>Information about the endpoint details.</p>",
      "members": {
        "endpoint": {
          "documentation": "<p>A dataflow endpoint.</p>",
          "shape": "DataflowEndpoint"
        },
        "securityDetails": {
          "documentation": "<p>Endpoint security details.</p>",
          "shape": "SecurityDetails"
        }
      },
      "type": "structure"
    },
    "EndpointDetailsList": {
      "member": {
        "shape": "EndpointDetails"
      },
      "type": "list"
    },
    "EndpointStatus": {
      "enum": [
        "created",
        "creating",
        "deleted",
        "deleting",
        "failed"
      ],
      "type": "string"
    },
    "Frequency": {
      "documentation": "<p>Object that describes the frequency.</p>",
      "members": {
        "units": {
          "documentation": "<p>Frequency units.</p>",
          "shape": "FrequencyUnits"
        },
        "value": {
          "documentation": "<p>Frequency value. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.</p>",
          "shape": "Double"
        }
      },
      "required": [
        "units",
        "value"
      ],
      "type": "structure"
    },
    "FrequencyBandwidth": {
      "documentation": "<p>Object that describes the frequency bandwidth. </p>",
      "members": {
        "units": {
          "documentation": "<p>Frequency bandwidth units.</p>",
          "shape": "BandwidthUnits"
        },
        "value": {
          "documentation": "<p>Frequency bandwidth value. AWS Ground Station currently has the following bandwidth limitations:</p> <ul> <li> <p>For <code>AntennaDownlinkDemodDecodeconfig</code>, valid values are between 125 kHz to 650 MHz.</p> </li> <li> <p>For <code>AntennaDownlinkconfig</code>, valid values are between 10 kHz to 54 MHz.</p> </li> <li> <p>For <code>AntennaUplinkConfig</code>, valid values are between 10 kHz to 54 MHz.</p> </li> </ul>",
          "shape": "Double"
        }
      },
      "required": [
        "units",
        "value"
      ],
      "type": "structure"
    },
    "FrequencyUnits": {
      "enum": [
        "GHz",
        "MHz",
        "kHz"
      ],
      "type": "string"
    },
    "GetConfigRequest": {
      "documentation": "<p/>",
      "members": {
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configId",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configType",
          "shape": "ConfigCapabilityType"
        }
      },
      "required": [
        "configId",
        "configType"
      ],
      "type": "structure"
    },
    "GetConfigResponse": {
      "documentation": "<p/>",
      "members": {
        "configArn": {
          "documentation": "<p>ARN of a <code>Config</code> </p>",
          "shape": "ConfigArn"
        },
        "configData": {
          "documentation": "<p>Data elements in a <code>Config</code>.</p>",
          "shape": "ConfigTypeData"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "shape": "ConfigCapabilityType"
        },
        "name": {
          "documentation": "<p>Name of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a <code>Config</code>.</p>",
          "shape": "TagsMap"
        }
      },
      "required": [
        "configArn",
        "configData",
        "configId",
        "name"
      ],
      "type": "structure"
    },
    "GetDataflowEndpointGroupRequest": {
      "documentation": "<p/>",
      "members": {
        "dataflowEndpointGroupId": {
          "documentation": "<p>UUID of a dataflow endpoint group.</p>",
          "location": "uri",
          "locationName": "dataflowEndpointGroupId",
          "shape": "String"
        }
      },
      "required": [
        "dataflowEndpointGroupId"
      ],
      "type": "structure"
    },
    "GetDataflowEndpointGroupResponse": {
      "documentation": "<p/>",
      "members": {
        "dataflowEndpointGroupArn": {
          "documentation": "<p>ARN of a dataflow endpoint group.</p>",
          "shape": "DataflowEndpointGroupArn"
        },
        "dataflowEndpointGroupId": {
          "documentation": "<p>UUID of a dataflow endpoint group.</p>",
          "shape": "String"
        },
        "endpointsDetails": {
          "documentation": "<p>Details of a dataflow endpoint.</p>",
          "shape": "EndpointDetailsList"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a dataflow endpoint group.</p>",
          "shape": "TagsMap"
        }
      },
      "type": "structure"
    },
    "GetMinuteUsageRequest": {
      "documentation": "<p/>",
      "members": {
        "month": {
          "documentation": "<p>The month being requested, with a value of 1-12.</p>",
          "shape": "Integer"
        },
        "year": {
          "documentation": "<p>The year being requested, in the format of YYYY.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "month",
        "year"
      ],
      "type": "structure"
    },
    "GetMinuteUsageResponse": {
      "documentation": "<p/>",
      "members": {
        "estimatedMinutesRemaining": {
          "documentation": "<p>Estimated number of minutes remaining for an account, specific to the month being requested.</p>",
          "shape": "Integer"
        },
        "isReservedMinutesCustomer": {
          "documentation": "<p>Returns whether or not an account has signed up for the reserved minutes pricing plan, specific to the month being requested.</p>",
          "shape": "Boolean"
        },
        "totalReservedMinuteAllocation": {
          "documentation": "<p>Total number of reserved minutes allocated, specific to the month being requested.</p>",
          "shape": "Integer"
        },
        "totalScheduledMinutes": {
          "documentation": "<p>Total scheduled minutes for an account, specific to the month being requested.</p>",
          "shape": "Integer"
        },
        "upcomingMinutesScheduled": {
          "documentation": "<p>Upcoming minutes scheduled for an account, specific to the month being requested.</p>",
          "shape": "Integer"
        }
      },
      "type": "structure"
    },
    "GetMissionProfileRequest": {
      "documentation": "<p/>",
      "members": {
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "location": "uri",
          "locationName": "missionProfileId",
          "shape": "String"
        }
      },
      "required": [
        "missionProfileId"
      ],
      "type": "structure"
    },
    "GetMissionProfileResponse": {
      "documentation": "<p/>",
      "members": {
        "contactPostPassDurationSeconds": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "DurationInSeconds"
        },
        "contactPrePassDurationSeconds": {
          "documentation": "<p>Amount of time prior to contact start you\u2019d like to receive a CloudWatch event indicating an upcoming pass.</p>",
          "shape": "DurationInSeconds"
        },
        "dataflowEdges": {
          "documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i> <code>Config</code> and a <i>to</i> <code>Config</code>.</p>",
          "shape": "DataflowEdgeList"
        },
        "minimumViableContactDurationSeconds": {
          "documentation": "<p>Smallest amount of time in seconds that you\u2019d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
          "shape": "DurationInSeconds"
        },
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>Name of a mission profile.</p>",
          "shape": "String"
        },
        "region": {
          "documentation": "<p>Region of a mission profile.</p>",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a mission profile.</p>",
          "shape": "TagsMap"
        },
        "trackingConfigArn": {
          "documentation": "<p>ARN of a tracking <code>Config</code>.</p>",
          "shape": "ConfigArn"
        }
      },
      "type": "structure"
    },
    "GetSatelliteRequest": {
      "documentation": "<p/>",
      "members": {
        "satelliteId": {
          "documentation": "<p>UUID of a satellite.</p>",
          "location": "uri",
          "locationName": "satelliteId",
          "shape": "String"
        }
      },
      "required": [
        "satelliteId"
      ],
      "type": "structure"
    },
    "GetSatelliteResponse": {
      "documentation": "<p/>",
      "members": {
        "groundStations": {
          "documentation": "<p>A list of ground stations to which the satellite is on-boarded.</p>",
          "shape": "GroundStationIdList"
        },
        "noradSatelliteID": {
          "documentation": "<p>NORAD satellite ID number.</p>",
          "shape": "noradSatelliteID"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite.</p>",
          "shape": "satelliteArn"
        },
        "satelliteId": {
          "documentation": "<p>UUID of a satellite.</p>",
          "shape": "Uuid"
        }
      },
      "type": "structure"
    },
    "GroundStationData": {
      "documentation": "<p>Information about the ground station data.</p>",
      "members": {
        "groundStationId": {
          "documentation": "<p>UUID of a ground station.</p>",
          "shape": "String"
        },
        "groundStationName": {
          "documentation": "<p>Name of a ground station.</p>",
          "shape": "String"
        },
        "region": {
          "documentation": "<p>Ground station Region.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "GroundStationIdList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "GroundStationList": {
      "member": {
        "shape": "GroundStationData"
      },
      "type": "list"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InvalidParameterException": {
      "documentation": "<p>One or more parameters are not valid.</p>",
      "error": {
        "httpStatusCode": 431,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "parameterName": {
          "documentation": "<p/>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "JsonString": {
      "max": 8192,
      "min": 2,
      "pattern": "^[{}\\[\\]:.,\"0-9A-z\\-_\\s]{2,8192}$",
      "type": "string"
    },
    "ListConfigsRequest": {
      "documentation": "<p/>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of <code>Configs</code> returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the request of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListConfigsResponse": {
      "documentation": "<p/>",
      "members": {
        "configList": {
          "documentation": "<p>List of <code>Config</code> items.</p>",
          "shape": "ConfigList"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the response of a previous <code>ListConfigs</code> call. Used to get the next page of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListContactsRequest": {
      "documentation": "<p/>",
      "members": {
        "endTime": {
          "documentation": "<p>End time of a contact.</p>",
          "shape": "Timestamp"
        },
        "groundStation": {
          "documentation": "<p>Name of a ground station.</p>",
          "shape": "String"
        },
        "maxResults": {
          "documentation": "<p>Maximum number of contacts returned.</p>",
          "shape": "Integer"
        },
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the request of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>",
          "shape": "String"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite.</p>",
          "shape": "satelliteArn"
        },
        "startTime": {
          "documentation": "<p>Start time of a contact.</p>",
          "shape": "Timestamp"
        },
        "statusList": {
          "documentation": "<p>Status of a contact reservation.</p>",
          "shape": "StatusList"
        }
      },
      "required": [
        "endTime",
        "startTime",
        "statusList"
      ],
      "type": "structure"
    },
    "ListContactsResponse": {
      "documentation": "<p/>",
      "members": {
        "contactList": {
          "documentation": "<p>List of contacts.</p>",
          "shape": "ContactList"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the response of a previous <code>ListContacts</code> call. Used to get the next page of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListDataflowEndpointGroupsRequest": {
      "documentation": "<p/>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of dataflow endpoint groups returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the request of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListDataflowEndpointGroupsResponse": {
      "documentation": "<p/>",
      "members": {
        "dataflowEndpointGroupList": {
          "documentation": "<p>A list of dataflow endpoint groups.</p>",
          "shape": "DataflowEndpointGroupList"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the response of a previous <code>ListDataflowEndpointGroups</code> call. Used to get the next page of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListGroundStationsRequest": {
      "documentation": "<p/>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of ground stations returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        },
        "satelliteId": {
          "documentation": "<p>Satellite ID to retrieve on-boarded ground stations.</p>",
          "location": "querystring",
          "locationName": "satelliteId",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListGroundStationsResponse": {
      "documentation": "<p/>",
      "members": {
        "groundStationList": {
          "documentation": "<p>List of ground stations.</p>",
          "shape": "GroundStationList"
        },
        "nextToken": {
          "documentation": "<p>Next token that can be supplied in the next call to get the next page of ground stations.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMissionProfilesRequest": {
      "documentation": "<p/>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of mission profiles returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the request of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListMissionProfilesResponse": {
      "documentation": "<p/>",
      "members": {
        "missionProfileList": {
          "documentation": "<p>List of mission profiles.</p>",
          "shape": "MissionProfileList"
        },
        "nextToken": {
          "documentation": "<p>Next token returned in the response of a previous <code>ListMissionProfiles</code> call. Used to get the next page of results.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListSatellitesRequest": {
      "documentation": "<p/>",
      "members": {
        "maxResults": {
          "documentation": "<p>Maximum number of satellites returned.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "Integer"
        },
        "nextToken": {
          "documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ListSatellitesResponse": {
      "documentation": "<p/>",
      "members": {
        "nextToken": {
          "documentation": "<p>Next token that can be supplied in the next call to get the next page of satellites.</p>",
          "shape": "String"
        },
        "satellites": {
          "documentation": "<p>List of satellites.</p>",
          "shape": "SatelliteList"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "documentation": "<p/>",
      "members": {
        "resourceArn": {
          "documentation": "<p>ARN of a resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        }
      },
      "required": [
        "resourceArn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "documentation": "<p/>",
      "members": {
        "tags": {
          "documentation": "<p>Tags assigned to a resource.</p>",
          "shape": "TagsMap"
        }
      },
      "type": "structure"
    },
    "MissionProfileArn": {
      "type": "string"
    },
    "MissionProfileIdResponse": {
      "documentation": "<p/>",
      "members": {
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "MissionProfileList": {
      "member": {
        "shape": "MissionProfileListItem"
      },
      "type": "list"
    },
    "MissionProfileListItem": {
      "documentation": "<p>Item in a list of mission profiles.</p>",
      "members": {
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>Name of a mission profile.</p>",
          "shape": "String"
        },
        "region": {
          "documentation": "<p>Region of a mission profile.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "Polarization": {
      "enum": [
        "LEFT_HAND",
        "NONE",
        "RIGHT_HAND"
      ],
      "type": "string"
    },
    "ReserveContactRequest": {
      "documentation": "<p/>",
      "members": {
        "endTime": {
          "documentation": "<p>End time of a contact.</p>",
          "shape": "Timestamp"
        },
        "groundStation": {
          "documentation": "<p>Name of a ground station.</p>",
          "shape": "String"
        },
        "missionProfileArn": {
          "documentation": "<p>ARN of a mission profile.</p>",
          "shape": "MissionProfileArn"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite</p>",
          "shape": "satelliteArn"
        },
        "startTime": {
          "documentation": "<p>Start time of a contact.</p>",
          "shape": "Timestamp"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a contact.</p>",
          "shape": "TagsMap"
        }
      },
      "required": [
        "endTime",
        "groundStation",
        "missionProfileArn",
        "satelliteArn",
        "startTime"
      ],
      "type": "structure"
    },
    "ResourceLimitExceededException": {
      "documentation": "<p>Account limits for this resource have been exceeded.</p>",
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "parameterName": {
          "documentation": "<p/>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>Resource was not found.</p>",
      "error": {
        "httpStatusCode": 434,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "RoleArn": {
      "type": "string"
    },
    "S3KeyPrefix": {
      "max": 900,
      "min": 1,
      "pattern": "^([a-zA-Z0-9_\\-=/]|\\{satellite_id\\}|\\{config\\-name}|\\{s3\\-config-id}|\\{year\\}|\\{month\\}|\\{day\\}){1,900}$",
      "type": "string"
    },
    "S3RecordingConfig": {
      "documentation": "<p>Information about an S3 recording <code>Config</code>.</p>",
      "members": {
        "bucketArn": {
          "documentation": "<p>ARN of the bucket to record to.</p>",
          "shape": "BucketArn"
        },
        "prefix": {
          "documentation": "<p>S3 Key prefix to prefice data files.</p>",
          "shape": "S3KeyPrefix"
        },
        "roleArn": {
          "documentation": "<p>ARN of the role Ground Station assumes to write data to the bucket.</p>",
          "shape": "RoleArn"
        }
      },
      "required": [
        "bucketArn",
        "roleArn"
      ],
      "type": "structure"
    },
    "S3RecordingDetails": {
      "documentation": "<p>Details about an S3 recording <code>Config</code> used in a contact.</p>",
      "members": {
        "bucketArn": {
          "documentation": "<p>ARN of the bucket used.</p>",
          "shape": "BucketArn"
        },
        "keyTemplate": {
          "documentation": "<p>Template of the S3 key used.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SafeName": {
      "max": 256,
      "min": 1,
      "pattern": "^[ a-zA-Z0-9_:-]{1,256}$",
      "type": "string"
    },
    "SatelliteList": {
      "member": {
        "shape": "SatelliteListItem"
      },
      "type": "list"
    },
    "SatelliteListItem": {
      "documentation": "<p>Item in a list of satellites.</p>",
      "members": {
        "groundStations": {
          "documentation": "<p>A list of ground stations to which the satellite is on-boarded.</p>",
          "shape": "GroundStationIdList"
        },
        "noradSatelliteID": {
          "documentation": "<p>NORAD satellite ID number.</p>",
          "shape": "noradSatelliteID"
        },
        "satelliteArn": {
          "documentation": "<p>ARN of a satellite.</p>",
          "shape": "satelliteArn"
        },
        "satelliteId": {
          "documentation": "<p>UUID of a satellite.</p>",
          "shape": "Uuid"
        }
      },
      "type": "structure"
    },
    "SecurityDetails": {
      "documentation": "<p>Information about endpoints.</p>",
      "members": {
        "roleArn": {
          "documentation": "<p>ARN to a role needed for connecting streams to your instances. </p>",
          "shape": "RoleArn"
        },
        "securityGroupIds": {
          "documentation": "<p>The security groups to attach to the elastic network interfaces.</p>",
          "shape": "SecurityGroupIdList"
        },
        "subnetIds": {
          "documentation": "<p>A list of subnets where AWS Ground Station places elastic network interfaces to send streams to your instances.</p>",
          "shape": "SubnetList"
        }
      },
      "required": [
        "roleArn",
        "securityGroupIds",
        "subnetIds"
      ],
      "type": "structure"
    },
    "SecurityGroupIdList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "SocketAddress": {
      "documentation": "<p>Information about the socket address.</p>",
      "members": {
        "name": {
          "documentation": "<p>Name of a socket address.</p>",
          "shape": "String"
        },
        "port": {
          "documentation": "<p>Port of a socket address.</p>",
          "shape": "Integer"
        }
      },
      "required": [
        "name",
        "port"
      ],
      "type": "structure"
    },
    "Source": {
      "documentation": "<p>Dataflow details for the source side.</p>",
      "members": {
        "configDetails": {
          "documentation": "<p>Additional details for a <code>Config</code>, if type is dataflow endpoint or antenna demod decode.</p>",
          "shape": "ConfigDetails"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "shape": "ConfigCapabilityType"
        },
        "dataflowSourceRegion": {
          "documentation": "<p>Region of a dataflow source.</p>",
          "shape": "String"
        }
      },
      "type": "structure"
    },
    "SpectrumConfig": {
      "documentation": "<p>Object that describes a spectral <code>Config</code>.</p>",
      "members": {
        "bandwidth": {
          "documentation": "<p>Bandwidth of a spectral <code>Config</code>. AWS Ground Station currently has the following bandwidth limitations:</p> <ul> <li> <p>For <code>AntennaDownlinkDemodDecodeconfig</code>, valid values are between 125 kHz to 650 MHz.</p> </li> <li> <p>For <code>AntennaDownlinkconfig</code> valid values are between 10 kHz to 54 MHz.</p> </li> <li> <p>For <code>AntennaUplinkConfig</code>, valid values are between 10 kHz to 54 MHz.</p> </li> </ul>",
          "shape": "FrequencyBandwidth"
        },
        "centerFrequency": {
          "documentation": "<p>Center frequency of a spectral <code>Config</code>. Valid values are between 2200 to 2300 MHz and 7750 to 8400 MHz for downlink and 2025 to 2120 MHz for uplink.</p>",
          "shape": "Frequency"
        },
        "polarization": {
          "documentation": "<p>Polarization of a spectral <code>Config</code>. Capturing both <code>\"RIGHT_HAND\"</code> and <code>\"LEFT_HAND\"</code> polarization requires two separate configs.</p>",
          "shape": "Polarization"
        }
      },
      "required": [
        "bandwidth",
        "centerFrequency"
      ],
      "type": "structure"
    },
    "StatusList": {
      "member": {
        "shape": "ContactStatus"
      },
      "type": "list"
    },
    "String": {
      "type": "string"
    },
    "SubnetList": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "TagKeys": {
      "member": {
        "shape": "String"
      },
      "type": "list"
    },
    "TagResourceRequest": {
      "documentation": "<p/>",
      "members": {
        "resourceArn": {
          "documentation": "<p>ARN of a resource tag.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tags": {
          "documentation": "<p>Tags assigned to a resource.</p>",
          "shape": "TagsMap"
        }
      },
      "required": [
        "resourceArn",
        "tags"
      ],
      "type": "structure"
    },
    "TagResourceResponse": {
      "documentation": "<p/>",
      "members": {},
      "type": "structure"
    },
    "TagsMap": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "Timestamp": {
      "type": "timestamp"
    },
    "TrackingConfig": {
      "documentation": "<p>Object that determines whether tracking should be used during a contact executed with this <code>Config</code> in the mission profile.</p>",
      "members": {
        "autotrack": {
          "documentation": "<p>Current setting for autotrack.</p>",
          "shape": "Criticality"
        }
      },
      "required": [
        "autotrack"
      ],
      "type": "structure"
    },
    "UntagResourceRequest": {
      "documentation": "<p/>",
      "members": {
        "resourceArn": {
          "documentation": "<p>ARN of a resource.</p>",
          "location": "uri",
          "locationName": "resourceArn",
          "shape": "String"
        },
        "tagKeys": {
          "documentation": "<p>Keys of a resource tag.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeys"
        }
      },
      "required": [
        "resourceArn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UntagResourceResponse": {
      "documentation": "<p/>",
      "members": {},
      "type": "structure"
    },
    "UpdateConfigRequest": {
      "documentation": "<p/>",
      "members": {
        "configData": {
          "documentation": "<p>Parameters of a <code>Config</code>.</p>",
          "shape": "ConfigTypeData"
        },
        "configId": {
          "documentation": "<p>UUID of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configId",
          "shape": "String"
        },
        "configType": {
          "documentation": "<p>Type of a <code>Config</code>.</p>",
          "location": "uri",
          "locationName": "configType",
          "shape": "ConfigCapabilityType"
        },
        "name": {
          "documentation": "<p>Name of a <code>Config</code>.</p>",
          "shape": "SafeName"
        }
      },
      "required": [
        "configData",
        "configId",
        "configType",
        "name"
      ],
      "type": "structure"
    },
    "UpdateMissionProfileRequest": {
      "documentation": "<p/>",
      "members": {
        "contactPostPassDurationSeconds": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "DurationInSeconds"
        },
        "contactPrePassDurationSeconds": {
          "documentation": "<p>Amount of time after a contact ends that you\u2019d like to receive a CloudWatch event indicating the pass has finished.</p>",
          "shape": "DurationInSeconds"
        },
        "dataflowEdges": {
          "documentation": "<p>A list of lists of ARNs. Each list of ARNs is an edge, with a <i>from</i> <code>Config</code> and a <i>to</i> <code>Config</code>.</p>",
          "shape": "DataflowEdgeList"
        },
        "minimumViableContactDurationSeconds": {
          "documentation": "<p>Smallest amount of time in seconds that you\u2019d like to see for an available contact. AWS Ground Station will not present you with contacts shorter than this duration.</p>",
          "shape": "DurationInSeconds"
        },
        "missionProfileId": {
          "documentation": "<p>UUID of a mission profile.</p>",
          "location": "uri",
          "locationName": "missionProfileId",
          "shape": "String"
        },
        "name": {
          "documentation": "<p>Name of a mission profile.</p>",
          "shape": "SafeName"
        },
        "trackingConfigArn": {
          "documentation": "<p>ARN of a tracking <code>Config</code>.</p>",
          "shape": "ConfigArn"
        }
      },
      "required": [
        "missionProfileId"
      ],
      "type": "structure"
    },
    "UplinkEchoConfig": {
      "documentation": "<p>Information about an uplink echo <code>Config</code>.</p> <p>Parameters from the <code>AntennaUplinkConfig</code>, corresponding to the specified <code>AntennaUplinkConfigArn</code>, are used when this <code>UplinkEchoConfig</code> is used in a contact.</p>",
      "members": {
        "antennaUplinkConfigArn": {
          "documentation": "<p>ARN of an uplink <code>Config</code>.</p>",
          "shape": "ConfigArn"
        },
        "enabled": {
          "documentation": "<p>Whether or not an uplink <code>Config</code> is enabled.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "antennaUplinkConfigArn",
        "enabled"
      ],
      "type": "structure"
    },
    "UplinkSpectrumConfig": {
      "documentation": "<p>Information about the uplink spectral <code>Config</code>.</p>",
      "members": {
        "centerFrequency": {
          "documentation": "<p>Center frequency of an uplink spectral <code>Config</code>. Valid values are between 2025 to 2120 MHz.</p>",
          "shape": "Frequency"
        },
        "polarization": {
          "documentation": "<p>Polarization of an uplink spectral <code>Config</code>. Capturing both <code>\"RIGHT_HAND\"</code> and <code>\"LEFT_HAND\"</code> polarization requires two separate configs.</p>",
          "shape": "Polarization"
        }
      },
      "required": [
        "centerFrequency"
      ],
      "type": "structure"
    },
    "Uuid": {
      "max": 128,
      "min": 1,
      "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
      "type": "string"
    },
    "noradSatelliteID": {
      "max": 99999,
      "min": 1,
      "type": "integer"
    },
    "satelliteArn": {
      "type": "string"
    }
  },
  "version": "2.0"
}
