{
  "documentation": "<p>Welcome to the Amazon Connect Cases API Reference. This guide provides information about the Amazon Connect Cases API, which you can use to create, update, get, and list Cases domains, fields, field options, layouts, templates, cases, related items, and tags.</p> <pre><code> &lt;p&gt;For more information about Amazon Connect Cases, see &lt;a href=&quot;https://docs.aws.amazon.com/connect/latest/adminguide/cases.html&quot;&gt;Amazon Connect Cases&lt;/a&gt; in the &lt;i&gt;Amazon Connect Administrator Guide&lt;/i&gt;. &lt;/p&gt; </code></pre>",
  "metadata": {
    "apiVersion": "2022-10-03",
    "endpointPrefix": "cases",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceAbbreviation": "ConnectCases",
    "serviceFullName": "Amazon Connect Cases",
    "serviceId": "ConnectCases",
    "signatureVersion": "v4",
    "signingName": "cases",
    "uid": "connectcases-2022-10-03"
  },
  "operations": {
    "BatchGetField": {
      "documentation": "<p>Returns the description for the list of fields in the request parameters. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/fields-batch",
        "responseCode": 200
      },
      "input": {
        "shape": "BatchGetFieldRequest"
      },
      "name": "BatchGetField",
      "output": {
        "shape": "BatchGetFieldResponse"
      }
    },
    "BatchPutFieldOptions": {
      "documentation": "<p>Creates and updates a set of field options for a single select field in a Cases domain.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/fields/{fieldId}/options",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "BatchPutFieldOptionsRequest"
      },
      "name": "BatchPutFieldOptions",
      "output": {
        "shape": "BatchPutFieldOptionsResponse"
      }
    },
    "CreateCase": {
      "documentation": "<p>Creates a case in the specified Cases domain. Case system and custom fields are taken as an array id/value pairs with a declared data types.</p> <note> <p> <code>customer_id</code> is a required field when creating a case.</p> </note>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/cases",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateCaseRequest"
      },
      "name": "CreateCase",
      "output": {
        "shape": "CreateCaseResponse"
      }
    },
    "CreateDomain": {
      "documentation": "<p>Creates a domain, which is a container for all case data, such as cases, fields, templates and layouts. Each Amazon Connect instance can be associated with only one Cases domain.</p> <important> <p>This will not associate your connect instance to Cases domain. Instead, use the Amazon Connect <a href=\"https://docs.aws.amazon.com/connect/latest/APIReference/API_CreateIntegrationAssociation.html\">CreateIntegrationAssociation</a> API.</p> </important>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateDomainRequest"
      },
      "name": "CreateDomain",
      "output": {
        "shape": "CreateDomainResponse"
      }
    },
    "CreateField": {
      "documentation": "<p>Creates a field in the Cases domain. This field is used to define the case object model (that is, defines what data can be captured on cases) in a Cases domain. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/fields",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateFieldRequest"
      },
      "name": "CreateField",
      "output": {
        "shape": "CreateFieldResponse"
      }
    },
    "CreateLayout": {
      "documentation": "<p>Creates a layout in the Cases domain. Layouts define the following configuration in the top section and More Info tab of the Cases user interface:</p> <ul> <li> <p>Fields to display to the users</p> </li> <li> <p>Field ordering</p> </li> </ul> <note> <p>Title and Status fields cannot be part of layouts since they are not configurable.</p> </note>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/layouts",
        "responseCode": 200
      },
      "input": {
        "shape": "CreateLayoutRequest"
      },
      "name": "CreateLayout",
      "output": {
        "shape": "CreateLayoutResponse"
      }
    },
    "CreateRelatedItem": {
      "documentation": "<p>Creates a related item (comments, tasks, and contacts) and associates it with a case.</p> <note> <p>A Related Item is a resource that is associated with a case. It may or may not have an external identifier linking it to an external resource (for example, a <code>contactArn</code>). All Related Items have their own internal identifier, the <code>relatedItemArn</code>. Examples of related items include <code>comments</code> and <code>contacts</code>.</p> </note>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/cases/{caseId}/related-items/",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateRelatedItemRequest"
      },
      "name": "CreateRelatedItem",
      "output": {
        "shape": "CreateRelatedItemResponse"
      }
    },
    "CreateTemplate": {
      "documentation": "<p>Creates a template in the Cases domain. This template is used to define the case object model (that is, define what data can be captured on cases) in a Cases domain. A template must have a unique name within a domain, and it must reference existing field IDs and layout IDs. Additionally, multiple fields with same IDs are not allowed within the same Template.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/templates",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateTemplateRequest"
      },
      "name": "CreateTemplate",
      "output": {
        "shape": "CreateTemplateResponse"
      }
    },
    "GetCase": {
      "documentation": "<p>Returns information about a specific case if it exists. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/cases/{caseId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCaseRequest"
      },
      "name": "GetCase",
      "output": {
        "shape": "GetCaseResponse"
      }
    },
    "GetCaseEventConfiguration": {
      "documentation": "<p>Returns the case event publishing configuration.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/case-event-configuration",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCaseEventConfigurationRequest"
      },
      "name": "GetCaseEventConfiguration",
      "output": {
        "shape": "GetCaseEventConfigurationResponse"
      }
    },
    "GetDomain": {
      "documentation": "<p>Returns information about a specific domain if it exists. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetDomainRequest"
      },
      "name": "GetDomain",
      "output": {
        "shape": "GetDomainResponse"
      }
    },
    "GetLayout": {
      "documentation": "<p>Returns the details for the requested layout.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/layouts/{layoutId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetLayoutRequest"
      },
      "name": "GetLayout",
      "output": {
        "shape": "GetLayoutResponse"
      }
    },
    "GetTemplate": {
      "documentation": "<p>Returns the details for the requested template. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/templates/{templateId}",
        "responseCode": 200
      },
      "input": {
        "shape": "GetTemplateRequest"
      },
      "name": "GetTemplate",
      "output": {
        "shape": "GetTemplateResponse"
      }
    },
    "ListCasesForContact": {
      "documentation": "<p>Lists cases for a given contact.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/list-cases-for-contact",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCasesForContactRequest"
      },
      "name": "ListCasesForContact",
      "output": {
        "shape": "ListCasesForContactResponse"
      }
    },
    "ListDomains": {
      "documentation": "<p>Lists all cases domains in the Amazon Web Services account. Each list item is a condensed summary object of the domain.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListDomainsRequest"
      },
      "name": "ListDomains",
      "output": {
        "shape": "ListDomainsResponse"
      }
    },
    "ListFieldOptions": {
      "documentation": "<p>Lists all of the field options for a field identifier in the domain. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/fields/{fieldId}/options-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFieldOptionsRequest"
      },
      "name": "ListFieldOptions",
      "output": {
        "shape": "ListFieldOptionsResponse"
      }
    },
    "ListFields": {
      "documentation": "<p>Lists all fields in a Cases domain.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/fields-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListFieldsRequest"
      },
      "name": "ListFields",
      "output": {
        "shape": "ListFieldsResponse"
      }
    },
    "ListLayouts": {
      "documentation": "<p>Lists all layouts in the given cases domain. Each list item is a condensed summary object of the layout.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/layouts-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListLayoutsRequest"
      },
      "name": "ListLayouts",
      "output": {
        "shape": "ListLayoutsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>Lists tags for a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "ListTemplates": {
      "documentation": "<p>Lists all of the templates in a Cases domain. Each list item is a condensed summary object of the template. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/templates-list",
        "responseCode": 200
      },
      "input": {
        "shape": "ListTemplatesRequest"
      },
      "name": "ListTemplates",
      "output": {
        "shape": "ListTemplatesResponse"
      }
    },
    "PutCaseEventConfiguration": {
      "documentation": "<p>API for adding case event publishing configuration</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/case-event-configuration",
        "responseCode": 200
      },
      "input": {
        "shape": "PutCaseEventConfigurationRequest"
      },
      "name": "PutCaseEventConfiguration",
      "output": {
        "shape": "PutCaseEventConfigurationResponse"
      }
    },
    "SearchCases": {
      "documentation": "<p>Searches for cases within their associated Cases domain. Search results are returned as a paginated list of abridged case documents.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/cases-search",
        "responseCode": 200
      },
      "input": {
        "shape": "SearchCasesRequest"
      },
      "name": "SearchCases",
      "output": {
        "shape": "SearchCasesResponse"
      }
    },
    "SearchRelatedItems": {
      "documentation": "<p>Searches for related items that are associated with a case.</p> <note> <p>If no filters are provided, this returns all related items associated with a case.</p> </note>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/domains/{domainId}/cases/{caseId}/related-items-search",
        "responseCode": 200
      },
      "input": {
        "shape": "SearchRelatedItemsRequest"
      },
      "name": "SearchRelatedItems",
      "output": {
        "shape": "SearchRelatedItemsResponse"
      }
    },
    "TagResource": {
      "documentation": "<p>Adds tags to a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UntagResource": {
      "documentation": "<p>Untags a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateCase": {
      "documentation": "<p>Updates the values of fields on a case. Fields to be updated are received as an array of id/value pairs identical to the <code>CreateCase</code> input .</p> <p>If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/cases/{caseId}",
        "responseCode": 200
      },
      "input": {
        "shape": "UpdateCaseRequest"
      },
      "name": "UpdateCase",
      "output": {
        "shape": "UpdateCaseResponse"
      }
    },
    "UpdateField": {
      "documentation": "<p>Updates the properties of an existing field. </p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/fields/{fieldId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateFieldRequest"
      },
      "name": "UpdateField",
      "output": {
        "shape": "UpdateFieldResponse"
      }
    },
    "UpdateLayout": {
      "documentation": "<p>Updates the attributes of an existing layout.</p> <p>If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.</p> <p>A <code>ValidationException</code> is returned when you add non-existent <code>fieldIds</code> to a layout.</p> <note> <p>Title and Status fields cannot be part of layouts because they are not configurable.</p> </note>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/layouts/{layoutId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateLayoutRequest"
      },
      "name": "UpdateLayout",
      "output": {
        "shape": "UpdateLayoutResponse"
      }
    },
    "UpdateTemplate": {
      "documentation": "<p>Updates the attributes of an existing template. The template attributes that can be modified include <code>name</code>, <code>description</code>, <code>layouts</code>, and <code>requiredFields</code>. At least one of these attributes must not be null. If a null value is provided for a given attribute, that attribute is ignored and its current value is preserved.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ThrottlingException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ConflictException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/domains/{domainId}/templates/{templateId}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateTemplateRequest"
      },
      "name": "UpdateTemplate",
      "output": {
        "shape": "UpdateTemplateResponse"
      }
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Arn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "AssociationTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "BasicLayout": {
      "documentation": "<p>Content specific to <code>BasicLayout</code> type. It configures fields in the top panel and More Info tab of agent application. </p>",
      "members": {
        "moreInfo": {
          "documentation": "<p>This represents sections in a tab of the page layout.</p>",
          "shape": "LayoutSections"
        },
        "topPanel": {
          "documentation": "<p>This represents sections in a panel of the page layout.</p>",
          "shape": "LayoutSections"
        }
      },
      "type": "structure"
    },
    "BatchGetFieldIdentifierList": {
      "max": 50,
      "member": {
        "shape": "FieldIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "BatchGetFieldRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fields": {
          "documentation": "<p>A list of unique field identifiers. </p>",
          "shape": "BatchGetFieldIdentifierList"
        }
      },
      "required": [
        "domainId",
        "fields"
      ],
      "type": "structure"
    },
    "BatchGetFieldResponse": {
      "members": {
        "errors": {
          "documentation": "<p>A list of field errors. </p>",
          "shape": "BatchGetFieldResponseErrorsList"
        },
        "fields": {
          "documentation": "<p>A list of detailed field information. </p>",
          "shape": "BatchGetFieldResponseFieldsList"
        }
      },
      "required": [
        "errors",
        "fields"
      ],
      "type": "structure"
    },
    "BatchGetFieldResponseErrorsList": {
      "max": 50,
      "member": {
        "shape": "FieldError"
      },
      "min": 0,
      "type": "list"
    },
    "BatchGetFieldResponseFieldsList": {
      "max": 50,
      "member": {
        "shape": "GetFieldResponse"
      },
      "min": 0,
      "type": "list"
    },
    "BatchPutFieldOptionsRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fieldId": {
          "documentation": "<p>The unique identifier of a field.</p>",
          "location": "uri",
          "locationName": "fieldId",
          "shape": "FieldId"
        },
        "options": {
          "documentation": "<p>A list of <code>FieldOption</code> objects.</p>",
          "shape": "BatchPutFieldOptionsRequestOptionsList"
        }
      },
      "required": [
        "domainId",
        "fieldId",
        "options"
      ],
      "type": "structure"
    },
    "BatchPutFieldOptionsRequestOptionsList": {
      "max": 50,
      "member": {
        "shape": "FieldOption"
      },
      "min": 0,
      "type": "list"
    },
    "BatchPutFieldOptionsResponse": {
      "members": {
        "errors": {
          "documentation": "<p>A list of field errors. </p>",
          "shape": "BatchPutFieldOptionsResponseErrorsList"
        }
      },
      "type": "structure"
    },
    "BatchPutFieldOptionsResponseErrorsList": {
      "max": 50,
      "member": {
        "shape": "FieldOptionError"
      },
      "min": 0,
      "type": "list"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "CaseArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "CaseEventIncludedData": {
      "documentation": "<p>Details of what case data is published through the case event stream.</p>",
      "members": {
        "fields": {
          "documentation": "<p>List of field identifiers.</p>",
          "shape": "CaseEventIncludedDataFieldsList"
        }
      },
      "required": [
        "fields"
      ],
      "type": "structure"
    },
    "CaseEventIncludedDataFieldsList": {
      "max": 50,
      "member": {
        "shape": "FieldIdentifier"
      },
      "min": 0,
      "type": "list"
    },
    "CaseFilter": {
      "documentation": "<p>A filter for cases. Only one value can be provided.</p>",
      "members": {
        "andAll": {
          "documentation": "<p>Provides \"and all\" filtering.</p>",
          "shape": "CaseFilterAndAllList"
        },
        "field": {
          "documentation": "<p>A list of fields to filter on.</p>",
          "shape": "FieldFilter"
        },
        "not": {
          "shape": "CaseFilter"
        }
      },
      "type": "structure",
      "union": true
    },
    "CaseFilterAndAllList": {
      "max": 10,
      "member": {
        "shape": "CaseFilter"
      },
      "min": 0,
      "type": "list"
    },
    "CaseId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "CaseSummary": {
      "documentation": "<p>Case summary information.</p>",
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "shape": "CaseId"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "caseId",
        "templateId"
      ],
      "type": "structure"
    },
    "Channel": {
      "max": 100,
      "min": 1,
      "type": "string"
    },
    "CommentBody": {
      "max": 1000,
      "min": 1,
      "type": "string"
    },
    "CommentBodyTextType": {
      "enum": [
        "Text/Plain"
      ],
      "type": "string"
    },
    "CommentContent": {
      "documentation": "<p>Represents the content of a <code>Comment</code> to be returned to agents.</p>",
      "members": {
        "body": {
          "documentation": "<p>Text in the body of a <code>Comment</code> on a case.</p>",
          "shape": "CommentBody"
        },
        "contentType": {
          "documentation": "<p>Type of the text in the box of a <code>Comment</code> on a case.</p>",
          "shape": "CommentBodyTextType"
        }
      },
      "required": [
        "body",
        "contentType"
      ],
      "type": "structure"
    },
    "CommentFilter": {
      "documentation": "<p>A filter for related items of type <code>Comment</code>.</p>",
      "members": {},
      "type": "structure"
    },
    "ConflictException": {
      "documentation": "<p>The requested operation would cause a conflict with the current state of a service resource associated with the request. Resolve the conflict before retrying this request. See the accompanying error message for details.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ConnectedToSystemTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "Contact": {
      "documentation": "<p>An object that represents an Amazon Connect contact object. </p>",
      "members": {
        "contactArn": {
          "documentation": "<p>A unique identifier of a contact in Amazon Connect.</p>",
          "shape": "ContactArn"
        }
      },
      "required": [
        "contactArn"
      ],
      "type": "structure"
    },
    "ContactArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "ContactContent": {
      "documentation": "<p>An object that represents a content of an Amazon Connect contact object.</p>",
      "members": {
        "channel": {
          "documentation": "<p>A list of channels to filter on for related items of type <code>Contact</code>.</p>",
          "shape": "Channel"
        },
        "connectedToSystemTime": {
          "documentation": "<p>The difference between the <code>InitiationTimestamp</code> and the <code>DisconnectTimestamp</code> of the contact.</p>",
          "shape": "ConnectedToSystemTime"
        },
        "contactArn": {
          "documentation": "<p>A unique identifier of a contact in Amazon Connect.</p>",
          "shape": "ContactArn"
        }
      },
      "required": [
        "channel",
        "connectedToSystemTime",
        "contactArn"
      ],
      "type": "structure"
    },
    "ContactFilter": {
      "documentation": "<p>A filter for related items of type <code>Contact</code>.</p>",
      "members": {
        "channel": {
          "documentation": "<p>A list of channels to filter on for related items of type <code>Contact</code>.</p>",
          "shape": "ContactFilterChannelList"
        },
        "contactArn": {
          "documentation": "<p>A unique identifier of a contact in Amazon Connect.</p>",
          "shape": "ContactArn"
        }
      },
      "type": "structure"
    },
    "ContactFilterChannelList": {
      "max": 3,
      "member": {
        "shape": "Channel"
      },
      "min": 0,
      "type": "list"
    },
    "CreateCaseRequest": {
      "members": {
        "clientToken": {
          "documentation": "<p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>",
          "idempotencyToken": true,
          "shape": "CreateCaseRequestClientTokenString"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fields": {
          "documentation": "<p>An array of objects with field ID (matching ListFields/DescribeField) and value union data.</p>",
          "shape": "CreateCaseRequestFieldsList"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "domainId",
        "fields",
        "templateId"
      ],
      "type": "structure"
    },
    "CreateCaseRequestClientTokenString": {
      "max": 64,
      "min": 0,
      "type": "string"
    },
    "CreateCaseRequestFieldsList": {
      "max": 100,
      "member": {
        "shape": "FieldValue"
      },
      "min": 0,
      "type": "list"
    },
    "CreateCaseResponse": {
      "members": {
        "caseArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the case.</p>",
          "shape": "CaseArn"
        },
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "shape": "CaseId"
        }
      },
      "required": [
        "caseArn",
        "caseId"
      ],
      "type": "structure"
    },
    "CreateDomainRequest": {
      "members": {
        "name": {
          "documentation": "<p>The name for your Cases domain. It must be unique for your Amazon Web Services account.</p>",
          "shape": "DomainName"
        }
      },
      "required": [
        "name"
      ],
      "type": "structure"
    },
    "CreateDomainResponse": {
      "members": {
        "domainArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the Cases domain.</p>",
          "shape": "DomainArn"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "shape": "DomainId"
        },
        "domainStatus": {
          "documentation": "<p>The status of the domain.</p>",
          "shape": "DomainStatus"
        }
      },
      "required": [
        "domainArn",
        "domainId",
        "domainStatus"
      ],
      "type": "structure"
    },
    "CreateFieldRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of the field.</p>",
          "shape": "FieldDescription"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "name": {
          "documentation": "<p>The name of the field.</p>",
          "shape": "FieldName"
        },
        "type": {
          "documentation": "<p>Defines the data type, some system constraints, and default display of the field.</p>",
          "shape": "FieldType"
        }
      },
      "required": [
        "domainId",
        "name",
        "type"
      ],
      "type": "structure"
    },
    "CreateFieldResponse": {
      "members": {
        "fieldArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the field.</p>",
          "shape": "FieldArn"
        },
        "fieldId": {
          "documentation": "<p>The unique identifier of a field.</p>",
          "shape": "FieldId"
        }
      },
      "required": [
        "fieldArn",
        "fieldId"
      ],
      "type": "structure"
    },
    "CreateLayoutRequest": {
      "members": {
        "content": {
          "documentation": "<p>Information about which fields will be present in the layout, and information about the order of the fields.</p>",
          "shape": "LayoutContent"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "name": {
          "documentation": "<p>The name of the layout. It must be unique for the Cases domain.</p>",
          "shape": "LayoutName"
        }
      },
      "required": [
        "content",
        "domainId",
        "name"
      ],
      "type": "structure"
    },
    "CreateLayoutResponse": {
      "members": {
        "layoutArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the newly created layout.</p>",
          "shape": "LayoutArn"
        },
        "layoutId": {
          "documentation": "<p>The unique identifier of the layout.</p>",
          "shape": "LayoutId"
        }
      },
      "required": [
        "layoutArn",
        "layoutId"
      ],
      "type": "structure"
    },
    "CreateRelatedItemRequest": {
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "location": "uri",
          "locationName": "caseId",
          "shape": "CaseId"
        },
        "content": {
          "documentation": "<p>The content of a related item to be created.</p>",
          "shape": "RelatedItemInputContent"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "type": {
          "documentation": "<p>The type of a related item.</p>",
          "shape": "RelatedItemType"
        }
      },
      "required": [
        "caseId",
        "content",
        "domainId",
        "type"
      ],
      "type": "structure"
    },
    "CreateRelatedItemResponse": {
      "members": {
        "relatedItemArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the related item.</p>",
          "shape": "RelatedItemArn"
        },
        "relatedItemId": {
          "documentation": "<p>The unique identifier of the related item.</p>",
          "shape": "RelatedItemId"
        }
      },
      "required": [
        "relatedItemArn",
        "relatedItemId"
      ],
      "type": "structure"
    },
    "CreateTemplateRequest": {
      "members": {
        "description": {
          "documentation": "<p>A brief description of the template.</p>",
          "shape": "TemplateDescription"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "layoutConfiguration": {
          "documentation": "<p>Configuration of layouts associated to the template.</p>",
          "shape": "LayoutConfiguration"
        },
        "name": {
          "documentation": "<p>A name for the template. It must be unique per domain.</p>",
          "shape": "TemplateName"
        },
        "requiredFields": {
          "documentation": "<p>A list of fields that must contain a value for a case to be successfully created with this template.</p>",
          "shape": "RequiredFieldList"
        }
      },
      "required": [
        "domainId",
        "name"
      ],
      "type": "structure"
    },
    "CreateTemplateResponse": {
      "members": {
        "templateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the newly created template.</p>",
          "shape": "TemplateArn"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "templateArn",
        "templateId"
      ],
      "type": "structure"
    },
    "CreatedTime": {
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "DomainArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "DomainId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "DomainName": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "DomainStatus": {
      "enum": [
        "Active",
        "CreationInProgress",
        "CreationFailed"
      ],
      "type": "string"
    },
    "DomainSummary": {
      "documentation": "<p>Object for the summarized details of the domain.</p>",
      "members": {
        "domainArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the domain.</p>",
          "shape": "DomainArn"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the domain.</p>",
          "shape": "DomainId"
        },
        "name": {
          "documentation": "<p>The name of the domain.</p>",
          "shape": "DomainName"
        }
      },
      "required": [
        "domainArn",
        "domainId",
        "name"
      ],
      "type": "structure"
    },
    "DomainSummaryList": {
      "member": {
        "shape": "DomainSummary"
      },
      "type": "list"
    },
    "Double": {
      "box": true,
      "type": "double"
    },
    "EventBridgeConfiguration": {
      "documentation": "<p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>",
      "members": {
        "enabled": {
          "documentation": "<p>Indicates whether the to broadcast case event data to the customer.</p>",
          "shape": "Boolean"
        },
        "includedData": {
          "documentation": "<p>Details of what case and related item data is published through the case event stream.</p>",
          "shape": "EventIncludedData"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "structure"
    },
    "EventIncludedData": {
      "documentation": "<p>Details of what case and related item data is published through the case event stream.</p>",
      "members": {
        "caseData": {
          "documentation": "<p>Details of what case data is published through the case event stream.</p>",
          "shape": "CaseEventIncludedData"
        },
        "relatedItemData": {
          "documentation": "<p>Details of what related item data is published through the case event stream.</p>",
          "shape": "RelatedItemEventIncludedData"
        }
      },
      "type": "structure"
    },
    "FieldArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "FieldDescription": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "FieldError": {
      "documentation": "<p>Object for errors on fields.</p>",
      "members": {
        "errorCode": {
          "documentation": "<p>The error code from getting a field.</p>",
          "shape": "String"
        },
        "id": {
          "documentation": "<p>The field identifier that caused the error.</p>",
          "shape": "FieldId"
        },
        "message": {
          "documentation": "<p>The error message from getting a field.</p>",
          "shape": "String"
        }
      },
      "required": [
        "errorCode",
        "id"
      ],
      "type": "structure"
    },
    "FieldFilter": {
      "documentation": "<p>A filter for fields. Only one value can be provided.</p>",
      "members": {
        "contains": {
          "documentation": "<p>Object containing field identifier and value information.</p>",
          "shape": "FieldValue"
        },
        "equalTo": {
          "documentation": "<p>Object containing field identifier and value information.</p>",
          "shape": "FieldValue"
        },
        "greaterThan": {
          "documentation": "<p>Object containing field identifier and value information.</p>",
          "shape": "FieldValue"
        },
        "greaterThanOrEqualTo": {
          "documentation": "<p>Object containing field identifier and value information.</p>",
          "shape": "FieldValue"
        },
        "lessThan": {
          "documentation": "<p>Object containing field identifier and value information.</p>",
          "shape": "FieldValue"
        },
        "lessThanOrEqualTo": {
          "documentation": "<p>Object containing field identifier and value information. </p>",
          "shape": "FieldValue"
        }
      },
      "type": "structure",
      "union": true
    },
    "FieldGroup": {
      "documentation": "<p>Object for a group of fields and associated properties.</p>",
      "members": {
        "fields": {
          "documentation": "<p>Represents an ordered list containing field related information.</p>",
          "shape": "FieldGroupFieldsList"
        },
        "name": {
          "documentation": "<p>Name of the field group.</p>",
          "shape": "FieldGroupNameString"
        }
      },
      "required": [
        "fields"
      ],
      "type": "structure"
    },
    "FieldGroupFieldsList": {
      "max": 30,
      "member": {
        "shape": "FieldItem"
      },
      "min": 0,
      "type": "list"
    },
    "FieldGroupNameString": {
      "max": 100,
      "min": 0,
      "type": "string"
    },
    "FieldId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "FieldIdentifier": {
      "documentation": "<p>Object for unique identifier of a field.</p>",
      "members": {
        "id": {
          "documentation": "<p>Unique identifier of a field.</p>",
          "shape": "FieldId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "FieldItem": {
      "documentation": "<p>Object for field related information.</p>",
      "members": {
        "id": {
          "documentation": "<p>Unique identifier of a field.</p>",
          "shape": "FieldId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "FieldName": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "FieldNamespace": {
      "enum": [
        "System",
        "Custom"
      ],
      "type": "string"
    },
    "FieldOption": {
      "documentation": "<p>Object for field Options information.</p>",
      "members": {
        "active": {
          "documentation": "<p>Describes whether the <code>FieldOption</code> is active (displayed) or inactive.</p>",
          "shape": "Boolean"
        },
        "name": {
          "documentation": "<p> <code>FieldOptionName</code> has max length 100 and disallows trailing spaces.</p>",
          "shape": "FieldOptionName"
        },
        "value": {
          "documentation": "<p> <code>FieldOptionValue</code> has max length 100 and must be alphanumeric with hyphens and underscores.</p>",
          "shape": "FieldOptionValue"
        }
      },
      "required": [
        "active",
        "name",
        "value"
      ],
      "type": "structure"
    },
    "FieldOptionError": {
      "documentation": "<p>Object for field Options errors.</p>",
      "members": {
        "errorCode": {
          "documentation": "<p>Error code from creating or updating field option.</p>",
          "shape": "String"
        },
        "message": {
          "documentation": "<p>Error message from creating or updating field option.</p>",
          "shape": "String"
        },
        "value": {
          "documentation": "<p>The field option value that caused the error.</p>",
          "shape": "FieldOptionValue"
        }
      },
      "required": [
        "errorCode",
        "message",
        "value"
      ],
      "type": "structure"
    },
    "FieldOptionName": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "FieldOptionValue": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "FieldOptionsList": {
      "member": {
        "shape": "FieldOption"
      },
      "type": "list"
    },
    "FieldSummary": {
      "documentation": "<p>Object for the summarized details of the field.</p>",
      "members": {
        "fieldArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the field.</p>",
          "shape": "FieldArn"
        },
        "fieldId": {
          "documentation": "<p>The unique identifier of a field.</p>",
          "shape": "FieldId"
        },
        "name": {
          "documentation": "<p>Name of the field.</p>",
          "shape": "FieldName"
        },
        "namespace": {
          "documentation": "<p>The namespace of a field.</p>",
          "shape": "FieldNamespace"
        },
        "type": {
          "documentation": "<p>The type of a field.</p>",
          "shape": "FieldType"
        }
      },
      "required": [
        "fieldArn",
        "fieldId",
        "name",
        "namespace",
        "type"
      ],
      "type": "structure"
    },
    "FieldType": {
      "enum": [
        "Text",
        "Number",
        "Boolean",
        "DateTime",
        "SingleSelect"
      ],
      "type": "string"
    },
    "FieldValue": {
      "documentation": "<p>Object for case field values.</p>",
      "members": {
        "id": {
          "documentation": "<p>Unique identifier of a field.</p>",
          "shape": "FieldId"
        },
        "value": {
          "documentation": "<p>Union of potential field value types.</p>",
          "shape": "FieldValueUnion"
        }
      },
      "required": [
        "id",
        "value"
      ],
      "type": "structure"
    },
    "FieldValueUnion": {
      "documentation": "<p>Object to store union of Field values.</p>",
      "members": {
        "booleanValue": {
          "documentation": "<p>Can be either null, or have a Boolean value type. Only one value can be provided.</p>",
          "shape": "Boolean"
        },
        "doubleValue": {
          "documentation": "<p>Can be either null, or have a Double number value type. Only one value can be provided.</p>",
          "shape": "Double"
        },
        "stringValue": {
          "documentation": "<p>String value type.</p>",
          "shape": "FieldValueUnionStringValueString"
        }
      },
      "type": "structure",
      "union": true
    },
    "FieldValueUnionStringValueString": {
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "GetCaseEventConfigurationRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "GetCaseEventConfigurationResponse": {
      "members": {
        "eventBridge": {
          "documentation": "<p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>",
          "shape": "EventBridgeConfiguration"
        }
      },
      "required": [
        "eventBridge"
      ],
      "type": "structure"
    },
    "GetCaseRequest": {
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "location": "uri",
          "locationName": "caseId",
          "shape": "CaseId"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fields": {
          "documentation": "<p>A list of unique field identifiers. </p>",
          "shape": "GetCaseRequestFieldsList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "caseId",
        "domainId",
        "fields"
      ],
      "type": "structure"
    },
    "GetCaseRequestFieldsList": {
      "max": 100,
      "member": {
        "shape": "FieldIdentifier"
      },
      "min": 1,
      "type": "list"
    },
    "GetCaseResponse": {
      "members": {
        "fields": {
          "documentation": "<p>A list of detailed field information. </p>",
          "shape": "GetCaseResponseFieldsList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "fields",
        "templateId"
      ],
      "type": "structure"
    },
    "GetCaseResponseFieldsList": {
      "max": 100,
      "member": {
        "shape": "FieldValue"
      },
      "min": 0,
      "type": "list"
    },
    "GetDomainRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "GetDomainResponse": {
      "members": {
        "createdTime": {
          "documentation": "<p>The timestamp when the Cases domain was created.</p>",
          "shape": "CreatedTime"
        },
        "domainArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) for the Cases domain.</p>",
          "shape": "DomainArn"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "shape": "DomainId"
        },
        "domainStatus": {
          "documentation": "<p>The status of the Cases domain.</p>",
          "shape": "DomainStatus"
        },
        "name": {
          "documentation": "<p>The name of the Cases domain.</p>",
          "shape": "DomainName"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "createdTime",
        "domainArn",
        "domainId",
        "domainStatus",
        "name"
      ],
      "type": "structure"
    },
    "GetFieldResponse": {
      "documentation": "<p>Object to store detailed field information.</p>",
      "members": {
        "description": {
          "documentation": "<p>Description of the field.</p>",
          "shape": "FieldDescription"
        },
        "fieldArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the field.</p>",
          "shape": "FieldArn"
        },
        "fieldId": {
          "documentation": "<p>Unique identifier of the field.</p>",
          "shape": "FieldId"
        },
        "name": {
          "documentation": "<p>Name of the field.</p>",
          "shape": "FieldName"
        },
        "namespace": {
          "documentation": "<p>Namespace of the field.</p>",
          "shape": "FieldNamespace"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        },
        "type": {
          "documentation": "<p>Type of the field.</p>",
          "shape": "FieldType"
        }
      },
      "required": [
        "fieldArn",
        "fieldId",
        "name",
        "namespace",
        "type"
      ],
      "type": "structure"
    },
    "GetLayoutRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "layoutId": {
          "documentation": "<p>The unique identifier of the layout.</p>",
          "location": "uri",
          "locationName": "layoutId",
          "shape": "LayoutId"
        }
      },
      "required": [
        "domainId",
        "layoutId"
      ],
      "type": "structure"
    },
    "GetLayoutResponse": {
      "members": {
        "content": {
          "documentation": "<p>Information about which fields will be present in the layout, the order of the fields, and read-only attribute of the field. </p>",
          "shape": "LayoutContent"
        },
        "layoutArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the newly created layout.</p>",
          "shape": "LayoutArn"
        },
        "layoutId": {
          "documentation": "<p>The unique identifier of the layout.</p>",
          "shape": "LayoutId"
        },
        "name": {
          "documentation": "<p>The name of the layout. It must be unique.</p>",
          "shape": "LayoutName"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "content",
        "layoutArn",
        "layoutId",
        "name"
      ],
      "type": "structure"
    },
    "GetTemplateRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "location": "uri",
          "locationName": "templateId",
          "shape": "TemplateId"
        }
      },
      "required": [
        "domainId",
        "templateId"
      ],
      "type": "structure"
    },
    "GetTemplateResponse": {
      "members": {
        "description": {
          "documentation": "<p>A brief description of the template.</p>",
          "shape": "TemplateDescription"
        },
        "layoutConfiguration": {
          "documentation": "<p>Configuration of layouts associated to the template.</p>",
          "shape": "LayoutConfiguration"
        },
        "name": {
          "documentation": "<p>The name of the template.</p>",
          "shape": "TemplateName"
        },
        "requiredFields": {
          "documentation": "<p>A list of fields that must contain a value for a case to be successfully created with this template.</p>",
          "shape": "RequiredFieldList"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        },
        "templateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "TemplateArn"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "name",
        "templateArn",
        "templateId"
      ],
      "type": "structure"
    },
    "Integer": {
      "box": true,
      "type": "integer"
    },
    "InternalServerException": {
      "documentation": "<p>We couldn't process your request because of an issue with the server. Try again later.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "retryAfterSeconds": {
          "documentation": "<p>Advice to clients on when the call can be safely retried.</p>",
          "location": "header",
          "locationName": "Retry-After",
          "shape": "Integer"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "LayoutArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "LayoutConfiguration": {
      "documentation": "<p>Object to store configuration of layouts associated to the template.</p>",
      "members": {
        "defaultLayout": {
          "documentation": "<p> Unique identifier of a layout. </p>",
          "shape": "LayoutId"
        }
      },
      "type": "structure"
    },
    "LayoutContent": {
      "documentation": "<p>Object to store union of different versions of layout content.</p>",
      "members": {
        "basic": {
          "documentation": "<p>Content specific to <code>BasicLayout</code> type. It configures fields in the top panel and More Info tab of Cases user interface.</p>",
          "shape": "BasicLayout"
        }
      },
      "type": "structure",
      "union": true
    },
    "LayoutId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "LayoutName": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "LayoutSections": {
      "documentation": "<p>Ordered list containing different kinds of sections that can be added. A LayoutSections object can only contain one section.</p>",
      "members": {
        "sections": {
          "shape": "SectionsList"
        }
      },
      "type": "structure"
    },
    "LayoutSummary": {
      "documentation": "<p>Object for the summarized details of the layout.</p>",
      "members": {
        "layoutArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the layout.</p>",
          "shape": "LayoutArn"
        },
        "layoutId": {
          "documentation": "<p>The unique identifier for of the layout.</p>",
          "shape": "LayoutId"
        },
        "name": {
          "documentation": "<p>The name of the layout.</p>",
          "shape": "LayoutName"
        }
      },
      "required": [
        "layoutArn",
        "layoutId",
        "name"
      ],
      "type": "structure"
    },
    "LayoutSummaryList": {
      "member": {
        "shape": "LayoutSummary"
      },
      "type": "list"
    },
    "ListCasesForContactRequest": {
      "members": {
        "contactArn": {
          "documentation": "<p>A unique identifier of a contact in Amazon Connect.</p>",
          "shape": "ContactArn"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "shape": "ListCasesForContactRequestMaxResultsInteger"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "contactArn",
        "domainId"
      ],
      "type": "structure"
    },
    "ListCasesForContactRequestMaxResultsInteger": {
      "box": true,
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "ListCasesForContactResponse": {
      "members": {
        "cases": {
          "documentation": "<p>A list of Case summary information.</p>",
          "shape": "ListCasesForContactResponseCasesList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "cases"
      ],
      "type": "structure"
    },
    "ListCasesForContactResponseCasesList": {
      "max": 10,
      "member": {
        "shape": "CaseSummary"
      },
      "min": 0,
      "type": "list"
    },
    "ListDomainsRequest": {
      "members": {
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "ListDomainsRequestMaxResultsInteger"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListDomainsRequestMaxResultsInteger": {
      "box": true,
      "max": 10,
      "min": 1,
      "type": "integer"
    },
    "ListDomainsResponse": {
      "members": {
        "domains": {
          "documentation": "<p>The Cases domain.</p>",
          "shape": "DomainSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "domains"
      ],
      "type": "structure"
    },
    "ListFieldOptionsRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fieldId": {
          "documentation": "<p>The unique identifier of a field.</p>",
          "location": "uri",
          "locationName": "fieldId",
          "shape": "FieldId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        },
        "values": {
          "documentation": "<p>A list of <code>FieldOption</code> values to filter on for <code>ListFieldOptions</code>.</p>",
          "location": "querystring",
          "locationName": "values",
          "shape": "ValuesList"
        }
      },
      "required": [
        "domainId",
        "fieldId"
      ],
      "type": "structure"
    },
    "ListFieldOptionsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        },
        "options": {
          "documentation": "<p>A list of <code>FieldOption</code> objects.</p>",
          "shape": "FieldOptionsList"
        }
      },
      "required": [
        "options"
      ],
      "type": "structure"
    },
    "ListFieldsRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "ListFieldsResponse": {
      "members": {
        "fields": {
          "documentation": "<p>List of detailed field information.</p>",
          "shape": "ListFieldsResponseFieldsList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "fields"
      ],
      "type": "structure"
    },
    "ListFieldsResponseFieldsList": {
      "max": 100,
      "member": {
        "shape": "FieldSummary"
      },
      "min": 0,
      "type": "list"
    },
    "ListLayoutsRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "ListLayoutsResponse": {
      "members": {
        "layouts": {
          "documentation": "<p>The layouts for the domain.</p>",
          "shape": "LayoutSummaryList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "layouts"
      ],
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN)</p>",
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "members": {
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        }
      },
      "type": "structure"
    },
    "ListTemplatesRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "location": "querystring",
          "locationName": "maxResults",
          "shape": "MaxResults"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "location": "querystring",
          "locationName": "nextToken",
          "shape": "NextToken"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "ListTemplatesResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        },
        "templates": {
          "documentation": "<p>List of template summary objects.</p>",
          "shape": "ListTemplatesResponseTemplatesList"
        }
      },
      "required": [
        "templates"
      ],
      "type": "structure"
    },
    "ListTemplatesResponseTemplatesList": {
      "max": 100,
      "member": {
        "shape": "TemplateSummary"
      },
      "min": 0,
      "type": "list"
    },
    "MaxResults": {
      "box": true,
      "max": 100,
      "min": 1,
      "type": "integer"
    },
    "NextToken": {
      "max": 9000,
      "min": 0,
      "type": "string"
    },
    "Order": {
      "enum": [
        "Asc",
        "Desc"
      ],
      "type": "string"
    },
    "PutCaseEventConfigurationRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "eventBridge": {
          "documentation": "<p>Configuration to enable EventBridge case event delivery and determine what data is delivered.</p>",
          "shape": "EventBridgeConfiguration"
        }
      },
      "required": [
        "domainId",
        "eventBridge"
      ],
      "type": "structure"
    },
    "PutCaseEventConfigurationResponse": {
      "members": {},
      "type": "structure"
    },
    "RelatedItemArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "RelatedItemContent": {
      "documentation": "<p>Represents the content of a particular type of related item.</p>",
      "members": {
        "comment": {
          "documentation": "<p>Represents the content of a comment to be returned to agents.</p>",
          "shape": "CommentContent"
        },
        "contact": {
          "documentation": "<p>Represents the content of a contact to be returned to agents.</p>",
          "shape": "ContactContent"
        }
      },
      "type": "structure",
      "union": true
    },
    "RelatedItemEventIncludedData": {
      "documentation": "<p>Details of what related item data is published through the case event stream.</p>",
      "members": {
        "includeContent": {
          "documentation": "<p>Details of what related item data is published through the case event stream.</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "includeContent"
      ],
      "type": "structure"
    },
    "RelatedItemId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "RelatedItemInputContent": {
      "documentation": "<p>Represents the content of a related item to be created.</p>",
      "members": {
        "comment": {
          "documentation": "<p>Represents the content of a comment to be returned to agents.</p>",
          "shape": "CommentContent"
        },
        "contact": {
          "documentation": "<p>Object representing a contact in Amazon Connect as an API request field.</p>",
          "shape": "Contact"
        }
      },
      "type": "structure",
      "union": true
    },
    "RelatedItemType": {
      "enum": [
        "Contact",
        "Comment"
      ],
      "type": "string"
    },
    "RelatedItemTypeFilter": {
      "documentation": "<p>The list of types of related items and their parameters to use for filtering.</p>",
      "members": {
        "comment": {
          "documentation": "<p>A filter for related items of type <code>Comment</code>.</p>",
          "shape": "CommentFilter"
        },
        "contact": {
          "documentation": "<p>A filter for related items of type <code>Contact</code>.</p>",
          "shape": "ContactFilter"
        }
      },
      "type": "structure",
      "union": true
    },
    "RequiredField": {
      "documentation": "<p>List of fields that must have a value provided to create a case.</p>",
      "members": {
        "fieldId": {
          "documentation": "<p>Unique identifier of a field.</p>",
          "shape": "FieldId"
        }
      },
      "required": [
        "fieldId"
      ],
      "type": "structure"
    },
    "RequiredFieldList": {
      "max": 100,
      "member": {
        "shape": "RequiredField"
      },
      "min": 0,
      "type": "list"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>We couldn't find the requested resource. Check that your resources exists and were created in the same Amazon Web Services Region as your request, and try your request again.</p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "resourceId": {
          "documentation": "<p>Unique identifier of the resource affected.</p>",
          "shape": "String"
        },
        "resourceType": {
          "documentation": "<p>Type of the resource affected.</p>",
          "shape": "String"
        }
      },
      "required": [
        "message",
        "resourceId",
        "resourceType"
      ],
      "type": "structure"
    },
    "SearchCasesRequest": {
      "members": {
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fields": {
          "documentation": "<p>The list of field identifiers to be returned as part of the response.</p>",
          "shape": "SearchCasesRequestFieldsList"
        },
        "filter": {
          "documentation": "<p>A list of filter objects.</p>",
          "shape": "CaseFilter"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of cases to return. The current maximum supported value is 25. This is also the default value when no other value is provided.</p>",
          "shape": "SearchCasesRequestMaxResultsInteger"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        },
        "searchTerm": {
          "documentation": "<p>A word or phrase used to perform a quick search.</p>",
          "shape": "SearchCasesRequestSearchTermString"
        },
        "sorts": {
          "documentation": "<p>A list of sorts where each sort specifies a field and their sort order to be applied to the results. </p>",
          "shape": "SearchCasesRequestSortsList"
        }
      },
      "required": [
        "domainId"
      ],
      "type": "structure"
    },
    "SearchCasesRequestFieldsList": {
      "max": 10,
      "member": {
        "shape": "FieldIdentifier"
      },
      "min": 0,
      "type": "list"
    },
    "SearchCasesRequestMaxResultsInteger": {
      "box": true,
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "SearchCasesRequestSearchTermString": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "SearchCasesRequestSortsList": {
      "documentation": "<p>/@documentation(&quot;The templateId&quot;)</p>",
      "max": 2,
      "member": {
        "shape": "Sort"
      },
      "min": 0,
      "type": "list"
    },
    "SearchCasesResponse": {
      "members": {
        "cases": {
          "documentation": "<p>A list of case documents where each case contains the properties <code>CaseId</code> and <code>Fields</code> where each field is a complex union structure. </p>",
          "shape": "SearchCasesResponseCasesList"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "cases"
      ],
      "type": "structure"
    },
    "SearchCasesResponseCasesList": {
      "max": 25,
      "member": {
        "shape": "SearchCasesResponseItem"
      },
      "min": 0,
      "type": "list"
    },
    "SearchCasesResponseItem": {
      "documentation": "<p>A list of items that represent cases.</p>",
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "shape": "CaseId"
        },
        "fields": {
          "documentation": "<p>List of case field values.</p>",
          "shape": "SearchCasesResponseItemFieldsList"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        },
        "templateId": {
          "documentation": "<p>A unique identifier of a template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "caseId",
        "fields",
        "templateId"
      ],
      "type": "structure"
    },
    "SearchCasesResponseItemFieldsList": {
      "max": 10,
      "member": {
        "shape": "FieldValue"
      },
      "min": 0,
      "type": "list"
    },
    "SearchRelatedItemsRequest": {
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "location": "uri",
          "locationName": "caseId",
          "shape": "CaseId"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "filters": {
          "documentation": "<p>The list of types of related items and their parameters to use for filtering.</p>",
          "shape": "SearchRelatedItemsRequestFiltersList"
        },
        "maxResults": {
          "documentation": "<p>The maximum number of results to return per page.</p>",
          "shape": "SearchRelatedItemsRequestMaxResultsInteger"
        },
        "nextToken": {
          "documentation": "<p>The token for the next set of results. Use the value returned in the previous response in the next request to retrieve the next set of results.</p>",
          "shape": "NextToken"
        }
      },
      "required": [
        "caseId",
        "domainId"
      ],
      "type": "structure"
    },
    "SearchRelatedItemsRequestFiltersList": {
      "max": 10,
      "member": {
        "shape": "RelatedItemTypeFilter"
      },
      "min": 0,
      "type": "list"
    },
    "SearchRelatedItemsRequestMaxResultsInteger": {
      "box": true,
      "max": 25,
      "min": 1,
      "type": "integer"
    },
    "SearchRelatedItemsResponse": {
      "members": {
        "nextToken": {
          "documentation": "<p>The token for the next set of results. This is null if there are no more results to return.</p>",
          "shape": "NextToken"
        },
        "relatedItems": {
          "documentation": "<p>A list of items related to a case. </p>",
          "shape": "SearchRelatedItemsResponseRelatedItemsList"
        }
      },
      "required": [
        "relatedItems"
      ],
      "type": "structure"
    },
    "SearchRelatedItemsResponseItem": {
      "documentation": "<p>A list of items that represent RelatedItems.</p>",
      "members": {
        "associationTime": {
          "documentation": "<p>Time at which a related item was associated with a case.</p>",
          "shape": "AssociationTime"
        },
        "content": {
          "documentation": "<p>Represents the content of a particular type of related item.</p>",
          "shape": "RelatedItemContent"
        },
        "relatedItemId": {
          "documentation": "<p>Unique identifier of a related item.</p>",
          "shape": "RelatedItemId"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        },
        "type": {
          "documentation": "<p>Type of a related item.</p>",
          "shape": "RelatedItemType"
        }
      },
      "required": [
        "associationTime",
        "content",
        "relatedItemId",
        "type"
      ],
      "type": "structure"
    },
    "SearchRelatedItemsResponseRelatedItemsList": {
      "max": 25,
      "member": {
        "shape": "SearchRelatedItemsResponseItem"
      },
      "min": 0,
      "type": "list"
    },
    "Section": {
      "documentation": "<p>This represents a sections within a panel or tab of the page layout.</p>",
      "members": {
        "fieldGroup": {
          "documentation": "<p>Consists of a group of fields and associated properties.</p>",
          "shape": "FieldGroup"
        }
      },
      "type": "structure",
      "union": true
    },
    "SectionsList": {
      "documentation": "<p>Ordered list containing different kinds of sections that can be added.</p>",
      "max": 1,
      "member": {
        "shape": "Section"
      },
      "min": 0,
      "type": "list"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>The service quota has been exceeded. For a list of service quotas, see <a href=\"https://docs.aws.amazon.com/connect/latest/adminguide/amazon-connect-service-limits.html\">Amazon Connect Service Quotas</a> in the <i>Amazon Connect Administrator Guide</i>.</p>",
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Sort": {
      "documentation": "<p>A structured set of sort terms.</p>",
      "members": {
        "fieldId": {
          "documentation": "<p>Unique identifier of a field.</p>",
          "shape": "FieldId"
        },
        "sortOrder": {
          "documentation": "<p>A structured set of sort terms</p>",
          "shape": "Order"
        }
      },
      "required": [
        "fieldId",
        "sortOrder"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "TagKey": {
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagResourceRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN)</p>",
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        },
        "tags": {
          "documentation": "<p>A map of of key-value pairs that represent tags on a resource. Tags are used to organize, track, or control access for this resource.</p>",
          "shape": "Tags"
        }
      },
      "required": [
        "arn",
        "tags"
      ],
      "type": "structure"
    },
    "Tags": {
      "key": {
        "shape": "String"
      },
      "type": "map",
      "value": {
        "shape": "String"
      }
    },
    "TemplateArn": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "TemplateDescription": {
      "max": 255,
      "min": 0,
      "type": "string"
    },
    "TemplateId": {
      "max": 500,
      "min": 1,
      "type": "string"
    },
    "TemplateName": {
      "max": 100,
      "min": 1,
      "pattern": "^.*[\\S]$",
      "type": "string"
    },
    "TemplateSummary": {
      "documentation": "<p>Template summary information.</p>",
      "members": {
        "name": {
          "documentation": "<p>The template name.</p>",
          "shape": "TemplateName"
        },
        "templateArn": {
          "documentation": "<p>The Amazon Resource Name (ARN) of the template.</p>",
          "shape": "TemplateArn"
        },
        "templateId": {
          "documentation": "<p>The unique identifier for the template.</p>",
          "shape": "TemplateId"
        }
      },
      "required": [
        "name",
        "templateArn",
        "templateId"
      ],
      "type": "structure"
    },
    "ThrottlingException": {
      "documentation": "<p>The rate has been exceeded for this API. Please try again after a few minutes.</p>",
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "UntagResourceRequest": {
      "members": {
        "arn": {
          "documentation": "<p>The Amazon Resource Name (ARN)</p>",
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        },
        "tagKeys": {
          "documentation": "<p>List of tag keys.</p>",
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "arn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UpdateCaseRequest": {
      "members": {
        "caseId": {
          "documentation": "<p>A unique identifier of the case.</p>",
          "location": "uri",
          "locationName": "caseId",
          "shape": "CaseId"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fields": {
          "documentation": "<p>An array of objects with <code>fieldId</code> (matching ListFields/DescribeField) and value union data, structured identical to <code>CreateCase</code>.</p>",
          "shape": "UpdateCaseRequestFieldsList"
        }
      },
      "required": [
        "caseId",
        "domainId",
        "fields"
      ],
      "type": "structure"
    },
    "UpdateCaseRequestFieldsList": {
      "max": 100,
      "member": {
        "shape": "FieldValue"
      },
      "min": 0,
      "type": "list"
    },
    "UpdateCaseResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateFieldRequest": {
      "members": {
        "description": {
          "documentation": "<p>The description of a field.</p>",
          "shape": "FieldDescription"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "fieldId": {
          "documentation": "<p>The unique identifier of a field.</p>",
          "location": "uri",
          "locationName": "fieldId",
          "shape": "FieldId"
        },
        "name": {
          "documentation": "<p>The name of the field.</p>",
          "shape": "FieldName"
        }
      },
      "required": [
        "domainId",
        "fieldId"
      ],
      "type": "structure"
    },
    "UpdateFieldResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateLayoutRequest": {
      "members": {
        "content": {
          "documentation": "<p>Information about which fields will be present in the layout, the order of the fields, and a read-only attribute of the field. </p>",
          "shape": "LayoutContent"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "layoutId": {
          "documentation": "<p>The unique identifier of the layout.</p>",
          "location": "uri",
          "locationName": "layoutId",
          "shape": "LayoutId"
        },
        "name": {
          "documentation": "<p>The name of the layout. It must be unique per domain.</p>",
          "shape": "LayoutName"
        }
      },
      "required": [
        "domainId",
        "layoutId"
      ],
      "type": "structure"
    },
    "UpdateLayoutResponse": {
      "members": {},
      "type": "structure"
    },
    "UpdateTemplateRequest": {
      "members": {
        "description": {
          "documentation": "<p>A brief description of the template.</p>",
          "shape": "TemplateDescription"
        },
        "domainId": {
          "documentation": "<p>The unique identifier of the Cases domain. </p>",
          "location": "uri",
          "locationName": "domainId",
          "shape": "DomainId"
        },
        "layoutConfiguration": {
          "documentation": "<p>Configuration of layouts associated to the template.</p>",
          "shape": "LayoutConfiguration"
        },
        "name": {
          "documentation": "<p>The name of the template. It must be unique per domain.</p>",
          "shape": "TemplateName"
        },
        "requiredFields": {
          "documentation": "<p>A list of fields that must contain a value for a case to be successfully created with this template.</p>",
          "shape": "RequiredFieldList"
        },
        "templateId": {
          "documentation": "<p>A unique identifier for the template.</p>",
          "location": "uri",
          "locationName": "templateId",
          "shape": "TemplateId"
        }
      },
      "required": [
        "domainId",
        "templateId"
      ],
      "type": "structure"
    },
    "UpdateTemplateResponse": {
      "members": {},
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The request isn't valid. Check the syntax and try again.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "Value": {
      "max": 100,
      "min": 0,
      "type": "string"
    },
    "ValuesList": {
      "max": 1,
      "member": {
        "shape": "Value"
      },
      "min": 0,
      "type": "list"
    }
  },
  "version": "2.0"
}
