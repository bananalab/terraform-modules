{
  "documentation": "<p>Provide APIs to create and manage Amazon Connect Campaigns.</p>",
  "metadata": {
    "apiVersion": "2021-01-30",
    "endpointPrefix": "connect-campaigns",
    "jsonVersion": "1.1",
    "protocol": "rest-json",
    "serviceFullName": "AmazonConnectCampaignService",
    "serviceId": "ConnectCampaigns",
    "signatureVersion": "v4",
    "signingName": "connect-campaigns",
    "uid": "connectcampaigns-2021-01-30"
  },
  "operations": {
    "CreateCampaign": {
      "documentation": "<p>Creates a campaign for the specified Amazon Connect account. This API is idempotent.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ServiceQuotaExceededException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/campaigns",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "CreateCampaignRequest"
      },
      "name": "CreateCampaign",
      "output": {
        "shape": "CreateCampaignResponse"
      }
    },
    "DeleteCampaign": {
      "documentation": "<p>Deletes a campaign from the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/campaigns/{id}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteCampaignRequest"
      },
      "name": "DeleteCampaign"
    },
    "DeleteConnectInstanceConfig": {
      "documentation": "<p>Deletes a connect instance config from the specified AWS account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidStateException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/connect-instance/{connectInstanceId}/config",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteConnectInstanceConfigRequest"
      },
      "name": "DeleteConnectInstanceConfig"
    },
    "DeleteInstanceOnboardingJob": {
      "documentation": "<p>Delete the Connect Campaigns onboarding job for the specified Amazon Connect instance.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "InvalidStateException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/connect-instance/{connectInstanceId}/onboarding",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "DeleteInstanceOnboardingJobRequest"
      },
      "name": "DeleteInstanceOnboardingJob"
    },
    "DescribeCampaign": {
      "documentation": "<p>Describes the specific campaign.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/campaigns/{id}",
        "responseCode": 200
      },
      "input": {
        "shape": "DescribeCampaignRequest"
      },
      "name": "DescribeCampaign",
      "output": {
        "shape": "DescribeCampaignResponse"
      }
    },
    "GetCampaignState": {
      "documentation": "<p>Get state of a campaign for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/campaigns/{id}/state",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCampaignStateRequest"
      },
      "name": "GetCampaignState",
      "output": {
        "shape": "GetCampaignStateResponse"
      }
    },
    "GetCampaignStateBatch": {
      "documentation": "<p>Get state of campaigns for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns-state",
        "responseCode": 200
      },
      "input": {
        "shape": "GetCampaignStateBatchRequest"
      },
      "name": "GetCampaignStateBatch",
      "output": {
        "shape": "GetCampaignStateBatchResponse"
      }
    },
    "GetConnectInstanceConfig": {
      "documentation": "<p>Get the specific Connect instance config.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/connect-instance/{connectInstanceId}/config",
        "responseCode": 200
      },
      "input": {
        "shape": "GetConnectInstanceConfigRequest"
      },
      "name": "GetConnectInstanceConfig",
      "output": {
        "shape": "GetConnectInstanceConfigResponse"
      }
    },
    "GetInstanceOnboardingJobStatus": {
      "documentation": "<p>Get the specific instance onboarding job status.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/connect-instance/{connectInstanceId}/onboarding",
        "responseCode": 200
      },
      "input": {
        "shape": "GetInstanceOnboardingJobStatusRequest"
      },
      "name": "GetInstanceOnboardingJobStatus",
      "output": {
        "shape": "GetInstanceOnboardingJobStatusResponse"
      }
    },
    "ListCampaigns": {
      "documentation": "<p>Provides summary information about the campaigns under the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns-summary",
        "responseCode": 200
      },
      "input": {
        "shape": "ListCampaignsRequest"
      },
      "name": "ListCampaigns",
      "output": {
        "shape": "ListCampaignsResponse"
      }
    },
    "ListTagsForResource": {
      "documentation": "<p>List tags for a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "GET",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "ListTagsForResourceRequest"
      },
      "name": "ListTagsForResource",
      "output": {
        "shape": "ListTagsForResourceResponse"
      }
    },
    "PauseCampaign": {
      "documentation": "<p>Pauses a campaign for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidCampaignStateException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/pause",
        "responseCode": 200
      },
      "input": {
        "shape": "PauseCampaignRequest"
      },
      "name": "PauseCampaign"
    },
    "PutDialRequestBatch": {
      "documentation": "<p>Creates dials requests for the specified campaign Amazon Connect account. This API is idempotent.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidCampaignStateException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/campaigns/{id}/dial-requests",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "PutDialRequestBatchRequest"
      },
      "name": "PutDialRequestBatch",
      "output": {
        "shape": "PutDialRequestBatchResponse"
      }
    },
    "ResumeCampaign": {
      "documentation": "<p>Stops a campaign for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidCampaignStateException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/resume",
        "responseCode": 200
      },
      "input": {
        "shape": "ResumeCampaignRequest"
      },
      "name": "ResumeCampaign"
    },
    "StartCampaign": {
      "documentation": "<p>Starts a campaign for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidCampaignStateException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/start",
        "responseCode": 200
      },
      "input": {
        "shape": "StartCampaignRequest"
      },
      "name": "StartCampaign"
    },
    "StartInstanceOnboardingJob": {
      "documentation": "<p>Onboard the specific Amazon Connect instance to Connect Campaigns.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "PUT",
        "requestUri": "/connect-instance/{connectInstanceId}/onboarding",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "StartInstanceOnboardingJobRequest"
      },
      "name": "StartInstanceOnboardingJob",
      "output": {
        "shape": "StartInstanceOnboardingJobResponse"
      }
    },
    "StopCampaign": {
      "documentation": "<p>Stops a campaign for the specified Amazon Connect account.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "InvalidCampaignStateException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/stop",
        "responseCode": 200
      },
      "input": {
        "shape": "StopCampaignRequest"
      },
      "name": "StopCampaign"
    },
    "TagResource": {
      "documentation": "<p>Tag a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "TagResourceRequest"
      },
      "name": "TagResource"
    },
    "UntagResource": {
      "documentation": "<p>Untag a resource.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "DELETE",
        "requestUri": "/tags/{arn}",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UntagResourceRequest"
      },
      "name": "UntagResource"
    },
    "UpdateCampaignDialerConfig": {
      "documentation": "<p>Updates the dialer config of a campaign. This API is idempotent.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/dialer-config",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateCampaignDialerConfigRequest"
      },
      "name": "UpdateCampaignDialerConfig"
    },
    "UpdateCampaignName": {
      "documentation": "<p>Updates the name of a campaign. This API is idempotent.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/name",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateCampaignNameRequest"
      },
      "name": "UpdateCampaignName"
    },
    "UpdateCampaignOutboundCallConfig": {
      "documentation": "<p>Updates the outbound call config of a campaign. This API is idempotent.</p>",
      "errors": [
        {
          "shape": "InternalServerException"
        },
        {
          "shape": "ResourceNotFoundException"
        },
        {
          "shape": "ValidationException"
        },
        {
          "shape": "ConflictException"
        },
        {
          "shape": "AccessDeniedException"
        },
        {
          "shape": "ThrottlingException"
        }
      ],
      "http": {
        "method": "POST",
        "requestUri": "/campaigns/{id}/outbound-call-config",
        "responseCode": 200
      },
      "idempotent": true,
      "input": {
        "shape": "UpdateCampaignOutboundCallConfigRequest"
      },
      "name": "UpdateCampaignOutboundCallConfig"
    }
  },
  "shapes": {
    "AccessDeniedException": {
      "documentation": "<p>You do not have sufficient access to perform this action.</p>",
      "error": {
        "httpStatusCode": 403,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "AnswerMachineDetectionConfig": {
      "documentation": "<p>Answering Machine Detection config</p>",
      "members": {
        "enableAnswerMachineDetection": {
          "documentation": "<p>Enable or disable answering machine detection</p>",
          "shape": "Boolean"
        }
      },
      "required": [
        "enableAnswerMachineDetection"
      ],
      "type": "structure"
    },
    "Arn": {
      "documentation": "<p>Arn</p>",
      "max": 500,
      "min": 20,
      "pattern": "^arn:.*",
      "type": "string"
    },
    "AttributeName": {
      "documentation": "<p>The key of the attribute. Attribute keys can include only alphanumeric, dash, and underscore characters.</p>",
      "max": 32767,
      "min": 0,
      "pattern": "^[a-zA-Z0-9\\-_]+$",
      "type": "string"
    },
    "AttributeValue": {
      "documentation": "<p>The value of the attribute.</p>",
      "max": 32767,
      "min": 0,
      "type": "string"
    },
    "Attributes": {
      "documentation": "<p>A custom key-value pair using an attribute map. The attributes are standard Amazon Connect attributes, and can be accessed in contact flows just like any other contact attributes.</p>",
      "key": {
        "shape": "AttributeName"
      },
      "sensitive": true,
      "type": "map",
      "value": {
        "shape": "AttributeValue"
      }
    },
    "BandwidthAllocation": {
      "box": true,
      "documentation": "<p>The bandwidth allocation of a queue resource.</p>",
      "max": 1,
      "min": 0,
      "type": "double"
    },
    "Boolean": {
      "box": true,
      "type": "boolean"
    },
    "Campaign": {
      "documentation": "<p>An Amazon Connect campaign.</p>",
      "members": {
        "arn": {
          "shape": "CampaignArn"
        },
        "connectInstanceId": {
          "shape": "InstanceId"
        },
        "dialerConfig": {
          "shape": "DialerConfig"
        },
        "id": {
          "shape": "CampaignId"
        },
        "name": {
          "shape": "CampaignName"
        },
        "outboundCallConfig": {
          "shape": "OutboundCallConfig"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "connectInstanceId",
        "dialerConfig",
        "id",
        "name",
        "outboundCallConfig"
      ],
      "type": "structure"
    },
    "CampaignArn": {
      "documentation": "<p>The resource name of an Amazon Connect campaign.</p>",
      "max": 500,
      "min": 20,
      "type": "string"
    },
    "CampaignFilters": {
      "documentation": "<p>Filter model by type</p>",
      "members": {
        "instanceIdFilter": {
          "shape": "InstanceIdFilter"
        }
      },
      "type": "structure"
    },
    "CampaignId": {
      "documentation": "<p>Identifier representing a Campaign</p>",
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "CampaignName": {
      "documentation": "<p>The name of an Amazon Connect Campaign name.</p>",
      "max": 127,
      "min": 1,
      "type": "string"
    },
    "CampaignState": {
      "documentation": "<p>State of a campaign</p>",
      "enum": [
        "Initialized",
        "Running",
        "Paused",
        "Stopped",
        "Failed"
      ],
      "type": "string"
    },
    "CampaignSummary": {
      "documentation": "<p>An Amazon Connect campaign summary.</p>",
      "members": {
        "arn": {
          "shape": "CampaignArn"
        },
        "connectInstanceId": {
          "shape": "InstanceId"
        },
        "id": {
          "shape": "CampaignId"
        },
        "name": {
          "shape": "CampaignName"
        }
      },
      "required": [
        "arn",
        "connectInstanceId",
        "id",
        "name"
      ],
      "type": "structure"
    },
    "CampaignSummaryList": {
      "documentation": "<p>A list of Amazon Connect campaigns.</p>",
      "member": {
        "shape": "CampaignSummary"
      },
      "type": "list"
    },
    "ClientToken": {
      "documentation": "<p>Client provided parameter used for idempotency. Its value must be unique for each request.</p>",
      "max": 64,
      "min": 0,
      "type": "string"
    },
    "ConflictException": {
      "documentation": "<p>The request could not be processed because of conflict in the current state of the resource.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ContactFlowId": {
      "documentation": "<p>The identifier of the contact flow for the outbound call.</p>",
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "CreateCampaignRequest": {
      "documentation": "<p>The request for Create Campaign API.</p>",
      "members": {
        "connectInstanceId": {
          "shape": "InstanceId"
        },
        "dialerConfig": {
          "shape": "DialerConfig"
        },
        "name": {
          "shape": "CampaignName"
        },
        "outboundCallConfig": {
          "shape": "OutboundCallConfig"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "connectInstanceId",
        "dialerConfig",
        "name",
        "outboundCallConfig"
      ],
      "type": "structure"
    },
    "CreateCampaignResponse": {
      "documentation": "<p>The response for Create Campaign API</p>",
      "members": {
        "arn": {
          "shape": "CampaignArn"
        },
        "id": {
          "shape": "CampaignId"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "DeleteCampaignRequest": {
      "documentation": "<p>DeleteCampaignRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DeleteConnectInstanceConfigRequest": {
      "documentation": "<p>DeleteCampaignRequest</p>",
      "members": {
        "connectInstanceId": {
          "location": "uri",
          "locationName": "connectInstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "connectInstanceId"
      ],
      "type": "structure"
    },
    "DeleteInstanceOnboardingJobRequest": {
      "documentation": "<p>The request for DeleteInstanceOnboardingJob API.</p>",
      "members": {
        "connectInstanceId": {
          "location": "uri",
          "locationName": "connectInstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "connectInstanceId"
      ],
      "type": "structure"
    },
    "DescribeCampaignRequest": {
      "documentation": "<p>DescribeCampaignRequests</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "DescribeCampaignResponse": {
      "documentation": "<p>DescribeCampaignResponse</p>",
      "members": {
        "campaign": {
          "shape": "Campaign"
        }
      },
      "type": "structure"
    },
    "DestinationPhoneNumber": {
      "documentation": "<p>The phone number of the customer, in E.164 format.</p>",
      "max": 20,
      "min": 0,
      "sensitive": true,
      "type": "string"
    },
    "DialRequest": {
      "documentation": "<p>A dial request for a campaign.</p>",
      "members": {
        "attributes": {
          "shape": "Attributes"
        },
        "clientToken": {
          "shape": "ClientToken"
        },
        "expirationTime": {
          "shape": "TimeStamp"
        },
        "phoneNumber": {
          "shape": "DestinationPhoneNumber"
        }
      },
      "required": [
        "attributes",
        "clientToken",
        "expirationTime",
        "phoneNumber"
      ],
      "type": "structure"
    },
    "DialRequestId": {
      "documentation": "<p>Identifier representing a Dial request</p>",
      "type": "string"
    },
    "DialRequestList": {
      "documentation": "<p>A list of dial requests.</p>",
      "max": 25,
      "member": {
        "shape": "DialRequest"
      },
      "min": 1,
      "type": "list"
    },
    "DialerConfig": {
      "documentation": "<p>The possible types of dialer config parameters</p>",
      "members": {
        "predictiveDialerConfig": {
          "shape": "PredictiveDialerConfig"
        },
        "progressiveDialerConfig": {
          "shape": "ProgressiveDialerConfig"
        }
      },
      "type": "structure",
      "union": true
    },
    "Enabled": {
      "documentation": "<p>Boolean to indicate if custom encryption has been enabled.</p>",
      "type": "boolean"
    },
    "EncryptionConfig": {
      "documentation": "<p>Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported</p>",
      "members": {
        "enabled": {
          "shape": "Enabled"
        },
        "encryptionType": {
          "shape": "EncryptionType"
        },
        "keyArn": {
          "shape": "EncryptionKey"
        }
      },
      "required": [
        "enabled"
      ],
      "type": "structure"
    },
    "EncryptionKey": {
      "documentation": "<p>KMS key id/arn for encryption config.</p>",
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "EncryptionType": {
      "documentation": "<p>Server-side encryption type.</p>",
      "enum": [
        "KMS"
      ],
      "type": "string"
    },
    "FailedCampaignStateResponse": {
      "documentation": "<p>Failed response of campaign state</p>",
      "members": {
        "campaignId": {
          "shape": "CampaignId"
        },
        "failureCode": {
          "shape": "GetCampaignStateBatchFailureCode"
        }
      },
      "type": "structure"
    },
    "FailedCampaignStateResponseList": {
      "documentation": "<p>List of failed requests of campaign state</p>",
      "max": 25,
      "member": {
        "shape": "FailedCampaignStateResponse"
      },
      "min": 0,
      "type": "list"
    },
    "FailedRequest": {
      "documentation": "<p>A failed request identified by the unique client token.</p>",
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "failureCode": {
          "shape": "FailureCode"
        },
        "id": {
          "shape": "DialRequestId"
        }
      },
      "type": "structure"
    },
    "FailedRequestList": {
      "documentation": "<p>A list of failed requests.</p>",
      "max": 25,
      "member": {
        "shape": "FailedRequest"
      },
      "min": 0,
      "type": "list"
    },
    "FailureCode": {
      "documentation": "<p>A predefined code indicating the error that caused the failure.</p>",
      "enum": [
        "InvalidInput",
        "RequestThrottled",
        "UnknownError"
      ],
      "type": "string"
    },
    "GetCampaignStateBatchFailureCode": {
      "documentation": "<p>A predefined code indicating the error that caused the failure in getting state of campaigns</p>",
      "enum": [
        "ResourceNotFound",
        "UnknownError"
      ],
      "type": "string"
    },
    "GetCampaignStateBatchRequest": {
      "documentation": "<p>GetCampaignStateBatchRequest</p>",
      "members": {
        "campaignIds": {
          "shape": "GetCampaignStateBatchRequestCampaignIdsList"
        }
      },
      "required": [
        "campaignIds"
      ],
      "type": "structure"
    },
    "GetCampaignStateBatchRequestCampaignIdsList": {
      "documentation": "<p>List of CampaignId</p>",
      "max": 25,
      "member": {
        "shape": "CampaignId"
      },
      "min": 1,
      "type": "list"
    },
    "GetCampaignStateBatchResponse": {
      "documentation": "<p>GetCampaignStateBatchResponse</p>",
      "members": {
        "failedRequests": {
          "shape": "FailedCampaignStateResponseList"
        },
        "successfulRequests": {
          "shape": "SuccessfulCampaignStateResponseList"
        }
      },
      "type": "structure"
    },
    "GetCampaignStateRequest": {
      "documentation": "<p>GetCampaignStateRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "GetCampaignStateResponse": {
      "documentation": "<p>GetCampaignStateResponse</p>",
      "members": {
        "state": {
          "shape": "CampaignState"
        }
      },
      "type": "structure"
    },
    "GetConnectInstanceConfigRequest": {
      "documentation": "<p>GetConnectInstanceConfigRequest</p>",
      "members": {
        "connectInstanceId": {
          "location": "uri",
          "locationName": "connectInstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "connectInstanceId"
      ],
      "type": "structure"
    },
    "GetConnectInstanceConfigResponse": {
      "documentation": "<p>GetConnectInstanceConfigResponse</p>",
      "members": {
        "connectInstanceConfig": {
          "shape": "InstanceConfig"
        }
      },
      "type": "structure"
    },
    "GetInstanceOnboardingJobStatusRequest": {
      "documentation": "<p>GetInstanceOnboardingJobStatusRequest</p>",
      "members": {
        "connectInstanceId": {
          "location": "uri",
          "locationName": "connectInstanceId",
          "shape": "InstanceId"
        }
      },
      "required": [
        "connectInstanceId"
      ],
      "type": "structure"
    },
    "GetInstanceOnboardingJobStatusResponse": {
      "documentation": "<p>GetInstanceOnboardingJobStatusResponse</p>",
      "members": {
        "connectInstanceOnboardingJobStatus": {
          "shape": "InstanceOnboardingJobStatus"
        }
      },
      "type": "structure"
    },
    "InstanceConfig": {
      "documentation": "<p>Instance config object</p>",
      "members": {
        "connectInstanceId": {
          "shape": "InstanceId"
        },
        "encryptionConfig": {
          "shape": "EncryptionConfig"
        },
        "serviceLinkedRoleArn": {
          "shape": "ServiceLinkedRoleArn"
        }
      },
      "required": [
        "connectInstanceId",
        "encryptionConfig",
        "serviceLinkedRoleArn"
      ],
      "type": "structure"
    },
    "InstanceId": {
      "documentation": "<p>Amazon Connect Instance Id</p>",
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "InstanceIdFilter": {
      "documentation": "<p>Connect instance identifier filter</p>",
      "members": {
        "operator": {
          "shape": "InstanceIdFilterOperator"
        },
        "value": {
          "shape": "InstanceId"
        }
      },
      "required": [
        "operator",
        "value"
      ],
      "type": "structure"
    },
    "InstanceIdFilterOperator": {
      "documentation": "<p>Operators for Connect instance identifier filter</p>",
      "enum": [
        "Eq"
      ],
      "type": "string"
    },
    "InstanceOnboardingJobFailureCode": {
      "documentation": "<p>Enumeration of the possible failure codes for instance onboarding job</p>",
      "enum": [
        "EVENT_BRIDGE_ACCESS_DENIED",
        "EVENT_BRIDGE_MANAGED_RULE_LIMIT_EXCEEDED",
        "IAM_ACCESS_DENIED",
        "KMS_ACCESS_DENIED",
        "KMS_KEY_NOT_FOUND",
        "INTERNAL_FAILURE"
      ],
      "type": "string"
    },
    "InstanceOnboardingJobStatus": {
      "documentation": "<p>Instance onboarding job status object</p>",
      "members": {
        "connectInstanceId": {
          "shape": "InstanceId"
        },
        "failureCode": {
          "shape": "InstanceOnboardingJobFailureCode"
        },
        "status": {
          "shape": "InstanceOnboardingJobStatusCode"
        }
      },
      "required": [
        "connectInstanceId",
        "status"
      ],
      "type": "structure"
    },
    "InstanceOnboardingJobStatusCode": {
      "documentation": "<p>Enumeration of the possible states for instance onboarding job</p>",
      "enum": [
        "IN_PROGRESS",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string"
    },
    "InternalServerException": {
      "documentation": "<p>Request processing failed because of an error or failure with the service.</p>",
      "error": {
        "httpStatusCode": 500
      },
      "exception": true,
      "fault": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "InvalidCampaignStateException": {
      "documentation": "<p>The request could not be processed because of conflict in the current state of the campaign.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "state": {
          "shape": "CampaignState"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message",
        "state"
      ],
      "type": "structure"
    },
    "InvalidStateException": {
      "documentation": "<p>The request could not be processed because of conflict in the current state.</p>",
      "error": {
        "httpStatusCode": 409,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ListCampaignsRequest": {
      "documentation": "<p>ListCampaignsRequest</p>",
      "members": {
        "filters": {
          "shape": "CampaignFilters"
        },
        "maxResults": {
          "shape": "MaxResults"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListCampaignsResponse": {
      "documentation": "<p>ListCampaignsResponse</p>",
      "members": {
        "campaignSummaryList": {
          "shape": "CampaignSummaryList"
        },
        "nextToken": {
          "shape": "NextToken"
        }
      },
      "type": "structure"
    },
    "ListTagsForResourceRequest": {
      "documentation": "<p>ListTagsForResource</p>",
      "members": {
        "arn": {
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        }
      },
      "required": [
        "arn"
      ],
      "type": "structure"
    },
    "ListTagsForResourceResponse": {
      "documentation": "<p>ListTagsForResponse</p>",
      "members": {
        "tags": {
          "shape": "TagMap"
        }
      },
      "type": "structure"
    },
    "MaxResults": {
      "box": true,
      "documentation": "<p>The maximum number of results to return per page.</p>",
      "max": 50,
      "min": 1,
      "type": "integer"
    },
    "NextToken": {
      "documentation": "<p>The token for the next set of results.</p>",
      "max": 1000,
      "min": 0,
      "type": "string"
    },
    "OutboundCallConfig": {
      "documentation": "<p>The configuration used for outbound calls.</p>",
      "members": {
        "answerMachineDetectionConfig": {
          "shape": "AnswerMachineDetectionConfig"
        },
        "connectContactFlowId": {
          "shape": "ContactFlowId"
        },
        "connectQueueId": {
          "shape": "QueueId"
        },
        "connectSourcePhoneNumber": {
          "shape": "SourcePhoneNumber"
        }
      },
      "required": [
        "connectContactFlowId",
        "connectQueueId"
      ],
      "type": "structure"
    },
    "PauseCampaignRequest": {
      "documentation": "<p>PauseCampaignRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "PredictiveDialerConfig": {
      "documentation": "<p>Predictive Dialer config</p>",
      "members": {
        "bandwidthAllocation": {
          "shape": "BandwidthAllocation"
        }
      },
      "required": [
        "bandwidthAllocation"
      ],
      "type": "structure"
    },
    "ProgressiveDialerConfig": {
      "documentation": "<p>Progressive Dialer config</p>",
      "members": {
        "bandwidthAllocation": {
          "shape": "BandwidthAllocation"
        }
      },
      "required": [
        "bandwidthAllocation"
      ],
      "type": "structure"
    },
    "PutDialRequestBatchRequest": {
      "documentation": "<p>PutDialRequestBatchRequest</p>",
      "members": {
        "dialRequests": {
          "shape": "DialRequestList"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "dialRequests",
        "id"
      ],
      "type": "structure"
    },
    "PutDialRequestBatchResponse": {
      "documentation": "<p>PutDialRequestBatchResponse</p>",
      "members": {
        "failedRequests": {
          "shape": "FailedRequestList"
        },
        "successfulRequests": {
          "shape": "SuccessfulRequestList"
        }
      },
      "type": "structure"
    },
    "QueueId": {
      "documentation": "<p>The queue for the call. If you specify a queue, the phone displayed for caller ID is the phone number specified in the queue. If you do not specify a queue, the queue defined in the contact flow is used. If you do not specify a queue, you must specify a source phone number.</p>",
      "max": 500,
      "min": 0,
      "type": "string"
    },
    "ResourceNotFoundException": {
      "documentation": "<p>The specified resource was not found.</p>",
      "error": {
        "httpStatusCode": 404,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "ResumeCampaignRequest": {
      "documentation": "<p>ResumeCampaignRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "ServiceLinkedRoleArn": {
      "documentation": "<p>Service linked role arn</p>",
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "ServiceQuotaExceededException": {
      "documentation": "<p>Request would cause a service quota to be exceeded.</p>",
      "error": {
        "httpStatusCode": 402,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "SourcePhoneNumber": {
      "documentation": "<p>The phone number associated with the Amazon Connect instance, in E.164 format. If you do not specify a source phone number, you must specify a queue.</p>",
      "max": 100,
      "min": 0,
      "type": "string"
    },
    "StartCampaignRequest": {
      "documentation": "<p>StartCampaignRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "StartInstanceOnboardingJobRequest": {
      "documentation": "<p>The request for StartInstanceOnboardingJob API.</p>",
      "members": {
        "connectInstanceId": {
          "location": "uri",
          "locationName": "connectInstanceId",
          "shape": "InstanceId"
        },
        "encryptionConfig": {
          "shape": "EncryptionConfig"
        }
      },
      "required": [
        "connectInstanceId",
        "encryptionConfig"
      ],
      "type": "structure"
    },
    "StartInstanceOnboardingJobResponse": {
      "documentation": "<p>The response for StartInstanceOnboardingJob API.</p>",
      "members": {
        "connectInstanceOnboardingJobStatus": {
          "shape": "InstanceOnboardingJobStatus"
        }
      },
      "type": "structure"
    },
    "StopCampaignRequest": {
      "documentation": "<p>StopCampaignRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "String": {
      "type": "string"
    },
    "SuccessfulCampaignStateResponse": {
      "documentation": "<p>Successful response of campaign state</p>",
      "members": {
        "campaignId": {
          "shape": "CampaignId"
        },
        "state": {
          "shape": "CampaignState"
        }
      },
      "type": "structure"
    },
    "SuccessfulCampaignStateResponseList": {
      "documentation": "<p>List of successful response of campaign state</p>",
      "max": 25,
      "member": {
        "shape": "SuccessfulCampaignStateResponse"
      },
      "min": 0,
      "type": "list"
    },
    "SuccessfulRequest": {
      "documentation": "<p>A successful request identified by the unique client token.</p>",
      "members": {
        "clientToken": {
          "shape": "ClientToken"
        },
        "id": {
          "shape": "DialRequestId"
        }
      },
      "type": "structure"
    },
    "SuccessfulRequestList": {
      "documentation": "<p>A list of successful requests identified by the unique client token.</p>",
      "max": 25,
      "member": {
        "shape": "SuccessfulRequest"
      },
      "min": 0,
      "type": "list"
    },
    "TagKey": {
      "documentation": "<p>Tag key.</p>",
      "max": 128,
      "min": 1,
      "pattern": "^(?!aws:)[a-zA-Z+-=._:/]+$",
      "type": "string"
    },
    "TagKeyList": {
      "documentation": "<p>List of tag keys.</p>",
      "max": 50,
      "member": {
        "shape": "TagKey"
      },
      "min": 0,
      "type": "list"
    },
    "TagMap": {
      "documentation": "<p>Tag map with key and value.</p>",
      "key": {
        "shape": "TagKey"
      },
      "type": "map",
      "value": {
        "shape": "TagValue"
      }
    },
    "TagResourceRequest": {
      "documentation": "<p>TagResourceRequest</p>",
      "members": {
        "arn": {
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        },
        "tags": {
          "shape": "TagMap"
        }
      },
      "required": [
        "arn",
        "tags"
      ],
      "type": "structure"
    },
    "TagValue": {
      "documentation": "<p>Tag value.</p>",
      "max": 256,
      "min": 0,
      "type": "string"
    },
    "ThrottlingException": {
      "documentation": "<p>The request was denied due to request throttling.</p>",
      "error": {
        "httpStatusCode": 429,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "retryable": {
        "throttling": false
      },
      "type": "structure"
    },
    "TimeStamp": {
      "documentation": "<p>Timestamp with no UTC offset or timezone</p>",
      "timestampFormat": "iso8601",
      "type": "timestamp"
    },
    "UntagResourceRequest": {
      "documentation": "<p>UntagResourceRequest</p>",
      "members": {
        "arn": {
          "location": "uri",
          "locationName": "arn",
          "shape": "Arn"
        },
        "tagKeys": {
          "location": "querystring",
          "locationName": "tagKeys",
          "shape": "TagKeyList"
        }
      },
      "required": [
        "arn",
        "tagKeys"
      ],
      "type": "structure"
    },
    "UpdateCampaignDialerConfigRequest": {
      "documentation": "<p>UpdateCampaignDialerConfigRequest</p>",
      "members": {
        "dialerConfig": {
          "shape": "DialerConfig"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "dialerConfig",
        "id"
      ],
      "type": "structure"
    },
    "UpdateCampaignNameRequest": {
      "documentation": "<p>UpdateCampaignNameRequest</p>",
      "members": {
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        },
        "name": {
          "shape": "CampaignName"
        }
      },
      "required": [
        "id",
        "name"
      ],
      "type": "structure"
    },
    "UpdateCampaignOutboundCallConfigRequest": {
      "documentation": "<p>UpdateCampaignOutboundCallConfigRequest</p>",
      "members": {
        "answerMachineDetectionConfig": {
          "shape": "AnswerMachineDetectionConfig"
        },
        "connectContactFlowId": {
          "shape": "ContactFlowId"
        },
        "connectSourcePhoneNumber": {
          "shape": "SourcePhoneNumber"
        },
        "id": {
          "location": "uri",
          "locationName": "id",
          "shape": "CampaignId"
        }
      },
      "required": [
        "id"
      ],
      "type": "structure"
    },
    "ValidationException": {
      "documentation": "<p>The input fails to satisfy the constraints specified by an AWS service.</p>",
      "error": {
        "httpStatusCode": 400,
        "senderFault": true
      },
      "exception": true,
      "members": {
        "message": {
          "shape": "String"
        },
        "xAmzErrorType": {
          "location": "header",
          "locationName": "x-amzn-ErrorType",
          "shape": "XAmazonErrorType"
        }
      },
      "required": [
        "message"
      ],
      "type": "structure"
    },
    "XAmazonErrorType": {
      "documentation": "<p>A header that defines the error encountered while processing the request.</p>",
      "type": "string"
    }
  },
  "version": "2.0"
}
